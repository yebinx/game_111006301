declare namespace protoSlot {
    /** cmd enum. */
    export enum cmd {
        msg_slot_spin = 100,
        msg_create_reward = 101
    }

    /** Represents a gridType. */
    export class gridType implements IgridType {

        /**
         * Constructs a new gridType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IgridType);

        /** gridType pos. */
        public pos: number;

        /** gridType elem. */
        public elem: number;

        /**
         * Creates a new gridType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns gridType instance
         */
        public static create(properties?: IgridType): gridType;

        /**
         * Encodes the specified gridType message. Does not implicitly {@link gridType.verify|verify} messages.
         * @param message gridType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IgridType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified gridType message, length delimited. Does not implicitly {@link gridType.verify|verify} messages.
         * @param message gridType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IgridType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a gridType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns gridType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gridType;

        /**
         * Decodes a gridType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns gridType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gridType;

        /**
         * Verifies a gridType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a gridType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns gridType
         */
        public static fromObject(object: { [k: string]: any }): gridType;

        /**
         * Creates a plain object from a gridType message. Also converts values to other types if specified.
         * @param message gridType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gridType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this gridType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a spinResultType. */
    export class spinResultType implements IspinResultType {

        /**
         * Constructs a new spinResultType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IspinResultType);

        /** spinResultType spinCoin. */
        public spinCoin: (number | Long);

        /** spinResultType lgCoin. */
        public lgCoin: (number | Long);

        /** spinResultType lineResult. */
        public lineResult: spinResultType.IlineResultType[];

        /** spinResultType grid. */
        public grid: number[];

        /** spinResultType gridChanged. */
        public gridChanged: number[];

        /** spinResultType attachCoin. */
        public attachCoin: (number | Long);

        /** spinResultType realGridShape. */
        public realGridShape: spinResultType.IgridShapeType[];

        /** spinResultType realGridShapeChanged. */
        public realGridShapeChanged: spinResultType.IgridShapeType[];

        /** spinResultType occupyPosList. */
        public occupyPosList: spinResultType.IoccupyPosType[];

        /** spinResultType occupyPosListChanged. */
        public occupyPosListChanged: spinResultType.IoccupyPosType[];

        /** spinResultType clientRealGridShape. */
        public clientRealGridShape: spinResultType.IgridShapeType[];

        /** spinResultType copyColumn. */
        public copyColumn: number[];

        /**
         * Creates a new spinResultType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns spinResultType instance
         */
        public static create(properties?: IspinResultType): spinResultType;

        /**
         * Encodes the specified spinResultType message. Does not implicitly {@link spinResultType.verify|verify} messages.
         * @param message spinResultType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IspinResultType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified spinResultType message, length delimited. Does not implicitly {@link spinResultType.verify|verify} messages.
         * @param message spinResultType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IspinResultType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a spinResultType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns spinResultType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): spinResultType;

        /**
         * Decodes a spinResultType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns spinResultType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): spinResultType;

        /**
         * Verifies a spinResultType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a spinResultType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns spinResultType
         */
        public static fromObject(object: { [k: string]: any }): spinResultType;

        /**
         * Creates a plain object from a spinResultType message. Also converts values to other types if specified.
         * @param message spinResultType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: spinResultType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this spinResultType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace spinResultType {

        /** Properties of a lineResultType. */
        interface IlineResultType {

            /** lineResultType lineId */
            lineId: number;

            /** lineResultType lineMode */
            lineMode: number;

            /** lineResultType lineType */
            lineType: number;

            /** lineResultType spinCoin */
            spinCoin: (number | Long);

            /** lineResultType lgList */
            lgList?: ((number | Long)[] | null);

            /** lineResultType dir */
            dir: number;

            /** lineResultType elementResult */
            elementResult: spinResultType.lineResultType.IelemResultType;

            /** lineResultType winPos */
            winPos?: (number[] | null);

            /** lineResultType extraRate */
            extraRate?: (number | null);

            /** lineResultType elementRate */
            elementRate?: (number | null);
        }

        /** Represents a lineResultType. */
        class lineResultType implements IlineResultType {

            /**
             * Constructs a new lineResultType.
             * @param [properties] Properties to set
             */
            constructor(properties?: spinResultType.IlineResultType);

            /** lineResultType lineId. */
            public lineId: number;

            /** lineResultType lineMode. */
            public lineMode: number;

            /** lineResultType lineType. */
            public lineType: number;

            /** lineResultType spinCoin. */
            public spinCoin: (number | Long);

            /** lineResultType lgList. */
            public lgList: (number | Long)[];

            /** lineResultType dir. */
            public dir: number;

            /** lineResultType elementResult. */
            public elementResult: spinResultType.lineResultType.IelemResultType;

            /** lineResultType winPos. */
            public winPos: number[];

            /** lineResultType extraRate. */
            public extraRate: number;

            /** lineResultType elementRate. */
            public elementRate: number;

            /**
             * Creates a new lineResultType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns lineResultType instance
             */
            public static create(properties?: spinResultType.IlineResultType): spinResultType.lineResultType;

            /**
             * Encodes the specified lineResultType message. Does not implicitly {@link spinResultType.lineResultType.verify|verify} messages.
             * @param message lineResultType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: spinResultType.IlineResultType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified lineResultType message, length delimited. Does not implicitly {@link spinResultType.lineResultType.verify|verify} messages.
             * @param message lineResultType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: spinResultType.IlineResultType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a lineResultType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns lineResultType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): spinResultType.lineResultType;

            /**
             * Decodes a lineResultType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns lineResultType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): spinResultType.lineResultType;

            /**
             * Verifies a lineResultType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a lineResultType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns lineResultType
             */
            public static fromObject(object: { [k: string]: any }): spinResultType.lineResultType;

            /**
             * Creates a plain object from a lineResultType message. Also converts values to other types if specified.
             * @param message lineResultType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: spinResultType.lineResultType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this lineResultType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace lineResultType {

            /** Properties of an elemResultType. */
            interface IelemResultType {

                /** elemResultType elem */
                elem: number;

                /** elemResultType elemList */
                elemList?: (spinResultType.lineResultType.elemResultType.IelemListType[] | null);
            }

            /** Represents an elemResultType. */
            class elemResultType implements IelemResultType {

                /**
                 * Constructs a new elemResultType.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: spinResultType.lineResultType.IelemResultType);

                /** elemResultType elem. */
                public elem: number;

                /** elemResultType elemList. */
                public elemList: spinResultType.lineResultType.elemResultType.IelemListType[];

                /**
                 * Creates a new elemResultType instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns elemResultType instance
                 */
                public static create(properties?: spinResultType.lineResultType.IelemResultType): spinResultType.lineResultType.elemResultType;

                /**
                 * Encodes the specified elemResultType message. Does not implicitly {@link spinResultType.lineResultType.elemResultType.verify|verify} messages.
                 * @param message elemResultType message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: spinResultType.lineResultType.IelemResultType, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified elemResultType message, length delimited. Does not implicitly {@link spinResultType.lineResultType.elemResultType.verify|verify} messages.
                 * @param message elemResultType message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: spinResultType.lineResultType.IelemResultType, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an elemResultType message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns elemResultType
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): spinResultType.lineResultType.elemResultType;

                /**
                 * Decodes an elemResultType message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns elemResultType
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): spinResultType.lineResultType.elemResultType;

                /**
                 * Verifies an elemResultType message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string | null);

                /**
                 * Creates an elemResultType message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns elemResultType
                 */
                public static fromObject(object: { [k: string]: any }): spinResultType.lineResultType.elemResultType;

                /**
                 * Creates a plain object from an elemResultType message. Also converts values to other types if specified.
                 * @param message elemResultType
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: spinResultType.lineResultType.elemResultType, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this elemResultType to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            namespace elemResultType {

                /** Properties of an elemListType. */
                interface IelemListType {

                    /** elemListType elem */
                    elem: number;

                    /** elemListType elemNum */
                    elemNum: number;
                }

                /** Represents an elemListType. */
                class elemListType implements IelemListType {

                    /**
                     * Constructs a new elemListType.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: spinResultType.lineResultType.elemResultType.IelemListType);

                    /** elemListType elem. */
                    public elem: number;

                    /** elemListType elemNum. */
                    public elemNum: number;

                    /**
                     * Creates a new elemListType instance using the specified properties.
                     * @param [properties] Properties to set
                     * @returns elemListType instance
                     */
                    public static create(properties?: spinResultType.lineResultType.elemResultType.IelemListType): spinResultType.lineResultType.elemResultType.elemListType;

                    /**
                     * Encodes the specified elemListType message. Does not implicitly {@link spinResultType.lineResultType.elemResultType.elemListType.verify|verify} messages.
                     * @param message elemListType message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: spinResultType.lineResultType.elemResultType.IelemListType, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified elemListType message, length delimited. Does not implicitly {@link spinResultType.lineResultType.elemResultType.elemListType.verify|verify} messages.
                     * @param message elemListType message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: spinResultType.lineResultType.elemResultType.IelemListType, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes an elemListType message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns elemListType
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): spinResultType.lineResultType.elemResultType.elemListType;

                    /**
                     * Decodes an elemListType message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns elemListType
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): spinResultType.lineResultType.elemResultType.elemListType;

                    /**
                     * Verifies an elemListType message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string | null);

                    /**
                     * Creates an elemListType message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns elemListType
                     */
                    public static fromObject(object: { [k: string]: any }): spinResultType.lineResultType.elemResultType.elemListType;

                    /**
                     * Creates a plain object from an elemListType message. Also converts values to other types if specified.
                     * @param message elemListType
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: spinResultType.lineResultType.elemResultType.elemListType, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this elemListType to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }
        }

        /** Properties of a gridShapeType. */
        interface IgridShapeType {

            /** gridShapeType pos */
            pos?: (number[] | null);
        }

        /** Represents a gridShapeType. */
        class gridShapeType implements IgridShapeType {

            /**
             * Constructs a new gridShapeType.
             * @param [properties] Properties to set
             */
            constructor(properties?: spinResultType.IgridShapeType);

            /** gridShapeType pos. */
            public pos: number[];

            /**
             * Creates a new gridShapeType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns gridShapeType instance
             */
            public static create(properties?: spinResultType.IgridShapeType): spinResultType.gridShapeType;

            /**
             * Encodes the specified gridShapeType message. Does not implicitly {@link spinResultType.gridShapeType.verify|verify} messages.
             * @param message gridShapeType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: spinResultType.IgridShapeType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified gridShapeType message, length delimited. Does not implicitly {@link spinResultType.gridShapeType.verify|verify} messages.
             * @param message gridShapeType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: spinResultType.IgridShapeType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a gridShapeType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns gridShapeType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): spinResultType.gridShapeType;

            /**
             * Decodes a gridShapeType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns gridShapeType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): spinResultType.gridShapeType;

            /**
             * Verifies a gridShapeType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a gridShapeType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns gridShapeType
             */
            public static fromObject(object: { [k: string]: any }): spinResultType.gridShapeType;

            /**
             * Creates a plain object from a gridShapeType message. Also converts values to other types if specified.
             * @param message gridShapeType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: spinResultType.gridShapeType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this gridShapeType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an occupyPosType. */
        interface IoccupyPosType {

            /** occupyPosType pos */
            pos: number;

            /** occupyPosType len */
            len: number;
        }

        /** Represents an occupyPosType. */
        class occupyPosType implements IoccupyPosType {

            /**
             * Constructs a new occupyPosType.
             * @param [properties] Properties to set
             */
            constructor(properties?: spinResultType.IoccupyPosType);

            /** occupyPosType pos. */
            public pos: number;

            /** occupyPosType len. */
            public len: number;

            /**
             * Creates a new occupyPosType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns occupyPosType instance
             */
            public static create(properties?: spinResultType.IoccupyPosType): spinResultType.occupyPosType;

            /**
             * Encodes the specified occupyPosType message. Does not implicitly {@link spinResultType.occupyPosType.verify|verify} messages.
             * @param message occupyPosType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: spinResultType.IoccupyPosType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified occupyPosType message, length delimited. Does not implicitly {@link spinResultType.occupyPosType.verify|verify} messages.
             * @param message occupyPosType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: spinResultType.IoccupyPosType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an occupyPosType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns occupyPosType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): spinResultType.occupyPosType;

            /**
             * Decodes an occupyPosType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns occupyPosType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): spinResultType.occupyPosType;

            /**
             * Verifies an occupyPosType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an occupyPosType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns occupyPosType
             */
            public static fromObject(object: { [k: string]: any }): spinResultType.occupyPosType;

            /**
             * Creates a plain object from an occupyPosType message. Also converts values to other types if specified.
             * @param message occupyPosType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: spinResultType.occupyPosType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this occupyPosType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents an undefined. */
    export class undefined implements Iundefined {

        /**
         * Constructs a new undefined.
         * @param [properties] Properties to set
         */
        constructor(properties?: Iundefined);

        /**
         * Creates a new undefined instance using the specified properties.
         * @param [properties] Properties to set
         * @returns undefined instance
         */
        public static create(properties?: Iundefined): void;

        /**
         * Encodes the specified undefined message. Does not implicitly {@link undefined.verify|verify} messages.
         * @param message undefined message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Iundefined, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified undefined message, length delimited. Does not implicitly {@link undefined.verify|verify} messages.
         * @param message undefined message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Iundefined, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an undefined message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns undefined
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): void;

        /**
         * Decodes an undefined message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns undefined
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): void;

        /**
         * Verifies an undefined message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates an undefined message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns undefined
         */
        public static fromObject(object: { [k: string]: any }): void;

        /**
         * Creates a plain object from an undefined message. Also converts values to other types if specified.
         * @param message undefined
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: undefined, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this undefined to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** create_reward_cmd enum. */
    export enum create_reward_cmd {
        createRoomInfoPush = 1,
        renewRoomReq = 2,
        renewRoomResp = 3,
        roomRewardReq = 4,
        roomRewardResp = 5,
        createRewardSettlePush = 6,
        roomClosePush = 7
    }

    /** Represents a msg_create_reward_service */
    export class msg_create_reward_service extends $protobuf.rpc.Service {

        /**
         * Constructs a new msg_create_reward_service service.
         * @param rpcImpl RPC implementation
         * @param [requestDelimited=false] Whether requests are length-delimited
         * @param [responseDelimited=false] Whether responses are length-delimited
         */
        constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

        /**
         * Creates new msg_create_reward_service service using the specified rpc implementation.
         * @param rpcImpl RPC implementation
         * @param [requestDelimited=false] Whether requests are length-delimited
         * @param [responseDelimited=false] Whether responses are length-delimited
         * @returns RPC service. Useful where requests and/or responses are streamed.
         */
        public static create(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean): msg_create_reward_service;
    }

    /** Represents a createRoomInfoPush. */
    export class createRoomInfoPush implements IcreateRoomInfoPush {

        /**
         * Constructs a new createRoomInfoPush.
         * @param [properties] Properties to set
         */
        constructor(properties?: IcreateRoomInfoPush);

        /** createRoomInfoPush roomId. */
        public roomId: number;

        /** createRoomInfoPush maxCount. */
        public maxCount: number;

        /** createRoomInfoPush friendRoomId. */
        public friendRoomId: (number | Long);

        /** createRoomInfoPush ownerUserId. */
        public ownerUserId: (number | Long);

        /** createRoomInfoPush ownerCoinType. */
        public ownerCoinType: number;

        /** createRoomInfoPush minLineBet. */
        public minLineBet: (number | Long);

        /** createRoomInfoPush rewardRate. */
        public rewardRate: number;

        /** createRoomInfoPush roomDuration. */
        public roomDuration: number;

        /** createRoomInfoPush createTime. */
        public createTime: (number | Long);

        /** createRoomInfoPush closeTime. */
        public closeTime: (number | Long);

        /**
         * Creates a new createRoomInfoPush instance using the specified properties.
         * @param [properties] Properties to set
         * @returns createRoomInfoPush instance
         */
        public static create(properties?: IcreateRoomInfoPush): createRoomInfoPush;

        /**
         * Encodes the specified createRoomInfoPush message. Does not implicitly {@link createRoomInfoPush.verify|verify} messages.
         * @param message createRoomInfoPush message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IcreateRoomInfoPush, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified createRoomInfoPush message, length delimited. Does not implicitly {@link createRoomInfoPush.verify|verify} messages.
         * @param message createRoomInfoPush message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IcreateRoomInfoPush, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a createRoomInfoPush message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns createRoomInfoPush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): createRoomInfoPush;

        /**
         * Decodes a createRoomInfoPush message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns createRoomInfoPush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): createRoomInfoPush;

        /**
         * Verifies a createRoomInfoPush message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a createRoomInfoPush message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns createRoomInfoPush
         */
        public static fromObject(object: { [k: string]: any }): createRoomInfoPush;

        /**
         * Creates a plain object from a createRoomInfoPush message. Also converts values to other types if specified.
         * @param message createRoomInfoPush
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: createRoomInfoPush, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this createRoomInfoPush to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a renewRoomReq. */
    export class renewRoomReq implements IrenewRoomReq {

        /**
         * Constructs a new renewRoomReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: IrenewRoomReq);

        /**
         * Creates a new renewRoomReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns renewRoomReq instance
         */
        public static create(properties?: IrenewRoomReq): renewRoomReq;

        /**
         * Encodes the specified renewRoomReq message. Does not implicitly {@link renewRoomReq.verify|verify} messages.
         * @param message renewRoomReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IrenewRoomReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified renewRoomReq message, length delimited. Does not implicitly {@link renewRoomReq.verify|verify} messages.
         * @param message renewRoomReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IrenewRoomReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a renewRoomReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns renewRoomReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): renewRoomReq;

        /**
         * Decodes a renewRoomReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns renewRoomReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): renewRoomReq;

        /**
         * Verifies a renewRoomReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a renewRoomReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns renewRoomReq
         */
        public static fromObject(object: { [k: string]: any }): renewRoomReq;

        /**
         * Creates a plain object from a renewRoomReq message. Also converts values to other types if specified.
         * @param message renewRoomReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: renewRoomReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this renewRoomReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a renewRoomResp. */
    export class renewRoomResp implements IrenewRoomResp {

        /**
         * Constructs a new renewRoomResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: IrenewRoomResp);

        /** renewRoomResp scores. */
        public scores: (number | Long);

        /**
         * Creates a new renewRoomResp instance using the specified properties.
         * @param [properties] Properties to set
         * @returns renewRoomResp instance
         */
        public static create(properties?: IrenewRoomResp): renewRoomResp;

        /**
         * Encodes the specified renewRoomResp message. Does not implicitly {@link renewRoomResp.verify|verify} messages.
         * @param message renewRoomResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IrenewRoomResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified renewRoomResp message, length delimited. Does not implicitly {@link renewRoomResp.verify|verify} messages.
         * @param message renewRoomResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IrenewRoomResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a renewRoomResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns renewRoomResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): renewRoomResp;

        /**
         * Decodes a renewRoomResp message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns renewRoomResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): renewRoomResp;

        /**
         * Verifies a renewRoomResp message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a renewRoomResp message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns renewRoomResp
         */
        public static fromObject(object: { [k: string]: any }): renewRoomResp;

        /**
         * Creates a plain object from a renewRoomResp message. Also converts values to other types if specified.
         * @param message renewRoomResp
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: renewRoomResp, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this renewRoomResp to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a roomRewardReq. */
    export class roomRewardReq implements IroomRewardReq {

        /**
         * Constructs a new roomRewardReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: IroomRewardReq);

        /** roomRewardReq type. */
        public type: msg_room_info_type;

        /**
         * Creates a new roomRewardReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns roomRewardReq instance
         */
        public static create(properties?: IroomRewardReq): roomRewardReq;

        /**
         * Encodes the specified roomRewardReq message. Does not implicitly {@link roomRewardReq.verify|verify} messages.
         * @param message roomRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IroomRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified roomRewardReq message, length delimited. Does not implicitly {@link roomRewardReq.verify|verify} messages.
         * @param message roomRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IroomRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a roomRewardReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns roomRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): roomRewardReq;

        /**
         * Decodes a roomRewardReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns roomRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): roomRewardReq;

        /**
         * Verifies a roomRewardReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a roomRewardReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns roomRewardReq
         */
        public static fromObject(object: { [k: string]: any }): roomRewardReq;

        /**
         * Creates a plain object from a roomRewardReq message. Also converts values to other types if specified.
         * @param message roomRewardReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: roomRewardReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this roomRewardReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a roomRewardResp. */
    export class roomRewardResp implements IroomRewardResp {

        /**
         * Constructs a new roomRewardResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: IroomRewardResp);

        /** roomRewardResp type. */
        public type: msg_room_info_type;

        /** roomRewardResp current. */
        public current: Icontribute_type[];

        /** roomRewardResp settled. */
        public settled?: (Isettled_type | null);

        /**
         * Creates a new roomRewardResp instance using the specified properties.
         * @param [properties] Properties to set
         * @returns roomRewardResp instance
         */
        public static create(properties?: IroomRewardResp): roomRewardResp;

        /**
         * Encodes the specified roomRewardResp message. Does not implicitly {@link roomRewardResp.verify|verify} messages.
         * @param message roomRewardResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IroomRewardResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified roomRewardResp message, length delimited. Does not implicitly {@link roomRewardResp.verify|verify} messages.
         * @param message roomRewardResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IroomRewardResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a roomRewardResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns roomRewardResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): roomRewardResp;

        /**
         * Decodes a roomRewardResp message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns roomRewardResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): roomRewardResp;

        /**
         * Verifies a roomRewardResp message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a roomRewardResp message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns roomRewardResp
         */
        public static fromObject(object: { [k: string]: any }): roomRewardResp;

        /**
         * Creates a plain object from a roomRewardResp message. Also converts values to other types if specified.
         * @param message roomRewardResp
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: roomRewardResp, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this roomRewardResp to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a createRewardSettlePush. */
    export class createRewardSettlePush implements IcreateRewardSettlePush {

        /**
         * Constructs a new createRewardSettlePush.
         * @param [properties] Properties to set
         */
        constructor(properties?: IcreateRewardSettlePush);

        /** createRewardSettlePush friendRoomId. */
        public friendRoomId: (number | Long);

        /** createRewardSettlePush gameId. */
        public gameId: (number | Long);

        /** createRewardSettlePush roomDuration. */
        public roomDuration: number;

        /** createRewardSettlePush playerCount. */
        public playerCount: number;

        /** createRewardSettlePush ownerCoinType. */
        public ownerCoinType: number;

        /** createRewardSettlePush reward. */
        public reward: (number | Long);

        /**
         * Creates a new createRewardSettlePush instance using the specified properties.
         * @param [properties] Properties to set
         * @returns createRewardSettlePush instance
         */
        public static create(properties?: IcreateRewardSettlePush): createRewardSettlePush;

        /**
         * Encodes the specified createRewardSettlePush message. Does not implicitly {@link createRewardSettlePush.verify|verify} messages.
         * @param message createRewardSettlePush message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IcreateRewardSettlePush, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified createRewardSettlePush message, length delimited. Does not implicitly {@link createRewardSettlePush.verify|verify} messages.
         * @param message createRewardSettlePush message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IcreateRewardSettlePush, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a createRewardSettlePush message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns createRewardSettlePush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): createRewardSettlePush;

        /**
         * Decodes a createRewardSettlePush message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns createRewardSettlePush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): createRewardSettlePush;

        /**
         * Verifies a createRewardSettlePush message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a createRewardSettlePush message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns createRewardSettlePush
         */
        public static fromObject(object: { [k: string]: any }): createRewardSettlePush;

        /**
         * Creates a plain object from a createRewardSettlePush message. Also converts values to other types if specified.
         * @param message createRewardSettlePush
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: createRewardSettlePush, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this createRewardSettlePush to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a roomClosePush. */
    export class roomClosePush implements IroomClosePush {

        /**
         * Constructs a new roomClosePush.
         * @param [properties] Properties to set
         */
        constructor(properties?: IroomClosePush);

        /**
         * Creates a new roomClosePush instance using the specified properties.
         * @param [properties] Properties to set
         * @returns roomClosePush instance
         */
        public static create(properties?: IroomClosePush): roomClosePush;

        /**
         * Encodes the specified roomClosePush message. Does not implicitly {@link roomClosePush.verify|verify} messages.
         * @param message roomClosePush message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IroomClosePush, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified roomClosePush message, length delimited. Does not implicitly {@link roomClosePush.verify|verify} messages.
         * @param message roomClosePush message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IroomClosePush, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a roomClosePush message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns roomClosePush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): roomClosePush;

        /**
         * Decodes a roomClosePush message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns roomClosePush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): roomClosePush;

        /**
         * Verifies a roomClosePush message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a roomClosePush message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns roomClosePush
         */
        public static fromObject(object: { [k: string]: any }): roomClosePush;

        /**
         * Creates a plain object from a roomClosePush message. Also converts values to other types if specified.
         * @param message roomClosePush
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: roomClosePush, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this roomClosePush to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a contribute_type. */
    export class contribute_type implements Icontribute_type {

        /**
         * Constructs a new contribute_type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Icontribute_type);

        /** contribute_type userName. */
        public userName: string;

        /** contribute_type coinType. */
        public coinType: number;

        /** contribute_type dama. */
        public dama: (number | Long);

        /** contribute_type winLose. */
        public winLose: (number | Long);

        /** contribute_type reward. */
        public reward: (number | Long);

        /**
         * Creates a new contribute_type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns contribute_type instance
         */
        public static create(properties?: Icontribute_type): contribute_type;

        /**
         * Encodes the specified contribute_type message. Does not implicitly {@link contribute_type.verify|verify} messages.
         * @param message contribute_type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Icontribute_type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified contribute_type message, length delimited. Does not implicitly {@link contribute_type.verify|verify} messages.
         * @param message contribute_type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Icontribute_type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a contribute_type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns contribute_type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): contribute_type;

        /**
         * Decodes a contribute_type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns contribute_type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): contribute_type;

        /**
         * Verifies a contribute_type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a contribute_type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns contribute_type
         */
        public static fromObject(object: { [k: string]: any }): contribute_type;

        /**
         * Creates a plain object from a contribute_type message. Also converts values to other types if specified.
         * @param message contribute_type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: contribute_type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this contribute_type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a settled_type. */
    export class settled_type implements Isettled_type {

        /**
         * Constructs a new settled_type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Isettled_type);

        /** settled_type settledRooms. */
        public settledRooms: Isettled_room_type[];

        /** settled_type rewards. */
        public rewards: Icoin_type_reward_type[];

        /**
         * Creates a new settled_type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns settled_type instance
         */
        public static create(properties?: Isettled_type): settled_type;

        /**
         * Encodes the specified settled_type message. Does not implicitly {@link settled_type.verify|verify} messages.
         * @param message settled_type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Isettled_type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified settled_type message, length delimited. Does not implicitly {@link settled_type.verify|verify} messages.
         * @param message settled_type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Isettled_type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a settled_type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns settled_type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): settled_type;

        /**
         * Decodes a settled_type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns settled_type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): settled_type;

        /**
         * Verifies a settled_type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a settled_type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns settled_type
         */
        public static fromObject(object: { [k: string]: any }): settled_type;

        /**
         * Creates a plain object from a settled_type message. Also converts values to other types if specified.
         * @param message settled_type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: settled_type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this settled_type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a settled_room_type. */
    export class settled_room_type implements Isettled_room_type {

        /**
         * Constructs a new settled_room_type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Isettled_room_type);

        /** settled_room_type friendRoomId. */
        public friendRoomId: (number | Long);

        /** settled_room_type gameId. */
        public gameId: (number | Long);

        /** settled_room_type ownerCoinType. */
        public ownerCoinType: number;

        /** settled_room_type dama. */
        public dama: (number | Long);

        /** settled_room_type reward. */
        public reward: (number | Long);

        /** settled_room_type createTime. */
        public createTime: (number | Long);

        /** settled_room_type closeTime. */
        public closeTime: (number | Long);

        /**
         * Creates a new settled_room_type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns settled_room_type instance
         */
        public static create(properties?: Isettled_room_type): settled_room_type;

        /**
         * Encodes the specified settled_room_type message. Does not implicitly {@link settled_room_type.verify|verify} messages.
         * @param message settled_room_type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Isettled_room_type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified settled_room_type message, length delimited. Does not implicitly {@link settled_room_type.verify|verify} messages.
         * @param message settled_room_type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Isettled_room_type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a settled_room_type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns settled_room_type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): settled_room_type;

        /**
         * Decodes a settled_room_type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns settled_room_type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): settled_room_type;

        /**
         * Verifies a settled_room_type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a settled_room_type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns settled_room_type
         */
        public static fromObject(object: { [k: string]: any }): settled_room_type;

        /**
         * Creates a plain object from a settled_room_type message. Also converts values to other types if specified.
         * @param message settled_room_type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: settled_room_type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this settled_room_type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a coin_type_reward_type. */
    export class coin_type_reward_type implements Icoin_type_reward_type {

        /**
         * Constructs a new coin_type_reward_type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Icoin_type_reward_type);

        /** coin_type_reward_type coinType. */
        public coinType: number;

        /** coin_type_reward_type reward. */
        public reward: (number | Long);

        /**
         * Creates a new coin_type_reward_type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns coin_type_reward_type instance
         */
        public static create(properties?: Icoin_type_reward_type): coin_type_reward_type;

        /**
         * Encodes the specified coin_type_reward_type message. Does not implicitly {@link coin_type_reward_type.verify|verify} messages.
         * @param message coin_type_reward_type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Icoin_type_reward_type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified coin_type_reward_type message, length delimited. Does not implicitly {@link coin_type_reward_type.verify|verify} messages.
         * @param message coin_type_reward_type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Icoin_type_reward_type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a coin_type_reward_type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns coin_type_reward_type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): coin_type_reward_type;

        /**
         * Decodes a coin_type_reward_type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns coin_type_reward_type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): coin_type_reward_type;

        /**
         * Verifies a coin_type_reward_type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a coin_type_reward_type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns coin_type_reward_type
         */
        public static fromObject(object: { [k: string]: any }): coin_type_reward_type;

        /**
         * Creates a plain object from a coin_type_reward_type message. Also converts values to other types if specified.
         * @param message coin_type_reward_type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: coin_type_reward_type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this coin_type_reward_type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** msg_room_info_type enum. */
    export enum msg_room_info_type {
        current = 1,
        settled = 2
    }

    /** code_type enum. */
    export enum code_type {
        err_slot_start = 40000,
        err_slot_game = 40001,
        err_slot_server = 40002,
        err_slot_coin_lack = 40003,
        err_slot_line_costs = 40004,
        err_slot_lines_little = 40005,
        err_slot_lines_much = 40006,
        err_slot_rate = 40007,
        err_slot_dollar_ball = 40008,
        err_slot_dollar_ball_out_scope = 40009,
        err_slot_dollar_ball_repeat = 40010,
        err_slot_dollar_ball_little = 40011,
        err_slot_dollar_ball_much = 40012,
        err_slot_free_times = 40013,
        err_slot_guess = 40014,
        err_slot_line_duplicate = 40015,
        err_slot_little_game_notfind = 40016,
        err_slot_little_game_history = 40017,
        err_slot_little_game_over = 40018,
        err_slot_game_type_free = 40019,
        err_slot_game_type_little_game = 40020,
        err_slot_little_game_scene = 40021,
        err_slot_guess_times = 40022,
        err_slot_guess_costs = 40023,
        err_slot_game_type_return = 40024,
        err_slot_game_type_normal = 40025,
        err_slot_fixed_spin = 40026,
        err_slot_cost_change = 40027,
        err_slot_skip = 40028,
        err_slot_roller_mode_close = 40029,
        err_slot_roller_mode_id = 40030,
        err_slot_get_buy_free_game_data = 40031,
        err_slot_buy_free_game_id = 40032,
        err_rate_modulus = 40033,
        err_double_coin_no_reward = 40034,
        err_double_coin_cannot_refresh = 40035,
        err_no_double_coin = 40036,
        err_slot_rate_modulus = 40037,
        err_slot_line_multiple = 40038,
        err_slot_cannot_change_bet_state = 40039,
        err_slot_cannot_collect_choose = 40040,
        err_slot_collect_task = 40041,
        err_slot_collect_task_not_complete = 40042,
        err_slot_game_type_choose = 40043,
        err_arg = 40044,
        err_slot_friend_room_num = 40045,
        err_slot_friend_room_player_num = 40046,
        err_slot_friend_room_duration = 40047,
        err_slot_friend_room_min_line_bet = 40048,
        err_slot_friend_room_create_cost = 40049,
        err_slot_friend_room_renew = 40050,
        err_slot_friend_room_reward_info = 40051,
        err_slot_friend_room_reward_owner = 40052,
        err_slot_not_friend_room = 40053,
        err_slot_room_info = 40054
    }

    /** Represents a handleStateType. */
    export class handleStateType implements IhandleStateType {

        /**
         * Constructs a new handleStateType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IhandleStateType);

        /** handleStateType gameId. */
        public gameId: number;

        /** handleStateType game_2272. */
        public game_2272?: (Igame2272Type | null);

        /** handleStateType game_10024. */
        public game_10024?: (Igame10024Type | null);

        /** handleStateType game_2270. */
        public game_2270?: (Igame2270Type | null);

        /** handleStateType game_3306. */
        public game_3306?: (Igame3306Type | null);

        /** handleStateType game_2266. */
        public game_2266?: (Igame2266Type | null);

        /** handleStateType game_2271. */
        public game_2271?: (Igame2271Type | null);

        /** handleStateType game_10019. */
        public game_10019?: (Igame10019Type | null);

        /** handleStateType game_2273. */
        public game_2273?: (Igame2273Type | null);

        /** handleStateType game_2523. */
        public game_2523?: (Igame2523Type | null);

        /** handleStateType game_2525. */
        public game_2525?: (Igame2525Type | null);

        /** handleStateType game_10005. */
        public game_10005?: (Igame10005Type | null);

        /** handleStateType game_2274. */
        public game_2274?: (Igame2274Type | null);

        /** handleStateType game_2254. */
        public game_2254?: (Igame2254Type | null);

        /** handleStateType game_2278. */
        public game_2278?: (Igame2278Type | null);

        /** handleStateType game_2529. */
        public game_2529?: (Igame2529Type | null);

        /** handleStateType game_2282. */
        public game_2282?: (Igame2282Type | null);

        /** handleStateType game_10017. */
        public game_10017?: (Igame10017Type | null);

        /** handleStateType game_2283. */
        public game_2283?: (Igame2283Type | null);

        /** handleStateType game_10020. */
        public game_10020?: (Igame10020Type | null);

        /** handleStateType game_10011. */
        public game_10011?: (Igame10011Type | null);

        /** handleStateType game_10012. */
        public game_10012?: (Igame10012Type | null);

        /** handleStateType game_10014. */
        public game_10014?: (Igame10014Type | null);

        /** handleStateType game_10027. */
        public game_10027?: (Igame10027Type | null);

        /** handleStateType game_10066. */
        public game_10066?: (Igame10066Type | null);

        /** handleStateType game_10056. */
        public game_10056?: (Igame10056Type | null);

        /** handleStateType game_10073. */
        public game_10073?: (Igame10073Type | null);

        /** handleStateType game_10074. */
        public game_10074?: (Igame10074Type | null);

        /** handleStateType game_10075. */
        public game_10075?: (Igame10075Type | null);

        /** handleStateType game_10087. */
        public game_10087?: (Igame10087Type | null);

        /** handleStateType game_10088. */
        public game_10088?: (Igame10088Type | null);

        /** handleStateType game_10090. */
        public game_10090?: (Igame10090Type | null);

        /** handleStateType game_10092. */
        public game_10092?: (Igame10092Type | null);

        /** handleStateType game_10095. */
        public game_10095?: (Igame10095Type | null);

        /** handleStateType game_10099. */
        public game_10099?: (Igame10099Type | null);

        /** handleStateType game_10053. */
        public game_10053?: (Igame10053Type | null);

        /** handleStateType game_10045. */
        public game_10045?: (Igame10045Type | null);

        /** handleStateType game_10046. */
        public game_10046?: (Igame10046Type | null);

        /** handleStateType game_10044. */
        public game_10044?: (Igame10044Type | null);

        /** handleStateType game_10039. */
        public game_10039?: (Igame10039Type | null);

        /** handleStateType game_10038. */
        public game_10038?: (Igame10038Type | null);

        /** handleStateType game_10057. */
        public game_10057?: (Igame10057Type | null);

        /** handleStateType game_10042. */
        public game_10042?: (Igame10042Type | null);

        /** handleStateType gameNotWinReturnSpin. */
        public gameNotWinReturnSpin?: (IgameNotWinReturnSpinType | null);

        /** handleStateType game_1110017. */
        public game_1110017?: (Igame1110017Type | null);

        /** handleStateType game_1110024. */
        public game_1110024?: (Igame1110024Type | null);

        /** handleStateType game_1110023. */
        public game_1110023?: (Igame1110023Type | null);

        /** handleStateType game_1110018. */
        public game_1110018?: (Igame1110018Type | null);

        /** handleStateType game_1110025. */
        public game_1110025?: (Igame1110025Type | null);

        /** handleStateType game_1110048. */
        public game_1110048?: (Igame1110048Type | null);

        /** handleStateType game_1110053. */
        public game_1110053?: (Igame1110053Type | null);

        /** handleStateType game_1110059. */
        public game_1110059?: (Igame1110059Type | null);

        /** handleStateType game_1110020. */
        public game_1110020?: (Igame1110020Type | null);

        /** handleStateType game_1110019. */
        public game_1110019?: (Igame1110019Type | null);

        /** handleStateType game_1110021. */
        public game_1110021?: (Igame1110021Type | null);

        /** handleStateType game_1210045. */
        public game_1210045?: (Igame1210045Type | null);

        /** handleStateType game_1110064. */
        public game_1110064?: (Igame1110064Type | null);

        /** handleStateType game_1210082. */
        public game_1210082?: (Igame1210082Type | null);

        /** handleStateType game_1210187. */
        public game_1210187?: (Igame1210187Type | null);

        /** handleStateType game_1210189. */
        public game_1210189?: (Igame1210189Type | null);

        /** handleStateType game_1110042. */
        public game_1110042?: (Igame1110042Type | null);

        /** handleStateType game_1110067. */
        public game_1110067?: (Igame1110067Type | null);

        /** handleStateType game_1110069. */
        public game_1110069?: (Igame1110069Type | null);

        /** handleStateType game_1110071. */
        public game_1110071?: (Igame1110071Type | null);

        /** handleStateType game_1210094. */
        public game_1210094?: (Igame1210094Type | null);

        /** handleStateType game_1210164. */
        public game_1210164?: (Igame1210164Type | null);

        /** handleStateType game_1210174. */
        public game_1210174?: (Igame1210174Type | null);

        /** handleStateType game_1210203. */
        public game_1210203?: (Igame1210203Type | null);

        /** handleStateType gameElemEffect. */
        public gameElemEffect?: (IgameElemEffectType | null);

        /** handleStateType gameCollectChoose. */
        public gameCollectChoose?: (IgameCollectChooseType | null);

        /** handleStateType gameElemCombineChange. */
        public gameElemCombineChange?: (IgameElemCombineChangeType | null);

        /** handleStateType game_1210027. */
        public game_1210027?: (Igame1210027Type | null);

        /** handleStateType game_1210132. */
        public game_1210132?: (Igame1210132Type | null);

        /** handleStateType game_1210181. */
        public game_1210181?: (Igame1210181Type | null);

        /** handleStateType game_1210035. */
        public game_1210035?: (Igame1210035Type | null);

        /** handleStateType game_1210043. */
        public game_1210043?: (Igame1210043Type | null);

        /** handleStateType game_1210059. */
        public game_1210059?: (Igame1210059Type | null);

        /** handleStateType game_1210188. */
        public game_1210188?: (Igame1210188Type | null);

        /** handleStateType game_1110076. */
        public game_1110076?: (Igame1110076Type | null);

        /** handleStateType game_1110015. */
        public game_1110015?: (Igame1110015Type | null);

        /** handleStateType game_1110080. */
        public game_1110080?: (Igame1110080Type | null);

        /** handleStateType game_1210001. */
        public game_1210001?: (Igame1210001Type | null);

        /** handleStateType game_1110070. */
        public game_1110070?: (Igame1110070Type | null);

        /** handleStateType game_1210026. */
        public game_1210026?: (Igame1210026Type | null);

        /** handleStateType game_1210019. */
        public game_1210019?: (Igame1210019Type | null);

        /** handleStateType game_1210109. */
        public game_1210109?: (Igame1210109Type | null);

        /** handleStateType game_1610082. */
        public game_1610082?: (Igame1610082Type | null);

        /** handleStateType game_1210093. */
        public game_1210093?: (Igame1210093Type | null);

        /** handleStateType gameFreeChooseCount. */
        public gameFreeChooseCount?: (IgameFreeChooseCountType | null);

        /** handleStateType game_1610002. */
        public game_1610002?: (Igame1610002Type | null);

        /** handleStateType game_1210186. */
        public game_1210186?: (Igame1210186Type | null);

        /** handleStateType game_1210213. */
        public game_1210213?: (Igame1210213Type | null);

        /** handleStateType gameWildChase. */
        public gameWildChase?: (IgameWildChaseType | null);

        /** handleStateType game_1210175. */
        public game_1210175?: (Igame1210175Type | null);

        /** handleStateType game_1210044. */
        public game_1210044?: (Igame1210044Type | null);

        /** handleStateType game_1610017. */
        public game_1610017?: (Igame1610017Type | null);

        /** handleStateType game_1610044. */
        public game_1610044?: (Igame1610044Type | null);

        /** handleStateType game_1210205. */
        public game_1210205?: (Igame1210205Type | null);

        /** handleStateType game_1610086. */
        public game_1610086?: (Igame1610086Type | null);

        /** handleStateType gameContinuousLogin. */
        public gameContinuousLogin?: (IgameContinuousLoginType | null);

        /** handleStateType game_1610015. */
        public game_1610015?: (Igame1610015Type | null);

        /** handleStateType game_1610054. */
        public game_1610054?: (Igame1610054Type | null);

        /** handleStateType game_1610057. */
        public game_1610057?: (Igame1610057Type | null);

        /** handleStateType gameElemLock. */
        public gameElemLock?: (IgameElemLockType | null);

        /** handleStateType gamePosMulti. */
        public gamePosMulti?: (IgamePosMultiType | null);

        /** handleStateType game_1610093. */
        public game_1610093?: (Igame1610093Type | null);

        /** handleStateType game_1110003. */
        public game_1110003?: (Igame1110003Type | null);

        /** handleStateType game_1610030. */
        public game_1610030?: (Igame1610030Type | null);

        /** handleStateType game_1610121. */
        public game_1610121?: (Igame1610121Type | null);

        /** handleStateType game_1610022. */
        public game_1610022?: (Igame1610022Type | null);

        /** handleStateType game_1110052. */
        public game_1110052?: (Igame1110052Type | null);

        /** handleStateType gameWinningStreak. */
        public gameWinningStreak?: (IgameWinningStreakType | null);

        /** handleStateType game_1610130. */
        public game_1610130?: (Igame1610130Type | null);

        /** handleStateType game_1610147. */
        public game_1610147?: (Igame1610147Type | null);

        /** handleStateType game_1610159. */
        public game_1610159?: (Igame1610159Type | null);

        /** handleStateType game_1610131. */
        public game_1610131?: (Igame1610131Type | null);

        /** handleStateType game_1610173. */
        public game_1610173?: (Igame1610173Type | null);

        /** handleStateType game_1610170. */
        public game_1610170?: (Igame1610170Type | null);

        /** handleStateType game_1110027. */
        public game_1110027?: (Igame1110027Type | null);

        /** handleStateType game_1610166. */
        public game_1610166?: (Igame1610166Type | null);

        /** handleStateType game_1610094. */
        public game_1610094?: (Igame1610094Type | null);

        /** handleStateType game_1310005. */
        public game_1310005?: (Igame1310005Type | null);

        /** handleStateType game_1310006. */
        public game_1310006?: (Igame1310006Type | null);

        /** handleStateType game_1310040. */
        public game_1310040?: (Igame1310040Type | null);

        /** handleStateType game_1310031. */
        public game_1310031?: (Igame1310031Type | null);

        /** handleStateType game_1310026. */
        public game_1310026?: (Igame1310026Type | null);

        /** handleStateType game_1610101. */
        public game_1610101?: (Igame1610101Type | null);

        /** handleStateType game_1310047. */
        public game_1310047?: (Igame1310047Type | null);

        /** handleStateType game_1310063. */
        public game_1310063?: (Igame1310063Type | null);

        /** handleStateType game_1310049. */
        public game_1310049?: (Igame1310049Type | null);

        /** handleStateType game_1310073. */
        public game_1310073?: (Igame1310073Type | null);

        /** handleStateType game_1710003. */
        public game_1710003?: (Igame1710003Type | null);

        /** handleStateType game_1710021. */
        public game_1710021?: (Igame1710021Type | null);

        /** handleStateType game_1710022. */
        public game_1710022?: (Igame1710022Type | null);

        /** handleStateType game_1710035. */
        public game_1710035?: (Igame1710035Type | null);

        /** handleStateType game_1310057. */
        public game_1310057?: (Igame1310057Type | null);

        /** handleStateType game_1310154. */
        public game_1310154?: (Igame1310154Type | null);

        /** handleStateType gameBingo. */
        public gameBingo?: (IgameBingoType | null);

        /** handleStateType game_1310044. */
        public game_1310044?: (Igame1310044Type | null);

        /** handleStateType game_1410006. */
        public game_1410006?: (Igame1410006Type | null);

        /** handleStateType game_1410009. */
        public game_1410009?: (Igame1410009Type | null);

        /** handleStateType game_1710020. */
        public game_1710020?: (Igame1710020Type | null);

        /** handleStateType game_1710041. */
        public game_1710041?: (Igame1710041Type | null);

        /** handleStateType game_1710029. */
        public game_1710029?: (Igame1710029Type | null);

        /** handleStateType game_1110004. */
        public game_1110004?: (Igame1110004Type | null);

        /** handleStateType gameGoldRewardRandomReward. */
        public gameGoldRewardRandomReward?: (IgameGoldRewardRandomRewardType | null);

        /** handleStateType gameElemRandomResultRate. */
        public gameElemRandomResultRate?: (IgameElemRandomResultRateType | null);

        /** handleStateType game_1410031. */
        public game_1410031?: (Igame1410031Type | null);

        /** handleStateType gameChooseLockColumn. */
        public gameChooseLockColumn?: (IgameChooseLockColumnType | null);

        /** handleStateType gameGridChangeGetResultAgain. */
        public gameGridChangeGetResultAgain?: (IgameGridChangeGetResultAgainType | null);

        /** handleStateType gameElemRandomPosNewActive. */
        public gameElemRandomPosNewActive?: (IgameElemRandomPosNewActiveType | null);

        /** handleStateType game_1810040. */
        public game_1810040?: (Igame1810040Type | null);

        /** handleStateType game_1810039. */
        public game_1810039?: (Igame1810039Type | null);

        /** handleStateType game_1810034. */
        public game_1810034?: (Igame1810034Type | null);

        /** handleStateType game_1810094. */
        public game_1810094?: (Igame1810094Type | null);

        /** handleStateType gameRandomMultiFixRespin. */
        public gameRandomMultiFixRespin?: (IgameRandomMultiFixRespinType | null);

        /** handleStateType game_1810068. */
        public game_1810068?: (Igame1810068Type | null);

        /** handleStateType game_1410117. */
        public game_1410117?: (Igame1410117Type | null);

        /** handleStateType gameRollerExpand. */
        public gameRollerExpand?: (IgameRollerExpandType | null);

        /** handleStateType game_1710051. */
        public game_1710051?: (Igame1710051Type | null);

        /** handleStateType game_1110135. */
        public game_1110135?: (Igame1110135Type | null);

        /**
         * Creates a new handleStateType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns handleStateType instance
         */
        public static create(properties?: IhandleStateType): handleStateType;

        /**
         * Encodes the specified handleStateType message. Does not implicitly {@link handleStateType.verify|verify} messages.
         * @param message handleStateType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IhandleStateType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified handleStateType message, length delimited. Does not implicitly {@link handleStateType.verify|verify} messages.
         * @param message handleStateType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IhandleStateType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a handleStateType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns handleStateType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): handleStateType;

        /**
         * Decodes a handleStateType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns handleStateType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): handleStateType;

        /**
         * Verifies a handleStateType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a handleStateType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns handleStateType
         */
        public static fromObject(object: { [k: string]: any }): handleStateType;

        /**
         * Creates a plain object from a handleStateType message. Also converts values to other types if specified.
         * @param message handleStateType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: handleStateType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this handleStateType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** slot_spin_cmd enum. */
    export enum slot_spin_cmd {
        restoreReq = 0,
        restoreResp = 1,
        spinReq = 2,
        spinResp = 3,
        lgDataReq = 4,
        lgDataResp = 5,
        lgActionReq = 6,
        lgActionResp = 7,
        handleStateReq = 8,
        handleStateResp = 9,
        guessReq = 10,
        guessResp = 11,
        enterRoomPush = 13,
        leaveRoomPush = 14,
        actionStopReq = 15,
        actionStopPush = 16,
        userInfoPush = 17,
        rollerModeReq = 18,
        rollerModeResp = 19,
        buyFreeGameDataReq = 20,
        buyFreeGameDataResp = 21,
        buyFreeGameReq = 22,
        buyFreeGameResp = 24,
        rollerModeDataReq = 25,
        rollerModeDataResp = 26,
        changeCostReq = 27,
        changeCostResp = 28,
        doubleCoinReq = 29,
        doubleCoinResp = 30,
        buyFreeImdReq = 31,
        buyFreeImdResp = 32,
        buyFreeImdDataReq = 33,
        buyFreeImdDataResp = 34,
        doubleCoinInfoReq = 35,
        doubleCoinInfoResp = 36,
        winAmountRankReq = 37,
        winAmountRankResp = 38,
        changeBetStateReq = 39,
        changeBetStateResp = 40,
        collectChooseReq = 41,
        collectChooseResp = 42,
        chooseCollectTaskReq = 43,
        chooseCollectTaskResp = 44,
        roleChooseReq = 45,
        roleChooseResp = 46,
        buyExtraBallReq = 47,
        buyExtraBallResp = 48,
        roomInfoReq = 49,
        roomInfoResp = 50
    }

    /** Represents a msg_slot_spin_service */
    export class msg_slot_spin_service extends $protobuf.rpc.Service {

        /**
         * Constructs a new msg_slot_spin_service service.
         * @param rpcImpl RPC implementation
         * @param [requestDelimited=false] Whether requests are length-delimited
         * @param [responseDelimited=false] Whether responses are length-delimited
         */
        constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

        /**
         * Creates new msg_slot_spin_service service using the specified rpc implementation.
         * @param rpcImpl RPC implementation
         * @param [requestDelimited=false] Whether requests are length-delimited
         * @param [responseDelimited=false] Whether responses are length-delimited
         * @returns RPC service. Useful where requests and/or responses are streamed.
         */
        public static create(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean): msg_slot_spin_service;
    }

    /** Represents a spinReq. */
    export class spinReq implements IspinReq {

        /**
         * Constructs a new spinReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: IspinReq);

        /** spinReq req. */
        public req?: (IspinReqType | null);

        /** spinReq featuredGameplay. */
        public featuredGameplay?: (IfeaturedGameplayType | null);

        /**
         * Creates a new spinReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns spinReq instance
         */
        public static create(properties?: IspinReq): spinReq;

        /**
         * Encodes the specified spinReq message. Does not implicitly {@link spinReq.verify|verify} messages.
         * @param message spinReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IspinReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified spinReq message, length delimited. Does not implicitly {@link spinReq.verify|verify} messages.
         * @param message spinReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IspinReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a spinReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns spinReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): spinReq;

        /**
         * Decodes a spinReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns spinReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): spinReq;

        /**
         * Verifies a spinReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a spinReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns spinReq
         */
        public static fromObject(object: { [k: string]: any }): spinReq;

        /**
         * Creates a plain object from a spinReq message. Also converts values to other types if specified.
         * @param message spinReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: spinReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this spinReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a spinResp. */
    export class spinResp implements IspinResp {

        /**
         * Constructs a new spinResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: IspinResp);

        /** spinResp userId. */
        public userId: (number | Long);

        /** spinResp state. */
        public state: number;

        /** spinResp subState. */
        public subState: number;

        /** spinResp spinResult. */
        public spinResult: IspinResultType;

        /** spinResp balance. */
        public balance: (number | Long);

        /** spinResp allCost. */
        public allCost: (number | Long);

        /** spinResp updateList. */
        public updateList: IstateUpdateType[];

        /** spinResp nextState. */
        public nextState?: (IstateType | null);

        /** spinResp extra. */
        public extra: number[];

        /** spinResp roundId. */
        public roundId: (number | Long);

        /** spinResp resultRate. */
        public resultRate: number;

        /** spinResp randomElemPos. */
        public randomElemPos: IrandomElemPosType[];

        /** spinResp triggerElemPos. */
        public triggerElemPos: number[];

        /** spinResp rollerLv. */
        public rollerLv: number;

        /** spinResp spinReqParam. */
        public spinReqParam?: (IspinReqType | null);

        /** spinResp plaintext. */
        public plaintext: string;

        /** spinResp ciphertext. */
        public ciphertext: string;

        /** spinResp hashRest. */
        public hashRest: number;

        /** spinResp doubleCoin. */
        public doubleCoin?: (IdoubleCoinType | null);

        /** spinResp posRateList. */
        public posRateList: IposRateListType[];

        /** spinResp isSettled. */
        public isSettled: number;

        /** spinResp allBound. */
        public allBound: (number | Long);

        /** spinResp key. */
        public key: number[];

        /**
         * Creates a new spinResp instance using the specified properties.
         * @param [properties] Properties to set
         * @returns spinResp instance
         */
        public static create(properties?: IspinResp): spinResp;

        /**
         * Encodes the specified spinResp message. Does not implicitly {@link spinResp.verify|verify} messages.
         * @param message spinResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IspinResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified spinResp message, length delimited. Does not implicitly {@link spinResp.verify|verify} messages.
         * @param message spinResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IspinResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a spinResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns spinResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): spinResp;

        /**
         * Decodes a spinResp message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns spinResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): spinResp;

        /**
         * Verifies a spinResp message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a spinResp message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns spinResp
         */
        public static fromObject(object: { [k: string]: any }): spinResp;

        /**
         * Creates a plain object from a spinResp message. Also converts values to other types if specified.
         * @param message spinResp
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: spinResp, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this spinResp to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a handleStateReq. */
    export class handleStateReq implements IhandleStateReq {

        /**
         * Constructs a new handleStateReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: IhandleStateReq);

        /** handleStateReq index. */
        public index: number;

        /** handleStateReq isFreshen. */
        public isFreshen: number;

        /**
         * Creates a new handleStateReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns handleStateReq instance
         */
        public static create(properties?: IhandleStateReq): handleStateReq;

        /**
         * Encodes the specified handleStateReq message. Does not implicitly {@link handleStateReq.verify|verify} messages.
         * @param message handleStateReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IhandleStateReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified handleStateReq message, length delimited. Does not implicitly {@link handleStateReq.verify|verify} messages.
         * @param message handleStateReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IhandleStateReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a handleStateReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns handleStateReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): handleStateReq;

        /**
         * Decodes a handleStateReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns handleStateReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): handleStateReq;

        /**
         * Verifies a handleStateReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a handleStateReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns handleStateReq
         */
        public static fromObject(object: { [k: string]: any }): handleStateReq;

        /**
         * Creates a plain object from a handleStateReq message. Also converts values to other types if specified.
         * @param message handleStateReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: handleStateReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this handleStateReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a handleStateResp. */
    export class handleStateResp implements IhandleStateResp {

        /**
         * Constructs a new handleStateResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: IhandleStateResp);

        /** handleStateResp handleState. */
        public handleState?: (IhandleStateType | null);

        /**
         * Creates a new handleStateResp instance using the specified properties.
         * @param [properties] Properties to set
         * @returns handleStateResp instance
         */
        public static create(properties?: IhandleStateResp): handleStateResp;

        /**
         * Encodes the specified handleStateResp message. Does not implicitly {@link handleStateResp.verify|verify} messages.
         * @param message handleStateResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IhandleStateResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified handleStateResp message, length delimited. Does not implicitly {@link handleStateResp.verify|verify} messages.
         * @param message handleStateResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IhandleStateResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a handleStateResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns handleStateResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): handleStateResp;

        /**
         * Decodes a handleStateResp message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns handleStateResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): handleStateResp;

        /**
         * Verifies a handleStateResp message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a handleStateResp message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns handleStateResp
         */
        public static fromObject(object: { [k: string]: any }): handleStateResp;

        /**
         * Creates a plain object from a handleStateResp message. Also converts values to other types if specified.
         * @param message handleStateResp
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: handleStateResp, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this handleStateResp to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a guessReq. */
    export class guessReq implements IguessReq {

        /**
         * Constructs a new guessReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: IguessReq);

        /** guessReq choose. */
        public choose: number;

        /**
         * Creates a new guessReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns guessReq instance
         */
        public static create(properties?: IguessReq): guessReq;

        /**
         * Encodes the specified guessReq message. Does not implicitly {@link guessReq.verify|verify} messages.
         * @param message guessReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IguessReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified guessReq message, length delimited. Does not implicitly {@link guessReq.verify|verify} messages.
         * @param message guessReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IguessReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a guessReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns guessReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): guessReq;

        /**
         * Decodes a guessReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns guessReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): guessReq;

        /**
         * Verifies a guessReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a guessReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns guessReq
         */
        public static fromObject(object: { [k: string]: any }): guessReq;

        /**
         * Creates a plain object from a guessReq message. Also converts values to other types if specified.
         * @param message guessReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: guessReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this guessReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a guessResp. */
    export class guessResp implements IguessResp {

        /**
         * Constructs a new guessResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: IguessResp);

        /** guessResp isWin. */
        public isWin: number;

        /** guessResp guessCount. */
        public guessCount: number;

        /** guessResp win. */
        public win: (number | Long);

        /** guessResp balance. */
        public balance: (number | Long);

        /** guessResp pokerList. */
        public pokerList: number[];

        /** guessResp poker. */
        public poker: number;

        /**
         * Creates a new guessResp instance using the specified properties.
         * @param [properties] Properties to set
         * @returns guessResp instance
         */
        public static create(properties?: IguessResp): guessResp;

        /**
         * Encodes the specified guessResp message. Does not implicitly {@link guessResp.verify|verify} messages.
         * @param message guessResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IguessResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified guessResp message, length delimited. Does not implicitly {@link guessResp.verify|verify} messages.
         * @param message guessResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IguessResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a guessResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns guessResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): guessResp;

        /**
         * Decodes a guessResp message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns guessResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): guessResp;

        /**
         * Verifies a guessResp message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a guessResp message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns guessResp
         */
        public static fromObject(object: { [k: string]: any }): guessResp;

        /**
         * Creates a plain object from a guessResp message. Also converts values to other types if specified.
         * @param message guessResp
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: guessResp, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this guessResp to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a restoreReq. */
    export class restoreReq implements IrestoreReq {

        /**
         * Constructs a new restoreReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: IrestoreReq);

        /**
         * Creates a new restoreReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns restoreReq instance
         */
        public static create(properties?: IrestoreReq): restoreReq;

        /**
         * Encodes the specified restoreReq message. Does not implicitly {@link restoreReq.verify|verify} messages.
         * @param message restoreReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IrestoreReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified restoreReq message, length delimited. Does not implicitly {@link restoreReq.verify|verify} messages.
         * @param message restoreReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IrestoreReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a restoreReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns restoreReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): restoreReq;

        /**
         * Decodes a restoreReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns restoreReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): restoreReq;

        /**
         * Verifies a restoreReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a restoreReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns restoreReq
         */
        public static fromObject(object: { [k: string]: any }): restoreReq;

        /**
         * Creates a plain object from a restoreReq message. Also converts values to other types if specified.
         * @param message restoreReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: restoreReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this restoreReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a restoreResp. */
    export class restoreResp implements IrestoreResp {

        /**
         * Constructs a new restoreResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: IrestoreResp);

        /** restoreResp restore. */
        public restore: IrestoreType[];

        /** restoreResp roundId. */
        public roundId: (number | Long);

        /** restoreResp rollerLv. */
        public rollerLv: number;

        /** restoreResp gameMode. */
        public gameMode: game_mode_type_enum;

        /** restoreResp ciphertext. */
        public ciphertext: string;

        /** restoreResp spinCfg. */
        public spinCfg: IspinCfgType[];

        /** restoreResp hashRest. */
        public hashRest: number;

        /**
         * Creates a new restoreResp instance using the specified properties.
         * @param [properties] Properties to set
         * @returns restoreResp instance
         */
        public static create(properties?: IrestoreResp): restoreResp;

        /**
         * Encodes the specified restoreResp message. Does not implicitly {@link restoreResp.verify|verify} messages.
         * @param message restoreResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IrestoreResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified restoreResp message, length delimited. Does not implicitly {@link restoreResp.verify|verify} messages.
         * @param message restoreResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IrestoreResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a restoreResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns restoreResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): restoreResp;

        /**
         * Decodes a restoreResp message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns restoreResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): restoreResp;

        /**
         * Verifies a restoreResp message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a restoreResp message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns restoreResp
         */
        public static fromObject(object: { [k: string]: any }): restoreResp;

        /**
         * Creates a plain object from a restoreResp message. Also converts values to other types if specified.
         * @param message restoreResp
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: restoreResp, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this restoreResp to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** game_mode_type_enum enum. */
    export enum game_mode_type_enum {
        normal = 1,
        direct_hash = 2,
        timestamp_hash = 3,
        hash_chain = 4
    }

    /** Represents a spinCfgType. */
    export class spinCfgType implements IspinCfgType {

        /**
         * Constructs a new spinCfgType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IspinCfgType);

        /** spinCfgType spinBalance. */
        public spinBalance: (number | Long);

        /** spinCfgType minBalance. */
        public minBalance: (number | Long);

        /**
         * Creates a new spinCfgType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns spinCfgType instance
         */
        public static create(properties?: IspinCfgType): spinCfgType;

        /**
         * Encodes the specified spinCfgType message. Does not implicitly {@link spinCfgType.verify|verify} messages.
         * @param message spinCfgType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IspinCfgType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified spinCfgType message, length delimited. Does not implicitly {@link spinCfgType.verify|verify} messages.
         * @param message spinCfgType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IspinCfgType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a spinCfgType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns spinCfgType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): spinCfgType;

        /**
         * Decodes a spinCfgType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns spinCfgType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): spinCfgType;

        /**
         * Verifies a spinCfgType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a spinCfgType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns spinCfgType
         */
        public static fromObject(object: { [k: string]: any }): spinCfgType;

        /**
         * Creates a plain object from a spinCfgType message. Also converts values to other types if specified.
         * @param message spinCfgType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: spinCfgType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this spinCfgType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a lgDataReq. */
    export class lgDataReq implements IlgDataReq {

        /**
         * Constructs a new lgDataReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: IlgDataReq);

        /** lgDataReq lgId. */
        public lgId: (number | Long);

        /**
         * Creates a new lgDataReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns lgDataReq instance
         */
        public static create(properties?: IlgDataReq): lgDataReq;

        /**
         * Encodes the specified lgDataReq message. Does not implicitly {@link lgDataReq.verify|verify} messages.
         * @param message lgDataReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IlgDataReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified lgDataReq message, length delimited. Does not implicitly {@link lgDataReq.verify|verify} messages.
         * @param message lgDataReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IlgDataReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a lgDataReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns lgDataReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): lgDataReq;

        /**
         * Decodes a lgDataReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns lgDataReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): lgDataReq;

        /**
         * Verifies a lgDataReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a lgDataReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns lgDataReq
         */
        public static fromObject(object: { [k: string]: any }): lgDataReq;

        /**
         * Creates a plain object from a lgDataReq message. Also converts values to other types if specified.
         * @param message lgDataReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: lgDataReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this lgDataReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a lgDataResp. */
    export class lgDataResp implements IlgDataResp {

        /**
         * Constructs a new lgDataResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: IlgDataResp);

        /** lgDataResp lgId. */
        public lgId: (number | Long);

        /** lgDataResp times. */
        public times: number;

        /** lgDataResp sceneId. */
        public sceneId: number;

        /** lgDataResp costInfo. */
        public costInfo: number;

        /** lgDataResp history. */
        public history: IlgResultType[];

        /** lgDataResp rewardList. */
        public rewardList: IlgResultType[];

        /** lgDataResp luckyGoldResultList. */
        public luckyGoldResultList: IluckyGoldResultListType[];

        /** lgDataResp pickCardResult. */
        public pickCardResult: IpickCardResultType[];

        /** lgDataResp tenantReward. */
        public tenantReward: ItenantRewardType[];

        /** lgDataResp lgGlobalRate. */
        public lgGlobalRate: number;

        /** lgDataResp other4. */
        public other4: IotherType[];

        /** lgDataResp lgOther2. */
        public lgOther2: IlgOther2Type[];

        /** lgDataResp collectContribute. */
        public collectContribute: (number | Long);

        /**
         * Creates a new lgDataResp instance using the specified properties.
         * @param [properties] Properties to set
         * @returns lgDataResp instance
         */
        public static create(properties?: IlgDataResp): lgDataResp;

        /**
         * Encodes the specified lgDataResp message. Does not implicitly {@link lgDataResp.verify|verify} messages.
         * @param message lgDataResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IlgDataResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified lgDataResp message, length delimited. Does not implicitly {@link lgDataResp.verify|verify} messages.
         * @param message lgDataResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IlgDataResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a lgDataResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns lgDataResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): lgDataResp;

        /**
         * Decodes a lgDataResp message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns lgDataResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): lgDataResp;

        /**
         * Verifies a lgDataResp message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a lgDataResp message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns lgDataResp
         */
        public static fromObject(object: { [k: string]: any }): lgDataResp;

        /**
         * Creates a plain object from a lgDataResp message. Also converts values to other types if specified.
         * @param message lgDataResp
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: lgDataResp, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this lgDataResp to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a lgActionReq. */
    export class lgActionReq implements IlgActionReq {

        /**
         * Constructs a new lgActionReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: IlgActionReq);

        /** lgActionReq lgId. */
        public lgId: (number | Long);

        /** lgActionReq choose. */
        public choose: number[];

        /**
         * Creates a new lgActionReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns lgActionReq instance
         */
        public static create(properties?: IlgActionReq): lgActionReq;

        /**
         * Encodes the specified lgActionReq message. Does not implicitly {@link lgActionReq.verify|verify} messages.
         * @param message lgActionReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IlgActionReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified lgActionReq message, length delimited. Does not implicitly {@link lgActionReq.verify|verify} messages.
         * @param message lgActionReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IlgActionReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a lgActionReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns lgActionReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): lgActionReq;

        /**
         * Decodes a lgActionReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns lgActionReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): lgActionReq;

        /**
         * Verifies a lgActionReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a lgActionReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns lgActionReq
         */
        public static fromObject(object: { [k: string]: any }): lgActionReq;

        /**
         * Creates a plain object from a lgActionReq message. Also converts values to other types if specified.
         * @param message lgActionReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: lgActionReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this lgActionReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a lgActionResp. */
    export class lgActionResp implements IlgActionResp {

        /**
         * Constructs a new lgActionResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: IlgActionResp);

        /** lgActionResp userId. */
        public userId: (number | Long);

        /** lgActionResp lgId. */
        public lgId: (number | Long);

        /** lgActionResp times. */
        public times: number;

        /** lgActionResp reward. */
        public reward: IlgResultType;

        /** lgActionResp next. */
        public next?: (IlgNextType | null);

        /** lgActionResp state. */
        public state?: (IstateType | null);

        /** lgActionResp roundId. */
        public roundId: (number | Long);

        /** lgActionResp luckyGoldResultList. */
        public luckyGoldResultList: IluckyGoldResultListType[];

        /** lgActionResp ciphertext. */
        public ciphertext: string;

        /** lgActionResp pickCardResult. */
        public pickCardResult: IpickCardResultType[];

        /** lgActionResp allReward. */
        public allReward: (number | Long);

        /** lgActionResp balance. */
        public balance: (number | Long);

        /** lgActionResp lgOther2. */
        public lgOther2: IlgOther2Type[];

        /**
         * Creates a new lgActionResp instance using the specified properties.
         * @param [properties] Properties to set
         * @returns lgActionResp instance
         */
        public static create(properties?: IlgActionResp): lgActionResp;

        /**
         * Encodes the specified lgActionResp message. Does not implicitly {@link lgActionResp.verify|verify} messages.
         * @param message lgActionResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IlgActionResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified lgActionResp message, length delimited. Does not implicitly {@link lgActionResp.verify|verify} messages.
         * @param message lgActionResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IlgActionResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a lgActionResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns lgActionResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): lgActionResp;

        /**
         * Decodes a lgActionResp message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns lgActionResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): lgActionResp;

        /**
         * Verifies a lgActionResp message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a lgActionResp message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns lgActionResp
         */
        public static fromObject(object: { [k: string]: any }): lgActionResp;

        /**
         * Creates a plain object from a lgActionResp message. Also converts values to other types if specified.
         * @param message lgActionResp
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: lgActionResp, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this lgActionResp to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents an enterRoomPush. */
    export class enterRoomPush implements IenterRoomPush {

        /**
         * Constructs a new enterRoomPush.
         * @param [properties] Properties to set
         */
        constructor(properties?: IenterRoomPush);

        /** enterRoomPush restore. */
        public restore: IrestoreType;

        /**
         * Creates a new enterRoomPush instance using the specified properties.
         * @param [properties] Properties to set
         * @returns enterRoomPush instance
         */
        public static create(properties?: IenterRoomPush): enterRoomPush;

        /**
         * Encodes the specified enterRoomPush message. Does not implicitly {@link enterRoomPush.verify|verify} messages.
         * @param message enterRoomPush message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IenterRoomPush, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified enterRoomPush message, length delimited. Does not implicitly {@link enterRoomPush.verify|verify} messages.
         * @param message enterRoomPush message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IenterRoomPush, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an enterRoomPush message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns enterRoomPush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): enterRoomPush;

        /**
         * Decodes an enterRoomPush message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns enterRoomPush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): enterRoomPush;

        /**
         * Verifies an enterRoomPush message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates an enterRoomPush message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns enterRoomPush
         */
        public static fromObject(object: { [k: string]: any }): enterRoomPush;

        /**
         * Creates a plain object from an enterRoomPush message. Also converts values to other types if specified.
         * @param message enterRoomPush
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: enterRoomPush, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this enterRoomPush to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a leaveRoomPush. */
    export class leaveRoomPush implements IleaveRoomPush {

        /**
         * Constructs a new leaveRoomPush.
         * @param [properties] Properties to set
         */
        constructor(properties?: IleaveRoomPush);

        /** leaveRoomPush userId. */
        public userId: (number | Long);

        /**
         * Creates a new leaveRoomPush instance using the specified properties.
         * @param [properties] Properties to set
         * @returns leaveRoomPush instance
         */
        public static create(properties?: IleaveRoomPush): leaveRoomPush;

        /**
         * Encodes the specified leaveRoomPush message. Does not implicitly {@link leaveRoomPush.verify|verify} messages.
         * @param message leaveRoomPush message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IleaveRoomPush, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified leaveRoomPush message, length delimited. Does not implicitly {@link leaveRoomPush.verify|verify} messages.
         * @param message leaveRoomPush message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IleaveRoomPush, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a leaveRoomPush message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns leaveRoomPush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): leaveRoomPush;

        /**
         * Decodes a leaveRoomPush message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns leaveRoomPush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): leaveRoomPush;

        /**
         * Verifies a leaveRoomPush message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a leaveRoomPush message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns leaveRoomPush
         */
        public static fromObject(object: { [k: string]: any }): leaveRoomPush;

        /**
         * Creates a plain object from a leaveRoomPush message. Also converts values to other types if specified.
         * @param message leaveRoomPush
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: leaveRoomPush, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this leaveRoomPush to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents an actionStopReq. */
    export class actionStopReq implements IactionStopReq {

        /**
         * Constructs a new actionStopReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: IactionStopReq);

        /**
         * Creates a new actionStopReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns actionStopReq instance
         */
        public static create(properties?: IactionStopReq): actionStopReq;

        /**
         * Encodes the specified actionStopReq message. Does not implicitly {@link actionStopReq.verify|verify} messages.
         * @param message actionStopReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IactionStopReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified actionStopReq message, length delimited. Does not implicitly {@link actionStopReq.verify|verify} messages.
         * @param message actionStopReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IactionStopReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an actionStopReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns actionStopReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): actionStopReq;

        /**
         * Decodes an actionStopReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns actionStopReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): actionStopReq;

        /**
         * Verifies an actionStopReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates an actionStopReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns actionStopReq
         */
        public static fromObject(object: { [k: string]: any }): actionStopReq;

        /**
         * Creates a plain object from an actionStopReq message. Also converts values to other types if specified.
         * @param message actionStopReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: actionStopReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this actionStopReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents an actionStopPush. */
    export class actionStopPush implements IactionStopPush {

        /**
         * Constructs a new actionStopPush.
         * @param [properties] Properties to set
         */
        constructor(properties?: IactionStopPush);

        /** actionStopPush userId. */
        public userId: (number | Long);

        /**
         * Creates a new actionStopPush instance using the specified properties.
         * @param [properties] Properties to set
         * @returns actionStopPush instance
         */
        public static create(properties?: IactionStopPush): actionStopPush;

        /**
         * Encodes the specified actionStopPush message. Does not implicitly {@link actionStopPush.verify|verify} messages.
         * @param message actionStopPush message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IactionStopPush, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified actionStopPush message, length delimited. Does not implicitly {@link actionStopPush.verify|verify} messages.
         * @param message actionStopPush message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IactionStopPush, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an actionStopPush message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns actionStopPush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): actionStopPush;

        /**
         * Decodes an actionStopPush message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns actionStopPush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): actionStopPush;

        /**
         * Verifies an actionStopPush message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates an actionStopPush message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns actionStopPush
         */
        public static fromObject(object: { [k: string]: any }): actionStopPush;

        /**
         * Creates a plain object from an actionStopPush message. Also converts values to other types if specified.
         * @param message actionStopPush
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: actionStopPush, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this actionStopPush to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a userInfoPush. */
    export class userInfoPush implements IuserInfoPush {

        /**
         * Constructs a new userInfoPush.
         * @param [properties] Properties to set
         */
        constructor(properties?: IuserInfoPush);

        /** userInfoPush userInfo. */
        public userInfo: IuserInfoType;

        /**
         * Creates a new userInfoPush instance using the specified properties.
         * @param [properties] Properties to set
         * @returns userInfoPush instance
         */
        public static create(properties?: IuserInfoPush): userInfoPush;

        /**
         * Encodes the specified userInfoPush message. Does not implicitly {@link userInfoPush.verify|verify} messages.
         * @param message userInfoPush message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IuserInfoPush, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified userInfoPush message, length delimited. Does not implicitly {@link userInfoPush.verify|verify} messages.
         * @param message userInfoPush message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IuserInfoPush, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a userInfoPush message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns userInfoPush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): userInfoPush;

        /**
         * Decodes a userInfoPush message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns userInfoPush
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): userInfoPush;

        /**
         * Verifies a userInfoPush message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a userInfoPush message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns userInfoPush
         */
        public static fromObject(object: { [k: string]: any }): userInfoPush;

        /**
         * Creates a plain object from a userInfoPush message. Also converts values to other types if specified.
         * @param message userInfoPush
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: userInfoPush, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this userInfoPush to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a rollerModeReq. */
    export class rollerModeReq implements IrollerModeReq {

        /**
         * Constructs a new rollerModeReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: IrollerModeReq);

        /** rollerModeReq rollerModeId. */
        public rollerModeId: number;

        /**
         * Creates a new rollerModeReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns rollerModeReq instance
         */
        public static create(properties?: IrollerModeReq): rollerModeReq;

        /**
         * Encodes the specified rollerModeReq message. Does not implicitly {@link rollerModeReq.verify|verify} messages.
         * @param message rollerModeReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IrollerModeReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified rollerModeReq message, length delimited. Does not implicitly {@link rollerModeReq.verify|verify} messages.
         * @param message rollerModeReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IrollerModeReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a rollerModeReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns rollerModeReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): rollerModeReq;

        /**
         * Decodes a rollerModeReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns rollerModeReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): rollerModeReq;

        /**
         * Verifies a rollerModeReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a rollerModeReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns rollerModeReq
         */
        public static fromObject(object: { [k: string]: any }): rollerModeReq;

        /**
         * Creates a plain object from a rollerModeReq message. Also converts values to other types if specified.
         * @param message rollerModeReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rollerModeReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this rollerModeReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a rollerModeResp. */
    export class rollerModeResp implements IrollerModeResp {

        /**
         * Constructs a new rollerModeResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: IrollerModeResp);

        /** rollerModeResp ciphertext. */
        public ciphertext: string;

        /**
         * Creates a new rollerModeResp instance using the specified properties.
         * @param [properties] Properties to set
         * @returns rollerModeResp instance
         */
        public static create(properties?: IrollerModeResp): rollerModeResp;

        /**
         * Encodes the specified rollerModeResp message. Does not implicitly {@link rollerModeResp.verify|verify} messages.
         * @param message rollerModeResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IrollerModeResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified rollerModeResp message, length delimited. Does not implicitly {@link rollerModeResp.verify|verify} messages.
         * @param message rollerModeResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IrollerModeResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a rollerModeResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns rollerModeResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): rollerModeResp;

        /**
         * Decodes a rollerModeResp message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns rollerModeResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): rollerModeResp;

        /**
         * Verifies a rollerModeResp message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a rollerModeResp message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns rollerModeResp
         */
        public static fromObject(object: { [k: string]: any }): rollerModeResp;

        /**
         * Creates a plain object from a rollerModeResp message. Also converts values to other types if specified.
         * @param message rollerModeResp
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rollerModeResp, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this rollerModeResp to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a buyFreeGameDataReq. */
    export class buyFreeGameDataReq implements IbuyFreeGameDataReq {

        /**
         * Constructs a new buyFreeGameDataReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: IbuyFreeGameDataReq);

        /**
         * Creates a new buyFreeGameDataReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns buyFreeGameDataReq instance
         */
        public static create(properties?: IbuyFreeGameDataReq): buyFreeGameDataReq;

        /**
         * Encodes the specified buyFreeGameDataReq message. Does not implicitly {@link buyFreeGameDataReq.verify|verify} messages.
         * @param message buyFreeGameDataReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IbuyFreeGameDataReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified buyFreeGameDataReq message, length delimited. Does not implicitly {@link buyFreeGameDataReq.verify|verify} messages.
         * @param message buyFreeGameDataReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IbuyFreeGameDataReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a buyFreeGameDataReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns buyFreeGameDataReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): buyFreeGameDataReq;

        /**
         * Decodes a buyFreeGameDataReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns buyFreeGameDataReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): buyFreeGameDataReq;

        /**
         * Verifies a buyFreeGameDataReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a buyFreeGameDataReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns buyFreeGameDataReq
         */
        public static fromObject(object: { [k: string]: any }): buyFreeGameDataReq;

        /**
         * Creates a plain object from a buyFreeGameDataReq message. Also converts values to other types if specified.
         * @param message buyFreeGameDataReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: buyFreeGameDataReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this buyFreeGameDataReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a buyFreeGameDataResp. */
    export class buyFreeGameDataResp implements IbuyFreeGameDataResp {

        /**
         * Constructs a new buyFreeGameDataResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: IbuyFreeGameDataResp);

        /** buyFreeGameDataResp data. */
        public data: IbuyFreeGameDataType[];

        /**
         * Creates a new buyFreeGameDataResp instance using the specified properties.
         * @param [properties] Properties to set
         * @returns buyFreeGameDataResp instance
         */
        public static create(properties?: IbuyFreeGameDataResp): buyFreeGameDataResp;

        /**
         * Encodes the specified buyFreeGameDataResp message. Does not implicitly {@link buyFreeGameDataResp.verify|verify} messages.
         * @param message buyFreeGameDataResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IbuyFreeGameDataResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified buyFreeGameDataResp message, length delimited. Does not implicitly {@link buyFreeGameDataResp.verify|verify} messages.
         * @param message buyFreeGameDataResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IbuyFreeGameDataResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a buyFreeGameDataResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns buyFreeGameDataResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): buyFreeGameDataResp;

        /**
         * Decodes a buyFreeGameDataResp message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns buyFreeGameDataResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): buyFreeGameDataResp;

        /**
         * Verifies a buyFreeGameDataResp message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a buyFreeGameDataResp message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns buyFreeGameDataResp
         */
        public static fromObject(object: { [k: string]: any }): buyFreeGameDataResp;

        /**
         * Creates a plain object from a buyFreeGameDataResp message. Also converts values to other types if specified.
         * @param message buyFreeGameDataResp
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: buyFreeGameDataResp, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this buyFreeGameDataResp to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a buyFreeGameReq. */
    export class buyFreeGameReq implements IbuyFreeGameReq {

        /**
         * Constructs a new buyFreeGameReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: IbuyFreeGameReq);

        /** buyFreeGameReq id. */
        public id: number;

        /** buyFreeGameReq req. */
        public req: IspinReqType;

        /**
         * Creates a new buyFreeGameReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns buyFreeGameReq instance
         */
        public static create(properties?: IbuyFreeGameReq): buyFreeGameReq;

        /**
         * Encodes the specified buyFreeGameReq message. Does not implicitly {@link buyFreeGameReq.verify|verify} messages.
         * @param message buyFreeGameReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IbuyFreeGameReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified buyFreeGameReq message, length delimited. Does not implicitly {@link buyFreeGameReq.verify|verify} messages.
         * @param message buyFreeGameReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IbuyFreeGameReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a buyFreeGameReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns buyFreeGameReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): buyFreeGameReq;

        /**
         * Decodes a buyFreeGameReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns buyFreeGameReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): buyFreeGameReq;

        /**
         * Verifies a buyFreeGameReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a buyFreeGameReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns buyFreeGameReq
         */
        public static fromObject(object: { [k: string]: any }): buyFreeGameReq;

        /**
         * Creates a plain object from a buyFreeGameReq message. Also converts values to other types if specified.
         * @param message buyFreeGameReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: buyFreeGameReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this buyFreeGameReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a buyFreeGameResp. */
    export class buyFreeGameResp implements IbuyFreeGameResp {

        /**
         * Constructs a new buyFreeGameResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: IbuyFreeGameResp);

        /** buyFreeGameResp balance. */
        public balance: (number | Long);

        /**
         * Creates a new buyFreeGameResp instance using the specified properties.
         * @param [properties] Properties to set
         * @returns buyFreeGameResp instance
         */
        public static create(properties?: IbuyFreeGameResp): buyFreeGameResp;

        /**
         * Encodes the specified buyFreeGameResp message. Does not implicitly {@link buyFreeGameResp.verify|verify} messages.
         * @param message buyFreeGameResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IbuyFreeGameResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified buyFreeGameResp message, length delimited. Does not implicitly {@link buyFreeGameResp.verify|verify} messages.
         * @param message buyFreeGameResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IbuyFreeGameResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a buyFreeGameResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns buyFreeGameResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): buyFreeGameResp;

        /**
         * Decodes a buyFreeGameResp message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns buyFreeGameResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): buyFreeGameResp;

        /**
         * Verifies a buyFreeGameResp message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a buyFreeGameResp message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns buyFreeGameResp
         */
        public static fromObject(object: { [k: string]: any }): buyFreeGameResp;

        /**
         * Creates a plain object from a buyFreeGameResp message. Also converts values to other types if specified.
         * @param message buyFreeGameResp
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: buyFreeGameResp, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this buyFreeGameResp to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a rollerModeDataReq. */
    export class rollerModeDataReq implements IrollerModeDataReq {

        /**
         * Constructs a new rollerModeDataReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: IrollerModeDataReq);

        /**
         * Creates a new rollerModeDataReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns rollerModeDataReq instance
         */
        public static create(properties?: IrollerModeDataReq): rollerModeDataReq;

        /**
         * Encodes the specified rollerModeDataReq message. Does not implicitly {@link rollerModeDataReq.verify|verify} messages.
         * @param message rollerModeDataReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IrollerModeDataReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified rollerModeDataReq message, length delimited. Does not implicitly {@link rollerModeDataReq.verify|verify} messages.
         * @param message rollerModeDataReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IrollerModeDataReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a rollerModeDataReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns rollerModeDataReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): rollerModeDataReq;

        /**
         * Decodes a rollerModeDataReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns rollerModeDataReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): rollerModeDataReq;

        /**
         * Verifies a rollerModeDataReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a rollerModeDataReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns rollerModeDataReq
         */
        public static fromObject(object: { [k: string]: any }): rollerModeDataReq;

        /**
         * Creates a plain object from a rollerModeDataReq message. Also converts values to other types if specified.
         * @param message rollerModeDataReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rollerModeDataReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this rollerModeDataReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a rollerModeDataResp. */
    export class rollerModeDataResp implements IrollerModeDataResp {

        /**
         * Constructs a new rollerModeDataResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: IrollerModeDataResp);

        /** rollerModeDataResp rollerModeSwitch. */
        public rollerModeSwitch: number;

        /** rollerModeDataResp rollerModeId. */
        public rollerModeId: number;

        /** rollerModeDataResp rollerModeList. */
        public rollerModeList: number[];

        /**
         * Creates a new rollerModeDataResp instance using the specified properties.
         * @param [properties] Properties to set
         * @returns rollerModeDataResp instance
         */
        public static create(properties?: IrollerModeDataResp): rollerModeDataResp;

        /**
         * Encodes the specified rollerModeDataResp message. Does not implicitly {@link rollerModeDataResp.verify|verify} messages.
         * @param message rollerModeDataResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IrollerModeDataResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified rollerModeDataResp message, length delimited. Does not implicitly {@link rollerModeDataResp.verify|verify} messages.
         * @param message rollerModeDataResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IrollerModeDataResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a rollerModeDataResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns rollerModeDataResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): rollerModeDataResp;

        /**
         * Decodes a rollerModeDataResp message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns rollerModeDataResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): rollerModeDataResp;

        /**
         * Verifies a rollerModeDataResp message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a rollerModeDataResp message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns rollerModeDataResp
         */
        public static fromObject(object: { [k: string]: any }): rollerModeDataResp;

        /**
         * Creates a plain object from a rollerModeDataResp message. Also converts values to other types if specified.
         * @param message rollerModeDataResp
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rollerModeDataResp, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this rollerModeDataResp to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** doubleCoinReqType enum. */
    export enum doubleCoinReqType {
        guess = 1,
        get = 2,
        refresh_client_seed = 3
    }

    /** Represents a doubleCoinReq. */
    export class doubleCoinReq implements IdoubleCoinReq {

        /**
         * Constructs a new doubleCoinReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: IdoubleCoinReq);

        /** doubleCoinReq reqType. */
        public reqType: doubleCoinReqType;

        /** doubleCoinReq guessResult. */
        public guessResult: doubleCoinResult;

        /**
         * Creates a new doubleCoinReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns doubleCoinReq instance
         */
        public static create(properties?: IdoubleCoinReq): doubleCoinReq;

        /**
         * Encodes the specified doubleCoinReq message. Does not implicitly {@link doubleCoinReq.verify|verify} messages.
         * @param message doubleCoinReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IdoubleCoinReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified doubleCoinReq message, length delimited. Does not implicitly {@link doubleCoinReq.verify|verify} messages.
         * @param message doubleCoinReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IdoubleCoinReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a doubleCoinReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns doubleCoinReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): doubleCoinReq;

        /**
         * Decodes a doubleCoinReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns doubleCoinReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): doubleCoinReq;

        /**
         * Verifies a doubleCoinReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a doubleCoinReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns doubleCoinReq
         */
        public static fromObject(object: { [k: string]: any }): doubleCoinReq;

        /**
         * Creates a plain object from a doubleCoinReq message. Also converts values to other types if specified.
         * @param message doubleCoinReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: doubleCoinReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this doubleCoinReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a doubleCoinResp. */
    export class doubleCoinResp implements IdoubleCoinResp {

        /**
         * Constructs a new doubleCoinResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: IdoubleCoinResp);

        /** 请求类型 */
        public reqType: doubleCoinReqType;

        /** 硬币结果 */
        public result: doubleCoinResult;

        /** 硬币数据 */
        public doubleCoin?: (IdoubleCoinType | null);

        /** 用户当前的金币数 */
        public balance: (number | Long);

        /**
         * Creates a new doubleCoinResp instance using the specified properties.
         * @param [properties] Properties to set
         * @returns doubleCoinResp instance
         */
        public static create(properties?: IdoubleCoinResp): doubleCoinResp;

        /**
         * Encodes the specified doubleCoinResp message. Does not implicitly {@link doubleCoinResp.verify|verify} messages.
         * @param message doubleCoinResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IdoubleCoinResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified doubleCoinResp message, length delimited. Does not implicitly {@link doubleCoinResp.verify|verify} messages.
         * @param message doubleCoinResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IdoubleCoinResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a doubleCoinResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns doubleCoinResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): doubleCoinResp;

        /**
         * Decodes a doubleCoinResp message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns doubleCoinResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): doubleCoinResp;

        /**
         * Verifies a doubleCoinResp message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a doubleCoinResp message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns doubleCoinResp
         */
        public static fromObject(object: { [k: string]: any }): doubleCoinResp;

        /**
         * Creates a plain object from a doubleCoinResp message. Also converts values to other types if specified.
         * @param message doubleCoinResp
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: doubleCoinResp, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this doubleCoinResp to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** doubleCoinResult enum. */
    export enum doubleCoinResult {
        football = 1,
        basketball = 2
    }

    /** Represents a buyFreeImdReq. */
    export class buyFreeImdReq implements IbuyFreeImdReq {

        /**
         * Constructs a new buyFreeImdReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: IbuyFreeImdReq);

        /** buyFreeImdReq req. */
        public req: IspinReqType;

        /** buyFreeImdReq num. */
        public num: number;

        /**
         * Creates a new buyFreeImdReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns buyFreeImdReq instance
         */
        public static create(properties?: IbuyFreeImdReq): buyFreeImdReq;

        /**
         * Encodes the specified buyFreeImdReq message. Does not implicitly {@link buyFreeImdReq.verify|verify} messages.
         * @param message buyFreeImdReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IbuyFreeImdReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified buyFreeImdReq message, length delimited. Does not implicitly {@link buyFreeImdReq.verify|verify} messages.
         * @param message buyFreeImdReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IbuyFreeImdReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a buyFreeImdReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns buyFreeImdReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): buyFreeImdReq;

        /**
         * Decodes a buyFreeImdReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns buyFreeImdReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): buyFreeImdReq;

        /**
         * Verifies a buyFreeImdReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a buyFreeImdReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns buyFreeImdReq
         */
        public static fromObject(object: { [k: string]: any }): buyFreeImdReq;

        /**
         * Creates a plain object from a buyFreeImdReq message. Also converts values to other types if specified.
         * @param message buyFreeImdReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: buyFreeImdReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this buyFreeImdReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a buyFreeImdResp. */
    export class buyFreeImdResp implements IbuyFreeImdResp {

        /**
         * Constructs a new buyFreeImdResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: IbuyFreeImdResp);

        /** 用户当前的金币数 */
        public balance: (number | Long);

        /** 下一个状态 */
        public nextState?: (IstateType | null);

        /** 密文 */
        public ciphertext: string;

        /**
         * Creates a new buyFreeImdResp instance using the specified properties.
         * @param [properties] Properties to set
         * @returns buyFreeImdResp instance
         */
        public static create(properties?: IbuyFreeImdResp): buyFreeImdResp;

        /**
         * Encodes the specified buyFreeImdResp message. Does not implicitly {@link buyFreeImdResp.verify|verify} messages.
         * @param message buyFreeImdResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IbuyFreeImdResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified buyFreeImdResp message, length delimited. Does not implicitly {@link buyFreeImdResp.verify|verify} messages.
         * @param message buyFreeImdResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IbuyFreeImdResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a buyFreeImdResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns buyFreeImdResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): buyFreeImdResp;

        /**
         * Decodes a buyFreeImdResp message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns buyFreeImdResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): buyFreeImdResp;

        /**
         * Verifies a buyFreeImdResp message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a buyFreeImdResp message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns buyFreeImdResp
         */
        public static fromObject(object: { [k: string]: any }): buyFreeImdResp;

        /**
         * Creates a plain object from a buyFreeImdResp message. Also converts values to other types if specified.
         * @param message buyFreeImdResp
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: buyFreeImdResp, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this buyFreeImdResp to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a buyFreeImdDataReq. */
    export class buyFreeImdDataReq implements IbuyFreeImdDataReq {

        /**
         * Constructs a new buyFreeImdDataReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: IbuyFreeImdDataReq);

        /**
         * Creates a new buyFreeImdDataReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns buyFreeImdDataReq instance
         */
        public static create(properties?: IbuyFreeImdDataReq): buyFreeImdDataReq;

        /**
         * Encodes the specified buyFreeImdDataReq message. Does not implicitly {@link buyFreeImdDataReq.verify|verify} messages.
         * @param message buyFreeImdDataReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IbuyFreeImdDataReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified buyFreeImdDataReq message, length delimited. Does not implicitly {@link buyFreeImdDataReq.verify|verify} messages.
         * @param message buyFreeImdDataReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IbuyFreeImdDataReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a buyFreeImdDataReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns buyFreeImdDataReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): buyFreeImdDataReq;

        /**
         * Decodes a buyFreeImdDataReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns buyFreeImdDataReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): buyFreeImdDataReq;

        /**
         * Verifies a buyFreeImdDataReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a buyFreeImdDataReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns buyFreeImdDataReq
         */
        public static fromObject(object: { [k: string]: any }): buyFreeImdDataReq;

        /**
         * Creates a plain object from a buyFreeImdDataReq message. Also converts values to other types if specified.
         * @param message buyFreeImdDataReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: buyFreeImdDataReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this buyFreeImdDataReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a buyFreeImdDataResp. */
    export class buyFreeImdDataResp implements IbuyFreeImdDataResp {

        /**
         * Constructs a new buyFreeImdDataResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: IbuyFreeImdDataResp);

        /** buyFreeImdDataResp multi. */
        public multi: (number | Long);

        /** buyFreeImdDataResp numMulti. */
        public numMulti: InumMultiType[];

        /**
         * Creates a new buyFreeImdDataResp instance using the specified properties.
         * @param [properties] Properties to set
         * @returns buyFreeImdDataResp instance
         */
        public static create(properties?: IbuyFreeImdDataResp): buyFreeImdDataResp;

        /**
         * Encodes the specified buyFreeImdDataResp message. Does not implicitly {@link buyFreeImdDataResp.verify|verify} messages.
         * @param message buyFreeImdDataResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IbuyFreeImdDataResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified buyFreeImdDataResp message, length delimited. Does not implicitly {@link buyFreeImdDataResp.verify|verify} messages.
         * @param message buyFreeImdDataResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IbuyFreeImdDataResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a buyFreeImdDataResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns buyFreeImdDataResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): buyFreeImdDataResp;

        /**
         * Decodes a buyFreeImdDataResp message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns buyFreeImdDataResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): buyFreeImdDataResp;

        /**
         * Verifies a buyFreeImdDataResp message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a buyFreeImdDataResp message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns buyFreeImdDataResp
         */
        public static fromObject(object: { [k: string]: any }): buyFreeImdDataResp;

        /**
         * Creates a plain object from a buyFreeImdDataResp message. Also converts values to other types if specified.
         * @param message buyFreeImdDataResp
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: buyFreeImdDataResp, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this buyFreeImdDataResp to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a doubleCoinInfoReq. */
    export class doubleCoinInfoReq implements IdoubleCoinInfoReq {

        /**
         * Constructs a new doubleCoinInfoReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: IdoubleCoinInfoReq);

        /**
         * Creates a new doubleCoinInfoReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns doubleCoinInfoReq instance
         */
        public static create(properties?: IdoubleCoinInfoReq): doubleCoinInfoReq;

        /**
         * Encodes the specified doubleCoinInfoReq message. Does not implicitly {@link doubleCoinInfoReq.verify|verify} messages.
         * @param message doubleCoinInfoReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IdoubleCoinInfoReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified doubleCoinInfoReq message, length delimited. Does not implicitly {@link doubleCoinInfoReq.verify|verify} messages.
         * @param message doubleCoinInfoReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IdoubleCoinInfoReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a doubleCoinInfoReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns doubleCoinInfoReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): doubleCoinInfoReq;

        /**
         * Decodes a doubleCoinInfoReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns doubleCoinInfoReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): doubleCoinInfoReq;

        /**
         * Verifies a doubleCoinInfoReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a doubleCoinInfoReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns doubleCoinInfoReq
         */
        public static fromObject(object: { [k: string]: any }): doubleCoinInfoReq;

        /**
         * Creates a plain object from a doubleCoinInfoReq message. Also converts values to other types if specified.
         * @param message doubleCoinInfoReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: doubleCoinInfoReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this doubleCoinInfoReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a doubleCoinInfoResp. */
    export class doubleCoinInfoResp implements IdoubleCoinInfoResp {

        /**
         * Constructs a new doubleCoinInfoResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: IdoubleCoinInfoResp);

        /** 当前硬币数据 */
        public doubleCoin?: (IdoubleCoinType | null);

        /** 上局硬币数据 */
        public lastDoubleCoin?: (IdoubleCoinType | null);

        /**
         * Creates a new doubleCoinInfoResp instance using the specified properties.
         * @param [properties] Properties to set
         * @returns doubleCoinInfoResp instance
         */
        public static create(properties?: IdoubleCoinInfoResp): doubleCoinInfoResp;

        /**
         * Encodes the specified doubleCoinInfoResp message. Does not implicitly {@link doubleCoinInfoResp.verify|verify} messages.
         * @param message doubleCoinInfoResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IdoubleCoinInfoResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified doubleCoinInfoResp message, length delimited. Does not implicitly {@link doubleCoinInfoResp.verify|verify} messages.
         * @param message doubleCoinInfoResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IdoubleCoinInfoResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a doubleCoinInfoResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns doubleCoinInfoResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): doubleCoinInfoResp;

        /**
         * Decodes a doubleCoinInfoResp message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns doubleCoinInfoResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): doubleCoinInfoResp;

        /**
         * Verifies a doubleCoinInfoResp message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a doubleCoinInfoResp message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns doubleCoinInfoResp
         */
        public static fromObject(object: { [k: string]: any }): doubleCoinInfoResp;

        /**
         * Creates a plain object from a doubleCoinInfoResp message. Also converts values to other types if specified.
         * @param message doubleCoinInfoResp
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: doubleCoinInfoResp, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this doubleCoinInfoResp to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a changeBetStateReq. */
    export class changeBetStateReq implements IchangeBetStateReq {

        /**
         * Constructs a new changeBetStateReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: IchangeBetStateReq);

        /** changeBetStateReq betState. */
        public betState: number;

        /**
         * Creates a new changeBetStateReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns changeBetStateReq instance
         */
        public static create(properties?: IchangeBetStateReq): changeBetStateReq;

        /**
         * Encodes the specified changeBetStateReq message. Does not implicitly {@link changeBetStateReq.verify|verify} messages.
         * @param message changeBetStateReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IchangeBetStateReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified changeBetStateReq message, length delimited. Does not implicitly {@link changeBetStateReq.verify|verify} messages.
         * @param message changeBetStateReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IchangeBetStateReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a changeBetStateReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns changeBetStateReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): changeBetStateReq;

        /**
         * Decodes a changeBetStateReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns changeBetStateReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): changeBetStateReq;

        /**
         * Verifies a changeBetStateReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a changeBetStateReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns changeBetStateReq
         */
        public static fromObject(object: { [k: string]: any }): changeBetStateReq;

        /**
         * Creates a plain object from a changeBetStateReq message. Also converts values to other types if specified.
         * @param message changeBetStateReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: changeBetStateReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this changeBetStateReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a changeBetStateResp. */
    export class changeBetStateResp implements IchangeBetStateResp {

        /**
         * Constructs a new changeBetStateResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: IchangeBetStateResp);

        /** changeBetStateResp betStateType. */
        public betStateType: IbetStateType;

        /** changeBetStateResp ciphertext. */
        public ciphertext: string;

        /**
         * Creates a new changeBetStateResp instance using the specified properties.
         * @param [properties] Properties to set
         * @returns changeBetStateResp instance
         */
        public static create(properties?: IchangeBetStateResp): changeBetStateResp;

        /**
         * Encodes the specified changeBetStateResp message. Does not implicitly {@link changeBetStateResp.verify|verify} messages.
         * @param message changeBetStateResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IchangeBetStateResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified changeBetStateResp message, length delimited. Does not implicitly {@link changeBetStateResp.verify|verify} messages.
         * @param message changeBetStateResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IchangeBetStateResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a changeBetStateResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns changeBetStateResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): changeBetStateResp;

        /**
         * Decodes a changeBetStateResp message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns changeBetStateResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): changeBetStateResp;

        /**
         * Verifies a changeBetStateResp message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a changeBetStateResp message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns changeBetStateResp
         */
        public static fromObject(object: { [k: string]: any }): changeBetStateResp;

        /**
         * Creates a plain object from a changeBetStateResp message. Also converts values to other types if specified.
         * @param message changeBetStateResp
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: changeBetStateResp, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this changeBetStateResp to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a collectChooseReq. */
    export class collectChooseReq implements IcollectChooseReq {

        /**
         * Constructs a new collectChooseReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: IcollectChooseReq);

        /** collectChooseReq taskId. */
        public taskId: number;

        /** collectChooseReq targetNum. */
        public targetNum: number;

        /**
         * Creates a new collectChooseReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns collectChooseReq instance
         */
        public static create(properties?: IcollectChooseReq): collectChooseReq;

        /**
         * Encodes the specified collectChooseReq message. Does not implicitly {@link collectChooseReq.verify|verify} messages.
         * @param message collectChooseReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IcollectChooseReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified collectChooseReq message, length delimited. Does not implicitly {@link collectChooseReq.verify|verify} messages.
         * @param message collectChooseReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IcollectChooseReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a collectChooseReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns collectChooseReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): collectChooseReq;

        /**
         * Decodes a collectChooseReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns collectChooseReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): collectChooseReq;

        /**
         * Verifies a collectChooseReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a collectChooseReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns collectChooseReq
         */
        public static fromObject(object: { [k: string]: any }): collectChooseReq;

        /**
         * Creates a plain object from a collectChooseReq message. Also converts values to other types if specified.
         * @param message collectChooseReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: collectChooseReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this collectChooseReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a collectChooseResp. */
    export class collectChooseResp implements IcollectChooseResp {

        /**
         * Constructs a new collectChooseResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: IcollectChooseResp);

        /** collectChooseResp nextState. */
        public nextState?: (IstateType | null);

        /**
         * Creates a new collectChooseResp instance using the specified properties.
         * @param [properties] Properties to set
         * @returns collectChooseResp instance
         */
        public static create(properties?: IcollectChooseResp): collectChooseResp;

        /**
         * Encodes the specified collectChooseResp message. Does not implicitly {@link collectChooseResp.verify|verify} messages.
         * @param message collectChooseResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IcollectChooseResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified collectChooseResp message, length delimited. Does not implicitly {@link collectChooseResp.verify|verify} messages.
         * @param message collectChooseResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IcollectChooseResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a collectChooseResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns collectChooseResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): collectChooseResp;

        /**
         * Decodes a collectChooseResp message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns collectChooseResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): collectChooseResp;

        /**
         * Verifies a collectChooseResp message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a collectChooseResp message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns collectChooseResp
         */
        public static fromObject(object: { [k: string]: any }): collectChooseResp;

        /**
         * Creates a plain object from a collectChooseResp message. Also converts values to other types if specified.
         * @param message collectChooseResp
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: collectChooseResp, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this collectChooseResp to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a chooseCollectTaskReq. */
    export class chooseCollectTaskReq implements IchooseCollectTaskReq {

        /**
         * Constructs a new chooseCollectTaskReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: IchooseCollectTaskReq);

        /** chooseCollectTaskReq taskId. */
        public taskId: number;

        /**
         * Creates a new chooseCollectTaskReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns chooseCollectTaskReq instance
         */
        public static create(properties?: IchooseCollectTaskReq): chooseCollectTaskReq;

        /**
         * Encodes the specified chooseCollectTaskReq message. Does not implicitly {@link chooseCollectTaskReq.verify|verify} messages.
         * @param message chooseCollectTaskReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IchooseCollectTaskReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified chooseCollectTaskReq message, length delimited. Does not implicitly {@link chooseCollectTaskReq.verify|verify} messages.
         * @param message chooseCollectTaskReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IchooseCollectTaskReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a chooseCollectTaskReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns chooseCollectTaskReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): chooseCollectTaskReq;

        /**
         * Decodes a chooseCollectTaskReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns chooseCollectTaskReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): chooseCollectTaskReq;

        /**
         * Verifies a chooseCollectTaskReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a chooseCollectTaskReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns chooseCollectTaskReq
         */
        public static fromObject(object: { [k: string]: any }): chooseCollectTaskReq;

        /**
         * Creates a plain object from a chooseCollectTaskReq message. Also converts values to other types if specified.
         * @param message chooseCollectTaskReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: chooseCollectTaskReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this chooseCollectTaskReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a chooseCollectTaskResp. */
    export class chooseCollectTaskResp implements IchooseCollectTaskResp {

        /**
         * Constructs a new chooseCollectTaskResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: IchooseCollectTaskResp);

        /** chooseCollectTaskResp state. */
        public state?: (IstateType | null);

        /**
         * Creates a new chooseCollectTaskResp instance using the specified properties.
         * @param [properties] Properties to set
         * @returns chooseCollectTaskResp instance
         */
        public static create(properties?: IchooseCollectTaskResp): chooseCollectTaskResp;

        /**
         * Encodes the specified chooseCollectTaskResp message. Does not implicitly {@link chooseCollectTaskResp.verify|verify} messages.
         * @param message chooseCollectTaskResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IchooseCollectTaskResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified chooseCollectTaskResp message, length delimited. Does not implicitly {@link chooseCollectTaskResp.verify|verify} messages.
         * @param message chooseCollectTaskResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IchooseCollectTaskResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a chooseCollectTaskResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns chooseCollectTaskResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): chooseCollectTaskResp;

        /**
         * Decodes a chooseCollectTaskResp message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns chooseCollectTaskResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): chooseCollectTaskResp;

        /**
         * Verifies a chooseCollectTaskResp message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a chooseCollectTaskResp message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns chooseCollectTaskResp
         */
        public static fromObject(object: { [k: string]: any }): chooseCollectTaskResp;

        /**
         * Creates a plain object from a chooseCollectTaskResp message. Also converts values to other types if specified.
         * @param message chooseCollectTaskResp
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: chooseCollectTaskResp, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this chooseCollectTaskResp to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a roleChooseReq. */
    export class roleChooseReq implements IroleChooseReq {

        /**
         * Constructs a new roleChooseReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: IroleChooseReq);

        /** roleChooseReq chooseList. */
        public chooseList: number[];

        /**
         * Creates a new roleChooseReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns roleChooseReq instance
         */
        public static create(properties?: IroleChooseReq): roleChooseReq;

        /**
         * Encodes the specified roleChooseReq message. Does not implicitly {@link roleChooseReq.verify|verify} messages.
         * @param message roleChooseReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IroleChooseReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified roleChooseReq message, length delimited. Does not implicitly {@link roleChooseReq.verify|verify} messages.
         * @param message roleChooseReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IroleChooseReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a roleChooseReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns roleChooseReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): roleChooseReq;

        /**
         * Decodes a roleChooseReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns roleChooseReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): roleChooseReq;

        /**
         * Verifies a roleChooseReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a roleChooseReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns roleChooseReq
         */
        public static fromObject(object: { [k: string]: any }): roleChooseReq;

        /**
         * Creates a plain object from a roleChooseReq message. Also converts values to other types if specified.
         * @param message roleChooseReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: roleChooseReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this roleChooseReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a roleChooseResp. */
    export class roleChooseResp implements IroleChooseResp {

        /**
         * Constructs a new roleChooseResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: IroleChooseResp);

        /** roleChooseResp state. */
        public state?: (IstateType | null);

        /**
         * Creates a new roleChooseResp instance using the specified properties.
         * @param [properties] Properties to set
         * @returns roleChooseResp instance
         */
        public static create(properties?: IroleChooseResp): roleChooseResp;

        /**
         * Encodes the specified roleChooseResp message. Does not implicitly {@link roleChooseResp.verify|verify} messages.
         * @param message roleChooseResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IroleChooseResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified roleChooseResp message, length delimited. Does not implicitly {@link roleChooseResp.verify|verify} messages.
         * @param message roleChooseResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IroleChooseResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a roleChooseResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns roleChooseResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): roleChooseResp;

        /**
         * Decodes a roleChooseResp message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns roleChooseResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): roleChooseResp;

        /**
         * Verifies a roleChooseResp message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a roleChooseResp message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns roleChooseResp
         */
        public static fromObject(object: { [k: string]: any }): roleChooseResp;

        /**
         * Creates a plain object from a roleChooseResp message. Also converts values to other types if specified.
         * @param message roleChooseResp
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: roleChooseResp, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this roleChooseResp to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a buyExtraBallReq. */
    export class buyExtraBallReq implements IbuyExtraBallReq {

        /**
         * Constructs a new buyExtraBallReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: IbuyExtraBallReq);

        /** buyExtraBallReq req. */
        public req: IspinReqType;

        /** buyExtraBallReq id. */
        public id: number;

        /**
         * Creates a new buyExtraBallReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns buyExtraBallReq instance
         */
        public static create(properties?: IbuyExtraBallReq): buyExtraBallReq;

        /**
         * Encodes the specified buyExtraBallReq message. Does not implicitly {@link buyExtraBallReq.verify|verify} messages.
         * @param message buyExtraBallReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IbuyExtraBallReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified buyExtraBallReq message, length delimited. Does not implicitly {@link buyExtraBallReq.verify|verify} messages.
         * @param message buyExtraBallReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IbuyExtraBallReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a buyExtraBallReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns buyExtraBallReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): buyExtraBallReq;

        /**
         * Decodes a buyExtraBallReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns buyExtraBallReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): buyExtraBallReq;

        /**
         * Verifies a buyExtraBallReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a buyExtraBallReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns buyExtraBallReq
         */
        public static fromObject(object: { [k: string]: any }): buyExtraBallReq;

        /**
         * Creates a plain object from a buyExtraBallReq message. Also converts values to other types if specified.
         * @param message buyExtraBallReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: buyExtraBallReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this buyExtraBallReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a buyExtraBallResp. */
    export class buyExtraBallResp implements IbuyExtraBallResp {

        /**
         * Constructs a new buyExtraBallResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: IbuyExtraBallResp);

        /** buyExtraBallResp balance. */
        public balance: (number | Long);

        /** buyExtraBallResp handleState. */
        public handleState: IhandleStateType;

        /**
         * Creates a new buyExtraBallResp instance using the specified properties.
         * @param [properties] Properties to set
         * @returns buyExtraBallResp instance
         */
        public static create(properties?: IbuyExtraBallResp): buyExtraBallResp;

        /**
         * Encodes the specified buyExtraBallResp message. Does not implicitly {@link buyExtraBallResp.verify|verify} messages.
         * @param message buyExtraBallResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IbuyExtraBallResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified buyExtraBallResp message, length delimited. Does not implicitly {@link buyExtraBallResp.verify|verify} messages.
         * @param message buyExtraBallResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IbuyExtraBallResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a buyExtraBallResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns buyExtraBallResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): buyExtraBallResp;

        /**
         * Decodes a buyExtraBallResp message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns buyExtraBallResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): buyExtraBallResp;

        /**
         * Verifies a buyExtraBallResp message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a buyExtraBallResp message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns buyExtraBallResp
         */
        public static fromObject(object: { [k: string]: any }): buyExtraBallResp;

        /**
         * Creates a plain object from a buyExtraBallResp message. Also converts values to other types if specified.
         * @param message buyExtraBallResp
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: buyExtraBallResp, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this buyExtraBallResp to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a guestTryDemoModeReq. */
    export class guestTryDemoModeReq implements IguestTryDemoModeReq {

        /**
         * Constructs a new guestTryDemoModeReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: IguestTryDemoModeReq);

        /** guestTryDemoModeReq mode. */
        public mode: number;

        /**
         * Creates a new guestTryDemoModeReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns guestTryDemoModeReq instance
         */
        public static create(properties?: IguestTryDemoModeReq): guestTryDemoModeReq;

        /**
         * Encodes the specified guestTryDemoModeReq message. Does not implicitly {@link guestTryDemoModeReq.verify|verify} messages.
         * @param message guestTryDemoModeReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IguestTryDemoModeReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified guestTryDemoModeReq message, length delimited. Does not implicitly {@link guestTryDemoModeReq.verify|verify} messages.
         * @param message guestTryDemoModeReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IguestTryDemoModeReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a guestTryDemoModeReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns guestTryDemoModeReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): guestTryDemoModeReq;

        /**
         * Decodes a guestTryDemoModeReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns guestTryDemoModeReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): guestTryDemoModeReq;

        /**
         * Verifies a guestTryDemoModeReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a guestTryDemoModeReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns guestTryDemoModeReq
         */
        public static fromObject(object: { [k: string]: any }): guestTryDemoModeReq;

        /**
         * Creates a plain object from a guestTryDemoModeReq message. Also converts values to other types if specified.
         * @param message guestTryDemoModeReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: guestTryDemoModeReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this guestTryDemoModeReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a spinReqType. */
    export class spinReqType implements IspinReqType {

        /**
         * Constructs a new spinReqType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IspinReqType);

        /** spinReqType lines. */
        public lines: number;

        /** spinReqType cost. */
        public cost: (number | Long);

        /** spinReqType rate. */
        public rate: number;

        /** spinReqType assginLine. */
        public assginLine: number[];

        /** spinReqType extra. */
        public extra: number[];

        /** spinReqType rateModulus. */
        public rateModulus: number;

        /** spinReqType lineMultiple. */
        public lineMultiple: number;

        /**
         * Creates a new spinReqType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns spinReqType instance
         */
        public static create(properties?: IspinReqType): spinReqType;

        /**
         * Encodes the specified spinReqType message. Does not implicitly {@link spinReqType.verify|verify} messages.
         * @param message spinReqType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IspinReqType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified spinReqType message, length delimited. Does not implicitly {@link spinReqType.verify|verify} messages.
         * @param message spinReqType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IspinReqType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a spinReqType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns spinReqType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): spinReqType;

        /**
         * Decodes a spinReqType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns spinReqType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): spinReqType;

        /**
         * Verifies a spinReqType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a spinReqType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns spinReqType
         */
        public static fromObject(object: { [k: string]: any }): spinReqType;

        /**
         * Creates a plain object from a spinReqType message. Also converts values to other types if specified.
         * @param message spinReqType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: spinReqType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this spinReqType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a lgNextType. */
    export class lgNextType implements IlgNextType {

        /**
         * Constructs a new lgNextType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IlgNextType);

        /** lgNextType sceneId. */
        public sceneId: number;

        /** lgNextType times. */
        public times: number;

        /** lgNextType rewardList. */
        public rewardList: IlgResultType[];

        /** lgNextType other4. */
        public other4: IotherType[];

        /**
         * Creates a new lgNextType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns lgNextType instance
         */
        public static create(properties?: IlgNextType): lgNextType;

        /**
         * Encodes the specified lgNextType message. Does not implicitly {@link lgNextType.verify|verify} messages.
         * @param message lgNextType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IlgNextType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified lgNextType message, length delimited. Does not implicitly {@link lgNextType.verify|verify} messages.
         * @param message lgNextType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IlgNextType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a lgNextType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns lgNextType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): lgNextType;

        /**
         * Decodes a lgNextType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns lgNextType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): lgNextType;

        /**
         * Verifies a lgNextType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a lgNextType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns lgNextType
         */
        public static fromObject(object: { [k: string]: any }): lgNextType;

        /**
         * Creates a plain object from a lgNextType message. Also converts values to other types if specified.
         * @param message lgNextType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: lgNextType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this lgNextType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a lgResultType. */
    export class lgResultType implements IlgResultType {

        /**
         * Constructs a new lgResultType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IlgResultType);

        /** lgResultType sceneId. */
        public sceneId: number;

        /** lgResultType index. */
        public index: number;

        /** lgResultType result. */
        public result: number[];

        /** lgResultType reward. */
        public reward: IlgRewardType[];

        /** lgResultType showList. */
        public showList: lgResultType.IshowListType[];

        /** lgResultType result2. */
        public result2: number[];

        /** lgResultType other4. */
        public other4: IotherType[];

        /** lgResultType resultRate. */
        public resultRate: number;

        /**
         * Creates a new lgResultType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns lgResultType instance
         */
        public static create(properties?: IlgResultType): lgResultType;

        /**
         * Encodes the specified lgResultType message. Does not implicitly {@link lgResultType.verify|verify} messages.
         * @param message lgResultType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IlgResultType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified lgResultType message, length delimited. Does not implicitly {@link lgResultType.verify|verify} messages.
         * @param message lgResultType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IlgResultType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a lgResultType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns lgResultType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): lgResultType;

        /**
         * Decodes a lgResultType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns lgResultType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): lgResultType;

        /**
         * Verifies a lgResultType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a lgResultType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns lgResultType
         */
        public static fromObject(object: { [k: string]: any }): lgResultType;

        /**
         * Creates a plain object from a lgResultType message. Also converts values to other types if specified.
         * @param message lgResultType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: lgResultType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this lgResultType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace lgResultType {

        /** Properties of a showListType. */
        interface IshowListType {

            /** showListType index */
            index: number;

            /** showListType reward */
            reward?: (IlgRewardType[] | null);
        }

        /** Represents a showListType. */
        class showListType implements IshowListType {

            /**
             * Constructs a new showListType.
             * @param [properties] Properties to set
             */
            constructor(properties?: lgResultType.IshowListType);

            /** showListType index. */
            public index: number;

            /** showListType reward. */
            public reward: IlgRewardType[];

            /**
             * Creates a new showListType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns showListType instance
             */
            public static create(properties?: lgResultType.IshowListType): lgResultType.showListType;

            /**
             * Encodes the specified showListType message. Does not implicitly {@link lgResultType.showListType.verify|verify} messages.
             * @param message showListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: lgResultType.IshowListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified showListType message, length delimited. Does not implicitly {@link lgResultType.showListType.verify|verify} messages.
             * @param message showListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: lgResultType.IshowListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a showListType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns showListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): lgResultType.showListType;

            /**
             * Decodes a showListType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns showListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): lgResultType.showListType;

            /**
             * Verifies a showListType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a showListType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns showListType
             */
            public static fromObject(object: { [k: string]: any }): lgResultType.showListType;

            /**
             * Creates a plain object from a showListType message. Also converts values to other types if specified.
             * @param message showListType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: lgResultType.showListType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this showListType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a stateType. */
    export class stateType implements IstateType {

        /**
         * Constructs a new stateType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IstateType);

        /** stateType state. */
        public state: number;

        /** stateType normalData. */
        public normalData?: (InormalStateType | null);

        /** stateType freeData. */
        public freeData?: (IstateCommonType | null);

        /** stateType lgId. */
        public lgId: (number | Long);

        /** stateType choose. */
        public choose: number;

        /**
         * Creates a new stateType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns stateType instance
         */
        public static create(properties?: IstateType): stateType;

        /**
         * Encodes the specified stateType message. Does not implicitly {@link stateType.verify|verify} messages.
         * @param message stateType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IstateType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified stateType message, length delimited. Does not implicitly {@link stateType.verify|verify} messages.
         * @param message stateType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IstateType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a stateType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns stateType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): stateType;

        /**
         * Decodes a stateType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns stateType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): stateType;

        /**
         * Verifies a stateType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a stateType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns stateType
         */
        public static fromObject(object: { [k: string]: any }): stateType;

        /**
         * Creates a plain object from a stateType message. Also converts values to other types if specified.
         * @param message stateType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: stateType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this stateType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a stateUpdateType. */
    export class stateUpdateType implements IstateUpdateType {

        /**
         * Constructs a new stateUpdateType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IstateUpdateType);

        /** stateUpdateType type. */
        public type: number;

        /** stateUpdateType value. */
        public value: stateUpdateType.IupdateType;

        /**
         * Creates a new stateUpdateType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns stateUpdateType instance
         */
        public static create(properties?: IstateUpdateType): stateUpdateType;

        /**
         * Encodes the specified stateUpdateType message. Does not implicitly {@link stateUpdateType.verify|verify} messages.
         * @param message stateUpdateType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IstateUpdateType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified stateUpdateType message, length delimited. Does not implicitly {@link stateUpdateType.verify|verify} messages.
         * @param message stateUpdateType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IstateUpdateType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a stateUpdateType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns stateUpdateType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): stateUpdateType;

        /**
         * Decodes a stateUpdateType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns stateUpdateType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): stateUpdateType;

        /**
         * Verifies a stateUpdateType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a stateUpdateType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns stateUpdateType
         */
        public static fromObject(object: { [k: string]: any }): stateUpdateType;

        /**
         * Creates a plain object from a stateUpdateType message. Also converts values to other types if specified.
         * @param message stateUpdateType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: stateUpdateType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this stateUpdateType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace stateUpdateType {

        /** Properties of an updateType. */
        interface IupdateType {

            /** updateType elemFix */
            elemFix?: (IelemFixPosType[] | null);

            /** updateType times */
            times?: (number | null);

            /** updateType ratio */
            ratio?: (number | null);

            /** updateType wild */
            wild?: (number[] | null);

            /** updateType scatter */
            scatter?: (number[] | null);

            /** updateType handleState */
            handleState?: (IhandleStateType | null);

            /** updateType elemExpand */
            elemExpand?: (number[] | null);

            /** updateType wildNum */
            wildNum?: (number | null);

            /** updateType diffusion */
            diffusion?: (IelemPosListType[] | null);

            /** updateType lock */
            lock?: (IelemPosListType[] | null);

            /** updateType random */
            random?: (IelemPosListType[] | null);

            /** updateType posRateList */
            posRateList?: (IposRateListType[] | null);

            /** updateType winStreakNum */
            winStreakNum?: (number | null);

            /** updateType sumSpinCoin */
            sumSpinCoin?: (number | Long | null);

            /** updateType gameId */
            gameId?: (number | null);

            /** updateType isAuthoritiesRate */
            isAuthoritiesRate?: (boolean | null);

            /** updateType accFixGridList */
            accFixGridList?: (IgridType[] | null);

            /** updateType triggerLgNum */
            triggerLgNum?: (number | null);

            /** updateType elemCount */
            elemCount?: (number | null);

            /** updateType elemTran */
            elemTran?: (IelemTranType[] | null);

            /** updateType rollerDelElem */
            rollerDelElem?: (number[] | null);

            /** updateType sumLgCoin */
            sumLgCoin?: (number | Long | null);

            /** updateType triggerSpinTypeTimes */
            triggerSpinTypeTimes?: (number | null);

            /** updateType sumTimes */
            sumTimes?: (number | null);

            /** updateType randomElemRateAddition */
            randomElemRateAddition?: (IrandomElemRateType[] | null);
        }

        /** Represents an updateType. */
        class updateType implements IupdateType {

            /**
             * Constructs a new updateType.
             * @param [properties] Properties to set
             */
            constructor(properties?: stateUpdateType.IupdateType);

            /** updateType elemFix. */
            public elemFix: IelemFixPosType[];

            /** updateType times. */
            public times: number;

            /** updateType ratio. */
            public ratio: number;

            /** updateType wild. */
            public wild: number[];

            /** updateType scatter. */
            public scatter: number[];

            /** updateType handleState. */
            public handleState?: (IhandleStateType | null);

            /** updateType elemExpand. */
            public elemExpand: number[];

            /** updateType wildNum. */
            public wildNum: number;

            /** updateType diffusion. */
            public diffusion: IelemPosListType[];

            /** updateType lock. */
            public lock: IelemPosListType[];

            /** updateType random. */
            public random: IelemPosListType[];

            /** updateType posRateList. */
            public posRateList: IposRateListType[];

            /** updateType winStreakNum. */
            public winStreakNum: number;

            /** updateType sumSpinCoin. */
            public sumSpinCoin: (number | Long);

            /** updateType gameId. */
            public gameId: number;

            /** updateType isAuthoritiesRate. */
            public isAuthoritiesRate: boolean;

            /** updateType accFixGridList. */
            public accFixGridList: IgridType[];

            /** updateType triggerLgNum. */
            public triggerLgNum: number;

            /** updateType elemCount. */
            public elemCount: number;

            /** updateType elemTran. */
            public elemTran: IelemTranType[];

            /** updateType rollerDelElem. */
            public rollerDelElem: number[];

            /** updateType sumLgCoin. */
            public sumLgCoin: (number | Long);

            /** updateType triggerSpinTypeTimes. */
            public triggerSpinTypeTimes: number;

            /** updateType sumTimes. */
            public sumTimes: number;

            /** updateType randomElemRateAddition. */
            public randomElemRateAddition: IrandomElemRateType[];

            /**
             * Creates a new updateType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns updateType instance
             */
            public static create(properties?: stateUpdateType.IupdateType): stateUpdateType.updateType;

            /**
             * Encodes the specified updateType message. Does not implicitly {@link stateUpdateType.updateType.verify|verify} messages.
             * @param message updateType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: stateUpdateType.IupdateType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified updateType message, length delimited. Does not implicitly {@link stateUpdateType.updateType.verify|verify} messages.
             * @param message updateType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: stateUpdateType.IupdateType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an updateType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns updateType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): stateUpdateType.updateType;

            /**
             * Decodes an updateType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns updateType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): stateUpdateType.updateType;

            /**
             * Verifies an updateType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an updateType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns updateType
             */
            public static fromObject(object: { [k: string]: any }): stateUpdateType.updateType;

            /**
             * Creates a plain object from an updateType message. Also converts values to other types if specified.
             * @param message updateType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: stateUpdateType.updateType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this updateType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a restoreType. */
    export class restoreType implements IrestoreType {

        /**
         * Constructs a new restoreType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IrestoreType);

        /** restoreType userInfo. */
        public userInfo: IuserInfoType;

        /** restoreType state. */
        public state: IstateType;

        /** restoreType winningAnimationConditions. */
        public winningAnimationConditions: IwinningAnimationConditionsType[];

        /** restoreType autoSpinTimes. */
        public autoSpinTimes: number[];

        /** restoreType lineValue. */
        public lineValue: (number | Long)[];

        /** restoreType betStateType. */
        public betStateType: IbetStateType;

        /**
         * Creates a new restoreType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns restoreType instance
         */
        public static create(properties?: IrestoreType): restoreType;

        /**
         * Encodes the specified restoreType message. Does not implicitly {@link restoreType.verify|verify} messages.
         * @param message restoreType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IrestoreType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified restoreType message, length delimited. Does not implicitly {@link restoreType.verify|verify} messages.
         * @param message restoreType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IrestoreType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a restoreType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns restoreType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): restoreType;

        /**
         * Decodes a restoreType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns restoreType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): restoreType;

        /**
         * Verifies a restoreType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a restoreType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns restoreType
         */
        public static fromObject(object: { [k: string]: any }): restoreType;

        /**
         * Creates a plain object from a restoreType message. Also converts values to other types if specified.
         * @param message restoreType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: restoreType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this restoreType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a userInfoType. */
    export class userInfoType implements IuserInfoType {

        /**
         * Constructs a new userInfoType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IuserInfoType);

        /** userInfoType userId. */
        public userId: (number | Long);

        /** userInfoType userName. */
        public userName: string;

        /** userInfoType avatar. */
        public avatar: number;

        /** userInfoType lv. */
        public lv: number;

        /** userInfoType balance. */
        public balance: (number | Long);

        /** userInfoType isNewer. */
        public isNewer: number;

        /** userInfoType coinType. */
        public coinType: number;

        /**
         * Creates a new userInfoType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns userInfoType instance
         */
        public static create(properties?: IuserInfoType): userInfoType;

        /**
         * Encodes the specified userInfoType message. Does not implicitly {@link userInfoType.verify|verify} messages.
         * @param message userInfoType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IuserInfoType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified userInfoType message, length delimited. Does not implicitly {@link userInfoType.verify|verify} messages.
         * @param message userInfoType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IuserInfoType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a userInfoType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns userInfoType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): userInfoType;

        /**
         * Decodes a userInfoType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns userInfoType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): userInfoType;

        /**
         * Verifies a userInfoType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a userInfoType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns userInfoType
         */
        public static fromObject(object: { [k: string]: any }): userInfoType;

        /**
         * Creates a plain object from a userInfoType message. Also converts values to other types if specified.
         * @param message userInfoType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: userInfoType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this userInfoType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a spinParamType. */
    export class spinParamType implements IspinParamType {

        /**
         * Constructs a new spinParamType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IspinParamType);

        /** spinParamType lineList. */
        public lineList: number[];

        /** spinParamType lineCost. */
        public lineCost: (number | Long);

        /** spinParamType lineRate. */
        public lineRate: number;

        /** spinParamType rateModulus. */
        public rateModulus: number;

        /** spinParamType lineMultiple. */
        public lineMultiple: number;

        /**
         * Creates a new spinParamType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns spinParamType instance
         */
        public static create(properties?: IspinParamType): spinParamType;

        /**
         * Encodes the specified spinParamType message. Does not implicitly {@link spinParamType.verify|verify} messages.
         * @param message spinParamType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IspinParamType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified spinParamType message, length delimited. Does not implicitly {@link spinParamType.verify|verify} messages.
         * @param message spinParamType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IspinParamType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a spinParamType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns spinParamType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): spinParamType;

        /**
         * Decodes a spinParamType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns spinParamType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): spinParamType;

        /**
         * Verifies a spinParamType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a spinParamType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns spinParamType
         */
        public static fromObject(object: { [k: string]: any }): spinParamType;

        /**
         * Creates a plain object from a spinParamType message. Also converts values to other types if specified.
         * @param message spinParamType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: spinParamType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this spinParamType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a normalStateType. */
    export class normalStateType implements InormalStateType {

        /**
         * Constructs a new normalStateType.
         * @param [properties] Properties to set
         */
        constructor(properties?: InormalStateType);

        /** normalStateType spinInfo. */
        public spinInfo: IspinInfoType;

        /** normalStateType handleState. */
        public handleState?: (IhandleStateType | null);

        /** normalStateType sumSpinCoin. */
        public sumSpinCoin: (number | Long);

        /** normalStateType sumLgCoin. */
        public sumLgCoin: (number | Long);

        /** normalStateType randomElemPos. */
        public randomElemPos: IrandomElemPosType[];

        /** normalStateType wild. */
        public wild: number[];

        /** normalStateType spinTypeTag. */
        public spinTypeTag: number;

        /** normalStateType triggerFreeSpinCoin. */
        public triggerFreeSpinCoin: (number | Long);

        /** normalStateType isNewer. */
        public isNewer: number;

        /**
         * Creates a new normalStateType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns normalStateType instance
         */
        public static create(properties?: InormalStateType): normalStateType;

        /**
         * Encodes the specified normalStateType message. Does not implicitly {@link normalStateType.verify|verify} messages.
         * @param message normalStateType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: InormalStateType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified normalStateType message, length delimited. Does not implicitly {@link normalStateType.verify|verify} messages.
         * @param message normalStateType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: InormalStateType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a normalStateType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns normalStateType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): normalStateType;

        /**
         * Decodes a normalStateType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns normalStateType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): normalStateType;

        /**
         * Verifies a normalStateType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a normalStateType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns normalStateType
         */
        public static fromObject(object: { [k: string]: any }): normalStateType;

        /**
         * Creates a plain object from a normalStateType message. Also converts values to other types if specified.
         * @param message normalStateType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: normalStateType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this normalStateType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a spinInfoType. */
    export class spinInfoType implements IspinInfoType {

        /**
         * Constructs a new spinInfoType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IspinInfoType);

        /** spinInfoType spinParam. */
        public spinParam: IspinParamType;

        /** spinInfoType spinResult. */
        public spinResult: IspinResultType;

        /**
         * Creates a new spinInfoType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns spinInfoType instance
         */
        public static create(properties?: IspinInfoType): spinInfoType;

        /**
         * Encodes the specified spinInfoType message. Does not implicitly {@link spinInfoType.verify|verify} messages.
         * @param message spinInfoType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IspinInfoType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified spinInfoType message, length delimited. Does not implicitly {@link spinInfoType.verify|verify} messages.
         * @param message spinInfoType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IspinInfoType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a spinInfoType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns spinInfoType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): spinInfoType;

        /**
         * Decodes a spinInfoType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns spinInfoType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): spinInfoType;

        /**
         * Verifies a spinInfoType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a spinInfoType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns spinInfoType
         */
        public static fromObject(object: { [k: string]: any }): spinInfoType;

        /**
         * Creates a plain object from a spinInfoType message. Also converts values to other types if specified.
         * @param message spinInfoType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: spinInfoType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this spinInfoType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a doubleCoinType. */
    export class doubleCoinType implements IdoubleCoinType {

        /**
         * Constructs a new doubleCoinType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IdoubleCoinType);

        /** 当前奖池奖励 */
        public curBase: (number | Long);

        /** 达到赢局进度目标值的奖励 */
        public nextReward: (number | Long);

        /** 服务器种子哈希 */
        public serverHash: string;

        /** 客户端种子 */
        public clientSeed: string;

        /** 随机数 */
        public randomNum: number;

        /** 服务器种子(仅在上局信息中有传) */
        public serverSeed: string;

        /**
         * Creates a new doubleCoinType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns doubleCoinType instance
         */
        public static create(properties?: IdoubleCoinType): doubleCoinType;

        /**
         * Encodes the specified doubleCoinType message. Does not implicitly {@link doubleCoinType.verify|verify} messages.
         * @param message doubleCoinType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IdoubleCoinType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified doubleCoinType message, length delimited. Does not implicitly {@link doubleCoinType.verify|verify} messages.
         * @param message doubleCoinType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IdoubleCoinType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a doubleCoinType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns doubleCoinType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): doubleCoinType;

        /**
         * Decodes a doubleCoinType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns doubleCoinType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): doubleCoinType;

        /**
         * Verifies a doubleCoinType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a doubleCoinType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns doubleCoinType
         */
        public static fromObject(object: { [k: string]: any }): doubleCoinType;

        /**
         * Creates a plain object from a doubleCoinType message. Also converts values to other types if specified.
         * @param message doubleCoinType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: doubleCoinType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this doubleCoinType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a betStateType. */
    export class betStateType implements IbetStateType {

        /**
         * Constructs a new betStateType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IbetStateType);

        /** betStateType betState. */
        public betState: number;

        /** betStateType betRate. */
        public betRate: number;

        /**
         * Creates a new betStateType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns betStateType instance
         */
        public static create(properties?: IbetStateType): betStateType;

        /**
         * Encodes the specified betStateType message. Does not implicitly {@link betStateType.verify|verify} messages.
         * @param message betStateType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IbetStateType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified betStateType message, length delimited. Does not implicitly {@link betStateType.verify|verify} messages.
         * @param message betStateType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IbetStateType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a betStateType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns betStateType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): betStateType;

        /**
         * Decodes a betStateType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns betStateType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): betStateType;

        /**
         * Verifies a betStateType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a betStateType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns betStateType
         */
        public static fromObject(object: { [k: string]: any }): betStateType;

        /**
         * Creates a plain object from a betStateType message. Also converts values to other types if specified.
         * @param message betStateType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: betStateType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this betStateType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents an elemFixPosType. */
    export class elemFixPosType implements IelemFixPosType {

        /**
         * Constructs a new elemFixPosType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IelemFixPosType);

        /** elemFixPosType pos. */
        public pos: number;

        /** elemFixPosType elem. */
        public elem: number;

        /** elemFixPosType times. */
        public times: number;

        /**
         * Creates a new elemFixPosType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns elemFixPosType instance
         */
        public static create(properties?: IelemFixPosType): elemFixPosType;

        /**
         * Encodes the specified elemFixPosType message. Does not implicitly {@link elemFixPosType.verify|verify} messages.
         * @param message elemFixPosType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IelemFixPosType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified elemFixPosType message, length delimited. Does not implicitly {@link elemFixPosType.verify|verify} messages.
         * @param message elemFixPosType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IelemFixPosType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an elemFixPosType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns elemFixPosType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): elemFixPosType;

        /**
         * Decodes an elemFixPosType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns elemFixPosType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): elemFixPosType;

        /**
         * Verifies an elemFixPosType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates an elemFixPosType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns elemFixPosType
         */
        public static fromObject(object: { [k: string]: any }): elemFixPosType;

        /**
         * Creates a plain object from an elemFixPosType message. Also converts values to other types if specified.
         * @param message elemFixPosType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: elemFixPosType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this elemFixPosType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents an elemPosListType. */
    export class elemPosListType implements IelemPosListType {

        /**
         * Constructs a new elemPosListType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IelemPosListType);

        /** elemPosListType elem. */
        public elem: number;

        /** elemPosListType posList. */
        public posList: number[];

        /** elemPosListType replacePosList. */
        public replacePosList: number[];

        /**
         * Creates a new elemPosListType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns elemPosListType instance
         */
        public static create(properties?: IelemPosListType): elemPosListType;

        /**
         * Encodes the specified elemPosListType message. Does not implicitly {@link elemPosListType.verify|verify} messages.
         * @param message elemPosListType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IelemPosListType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified elemPosListType message, length delimited. Does not implicitly {@link elemPosListType.verify|verify} messages.
         * @param message elemPosListType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IelemPosListType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an elemPosListType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns elemPosListType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): elemPosListType;

        /**
         * Decodes an elemPosListType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns elemPosListType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): elemPosListType;

        /**
         * Verifies an elemPosListType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates an elemPosListType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns elemPosListType
         */
        public static fromObject(object: { [k: string]: any }): elemPosListType;

        /**
         * Creates a plain object from an elemPosListType message. Also converts values to other types if specified.
         * @param message elemPosListType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: elemPosListType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this elemPosListType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a randomElemRateType. */
    export class randomElemRateType implements IrandomElemRateType {

        /**
         * Constructs a new randomElemRateType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IrandomElemRateType);

        /** randomElemRateType elem. */
        public elem: number;

        /** randomElemRateType num. */
        public num: number;

        /** randomElemRateType rate. */
        public rate: number;

        /**
         * Creates a new randomElemRateType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns randomElemRateType instance
         */
        public static create(properties?: IrandomElemRateType): randomElemRateType;

        /**
         * Encodes the specified randomElemRateType message. Does not implicitly {@link randomElemRateType.verify|verify} messages.
         * @param message randomElemRateType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IrandomElemRateType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified randomElemRateType message, length delimited. Does not implicitly {@link randomElemRateType.verify|verify} messages.
         * @param message randomElemRateType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IrandomElemRateType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a randomElemRateType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns randomElemRateType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): randomElemRateType;

        /**
         * Decodes a randomElemRateType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns randomElemRateType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): randomElemRateType;

        /**
         * Verifies a randomElemRateType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a randomElemRateType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns randomElemRateType
         */
        public static fromObject(object: { [k: string]: any }): randomElemRateType;

        /**
         * Creates a plain object from a randomElemRateType message. Also converts values to other types if specified.
         * @param message randomElemRateType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: randomElemRateType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this randomElemRateType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a stateCommonType. */
    export class stateCommonType implements IstateCommonType {

        /**
         * Constructs a new stateCommonType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IstateCommonType);

        /** stateCommonType id. */
        public id: number;

        /** stateCommonType times. */
        public times: number;

        /** stateCommonType sumTimes. */
        public sumTimes: number;

        /** stateCommonType ratio. */
        public ratio: number;

        /** stateCommonType wild. */
        public wild: number[];

        /** stateCommonType scatter. */
        public scatter: number[];

        /** stateCommonType elemFixPos. */
        public elemFixPos: IelemFixPosType[];

        /** stateCommonType sumSpinCoin. */
        public sumSpinCoin: (number | Long);

        /** stateCommonType sumLgCoin. */
        public sumLgCoin: (number | Long);

        /** stateCommonType spinInfo. */
        public spinInfo?: (IspinInfoType | null);

        /** stateCommonType handleState. */
        public handleState?: (IhandleStateType | null);

        /** stateCommonType type. */
        public type: number;

        /** stateCommonType elemExpand. */
        public elemExpand: number[];

        /** stateCommonType wildNum. */
        public wildNum: number;

        /** stateCommonType winStreakNum. */
        public winStreakNum: number;

        /** stateCommonType eachSumSpinCoin. */
        public eachSumSpinCoin: (number | Long);

        /** stateCommonType gameId. */
        public gameId: number;

        /** stateCommonType isAuthoritiesRate. */
        public isAuthoritiesRate: boolean;

        /** stateCommonType random. */
        public random: IelemPosListType[];

        /** stateCommonType lgHistory. */
        public lgHistory: IlgResultType[];

        /** stateCommonType randomElemPos. */
        public randomElemPos: IrandomElemPosType[];

        /** stateCommonType accFixGridList. */
        public accFixGridList: IgridType[];

        /** stateCommonType elemCount. */
        public elemCount: number;

        /** stateCommonType elemTran. */
        public elemTran: IelemTranType[];

        /** stateCommonType rollerDelElem. */
        public rollerDelElem: number[];

        /** stateCommonType triggerTimes. */
        public triggerTimes: number;

        /** stateCommonType triggerSumTimes. */
        public triggerSumTimes: number;

        /** stateCommonType allFreeSpinTimes. */
        public allFreeSpinTimes: IallFreeSpinTimesType[];

        /** stateCommonType lock. */
        public lock: IelemPosListType[];

        /** stateCommonType randomElemRateAddition. */
        public randomElemRateAddition: IrandomElemRateType[];

        /** stateCommonType nowResultRate. */
        public nowResultRate: number;

        /**
         * Creates a new stateCommonType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns stateCommonType instance
         */
        public static create(properties?: IstateCommonType): stateCommonType;

        /**
         * Encodes the specified stateCommonType message. Does not implicitly {@link stateCommonType.verify|verify} messages.
         * @param message stateCommonType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IstateCommonType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified stateCommonType message, length delimited. Does not implicitly {@link stateCommonType.verify|verify} messages.
         * @param message stateCommonType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IstateCommonType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a stateCommonType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns stateCommonType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): stateCommonType;

        /**
         * Decodes a stateCommonType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns stateCommonType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): stateCommonType;

        /**
         * Verifies a stateCommonType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a stateCommonType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns stateCommonType
         */
        public static fromObject(object: { [k: string]: any }): stateCommonType;

        /**
         * Creates a plain object from a stateCommonType message. Also converts values to other types if specified.
         * @param message stateCommonType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: stateCommonType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this stateCommonType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a randomElemPosType. */
    export class randomElemPosType implements IrandomElemPosType {

        /**
         * Constructs a new randomElemPosType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IrandomElemPosType);

        /** randomElemPosType posLists. */
        public posLists: number[];

        /**
         * Creates a new randomElemPosType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns randomElemPosType instance
         */
        public static create(properties?: IrandomElemPosType): randomElemPosType;

        /**
         * Encodes the specified randomElemPosType message. Does not implicitly {@link randomElemPosType.verify|verify} messages.
         * @param message randomElemPosType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IrandomElemPosType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified randomElemPosType message, length delimited. Does not implicitly {@link randomElemPosType.verify|verify} messages.
         * @param message randomElemPosType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IrandomElemPosType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a randomElemPosType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns randomElemPosType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): randomElemPosType;

        /**
         * Decodes a randomElemPosType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns randomElemPosType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): randomElemPosType;

        /**
         * Verifies a randomElemPosType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a randomElemPosType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns randomElemPosType
         */
        public static fromObject(object: { [k: string]: any }): randomElemPosType;

        /**
         * Creates a plain object from a randomElemPosType message. Also converts values to other types if specified.
         * @param message randomElemPosType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: randomElemPosType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this randomElemPosType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a posRateListType. */
    export class posRateListType implements IposRateListType {

        /**
         * Constructs a new posRateListType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IposRateListType);

        /** posRateListType pos. */
        public pos: number;

        /** posRateListType rate. */
        public rate: number;

        /**
         * Creates a new posRateListType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns posRateListType instance
         */
        public static create(properties?: IposRateListType): posRateListType;

        /**
         * Encodes the specified posRateListType message. Does not implicitly {@link posRateListType.verify|verify} messages.
         * @param message posRateListType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IposRateListType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified posRateListType message, length delimited. Does not implicitly {@link posRateListType.verify|verify} messages.
         * @param message posRateListType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IposRateListType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a posRateListType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns posRateListType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): posRateListType;

        /**
         * Decodes a posRateListType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns posRateListType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): posRateListType;

        /**
         * Verifies a posRateListType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a posRateListType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns posRateListType
         */
        public static fromObject(object: { [k: string]: any }): posRateListType;

        /**
         * Creates a plain object from a posRateListType message. Also converts values to other types if specified.
         * @param message posRateListType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: posRateListType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this posRateListType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a buyFreeGameDataType. */
    export class buyFreeGameDataType implements IbuyFreeGameDataType {

        /**
         * Constructs a new buyFreeGameDataType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IbuyFreeGameDataType);

        /** buyFreeGameDataType id. */
        public id: number;

        /** buyFreeGameDataType costRate. */
        public costRate: number;

        /** buyFreeGameDataType freeTime. */
        public freeTime: number;

        /**
         * Creates a new buyFreeGameDataType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns buyFreeGameDataType instance
         */
        public static create(properties?: IbuyFreeGameDataType): buyFreeGameDataType;

        /**
         * Encodes the specified buyFreeGameDataType message. Does not implicitly {@link buyFreeGameDataType.verify|verify} messages.
         * @param message buyFreeGameDataType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IbuyFreeGameDataType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified buyFreeGameDataType message, length delimited. Does not implicitly {@link buyFreeGameDataType.verify|verify} messages.
         * @param message buyFreeGameDataType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IbuyFreeGameDataType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a buyFreeGameDataType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns buyFreeGameDataType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): buyFreeGameDataType;

        /**
         * Decodes a buyFreeGameDataType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns buyFreeGameDataType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): buyFreeGameDataType;

        /**
         * Verifies a buyFreeGameDataType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a buyFreeGameDataType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns buyFreeGameDataType
         */
        public static fromObject(object: { [k: string]: any }): buyFreeGameDataType;

        /**
         * Creates a plain object from a buyFreeGameDataType message. Also converts values to other types if specified.
         * @param message buyFreeGameDataType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: buyFreeGameDataType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this buyFreeGameDataType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a luckyGoldResultListType. */
    export class luckyGoldResultListType implements IluckyGoldResultListType {

        /**
         * Constructs a new luckyGoldResultListType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IluckyGoldResultListType);

        /** luckyGoldResultListType grid. */
        public grid: IgridType[];

        /** luckyGoldResultListType gridReward. */
        public gridReward: IgridReward1Type[];

        /** luckyGoldResultListType times. */
        public times: number;

        /** luckyGoldResultListType timesList. */
        public timesList: luckyGoldResultListType.IcolumnTimesType[];

        /** luckyGoldResultListType totalReward. */
        public totalReward: (number | Long);

        /** luckyGoldResultListType lockPosList. */
        public lockPosList: IlockPosType[];

        /** luckyGoldResultListType grandPrizePoolLv. */
        public grandPrizePoolLv: number;

        /** luckyGoldResultListType gridChanged. */
        public gridChanged: IgridType[];

        /** luckyGoldResultListType additionElemFunItem. */
        public additionElemFunItem: luckyGoldResultListType.IaddElemFunItemType[];

        /** luckyGoldResultListType keyListList. */
        public keyListList: luckyGoldResultListType.IkeyLListType[];

        /**
         * Creates a new luckyGoldResultListType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns luckyGoldResultListType instance
         */
        public static create(properties?: IluckyGoldResultListType): luckyGoldResultListType;

        /**
         * Encodes the specified luckyGoldResultListType message. Does not implicitly {@link luckyGoldResultListType.verify|verify} messages.
         * @param message luckyGoldResultListType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IluckyGoldResultListType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified luckyGoldResultListType message, length delimited. Does not implicitly {@link luckyGoldResultListType.verify|verify} messages.
         * @param message luckyGoldResultListType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IluckyGoldResultListType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a luckyGoldResultListType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns luckyGoldResultListType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): luckyGoldResultListType;

        /**
         * Decodes a luckyGoldResultListType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns luckyGoldResultListType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): luckyGoldResultListType;

        /**
         * Verifies a luckyGoldResultListType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a luckyGoldResultListType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns luckyGoldResultListType
         */
        public static fromObject(object: { [k: string]: any }): luckyGoldResultListType;

        /**
         * Creates a plain object from a luckyGoldResultListType message. Also converts values to other types if specified.
         * @param message luckyGoldResultListType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: luckyGoldResultListType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this luckyGoldResultListType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace luckyGoldResultListType {

        /** Properties of a columnTimesType. */
        interface IcolumnTimesType {

            /** columnTimesType column */
            column: number;

            /** columnTimesType times */
            times: number;
        }

        /** Represents a columnTimesType. */
        class columnTimesType implements IcolumnTimesType {

            /**
             * Constructs a new columnTimesType.
             * @param [properties] Properties to set
             */
            constructor(properties?: luckyGoldResultListType.IcolumnTimesType);

            /** columnTimesType column. */
            public column: number;

            /** columnTimesType times. */
            public times: number;

            /**
             * Creates a new columnTimesType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns columnTimesType instance
             */
            public static create(properties?: luckyGoldResultListType.IcolumnTimesType): luckyGoldResultListType.columnTimesType;

            /**
             * Encodes the specified columnTimesType message. Does not implicitly {@link luckyGoldResultListType.columnTimesType.verify|verify} messages.
             * @param message columnTimesType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: luckyGoldResultListType.IcolumnTimesType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified columnTimesType message, length delimited. Does not implicitly {@link luckyGoldResultListType.columnTimesType.verify|verify} messages.
             * @param message columnTimesType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: luckyGoldResultListType.IcolumnTimesType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a columnTimesType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns columnTimesType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): luckyGoldResultListType.columnTimesType;

            /**
             * Decodes a columnTimesType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns columnTimesType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): luckyGoldResultListType.columnTimesType;

            /**
             * Verifies a columnTimesType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a columnTimesType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns columnTimesType
             */
            public static fromObject(object: { [k: string]: any }): luckyGoldResultListType.columnTimesType;

            /**
             * Creates a plain object from a columnTimesType message. Also converts values to other types if specified.
             * @param message columnTimesType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: luckyGoldResultListType.columnTimesType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this columnTimesType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an addElemFunItemType. */
        interface IaddElemFunItemType {

            /** addElemFunItemType elem */
            elem: number;

            /** addElemFunItemType funDate */
            funDate?: (number[] | null);
        }

        /** Represents an addElemFunItemType. */
        class addElemFunItemType implements IaddElemFunItemType {

            /**
             * Constructs a new addElemFunItemType.
             * @param [properties] Properties to set
             */
            constructor(properties?: luckyGoldResultListType.IaddElemFunItemType);

            /** addElemFunItemType elem. */
            public elem: number;

            /** addElemFunItemType funDate. */
            public funDate: number[];

            /**
             * Creates a new addElemFunItemType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns addElemFunItemType instance
             */
            public static create(properties?: luckyGoldResultListType.IaddElemFunItemType): luckyGoldResultListType.addElemFunItemType;

            /**
             * Encodes the specified addElemFunItemType message. Does not implicitly {@link luckyGoldResultListType.addElemFunItemType.verify|verify} messages.
             * @param message addElemFunItemType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: luckyGoldResultListType.IaddElemFunItemType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified addElemFunItemType message, length delimited. Does not implicitly {@link luckyGoldResultListType.addElemFunItemType.verify|verify} messages.
             * @param message addElemFunItemType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: luckyGoldResultListType.IaddElemFunItemType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an addElemFunItemType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns addElemFunItemType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): luckyGoldResultListType.addElemFunItemType;

            /**
             * Decodes an addElemFunItemType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns addElemFunItemType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): luckyGoldResultListType.addElemFunItemType;

            /**
             * Verifies an addElemFunItemType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an addElemFunItemType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns addElemFunItemType
             */
            public static fromObject(object: { [k: string]: any }): luckyGoldResultListType.addElemFunItemType;

            /**
             * Creates a plain object from an addElemFunItemType message. Also converts values to other types if specified.
             * @param message addElemFunItemType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: luckyGoldResultListType.addElemFunItemType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this addElemFunItemType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a keyLListType. */
        interface IkeyLListType {

            /** keyLListType key */
            key: number;

            /** keyLListType list */
            list?: (number[] | null);
        }

        /** Represents a keyLListType. */
        class keyLListType implements IkeyLListType {

            /**
             * Constructs a new keyLListType.
             * @param [properties] Properties to set
             */
            constructor(properties?: luckyGoldResultListType.IkeyLListType);

            /** keyLListType key. */
            public key: number;

            /** keyLListType list. */
            public list: number[];

            /**
             * Creates a new keyLListType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns keyLListType instance
             */
            public static create(properties?: luckyGoldResultListType.IkeyLListType): luckyGoldResultListType.keyLListType;

            /**
             * Encodes the specified keyLListType message. Does not implicitly {@link luckyGoldResultListType.keyLListType.verify|verify} messages.
             * @param message keyLListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: luckyGoldResultListType.IkeyLListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified keyLListType message, length delimited. Does not implicitly {@link luckyGoldResultListType.keyLListType.verify|verify} messages.
             * @param message keyLListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: luckyGoldResultListType.IkeyLListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a keyLListType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns keyLListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): luckyGoldResultListType.keyLListType;

            /**
             * Decodes a keyLListType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns keyLListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): luckyGoldResultListType.keyLListType;

            /**
             * Verifies a keyLListType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a keyLListType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns keyLListType
             */
            public static fromObject(object: { [k: string]: any }): luckyGoldResultListType.keyLListType;

            /**
             * Creates a plain object from a keyLListType message. Also converts values to other types if specified.
             * @param message keyLListType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: luckyGoldResultListType.keyLListType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this keyLListType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a winningAnimationConditionsType. */
    export class winningAnimationConditionsType implements IwinningAnimationConditionsType {

        /**
         * Constructs a new winningAnimationConditionsType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IwinningAnimationConditionsType);

        /** winningAnimationConditionsType winType. */
        public winType: number;

        /** winningAnimationConditionsType winRate. */
        public winRate: number;

        /**
         * Creates a new winningAnimationConditionsType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns winningAnimationConditionsType instance
         */
        public static create(properties?: IwinningAnimationConditionsType): winningAnimationConditionsType;

        /**
         * Encodes the specified winningAnimationConditionsType message. Does not implicitly {@link winningAnimationConditionsType.verify|verify} messages.
         * @param message winningAnimationConditionsType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IwinningAnimationConditionsType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified winningAnimationConditionsType message, length delimited. Does not implicitly {@link winningAnimationConditionsType.verify|verify} messages.
         * @param message winningAnimationConditionsType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IwinningAnimationConditionsType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a winningAnimationConditionsType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns winningAnimationConditionsType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): winningAnimationConditionsType;

        /**
         * Decodes a winningAnimationConditionsType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns winningAnimationConditionsType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): winningAnimationConditionsType;

        /**
         * Verifies a winningAnimationConditionsType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a winningAnimationConditionsType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns winningAnimationConditionsType
         */
        public static fromObject(object: { [k: string]: any }): winningAnimationConditionsType;

        /**
         * Creates a plain object from a winningAnimationConditionsType message. Also converts values to other types if specified.
         * @param message winningAnimationConditionsType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: winningAnimationConditionsType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this winningAnimationConditionsType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a gridReward1Type. */
    export class gridReward1Type implements IgridReward1Type {

        /**
         * Constructs a new gridReward1Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: IgridReward1Type);

        /** gridReward1Type pos. */
        public pos: number;

        /** gridReward1Type goldReward. */
        public goldReward: (number | Long);

        /** gridReward1Type elem. */
        public elem: number;

        /** gridReward1Type extraReward. */
        public extraReward: (number | Long);

        /** gridReward1Type functionReward. */
        public functionReward: (number | Long);

        /** gridReward1Type functionArg. */
        public functionArg: (number | Long);

        /**
         * Creates a new gridReward1Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns gridReward1Type instance
         */
        public static create(properties?: IgridReward1Type): gridReward1Type;

        /**
         * Encodes the specified gridReward1Type message. Does not implicitly {@link gridReward1Type.verify|verify} messages.
         * @param message gridReward1Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IgridReward1Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified gridReward1Type message, length delimited. Does not implicitly {@link gridReward1Type.verify|verify} messages.
         * @param message gridReward1Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IgridReward1Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a gridReward1Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns gridReward1Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gridReward1Type;

        /**
         * Decodes a gridReward1Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns gridReward1Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gridReward1Type;

        /**
         * Verifies a gridReward1Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a gridReward1Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns gridReward1Type
         */
        public static fromObject(object: { [k: string]: any }): gridReward1Type;

        /**
         * Creates a plain object from a gridReward1Type message. Also converts values to other types if specified.
         * @param message gridReward1Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gridReward1Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this gridReward1Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a lockPosType. */
    export class lockPosType implements IlockPosType {

        /**
         * Constructs a new lockPosType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IlockPosType);

        /** lockPosType pos. */
        public pos: number;

        /** lockPosType unlockNum. */
        public unlockNum: number;

        /**
         * Creates a new lockPosType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns lockPosType instance
         */
        public static create(properties?: IlockPosType): lockPosType;

        /**
         * Encodes the specified lockPosType message. Does not implicitly {@link lockPosType.verify|verify} messages.
         * @param message lockPosType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IlockPosType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified lockPosType message, length delimited. Does not implicitly {@link lockPosType.verify|verify} messages.
         * @param message lockPosType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IlockPosType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a lockPosType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns lockPosType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): lockPosType;

        /**
         * Decodes a lockPosType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns lockPosType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): lockPosType;

        /**
         * Verifies a lockPosType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a lockPosType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns lockPosType
         */
        public static fromObject(object: { [k: string]: any }): lockPosType;

        /**
         * Creates a plain object from a lockPosType message. Also converts values to other types if specified.
         * @param message lockPosType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: lockPosType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this lockPosType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a changeCostReq. */
    export class changeCostReq implements IchangeCostReq {

        /**
         * Constructs a new changeCostReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: IchangeCostReq);

        /** changeCostReq req. */
        public req?: (IspinReqType | null);

        /**
         * Creates a new changeCostReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns changeCostReq instance
         */
        public static create(properties?: IchangeCostReq): changeCostReq;

        /**
         * Encodes the specified changeCostReq message. Does not implicitly {@link changeCostReq.verify|verify} messages.
         * @param message changeCostReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IchangeCostReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified changeCostReq message, length delimited. Does not implicitly {@link changeCostReq.verify|verify} messages.
         * @param message changeCostReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IchangeCostReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a changeCostReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns changeCostReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): changeCostReq;

        /**
         * Decodes a changeCostReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns changeCostReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): changeCostReq;

        /**
         * Verifies a changeCostReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a changeCostReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns changeCostReq
         */
        public static fromObject(object: { [k: string]: any }): changeCostReq;

        /**
         * Creates a plain object from a changeCostReq message. Also converts values to other types if specified.
         * @param message changeCostReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: changeCostReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this changeCostReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a changeCostResp. */
    export class changeCostResp implements IchangeCostResp {

        /**
         * Constructs a new changeCostResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: IchangeCostResp);

        /** changeCostResp state. */
        public state: number;

        /** changeCostResp normalData. */
        public normalData?: (InormalStateType | null);

        /** changeCostResp freeData. */
        public freeData?: (IstateCommonType | null);

        /**
         * Creates a new changeCostResp instance using the specified properties.
         * @param [properties] Properties to set
         * @returns changeCostResp instance
         */
        public static create(properties?: IchangeCostResp): changeCostResp;

        /**
         * Encodes the specified changeCostResp message. Does not implicitly {@link changeCostResp.verify|verify} messages.
         * @param message changeCostResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IchangeCostResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified changeCostResp message, length delimited. Does not implicitly {@link changeCostResp.verify|verify} messages.
         * @param message changeCostResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IchangeCostResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a changeCostResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns changeCostResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): changeCostResp;

        /**
         * Decodes a changeCostResp message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns changeCostResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): changeCostResp;

        /**
         * Verifies a changeCostResp message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a changeCostResp message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns changeCostResp
         */
        public static fromObject(object: { [k: string]: any }): changeCostResp;

        /**
         * Creates a plain object from a changeCostResp message. Also converts values to other types if specified.
         * @param message changeCostResp
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: changeCostResp, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this changeCostResp to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a winAmountRankReq. */
    export class winAmountRankReq implements IwinAmountRankReq {

        /**
         * Constructs a new winAmountRankReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: IwinAmountRankReq);

        /**
         * Creates a new winAmountRankReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns winAmountRankReq instance
         */
        public static create(properties?: IwinAmountRankReq): winAmountRankReq;

        /**
         * Encodes the specified winAmountRankReq message. Does not implicitly {@link winAmountRankReq.verify|verify} messages.
         * @param message winAmountRankReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IwinAmountRankReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified winAmountRankReq message, length delimited. Does not implicitly {@link winAmountRankReq.verify|verify} messages.
         * @param message winAmountRankReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IwinAmountRankReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a winAmountRankReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns winAmountRankReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): winAmountRankReq;

        /**
         * Decodes a winAmountRankReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns winAmountRankReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): winAmountRankReq;

        /**
         * Verifies a winAmountRankReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a winAmountRankReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns winAmountRankReq
         */
        public static fromObject(object: { [k: string]: any }): winAmountRankReq;

        /**
         * Creates a plain object from a winAmountRankReq message. Also converts values to other types if specified.
         * @param message winAmountRankReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: winAmountRankReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this winAmountRankReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a winAmountRankResp. */
    export class winAmountRankResp implements IwinAmountRankResp {

        /**
         * Constructs a new winAmountRankResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: IwinAmountRankResp);

        /** winAmountRankResp winAmountRank. */
        public winAmountRank: IwinAmountRankType[];

        /**
         * Creates a new winAmountRankResp instance using the specified properties.
         * @param [properties] Properties to set
         * @returns winAmountRankResp instance
         */
        public static create(properties?: IwinAmountRankResp): winAmountRankResp;

        /**
         * Encodes the specified winAmountRankResp message. Does not implicitly {@link winAmountRankResp.verify|verify} messages.
         * @param message winAmountRankResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IwinAmountRankResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified winAmountRankResp message, length delimited. Does not implicitly {@link winAmountRankResp.verify|verify} messages.
         * @param message winAmountRankResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IwinAmountRankResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a winAmountRankResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns winAmountRankResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): winAmountRankResp;

        /**
         * Decodes a winAmountRankResp message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns winAmountRankResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): winAmountRankResp;

        /**
         * Verifies a winAmountRankResp message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a winAmountRankResp message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns winAmountRankResp
         */
        public static fromObject(object: { [k: string]: any }): winAmountRankResp;

        /**
         * Creates a plain object from a winAmountRankResp message. Also converts values to other types if specified.
         * @param message winAmountRankResp
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: winAmountRankResp, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this winAmountRankResp to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a winAmountRankType. */
    export class winAmountRankType implements IwinAmountRankType {

        /**
         * Constructs a new winAmountRankType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IwinAmountRankType);

        /** winAmountRankType timeInterval. */
        public timeInterval: (number | Long);

        /** winAmountRankType winCoin. */
        public winCoin: (number | Long);

        /**
         * Creates a new winAmountRankType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns winAmountRankType instance
         */
        public static create(properties?: IwinAmountRankType): winAmountRankType;

        /**
         * Encodes the specified winAmountRankType message. Does not implicitly {@link winAmountRankType.verify|verify} messages.
         * @param message winAmountRankType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IwinAmountRankType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified winAmountRankType message, length delimited. Does not implicitly {@link winAmountRankType.verify|verify} messages.
         * @param message winAmountRankType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IwinAmountRankType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a winAmountRankType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns winAmountRankType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): winAmountRankType;

        /**
         * Decodes a winAmountRankType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns winAmountRankType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): winAmountRankType;

        /**
         * Verifies a winAmountRankType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a winAmountRankType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns winAmountRankType
         */
        public static fromObject(object: { [k: string]: any }): winAmountRankType;

        /**
         * Creates a plain object from a winAmountRankType message. Also converts values to other types if specified.
         * @param message winAmountRankType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: winAmountRankType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this winAmountRankType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a pickCardResultType. */
    export class pickCardResultType implements IpickCardResultType {

        /**
         * Constructs a new pickCardResultType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IpickCardResultType);

        /** pickCardResultType times. */
        public times: number;

        /** pickCardResultType multi. */
        public multi: number[];

        /** pickCardResultType cardCoin. */
        public cardCoin: pickCardResultType.IcardCoinType[];

        /** pickCardResultType pickList. */
        public pickList: number[];

        /**
         * Creates a new pickCardResultType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns pickCardResultType instance
         */
        public static create(properties?: IpickCardResultType): pickCardResultType;

        /**
         * Encodes the specified pickCardResultType message. Does not implicitly {@link pickCardResultType.verify|verify} messages.
         * @param message pickCardResultType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IpickCardResultType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified pickCardResultType message, length delimited. Does not implicitly {@link pickCardResultType.verify|verify} messages.
         * @param message pickCardResultType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IpickCardResultType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a pickCardResultType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns pickCardResultType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): pickCardResultType;

        /**
         * Decodes a pickCardResultType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns pickCardResultType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): pickCardResultType;

        /**
         * Verifies a pickCardResultType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a pickCardResultType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns pickCardResultType
         */
        public static fromObject(object: { [k: string]: any }): pickCardResultType;

        /**
         * Creates a plain object from a pickCardResultType message. Also converts values to other types if specified.
         * @param message pickCardResultType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pickCardResultType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this pickCardResultType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace pickCardResultType {

        /** Properties of a cardCoinType. */
        interface IcardCoinType {

            /** cardCoinType card */
            card: number;

            /** cardCoinType goldReward */
            goldReward: (number | Long);
        }

        /** Represents a cardCoinType. */
        class cardCoinType implements IcardCoinType {

            /**
             * Constructs a new cardCoinType.
             * @param [properties] Properties to set
             */
            constructor(properties?: pickCardResultType.IcardCoinType);

            /** cardCoinType card. */
            public card: number;

            /** cardCoinType goldReward. */
            public goldReward: (number | Long);

            /**
             * Creates a new cardCoinType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns cardCoinType instance
             */
            public static create(properties?: pickCardResultType.IcardCoinType): pickCardResultType.cardCoinType;

            /**
             * Encodes the specified cardCoinType message. Does not implicitly {@link pickCardResultType.cardCoinType.verify|verify} messages.
             * @param message cardCoinType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pickCardResultType.IcardCoinType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified cardCoinType message, length delimited. Does not implicitly {@link pickCardResultType.cardCoinType.verify|verify} messages.
             * @param message cardCoinType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pickCardResultType.IcardCoinType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a cardCoinType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns cardCoinType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): pickCardResultType.cardCoinType;

            /**
             * Decodes a cardCoinType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns cardCoinType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): pickCardResultType.cardCoinType;

            /**
             * Verifies a cardCoinType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a cardCoinType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns cardCoinType
             */
            public static fromObject(object: { [k: string]: any }): pickCardResultType.cardCoinType;

            /**
             * Creates a plain object from a cardCoinType message. Also converts values to other types if specified.
             * @param message cardCoinType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pickCardResultType.cardCoinType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this cardCoinType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a tenantRewardType. */
    export class tenantRewardType implements ItenantRewardType {

        /**
         * Constructs a new tenantRewardType.
         * @param [properties] Properties to set
         */
        constructor(properties?: ItenantRewardType);

        /** tenantRewardType tid. */
        public tid: number;

        /** tenantRewardType rewardGold. */
        public rewardGold: number;

        /**
         * Creates a new tenantRewardType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns tenantRewardType instance
         */
        public static create(properties?: ItenantRewardType): tenantRewardType;

        /**
         * Encodes the specified tenantRewardType message. Does not implicitly {@link tenantRewardType.verify|verify} messages.
         * @param message tenantRewardType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ItenantRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified tenantRewardType message, length delimited. Does not implicitly {@link tenantRewardType.verify|verify} messages.
         * @param message tenantRewardType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ItenantRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a tenantRewardType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns tenantRewardType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): tenantRewardType;

        /**
         * Decodes a tenantRewardType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns tenantRewardType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): tenantRewardType;

        /**
         * Verifies a tenantRewardType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a tenantRewardType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns tenantRewardType
         */
        public static fromObject(object: { [k: string]: any }): tenantRewardType;

        /**
         * Creates a plain object from a tenantRewardType message. Also converts values to other types if specified.
         * @param message tenantRewardType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tenantRewardType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this tenantRewardType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents an elemTranType. */
    export class elemTranType implements IelemTranType {

        /**
         * Constructs a new elemTranType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IelemTranType);

        /** elemTranType elem. */
        public elem: number;

        /** elemTranType tranElem. */
        public tranElem: number;

        /**
         * Creates a new elemTranType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns elemTranType instance
         */
        public static create(properties?: IelemTranType): elemTranType;

        /**
         * Encodes the specified elemTranType message. Does not implicitly {@link elemTranType.verify|verify} messages.
         * @param message elemTranType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IelemTranType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified elemTranType message, length delimited. Does not implicitly {@link elemTranType.verify|verify} messages.
         * @param message elemTranType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IelemTranType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an elemTranType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns elemTranType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): elemTranType;

        /**
         * Decodes an elemTranType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns elemTranType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): elemTranType;

        /**
         * Verifies an elemTranType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates an elemTranType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns elemTranType
         */
        public static fromObject(object: { [k: string]: any }): elemTranType;

        /**
         * Creates a plain object from an elemTranType message. Also converts values to other types if specified.
         * @param message elemTranType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: elemTranType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this elemTranType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a lgRewardType. */
    export class lgRewardType implements IlgRewardType {

        /**
         * Constructs a new lgRewardType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IlgRewardType);

        /** lgRewardType rewardType. */
        public rewardType: number;

        /** lgRewardType number. */
        public number: (number | Long);

        /**
         * Creates a new lgRewardType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns lgRewardType instance
         */
        public static create(properties?: IlgRewardType): lgRewardType;

        /**
         * Encodes the specified lgRewardType message. Does not implicitly {@link lgRewardType.verify|verify} messages.
         * @param message lgRewardType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IlgRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified lgRewardType message, length delimited. Does not implicitly {@link lgRewardType.verify|verify} messages.
         * @param message lgRewardType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IlgRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a lgRewardType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns lgRewardType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): lgRewardType;

        /**
         * Decodes a lgRewardType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns lgRewardType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): lgRewardType;

        /**
         * Verifies a lgRewardType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a lgRewardType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns lgRewardType
         */
        public static fromObject(object: { [k: string]: any }): lgRewardType;

        /**
         * Creates a plain object from a lgRewardType message. Also converts values to other types if specified.
         * @param message lgRewardType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: lgRewardType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this lgRewardType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a lgOther2Type. */
    export class lgOther2Type implements IlgOther2Type {

        /**
         * Constructs a new lgOther2Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: IlgOther2Type);

        /** lgOther2Type key. */
        public key: number;

        /** lgOther2Type result. */
        public result: lgOther2Type.IlgOther2ResultType[];

        /**
         * Creates a new lgOther2Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns lgOther2Type instance
         */
        public static create(properties?: IlgOther2Type): lgOther2Type;

        /**
         * Encodes the specified lgOther2Type message. Does not implicitly {@link lgOther2Type.verify|verify} messages.
         * @param message lgOther2Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IlgOther2Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified lgOther2Type message, length delimited. Does not implicitly {@link lgOther2Type.verify|verify} messages.
         * @param message lgOther2Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IlgOther2Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a lgOther2Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns lgOther2Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): lgOther2Type;

        /**
         * Decodes a lgOther2Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns lgOther2Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): lgOther2Type;

        /**
         * Verifies a lgOther2Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a lgOther2Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns lgOther2Type
         */
        public static fromObject(object: { [k: string]: any }): lgOther2Type;

        /**
         * Creates a plain object from a lgOther2Type message. Also converts values to other types if specified.
         * @param message lgOther2Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: lgOther2Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this lgOther2Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace lgOther2Type {

        /** Properties of a lgOther2ResultType. */
        interface IlgOther2ResultType {

            /** lgOther2ResultType result1 */
            result1: number;

            /** lgOther2ResultType result2 */
            result2: number;

            /** lgOther2ResultType result3 */
            result3: number;

            /** lgOther2ResultType result4 */
            result4: number;

            /** lgOther2ResultType result5 */
            result5: number;
        }

        /** Represents a lgOther2ResultType. */
        class lgOther2ResultType implements IlgOther2ResultType {

            /**
             * Constructs a new lgOther2ResultType.
             * @param [properties] Properties to set
             */
            constructor(properties?: lgOther2Type.IlgOther2ResultType);

            /** lgOther2ResultType result1. */
            public result1: number;

            /** lgOther2ResultType result2. */
            public result2: number;

            /** lgOther2ResultType result3. */
            public result3: number;

            /** lgOther2ResultType result4. */
            public result4: number;

            /** lgOther2ResultType result5. */
            public result5: number;

            /**
             * Creates a new lgOther2ResultType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns lgOther2ResultType instance
             */
            public static create(properties?: lgOther2Type.IlgOther2ResultType): lgOther2Type.lgOther2ResultType;

            /**
             * Encodes the specified lgOther2ResultType message. Does not implicitly {@link lgOther2Type.lgOther2ResultType.verify|verify} messages.
             * @param message lgOther2ResultType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: lgOther2Type.IlgOther2ResultType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified lgOther2ResultType message, length delimited. Does not implicitly {@link lgOther2Type.lgOther2ResultType.verify|verify} messages.
             * @param message lgOther2ResultType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: lgOther2Type.IlgOther2ResultType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a lgOther2ResultType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns lgOther2ResultType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): lgOther2Type.lgOther2ResultType;

            /**
             * Decodes a lgOther2ResultType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns lgOther2ResultType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): lgOther2Type.lgOther2ResultType;

            /**
             * Verifies a lgOther2ResultType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a lgOther2ResultType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns lgOther2ResultType
             */
            public static fromObject(object: { [k: string]: any }): lgOther2Type.lgOther2ResultType;

            /**
             * Creates a plain object from a lgOther2ResultType message. Also converts values to other types if specified.
             * @param message lgOther2ResultType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: lgOther2Type.lgOther2ResultType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this lgOther2ResultType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents an otherType. */
    export class otherType implements IotherType {

        /**
         * Constructs a new otherType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IotherType);

        /** otherType key. */
        public key: number;

        /** otherType result3. */
        public result3: IresultType[];

        /**
         * Creates a new otherType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns otherType instance
         */
        public static create(properties?: IotherType): otherType;

        /**
         * Encodes the specified otherType message. Does not implicitly {@link otherType.verify|verify} messages.
         * @param message otherType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IotherType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified otherType message, length delimited. Does not implicitly {@link otherType.verify|verify} messages.
         * @param message otherType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IotherType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an otherType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns otherType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): otherType;

        /**
         * Decodes an otherType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns otherType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): otherType;

        /**
         * Verifies an otherType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates an otherType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns otherType
         */
        public static fromObject(object: { [k: string]: any }): otherType;

        /**
         * Creates a plain object from an otherType message. Also converts values to other types if specified.
         * @param message otherType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: otherType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this otherType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a resultType. */
    export class resultType implements IresultType {

        /**
         * Constructs a new resultType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IresultType);

        /** resultType number1. */
        public number1: (number | Long);

        /** resultType number2. */
        public number2: (number | Long);

        /**
         * Creates a new resultType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns resultType instance
         */
        public static create(properties?: IresultType): resultType;

        /**
         * Encodes the specified resultType message. Does not implicitly {@link resultType.verify|verify} messages.
         * @param message resultType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IresultType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified resultType message, length delimited. Does not implicitly {@link resultType.verify|verify} messages.
         * @param message resultType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IresultType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a resultType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns resultType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): resultType;

        /**
         * Decodes a resultType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns resultType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): resultType;

        /**
         * Verifies a resultType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a resultType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns resultType
         */
        public static fromObject(object: { [k: string]: any }): resultType;

        /**
         * Creates a plain object from a resultType message. Also converts values to other types if specified.
         * @param message resultType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: resultType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this resultType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents an allFreeSpinTimesType. */
    export class allFreeSpinTimesType implements IallFreeSpinTimesType {

        /**
         * Constructs a new allFreeSpinTimesType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IallFreeSpinTimesType);

        /** allFreeSpinTimesType state. */
        public state: number;

        /** allFreeSpinTimesType subState. */
        public subState: number;

        /** allFreeSpinTimesType times. */
        public times: number;

        /** allFreeSpinTimesType sumTimes. */
        public sumTimes: number;

        /**
         * Creates a new allFreeSpinTimesType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns allFreeSpinTimesType instance
         */
        public static create(properties?: IallFreeSpinTimesType): allFreeSpinTimesType;

        /**
         * Encodes the specified allFreeSpinTimesType message. Does not implicitly {@link allFreeSpinTimesType.verify|verify} messages.
         * @param message allFreeSpinTimesType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IallFreeSpinTimesType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified allFreeSpinTimesType message, length delimited. Does not implicitly {@link allFreeSpinTimesType.verify|verify} messages.
         * @param message allFreeSpinTimesType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IallFreeSpinTimesType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an allFreeSpinTimesType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns allFreeSpinTimesType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): allFreeSpinTimesType;

        /**
         * Decodes an allFreeSpinTimesType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns allFreeSpinTimesType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): allFreeSpinTimesType;

        /**
         * Verifies an allFreeSpinTimesType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates an allFreeSpinTimesType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns allFreeSpinTimesType
         */
        public static fromObject(object: { [k: string]: any }): allFreeSpinTimesType;

        /**
         * Creates a plain object from an allFreeSpinTimesType message. Also converts values to other types if specified.
         * @param message allFreeSpinTimesType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: allFreeSpinTimesType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this allFreeSpinTimesType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a featuredGameplayType. */
    export class featuredGameplayType implements IfeaturedGameplayType {

        /**
         * Constructs a new featuredGameplayType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IfeaturedGameplayType);

        /** featuredGameplayType type. */
        public type: number;

        /** featuredGameplayType cost. */
        public cost: (number | Long);

        /** featuredGameplayType indexList. */
        public indexList: number[];

        /**
         * Creates a new featuredGameplayType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns featuredGameplayType instance
         */
        public static create(properties?: IfeaturedGameplayType): featuredGameplayType;

        /**
         * Encodes the specified featuredGameplayType message. Does not implicitly {@link featuredGameplayType.verify|verify} messages.
         * @param message featuredGameplayType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IfeaturedGameplayType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified featuredGameplayType message, length delimited. Does not implicitly {@link featuredGameplayType.verify|verify} messages.
         * @param message featuredGameplayType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IfeaturedGameplayType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a featuredGameplayType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns featuredGameplayType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): featuredGameplayType;

        /**
         * Decodes a featuredGameplayType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns featuredGameplayType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): featuredGameplayType;

        /**
         * Verifies a featuredGameplayType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a featuredGameplayType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns featuredGameplayType
         */
        public static fromObject(object: { [k: string]: any }): featuredGameplayType;

        /**
         * Creates a plain object from a featuredGameplayType message. Also converts values to other types if specified.
         * @param message featuredGameplayType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: featuredGameplayType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this featuredGameplayType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a numMultiType. */
    export class numMultiType implements InumMultiType {

        /**
         * Constructs a new numMultiType.
         * @param [properties] Properties to set
         */
        constructor(properties?: InumMultiType);

        /** numMultiType num. */
        public num: number;

        /** numMultiType multi. */
        public multi: (number | Long);

        /**
         * Creates a new numMultiType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns numMultiType instance
         */
        public static create(properties?: InumMultiType): numMultiType;

        /**
         * Encodes the specified numMultiType message. Does not implicitly {@link numMultiType.verify|verify} messages.
         * @param message numMultiType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: InumMultiType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified numMultiType message, length delimited. Does not implicitly {@link numMultiType.verify|verify} messages.
         * @param message numMultiType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: InumMultiType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a numMultiType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns numMultiType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): numMultiType;

        /**
         * Decodes a numMultiType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns numMultiType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): numMultiType;

        /**
         * Verifies a numMultiType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a numMultiType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns numMultiType
         */
        public static fromObject(object: { [k: string]: any }): numMultiType;

        /**
         * Creates a plain object from a numMultiType message. Also converts values to other types if specified.
         * @param message numMultiType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: numMultiType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this numMultiType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** 请求房间配置信息 */
    export class roomInfoReq implements IroomInfoReq {

        /**
         * Constructs a new roomInfoReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: IroomInfoReq);

        /**
         * Creates a new roomInfoReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns roomInfoReq instance
         */
        public static create(properties?: IroomInfoReq): roomInfoReq;

        /**
         * Encodes the specified roomInfoReq message. Does not implicitly {@link roomInfoReq.verify|verify} messages.
         * @param message roomInfoReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IroomInfoReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified roomInfoReq message, length delimited. Does not implicitly {@link roomInfoReq.verify|verify} messages.
         * @param message roomInfoReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IroomInfoReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a roomInfoReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns roomInfoReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): roomInfoReq;

        /**
         * Decodes a roomInfoReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns roomInfoReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): roomInfoReq;

        /**
         * Verifies a roomInfoReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a roomInfoReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns roomInfoReq
         */
        public static fromObject(object: { [k: string]: any }): roomInfoReq;

        /**
         * Creates a plain object from a roomInfoReq message. Also converts values to other types if specified.
         * @param message roomInfoReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: roomInfoReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this roomInfoReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** 房间配置信息列表返回 */
    export class roomInfoResp implements IroomInfoResp {

        /**
         * Constructs a new roomInfoResp.
         * @param [properties] Properties to set
         */
        constructor(properties?: IroomInfoResp);

        /** roomInfoResp roomList. */
        public roomList: IroomInfo[];

        /**
         * Creates a new roomInfoResp instance using the specified properties.
         * @param [properties] Properties to set
         * @returns roomInfoResp instance
         */
        public static create(properties?: IroomInfoResp): roomInfoResp;

        /**
         * Encodes the specified roomInfoResp message. Does not implicitly {@link roomInfoResp.verify|verify} messages.
         * @param message roomInfoResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IroomInfoResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified roomInfoResp message, length delimited. Does not implicitly {@link roomInfoResp.verify|verify} messages.
         * @param message roomInfoResp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IroomInfoResp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a roomInfoResp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns roomInfoResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): roomInfoResp;

        /**
         * Decodes a roomInfoResp message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns roomInfoResp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): roomInfoResp;

        /**
         * Verifies a roomInfoResp message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a roomInfoResp message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns roomInfoResp
         */
        public static fromObject(object: { [k: string]: any }): roomInfoResp;

        /**
         * Creates a plain object from a roomInfoResp message. Also converts values to other types if specified.
         * @param message roomInfoResp
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: roomInfoResp, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this roomInfoResp to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** 房间信息 */
    export class roomInfo implements IroomInfo {

        /**
         * Constructs a new roomInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: IroomInfo);

        /** roomInfo roomId. */
        public roomId: number;

        /** roomInfo isVacantRoom. */
        public isVacantRoom: boolean;

        /**
         * Creates a new roomInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns roomInfo instance
         */
        public static create(properties?: IroomInfo): roomInfo;

        /**
         * Encodes the specified roomInfo message. Does not implicitly {@link roomInfo.verify|verify} messages.
         * @param message roomInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IroomInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified roomInfo message, length delimited. Does not implicitly {@link roomInfo.verify|verify} messages.
         * @param message roomInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IroomInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a roomInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns roomInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): roomInfo;

        /**
         * Decodes a roomInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns roomInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): roomInfo;

        /**
         * Verifies a roomInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a roomInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns roomInfo
         */
        public static fromObject(object: { [k: string]: any }): roomInfo;

        /**
         * Creates a plain object from a roomInfo message. Also converts values to other types if specified.
         * @param message roomInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: roomInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this roomInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a game0Type. */
    export class game0Type implements Igame0Type {

        /**
         * Constructs a new game0Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame0Type);

        /** game0Type date. */
        public date?: (game0Type.Idata0Type | null);

        /** game0Type update. */
        public update: game0Type.Iupdate0Type[];

        /**
         * Creates a new game0Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game0Type instance
         */
        public static create(properties?: Igame0Type): game0Type;

        /**
         * Encodes the specified game0Type message. Does not implicitly {@link game0Type.verify|verify} messages.
         * @param message game0Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame0Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game0Type message, length delimited. Does not implicitly {@link game0Type.verify|verify} messages.
         * @param message game0Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame0Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game0Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game0Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game0Type;

        /**
         * Decodes a game0Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game0Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game0Type;

        /**
         * Verifies a game0Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game0Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game0Type
         */
        public static fromObject(object: { [k: string]: any }): game0Type;

        /**
         * Creates a plain object from a game0Type message. Also converts values to other types if specified.
         * @param message game0Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game0Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game0Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game0Type {

        /** Properties of a data0Type. */
        interface Idata0Type {

            /** data0Type a */
            a: number;

            /** data0Type b */
            b: number;

            /** data0Type c */
            c: number;
        }

        /** Represents a data0Type. */
        class data0Type implements Idata0Type {

            /**
             * Constructs a new data0Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game0Type.Idata0Type);

            /** data0Type a. */
            public a: number;

            /** data0Type b. */
            public b: number;

            /** data0Type c. */
            public c: number;

            /**
             * Creates a new data0Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data0Type instance
             */
            public static create(properties?: game0Type.Idata0Type): game0Type.data0Type;

            /**
             * Encodes the specified data0Type message. Does not implicitly {@link game0Type.data0Type.verify|verify} messages.
             * @param message data0Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game0Type.Idata0Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data0Type message, length delimited. Does not implicitly {@link game0Type.data0Type.verify|verify} messages.
             * @param message data0Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game0Type.Idata0Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data0Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data0Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game0Type.data0Type;

            /**
             * Decodes a data0Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data0Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game0Type.data0Type;

            /**
             * Verifies a data0Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data0Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data0Type
             */
            public static fromObject(object: { [k: string]: any }): game0Type.data0Type;

            /**
             * Creates a plain object from a data0Type message. Also converts values to other types if specified.
             * @param message data0Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game0Type.data0Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data0Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update0Type. */
        interface Iupdate0Type {

            /** update0Type index */
            index: number;

            /** update0Type a */
            a: number;

            /** update0Type b */
            b: number;
        }

        /** Represents an update0Type. */
        class update0Type implements Iupdate0Type {

            /**
             * Constructs a new update0Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game0Type.Iupdate0Type);

            /** update0Type index. */
            public index: number;

            /** update0Type a. */
            public a: number;

            /** update0Type b. */
            public b: number;

            /**
             * Creates a new update0Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update0Type instance
             */
            public static create(properties?: game0Type.Iupdate0Type): game0Type.update0Type;

            /**
             * Encodes the specified update0Type message. Does not implicitly {@link game0Type.update0Type.verify|verify} messages.
             * @param message update0Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game0Type.Iupdate0Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update0Type message, length delimited. Does not implicitly {@link game0Type.update0Type.verify|verify} messages.
             * @param message update0Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game0Type.Iupdate0Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update0Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update0Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game0Type.update0Type;

            /**
             * Decodes an update0Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update0Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game0Type.update0Type;

            /**
             * Verifies an update0Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update0Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update0Type
             */
            public static fromObject(object: { [k: string]: any }): game0Type.update0Type;

            /**
             * Creates a plain object from an update0Type message. Also converts values to other types if specified.
             * @param message update0Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game0Type.update0Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update0Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game10005Type. */
    export class game10005Type implements Igame10005Type {

        /**
         * Constructs a new game10005Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame10005Type);

        /** game10005Type data. */
        public data?: (game10005Type.Idata10005Type | null);

        /** game10005Type update. */
        public update: game10005Type.Iupdate10005Type[];

        /**
         * Creates a new game10005Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game10005Type instance
         */
        public static create(properties?: Igame10005Type): game10005Type;

        /**
         * Encodes the specified game10005Type message. Does not implicitly {@link game10005Type.verify|verify} messages.
         * @param message game10005Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame10005Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game10005Type message, length delimited. Does not implicitly {@link game10005Type.verify|verify} messages.
         * @param message game10005Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame10005Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game10005Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game10005Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10005Type;

        /**
         * Decodes a game10005Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game10005Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10005Type;

        /**
         * Verifies a game10005Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game10005Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game10005Type
         */
        public static fromObject(object: { [k: string]: any }): game10005Type;

        /**
         * Creates a plain object from a game10005Type message. Also converts values to other types if specified.
         * @param message game10005Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game10005Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game10005Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game10005Type {

        /** Properties of a data10005Type. */
        interface Idata10005Type {

            /** data10005Type multipleList */
            multipleList?: (game10005Type.Imultiple10005Type[] | null);

            /** data10005Type taskList */
            taskList?: (game10005Type.Itask10005Type[] | null);

            /** data10005Type multipleBeforeCoin */
            multipleBeforeCoin?: (number | Long | null);

            /** data10005Type multipleAfterCoin */
            multipleAfterCoin?: (number | Long | null);
        }

        /** Represents a data10005Type. */
        class data10005Type implements Idata10005Type {

            /**
             * Constructs a new data10005Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10005Type.Idata10005Type);

            /** data10005Type multipleList. */
            public multipleList: game10005Type.Imultiple10005Type[];

            /** data10005Type taskList. */
            public taskList: game10005Type.Itask10005Type[];

            /** data10005Type multipleBeforeCoin. */
            public multipleBeforeCoin: (number | Long);

            /** data10005Type multipleAfterCoin. */
            public multipleAfterCoin: (number | Long);

            /**
             * Creates a new data10005Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data10005Type instance
             */
            public static create(properties?: game10005Type.Idata10005Type): game10005Type.data10005Type;

            /**
             * Encodes the specified data10005Type message. Does not implicitly {@link game10005Type.data10005Type.verify|verify} messages.
             * @param message data10005Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10005Type.Idata10005Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data10005Type message, length delimited. Does not implicitly {@link game10005Type.data10005Type.verify|verify} messages.
             * @param message data10005Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10005Type.Idata10005Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data10005Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data10005Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10005Type.data10005Type;

            /**
             * Decodes a data10005Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data10005Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10005Type.data10005Type;

            /**
             * Verifies a data10005Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data10005Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data10005Type
             */
            public static fromObject(object: { [k: string]: any }): game10005Type.data10005Type;

            /**
             * Creates a plain object from a data10005Type message. Also converts values to other types if specified.
             * @param message data10005Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10005Type.data10005Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data10005Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update10005Type. */
        interface Iupdate10005Type {

            /** update10005Type index */
            index: number;

            /** update10005Type multipleList */
            multipleList?: (game10005Type.Imultiple10005Type[] | null);

            /** update10005Type taskList */
            taskList?: (game10005Type.Itask10005Type[] | null);

            /** update10005Type multipleBeforeCoin */
            multipleBeforeCoin?: (number | Long | null);

            /** update10005Type multipleAfterCoin */
            multipleAfterCoin?: (number | Long | null);
        }

        /** Represents an update10005Type. */
        class update10005Type implements Iupdate10005Type {

            /**
             * Constructs a new update10005Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10005Type.Iupdate10005Type);

            /** update10005Type index. */
            public index: number;

            /** update10005Type multipleList. */
            public multipleList: game10005Type.Imultiple10005Type[];

            /** update10005Type taskList. */
            public taskList: game10005Type.Itask10005Type[];

            /** update10005Type multipleBeforeCoin. */
            public multipleBeforeCoin: (number | Long);

            /** update10005Type multipleAfterCoin. */
            public multipleAfterCoin: (number | Long);

            /**
             * Creates a new update10005Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update10005Type instance
             */
            public static create(properties?: game10005Type.Iupdate10005Type): game10005Type.update10005Type;

            /**
             * Encodes the specified update10005Type message. Does not implicitly {@link game10005Type.update10005Type.verify|verify} messages.
             * @param message update10005Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10005Type.Iupdate10005Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update10005Type message, length delimited. Does not implicitly {@link game10005Type.update10005Type.verify|verify} messages.
             * @param message update10005Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10005Type.Iupdate10005Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update10005Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update10005Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10005Type.update10005Type;

            /**
             * Decodes an update10005Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update10005Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10005Type.update10005Type;

            /**
             * Verifies an update10005Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update10005Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update10005Type
             */
            public static fromObject(object: { [k: string]: any }): game10005Type.update10005Type;

            /**
             * Creates a plain object from an update10005Type message. Also converts values to other types if specified.
             * @param message update10005Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10005Type.update10005Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update10005Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a multiple10005Type. */
        interface Imultiple10005Type {

            /** multiple10005Type pos */
            pos?: (number | null);

            /** multiple10005Type multiple */
            multiple?: (number | null);
        }

        /** Represents a multiple10005Type. */
        class multiple10005Type implements Imultiple10005Type {

            /**
             * Constructs a new multiple10005Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10005Type.Imultiple10005Type);

            /** multiple10005Type pos. */
            public pos: number;

            /** multiple10005Type multiple. */
            public multiple: number;

            /**
             * Creates a new multiple10005Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns multiple10005Type instance
             */
            public static create(properties?: game10005Type.Imultiple10005Type): game10005Type.multiple10005Type;

            /**
             * Encodes the specified multiple10005Type message. Does not implicitly {@link game10005Type.multiple10005Type.verify|verify} messages.
             * @param message multiple10005Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10005Type.Imultiple10005Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified multiple10005Type message, length delimited. Does not implicitly {@link game10005Type.multiple10005Type.verify|verify} messages.
             * @param message multiple10005Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10005Type.Imultiple10005Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a multiple10005Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns multiple10005Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10005Type.multiple10005Type;

            /**
             * Decodes a multiple10005Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns multiple10005Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10005Type.multiple10005Type;

            /**
             * Verifies a multiple10005Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a multiple10005Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns multiple10005Type
             */
            public static fromObject(object: { [k: string]: any }): game10005Type.multiple10005Type;

            /**
             * Creates a plain object from a multiple10005Type message. Also converts values to other types if specified.
             * @param message multiple10005Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10005Type.multiple10005Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this multiple10005Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a task10005Type. */
        interface Itask10005Type {

            /** task10005Type taskId */
            taskId?: (number | null);

            /** task10005Type elementId */
            elementId?: (number | null);

            /** task10005Type reward */
            reward?: (number | Long | null);

            /** task10005Type maxNum */
            maxNum?: (number | null);

            /** task10005Type num */
            num?: (number | null);

            /** task10005Type taskType */
            taskType?: (number | null);
        }

        /** Represents a task10005Type. */
        class task10005Type implements Itask10005Type {

            /**
             * Constructs a new task10005Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10005Type.Itask10005Type);

            /** task10005Type taskId. */
            public taskId: number;

            /** task10005Type elementId. */
            public elementId: number;

            /** task10005Type reward. */
            public reward: (number | Long);

            /** task10005Type maxNum. */
            public maxNum: number;

            /** task10005Type num. */
            public num: number;

            /** task10005Type taskType. */
            public taskType: number;

            /**
             * Creates a new task10005Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns task10005Type instance
             */
            public static create(properties?: game10005Type.Itask10005Type): game10005Type.task10005Type;

            /**
             * Encodes the specified task10005Type message. Does not implicitly {@link game10005Type.task10005Type.verify|verify} messages.
             * @param message task10005Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10005Type.Itask10005Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified task10005Type message, length delimited. Does not implicitly {@link game10005Type.task10005Type.verify|verify} messages.
             * @param message task10005Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10005Type.Itask10005Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a task10005Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns task10005Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10005Type.task10005Type;

            /**
             * Decodes a task10005Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns task10005Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10005Type.task10005Type;

            /**
             * Verifies a task10005Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a task10005Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns task10005Type
             */
            public static fromObject(object: { [k: string]: any }): game10005Type.task10005Type;

            /**
             * Creates a plain object from a task10005Type message. Also converts values to other types if specified.
             * @param message task10005Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10005Type.task10005Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this task10005Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game10011Type. */
    export class game10011Type implements Igame10011Type {

        /**
         * Constructs a new game10011Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame10011Type);

        /** game10011Type data. */
        public data?: (game10011Type.Idata10011Type | null);

        /**
         * Creates a new game10011Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game10011Type instance
         */
        public static create(properties?: Igame10011Type): game10011Type;

        /**
         * Encodes the specified game10011Type message. Does not implicitly {@link game10011Type.verify|verify} messages.
         * @param message game10011Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame10011Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game10011Type message, length delimited. Does not implicitly {@link game10011Type.verify|verify} messages.
         * @param message game10011Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame10011Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game10011Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game10011Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10011Type;

        /**
         * Decodes a game10011Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game10011Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10011Type;

        /**
         * Verifies a game10011Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game10011Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game10011Type
         */
        public static fromObject(object: { [k: string]: any }): game10011Type;

        /**
         * Creates a plain object from a game10011Type message. Also converts values to other types if specified.
         * @param message game10011Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game10011Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game10011Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game10011Type {

        /** Properties of a data10011Type. */
        interface Idata10011Type {

            /** data10011Type normalMark */
            normalMark?: (game10011Type.Imark10011Type | null);

            /** data10011Type freeMark */
            freeMark?: (game10011Type.Imark10011Type | null);

            /** data10011Type markReplace */
            markReplace?: (game10011Type.Imark10011Type | null);
        }

        /** Represents a data10011Type. */
        class data10011Type implements Idata10011Type {

            /**
             * Constructs a new data10011Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10011Type.Idata10011Type);

            /** data10011Type normalMark. */
            public normalMark?: (game10011Type.Imark10011Type | null);

            /** data10011Type freeMark. */
            public freeMark?: (game10011Type.Imark10011Type | null);

            /** data10011Type markReplace. */
            public markReplace?: (game10011Type.Imark10011Type | null);

            /**
             * Creates a new data10011Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data10011Type instance
             */
            public static create(properties?: game10011Type.Idata10011Type): game10011Type.data10011Type;

            /**
             * Encodes the specified data10011Type message. Does not implicitly {@link game10011Type.data10011Type.verify|verify} messages.
             * @param message data10011Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10011Type.Idata10011Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data10011Type message, length delimited. Does not implicitly {@link game10011Type.data10011Type.verify|verify} messages.
             * @param message data10011Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10011Type.Idata10011Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data10011Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data10011Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10011Type.data10011Type;

            /**
             * Decodes a data10011Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data10011Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10011Type.data10011Type;

            /**
             * Verifies a data10011Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data10011Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data10011Type
             */
            public static fromObject(object: { [k: string]: any }): game10011Type.data10011Type;

            /**
             * Creates a plain object from a data10011Type message. Also converts values to other types if specified.
             * @param message data10011Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10011Type.data10011Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data10011Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a mark10011Type. */
        interface Imark10011Type {

            /** mark10011Type elementId */
            elementId?: (number | null);

            /** mark10011Type posList */
            posList?: (number[] | null);

            /** mark10011Type targetRoundNum */
            targetRoundNum?: (number | null);

            /** mark10011Type roundNum */
            roundNum?: (number | null);
        }

        /** Represents a mark10011Type. */
        class mark10011Type implements Imark10011Type {

            /**
             * Constructs a new mark10011Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10011Type.Imark10011Type);

            /** mark10011Type elementId. */
            public elementId: number;

            /** mark10011Type posList. */
            public posList: number[];

            /** mark10011Type targetRoundNum. */
            public targetRoundNum: number;

            /** mark10011Type roundNum. */
            public roundNum: number;

            /**
             * Creates a new mark10011Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns mark10011Type instance
             */
            public static create(properties?: game10011Type.Imark10011Type): game10011Type.mark10011Type;

            /**
             * Encodes the specified mark10011Type message. Does not implicitly {@link game10011Type.mark10011Type.verify|verify} messages.
             * @param message mark10011Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10011Type.Imark10011Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified mark10011Type message, length delimited. Does not implicitly {@link game10011Type.mark10011Type.verify|verify} messages.
             * @param message mark10011Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10011Type.Imark10011Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a mark10011Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns mark10011Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10011Type.mark10011Type;

            /**
             * Decodes a mark10011Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns mark10011Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10011Type.mark10011Type;

            /**
             * Verifies a mark10011Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a mark10011Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns mark10011Type
             */
            public static fromObject(object: { [k: string]: any }): game10011Type.mark10011Type;

            /**
             * Creates a plain object from a mark10011Type message. Also converts values to other types if specified.
             * @param message mark10011Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10011Type.mark10011Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this mark10011Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game10012Type. */
    export class game10012Type implements Igame10012Type {

        /**
         * Constructs a new game10012Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame10012Type);

        /** game10012Type data. */
        public data?: (game10012Type.Idata10012Type | null);

        /** game10012Type update. */
        public update: game10012Type.Iupdate10012Type[];

        /**
         * Creates a new game10012Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game10012Type instance
         */
        public static create(properties?: Igame10012Type): game10012Type;

        /**
         * Encodes the specified game10012Type message. Does not implicitly {@link game10012Type.verify|verify} messages.
         * @param message game10012Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame10012Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game10012Type message, length delimited. Does not implicitly {@link game10012Type.verify|verify} messages.
         * @param message game10012Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame10012Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game10012Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game10012Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10012Type;

        /**
         * Decodes a game10012Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game10012Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10012Type;

        /**
         * Verifies a game10012Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game10012Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game10012Type
         */
        public static fromObject(object: { [k: string]: any }): game10012Type;

        /**
         * Creates a plain object from a game10012Type message. Also converts values to other types if specified.
         * @param message game10012Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game10012Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game10012Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game10012Type {

        /** Properties of a data10012Type. */
        interface Idata10012Type {

            /** data10012Type bonusRoll */
            bonusRoll?: (number[] | null);

            /** data10012Type rewardList */
            rewardList?: (game10012Type.IbonusRewardType[] | null);

            /** data10012Type allBonusCoin */
            allBonusCoin?: (number | Long | null);
        }

        /** Represents a data10012Type. */
        class data10012Type implements Idata10012Type {

            /**
             * Constructs a new data10012Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10012Type.Idata10012Type);

            /** data10012Type bonusRoll. */
            public bonusRoll: number[];

            /** data10012Type rewardList. */
            public rewardList: game10012Type.IbonusRewardType[];

            /** data10012Type allBonusCoin. */
            public allBonusCoin: (number | Long);

            /**
             * Creates a new data10012Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data10012Type instance
             */
            public static create(properties?: game10012Type.Idata10012Type): game10012Type.data10012Type;

            /**
             * Encodes the specified data10012Type message. Does not implicitly {@link game10012Type.data10012Type.verify|verify} messages.
             * @param message data10012Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10012Type.Idata10012Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data10012Type message, length delimited. Does not implicitly {@link game10012Type.data10012Type.verify|verify} messages.
             * @param message data10012Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10012Type.Idata10012Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data10012Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data10012Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10012Type.data10012Type;

            /**
             * Decodes a data10012Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data10012Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10012Type.data10012Type;

            /**
             * Verifies a data10012Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data10012Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data10012Type
             */
            public static fromObject(object: { [k: string]: any }): game10012Type.data10012Type;

            /**
             * Creates a plain object from a data10012Type message. Also converts values to other types if specified.
             * @param message data10012Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10012Type.data10012Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data10012Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update10012Type. */
        interface Iupdate10012Type {

            /** update10012Type index */
            index: number;

            /** update10012Type bonusRoll */
            bonusRoll?: (number[] | null);

            /** update10012Type rewardList */
            rewardList?: (game10012Type.IbonusRewardType[] | null);

            /** update10012Type allBonusCoin */
            allBonusCoin?: (number | Long | null);
        }

        /** Represents an update10012Type. */
        class update10012Type implements Iupdate10012Type {

            /**
             * Constructs a new update10012Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10012Type.Iupdate10012Type);

            /** update10012Type index. */
            public index: number;

            /** update10012Type bonusRoll. */
            public bonusRoll: number[];

            /** update10012Type rewardList. */
            public rewardList: game10012Type.IbonusRewardType[];

            /** update10012Type allBonusCoin. */
            public allBonusCoin: (number | Long);

            /**
             * Creates a new update10012Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update10012Type instance
             */
            public static create(properties?: game10012Type.Iupdate10012Type): game10012Type.update10012Type;

            /**
             * Encodes the specified update10012Type message. Does not implicitly {@link game10012Type.update10012Type.verify|verify} messages.
             * @param message update10012Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10012Type.Iupdate10012Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update10012Type message, length delimited. Does not implicitly {@link game10012Type.update10012Type.verify|verify} messages.
             * @param message update10012Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10012Type.Iupdate10012Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update10012Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update10012Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10012Type.update10012Type;

            /**
             * Decodes an update10012Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update10012Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10012Type.update10012Type;

            /**
             * Verifies an update10012Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update10012Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update10012Type
             */
            public static fromObject(object: { [k: string]: any }): game10012Type.update10012Type;

            /**
             * Creates a plain object from an update10012Type message. Also converts values to other types if specified.
             * @param message update10012Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10012Type.update10012Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update10012Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a bonusRewardType. */
        interface IbonusRewardType {

            /** bonusRewardType rewardIndex */
            rewardIndex: number;

            /** bonusRewardType bonus */
            bonus: number;

            /** bonusRewardType changePos */
            changePos?: (number[] | null);

            /** bonusRewardType gridChanged */
            gridChanged?: (number[] | null);
        }

        /** Represents a bonusRewardType. */
        class bonusRewardType implements IbonusRewardType {

            /**
             * Constructs a new bonusRewardType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10012Type.IbonusRewardType);

            /** bonusRewardType rewardIndex. */
            public rewardIndex: number;

            /** bonusRewardType bonus. */
            public bonus: number;

            /** bonusRewardType changePos. */
            public changePos: number[];

            /** bonusRewardType gridChanged. */
            public gridChanged: number[];

            /**
             * Creates a new bonusRewardType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns bonusRewardType instance
             */
            public static create(properties?: game10012Type.IbonusRewardType): game10012Type.bonusRewardType;

            /**
             * Encodes the specified bonusRewardType message. Does not implicitly {@link game10012Type.bonusRewardType.verify|verify} messages.
             * @param message bonusRewardType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10012Type.IbonusRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified bonusRewardType message, length delimited. Does not implicitly {@link game10012Type.bonusRewardType.verify|verify} messages.
             * @param message bonusRewardType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10012Type.IbonusRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a bonusRewardType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns bonusRewardType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10012Type.bonusRewardType;

            /**
             * Decodes a bonusRewardType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns bonusRewardType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10012Type.bonusRewardType;

            /**
             * Verifies a bonusRewardType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a bonusRewardType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns bonusRewardType
             */
            public static fromObject(object: { [k: string]: any }): game10012Type.bonusRewardType;

            /**
             * Creates a plain object from a bonusRewardType message. Also converts values to other types if specified.
             * @param message bonusRewardType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10012Type.bonusRewardType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this bonusRewardType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game10014Type. */
    export class game10014Type implements Igame10014Type {

        /**
         * Constructs a new game10014Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame10014Type);

        /** game10014Type data. */
        public data?: (game10014Type.Idata10014Type | null);

        /**
         * Creates a new game10014Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game10014Type instance
         */
        public static create(properties?: Igame10014Type): game10014Type;

        /**
         * Encodes the specified game10014Type message. Does not implicitly {@link game10014Type.verify|verify} messages.
         * @param message game10014Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame10014Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game10014Type message, length delimited. Does not implicitly {@link game10014Type.verify|verify} messages.
         * @param message game10014Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame10014Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game10014Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game10014Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10014Type;

        /**
         * Decodes a game10014Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game10014Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10014Type;

        /**
         * Verifies a game10014Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game10014Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game10014Type
         */
        public static fromObject(object: { [k: string]: any }): game10014Type;

        /**
         * Creates a plain object from a game10014Type message. Also converts values to other types if specified.
         * @param message game10014Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game10014Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game10014Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game10014Type {

        /** Properties of a data10014Type. */
        interface Idata10014Type {

            /** data10014Type taskList */
            taskList?: (game10014Type.Itask10014Type[] | null);

            /** data10014Type averageCost */
            averageCost: (number | Long);

            /** data10014Type collectElemGrid */
            collectElemGrid?: (IcollectElemGridType[] | null);

            /** data10014Type gridGoldList */
            gridGoldList?: (IgridGoldType[] | null);

            /** data10014Type rewardGrid */
            rewardGrid?: (IgridGoldType[] | null);

            /** data10014Type choosePosList */
            choosePosList?: ((number | Long)[] | null);

            /** data10014Type changPosList */
            changPosList?: ((number | Long)[] | null);

            /** data10014Type posRewardList */
            posRewardList?: (game10014Type.IposRewardType[] | null);
        }

        /** Represents a data10014Type. */
        class data10014Type implements Idata10014Type {

            /**
             * Constructs a new data10014Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10014Type.Idata10014Type);

            /** data10014Type taskList. */
            public taskList: game10014Type.Itask10014Type[];

            /** data10014Type averageCost. */
            public averageCost: (number | Long);

            /** data10014Type collectElemGrid. */
            public collectElemGrid: IcollectElemGridType[];

            /** data10014Type gridGoldList. */
            public gridGoldList: IgridGoldType[];

            /** data10014Type rewardGrid. */
            public rewardGrid: IgridGoldType[];

            /** data10014Type choosePosList. */
            public choosePosList: (number | Long)[];

            /** data10014Type changPosList. */
            public changPosList: (number | Long)[];

            /** data10014Type posRewardList. */
            public posRewardList: game10014Type.IposRewardType[];

            /**
             * Creates a new data10014Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data10014Type instance
             */
            public static create(properties?: game10014Type.Idata10014Type): game10014Type.data10014Type;

            /**
             * Encodes the specified data10014Type message. Does not implicitly {@link game10014Type.data10014Type.verify|verify} messages.
             * @param message data10014Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10014Type.Idata10014Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data10014Type message, length delimited. Does not implicitly {@link game10014Type.data10014Type.verify|verify} messages.
             * @param message data10014Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10014Type.Idata10014Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data10014Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data10014Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10014Type.data10014Type;

            /**
             * Decodes a data10014Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data10014Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10014Type.data10014Type;

            /**
             * Verifies a data10014Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data10014Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data10014Type
             */
            public static fromObject(object: { [k: string]: any }): game10014Type.data10014Type;

            /**
             * Creates a plain object from a data10014Type message. Also converts values to other types if specified.
             * @param message data10014Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10014Type.data10014Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data10014Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a task10014Type. */
        interface Itask10014Type {

            /** task10014Type taskType */
            taskType?: (number | null);

            /** task10014Type elementId */
            elementId?: (number | null);

            /** task10014Type maxNum */
            maxNum?: (number | null);

            /** task10014Type num */
            num?: (number | null);

            /** task10014Type reward */
            reward?: (number | Long | null);

            /** task10014Type other */
            other?: (number[] | null);

            /** task10014Type contribute */
            contribute?: (number | Long | null);
        }

        /** Represents a task10014Type. */
        class task10014Type implements Itask10014Type {

            /**
             * Constructs a new task10014Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10014Type.Itask10014Type);

            /** task10014Type taskType. */
            public taskType: number;

            /** task10014Type elementId. */
            public elementId: number;

            /** task10014Type maxNum. */
            public maxNum: number;

            /** task10014Type num. */
            public num: number;

            /** task10014Type reward. */
            public reward: (number | Long);

            /** task10014Type other. */
            public other: number[];

            /** task10014Type contribute. */
            public contribute: (number | Long);

            /**
             * Creates a new task10014Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns task10014Type instance
             */
            public static create(properties?: game10014Type.Itask10014Type): game10014Type.task10014Type;

            /**
             * Encodes the specified task10014Type message. Does not implicitly {@link game10014Type.task10014Type.verify|verify} messages.
             * @param message task10014Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10014Type.Itask10014Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified task10014Type message, length delimited. Does not implicitly {@link game10014Type.task10014Type.verify|verify} messages.
             * @param message task10014Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10014Type.Itask10014Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a task10014Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns task10014Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10014Type.task10014Type;

            /**
             * Decodes a task10014Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns task10014Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10014Type.task10014Type;

            /**
             * Verifies a task10014Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a task10014Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns task10014Type
             */
            public static fromObject(object: { [k: string]: any }): game10014Type.task10014Type;

            /**
             * Creates a plain object from a task10014Type message. Also converts values to other types if specified.
             * @param message task10014Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10014Type.task10014Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this task10014Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a posRewardType. */
        interface IposRewardType {

            /** posRewardType pos */
            pos: number;

            /** posRewardType reward */
            reward: (number | Long);
        }

        /** Represents a posRewardType. */
        class posRewardType implements IposRewardType {

            /**
             * Constructs a new posRewardType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10014Type.IposRewardType);

            /** posRewardType pos. */
            public pos: number;

            /** posRewardType reward. */
            public reward: (number | Long);

            /**
             * Creates a new posRewardType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns posRewardType instance
             */
            public static create(properties?: game10014Type.IposRewardType): game10014Type.posRewardType;

            /**
             * Encodes the specified posRewardType message. Does not implicitly {@link game10014Type.posRewardType.verify|verify} messages.
             * @param message posRewardType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10014Type.IposRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified posRewardType message, length delimited. Does not implicitly {@link game10014Type.posRewardType.verify|verify} messages.
             * @param message posRewardType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10014Type.IposRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a posRewardType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns posRewardType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10014Type.posRewardType;

            /**
             * Decodes a posRewardType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns posRewardType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10014Type.posRewardType;

            /**
             * Verifies a posRewardType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a posRewardType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns posRewardType
             */
            public static fromObject(object: { [k: string]: any }): game10014Type.posRewardType;

            /**
             * Creates a plain object from a posRewardType message. Also converts values to other types if specified.
             * @param message posRewardType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10014Type.posRewardType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this posRewardType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a collectElemGridType. */
    export class collectElemGridType implements IcollectElemGridType {

        /**
         * Constructs a new collectElemGridType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IcollectElemGridType);

        /** collectElemGridType pos. */
        public pos: number;

        /** collectElemGridType elem. */
        public elem: number;

        /**
         * Creates a new collectElemGridType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns collectElemGridType instance
         */
        public static create(properties?: IcollectElemGridType): collectElemGridType;

        /**
         * Encodes the specified collectElemGridType message. Does not implicitly {@link collectElemGridType.verify|verify} messages.
         * @param message collectElemGridType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IcollectElemGridType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified collectElemGridType message, length delimited. Does not implicitly {@link collectElemGridType.verify|verify} messages.
         * @param message collectElemGridType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IcollectElemGridType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a collectElemGridType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns collectElemGridType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): collectElemGridType;

        /**
         * Decodes a collectElemGridType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns collectElemGridType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): collectElemGridType;

        /**
         * Verifies a collectElemGridType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a collectElemGridType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns collectElemGridType
         */
        public static fromObject(object: { [k: string]: any }): collectElemGridType;

        /**
         * Creates a plain object from a collectElemGridType message. Also converts values to other types if specified.
         * @param message collectElemGridType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: collectElemGridType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this collectElemGridType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a gridGoldType. */
    export class gridGoldType implements IgridGoldType {

        /**
         * Constructs a new gridGoldType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IgridGoldType);

        /** gridGoldType pos. */
        public pos: number;

        /** gridGoldType gold. */
        public gold: (number | Long);

        /**
         * Creates a new gridGoldType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns gridGoldType instance
         */
        public static create(properties?: IgridGoldType): gridGoldType;

        /**
         * Encodes the specified gridGoldType message. Does not implicitly {@link gridGoldType.verify|verify} messages.
         * @param message gridGoldType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IgridGoldType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified gridGoldType message, length delimited. Does not implicitly {@link gridGoldType.verify|verify} messages.
         * @param message gridGoldType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IgridGoldType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a gridGoldType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns gridGoldType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gridGoldType;

        /**
         * Decodes a gridGoldType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns gridGoldType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gridGoldType;

        /**
         * Verifies a gridGoldType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a gridGoldType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns gridGoldType
         */
        public static fromObject(object: { [k: string]: any }): gridGoldType;

        /**
         * Creates a plain object from a gridGoldType message. Also converts values to other types if specified.
         * @param message gridGoldType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gridGoldType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this gridGoldType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a game10017Type. */
    export class game10017Type implements Igame10017Type {

        /**
         * Constructs a new game10017Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame10017Type);

        /** game10017Type data. */
        public data?: (game10017Type.Idata10017Type | null);

        /** game10017Type update. */
        public update: game10017Type.Iupdate10017Type[];

        /**
         * Creates a new game10017Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game10017Type instance
         */
        public static create(properties?: Igame10017Type): game10017Type;

        /**
         * Encodes the specified game10017Type message. Does not implicitly {@link game10017Type.verify|verify} messages.
         * @param message game10017Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame10017Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game10017Type message, length delimited. Does not implicitly {@link game10017Type.verify|verify} messages.
         * @param message game10017Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame10017Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game10017Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game10017Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10017Type;

        /**
         * Decodes a game10017Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game10017Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10017Type;

        /**
         * Verifies a game10017Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game10017Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game10017Type
         */
        public static fromObject(object: { [k: string]: any }): game10017Type;

        /**
         * Creates a plain object from a game10017Type message. Also converts values to other types if specified.
         * @param message game10017Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game10017Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game10017Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game10017Type {

        /** Properties of a data10017Type. */
        interface Idata10017Type {

            /** data10017Type resultList */
            resultList?: (game10017Type.IResultType[] | null);

            /** data10017Type fixedGophersGrid */
            fixedGophersGrid?: (game10017Type.IspecialGridType[] | null);

            /** data10017Type specElemChangeWild */
            specElemChangeWild: number;

            /** data10017Type sphinxNum */
            sphinxNum: number;

            /** data10017Type changedColumn */
            changedColumn?: (number[] | null);

            /** data10017Type crushAddRate */
            crushAddRate?: (number | null);

            /** data10017Type keyListLists */
            keyListLists?: (game10017Type.IkeyValueListType[] | null);

            /** data10017Type crushTask */
            crushTask?: (game10017Type.IcrushTaskType[] | null);

            /** data10017Type rate */
            rate?: (number | null);

            /** data10017Type multiColumnActive */
            multiColumnActive?: (boolean | null);

            /** data10017Type collectTask */
            collectTask?: (game10017Type.IcollectTaskType[] | null);

            /** data10017Type changeTagElem */
            changeTagElem?: (number | null);

            /** data10017Type spePosAccMulti */
            spePosAccMulti?: (number | null);

            /** data10017Type posRate */
            posRate?: (number[] | null);
        }

        /** Represents a data10017Type. */
        class data10017Type implements Idata10017Type {

            /**
             * Constructs a new data10017Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10017Type.Idata10017Type);

            /** data10017Type resultList. */
            public resultList: game10017Type.IResultType[];

            /** data10017Type fixedGophersGrid. */
            public fixedGophersGrid: game10017Type.IspecialGridType[];

            /** data10017Type specElemChangeWild. */
            public specElemChangeWild: number;

            /** data10017Type sphinxNum. */
            public sphinxNum: number;

            /** data10017Type changedColumn. */
            public changedColumn: number[];

            /** data10017Type crushAddRate. */
            public crushAddRate: number;

            /** data10017Type keyListLists. */
            public keyListLists: game10017Type.IkeyValueListType[];

            /** data10017Type crushTask. */
            public crushTask: game10017Type.IcrushTaskType[];

            /** data10017Type rate. */
            public rate: number;

            /** data10017Type multiColumnActive. */
            public multiColumnActive: boolean;

            /** data10017Type collectTask. */
            public collectTask: game10017Type.IcollectTaskType[];

            /** data10017Type changeTagElem. */
            public changeTagElem: number;

            /** data10017Type spePosAccMulti. */
            public spePosAccMulti: number;

            /** data10017Type posRate. */
            public posRate: number[];

            /**
             * Creates a new data10017Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data10017Type instance
             */
            public static create(properties?: game10017Type.Idata10017Type): game10017Type.data10017Type;

            /**
             * Encodes the specified data10017Type message. Does not implicitly {@link game10017Type.data10017Type.verify|verify} messages.
             * @param message data10017Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10017Type.Idata10017Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data10017Type message, length delimited. Does not implicitly {@link game10017Type.data10017Type.verify|verify} messages.
             * @param message data10017Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10017Type.Idata10017Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data10017Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data10017Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10017Type.data10017Type;

            /**
             * Decodes a data10017Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data10017Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10017Type.data10017Type;

            /**
             * Verifies a data10017Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data10017Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data10017Type
             */
            public static fromObject(object: { [k: string]: any }): game10017Type.data10017Type;

            /**
             * Creates a plain object from a data10017Type message. Also converts values to other types if specified.
             * @param message data10017Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10017Type.data10017Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data10017Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update10017Type. */
        interface Iupdate10017Type {

            /** update10017Type index */
            index: number;

            /** update10017Type resultList */
            resultList?: (game10017Type.IResultType[] | null);

            /** update10017Type fixedGophersGrid */
            fixedGophersGrid?: (game10017Type.IspecialGridType[] | null);

            /** update10017Type specElemChangeWild */
            specElemChangeWild: number;

            /** update10017Type sphinxNum */
            sphinxNum: number;

            /** update10017Type changedColumn */
            changedColumn?: (number[] | null);

            /** update10017Type crushAddRate */
            crushAddRate?: (number | null);

            /** update10017Type keyListLists */
            keyListLists?: (game10017Type.IkeyValueListType[] | null);

            /** update10017Type crushTask */
            crushTask?: (game10017Type.IcrushTaskType[] | null);

            /** update10017Type rate */
            rate?: (number | null);

            /** update10017Type multiColumnActive */
            multiColumnActive?: (boolean | null);

            /** update10017Type collectTask */
            collectTask?: (game10017Type.IcollectTaskType[] | null);

            /** update10017Type changeTagElem */
            changeTagElem?: (number | null);

            /** update10017Type spePosAccMulti */
            spePosAccMulti?: (number | null);

            /** update10017Type posRate */
            posRate?: (number[] | null);
        }

        /** Represents an update10017Type. */
        class update10017Type implements Iupdate10017Type {

            /**
             * Constructs a new update10017Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10017Type.Iupdate10017Type);

            /** update10017Type index. */
            public index: number;

            /** update10017Type resultList. */
            public resultList: game10017Type.IResultType[];

            /** update10017Type fixedGophersGrid. */
            public fixedGophersGrid: game10017Type.IspecialGridType[];

            /** update10017Type specElemChangeWild. */
            public specElemChangeWild: number;

            /** update10017Type sphinxNum. */
            public sphinxNum: number;

            /** update10017Type changedColumn. */
            public changedColumn: number[];

            /** update10017Type crushAddRate. */
            public crushAddRate: number;

            /** update10017Type keyListLists. */
            public keyListLists: game10017Type.IkeyValueListType[];

            /** update10017Type crushTask. */
            public crushTask: game10017Type.IcrushTaskType[];

            /** update10017Type rate. */
            public rate: number;

            /** update10017Type multiColumnActive. */
            public multiColumnActive: boolean;

            /** update10017Type collectTask. */
            public collectTask: game10017Type.IcollectTaskType[];

            /** update10017Type changeTagElem. */
            public changeTagElem: number;

            /** update10017Type spePosAccMulti. */
            public spePosAccMulti: number;

            /** update10017Type posRate. */
            public posRate: number[];

            /**
             * Creates a new update10017Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update10017Type instance
             */
            public static create(properties?: game10017Type.Iupdate10017Type): game10017Type.update10017Type;

            /**
             * Encodes the specified update10017Type message. Does not implicitly {@link game10017Type.update10017Type.verify|verify} messages.
             * @param message update10017Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10017Type.Iupdate10017Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update10017Type message, length delimited. Does not implicitly {@link game10017Type.update10017Type.verify|verify} messages.
             * @param message update10017Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10017Type.Iupdate10017Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update10017Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update10017Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10017Type.update10017Type;

            /**
             * Decodes an update10017Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update10017Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10017Type.update10017Type;

            /**
             * Verifies an update10017Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update10017Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update10017Type
             */
            public static fromObject(object: { [k: string]: any }): game10017Type.update10017Type;

            /**
             * Creates a plain object from an update10017Type message. Also converts values to other types if specified.
             * @param message update10017Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10017Type.update10017Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update10017Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ResultType. */
        interface IResultType {

            /** ResultType spinResult */
            spinResult: IspinResultType;

            /** ResultType removePos */
            removePos?: (number[] | null);

            /** ResultType crushRate */
            crushRate: number;

            /** ResultType specialGrid */
            specialGrid?: (game10017Type.IspecialGridType[] | null);

            /** ResultType changeSpecialGrid */
            changeSpecialGrid?: (game10017Type.IspecialGridType[] | null);

            /** ResultType balance */
            balance: (number | Long);

            /** ResultType rateElemList */
            rateElemList?: (game10017Type.IspecialGridType[] | null);

            /** ResultType rateList */
            rateList?: (number[] | null);

            /** ResultType crushMoveGrid */
            crushMoveGrid?: (game10017Type.IspecialGridType[] | null);

            /** ResultType rate */
            rate: number;

            /** ResultType changeSpecialElemGrid */
            changeSpecialElemGrid?: (game10017Type.IspecialGridType[] | null);

            /** ResultType crushFixedGophersGrid */
            crushFixedGophersGrid?: (game10017Type.IspecialGridType[] | null);

            /** ResultType throughGrid */
            throughGrid?: (game10017Type.IspecialGridType[] | null);

            /** ResultType crushTask */
            crushTask?: (game10017Type.IcrushTaskType[] | null);

            /** ResultType specialElemGridPieceList */
            specialElemGridPieceList?: (game10017Type.IspecialElemGridPieceListType[] | null);

            /** ResultType randomSpecialElemList */
            randomSpecialElemList?: (number[] | null);

            /** ResultType triggerSpecialElemGrid */
            triggerSpecialElemGrid?: (game10017Type.IspecialGridType[] | null);

            /** ResultType redBackground */
            redBackground?: ((number | Long)[] | null);

            /** ResultType prizePoolLevel */
            prizePoolLevel: number;

            /** ResultType newAddWinLine */
            newAddWinLine?: (number[] | null);

            /** ResultType crushNum */
            crushNum: number;

            /** ResultType changeBeforeCrushGrid */
            changeBeforeCrushGrid?: (IgridType[] | null);

            /** ResultType notCrushChangeGrid */
            notCrushChangeGrid?: (IgridType[] | null);

            /** ResultType list2d */
            list2d?: (game10017Type.Ilist1dType[] | null);

            /** ResultType posInfectGridList */
            posInfectGridList?: (game10017Type.IposToGridListType[] | null);

            /** ResultType splitGridData */
            splitGridData?: (game10017Type.IsplitGridDataType[] | null);

            /** ResultType elemWinRateList */
            elemWinRateList?: (number[] | null);

            /** ResultType removeMultipleList */
            removeMultipleList?: (number[] | null);

            /** ResultType elemNowRate */
            elemNowRate: number;

            /** ResultType columnWinRateList */
            columnWinRateList?: (game10017Type.IcolumnRateType[] | null);

            /** ResultType collectTask */
            collectTask?: (game10017Type.IcollectTaskType[] | null);

            /** ResultType crushChangeElemLvData */
            crushChangeElemLvData?: (game10017Type.IcrushChangeElemLvDataType | null);

            /** ResultType elemCount */
            elemCount?: (number | null);

            /** ResultType crushAndChangeAssignPos */
            crushAndChangeAssignPos?: (game10017Type.IcrushAndChangeAssignPosType[] | null);

            /** ResultType propList */
            propList?: (game10017Type.IpropListType[] | null);

            /** ResultType nextRemoveMultipleList */
            nextRemoveMultipleList?: (number[] | null);

            /** ResultType spePosActiveMulti */
            spePosActiveMulti?: (game10017Type.IspePosActiveType[] | null);

            /** ResultType columnRateAddCrushNum */
            columnRateAddCrushNum?: (game10017Type.IcolumnRateNumType[] | null);

            /** ResultType spePosAccMulti */
            spePosAccMulti?: (number | null);
        }

        /** Represents a ResultType. */
        class ResultType implements IResultType {

            /**
             * Constructs a new ResultType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10017Type.IResultType);

            /** ResultType spinResult. */
            public spinResult: IspinResultType;

            /** ResultType removePos. */
            public removePos: number[];

            /** ResultType crushRate. */
            public crushRate: number;

            /** ResultType specialGrid. */
            public specialGrid: game10017Type.IspecialGridType[];

            /** ResultType changeSpecialGrid. */
            public changeSpecialGrid: game10017Type.IspecialGridType[];

            /** ResultType balance. */
            public balance: (number | Long);

            /** ResultType rateElemList. */
            public rateElemList: game10017Type.IspecialGridType[];

            /** ResultType rateList. */
            public rateList: number[];

            /** ResultType crushMoveGrid. */
            public crushMoveGrid: game10017Type.IspecialGridType[];

            /** ResultType rate. */
            public rate: number;

            /** ResultType changeSpecialElemGrid. */
            public changeSpecialElemGrid: game10017Type.IspecialGridType[];

            /** ResultType crushFixedGophersGrid. */
            public crushFixedGophersGrid: game10017Type.IspecialGridType[];

            /** ResultType throughGrid. */
            public throughGrid: game10017Type.IspecialGridType[];

            /** ResultType crushTask. */
            public crushTask: game10017Type.IcrushTaskType[];

            /** ResultType specialElemGridPieceList. */
            public specialElemGridPieceList: game10017Type.IspecialElemGridPieceListType[];

            /** ResultType randomSpecialElemList. */
            public randomSpecialElemList: number[];

            /** ResultType triggerSpecialElemGrid. */
            public triggerSpecialElemGrid: game10017Type.IspecialGridType[];

            /** ResultType redBackground. */
            public redBackground: (number | Long)[];

            /** ResultType prizePoolLevel. */
            public prizePoolLevel: number;

            /** ResultType newAddWinLine. */
            public newAddWinLine: number[];

            /** ResultType crushNum. */
            public crushNum: number;

            /** ResultType changeBeforeCrushGrid. */
            public changeBeforeCrushGrid: IgridType[];

            /** ResultType notCrushChangeGrid. */
            public notCrushChangeGrid: IgridType[];

            /** ResultType list2d. */
            public list2d: game10017Type.Ilist1dType[];

            /** ResultType posInfectGridList. */
            public posInfectGridList: game10017Type.IposToGridListType[];

            /** ResultType splitGridData. */
            public splitGridData: game10017Type.IsplitGridDataType[];

            /** ResultType elemWinRateList. */
            public elemWinRateList: number[];

            /** ResultType removeMultipleList. */
            public removeMultipleList: number[];

            /** ResultType elemNowRate. */
            public elemNowRate: number;

            /** ResultType columnWinRateList. */
            public columnWinRateList: game10017Type.IcolumnRateType[];

            /** ResultType collectTask. */
            public collectTask: game10017Type.IcollectTaskType[];

            /** ResultType crushChangeElemLvData. */
            public crushChangeElemLvData?: (game10017Type.IcrushChangeElemLvDataType | null);

            /** ResultType elemCount. */
            public elemCount: number;

            /** ResultType crushAndChangeAssignPos. */
            public crushAndChangeAssignPos: game10017Type.IcrushAndChangeAssignPosType[];

            /** ResultType propList. */
            public propList: game10017Type.IpropListType[];

            /** ResultType nextRemoveMultipleList. */
            public nextRemoveMultipleList: number[];

            /** ResultType spePosActiveMulti. */
            public spePosActiveMulti: game10017Type.IspePosActiveType[];

            /** ResultType columnRateAddCrushNum. */
            public columnRateAddCrushNum: game10017Type.IcolumnRateNumType[];

            /** ResultType spePosAccMulti. */
            public spePosAccMulti: number;

            /**
             * Creates a new ResultType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ResultType instance
             */
            public static create(properties?: game10017Type.IResultType): game10017Type.ResultType;

            /**
             * Encodes the specified ResultType message. Does not implicitly {@link game10017Type.ResultType.verify|verify} messages.
             * @param message ResultType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10017Type.IResultType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ResultType message, length delimited. Does not implicitly {@link game10017Type.ResultType.verify|verify} messages.
             * @param message ResultType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10017Type.IResultType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResultType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ResultType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10017Type.ResultType;

            /**
             * Decodes a ResultType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ResultType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10017Type.ResultType;

            /**
             * Verifies a ResultType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a ResultType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ResultType
             */
            public static fromObject(object: { [k: string]: any }): game10017Type.ResultType;

            /**
             * Creates a plain object from a ResultType message. Also converts values to other types if specified.
             * @param message ResultType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10017Type.ResultType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ResultType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a specialGridType. */
        interface IspecialGridType {

            /** specialGridType pos */
            pos: number;

            /** specialGridType elem */
            elem: number;
        }

        /** Represents a specialGridType. */
        class specialGridType implements IspecialGridType {

            /**
             * Constructs a new specialGridType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10017Type.IspecialGridType);

            /** specialGridType pos. */
            public pos: number;

            /** specialGridType elem. */
            public elem: number;

            /**
             * Creates a new specialGridType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns specialGridType instance
             */
            public static create(properties?: game10017Type.IspecialGridType): game10017Type.specialGridType;

            /**
             * Encodes the specified specialGridType message. Does not implicitly {@link game10017Type.specialGridType.verify|verify} messages.
             * @param message specialGridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10017Type.IspecialGridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified specialGridType message, length delimited. Does not implicitly {@link game10017Type.specialGridType.verify|verify} messages.
             * @param message specialGridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10017Type.IspecialGridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a specialGridType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns specialGridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10017Type.specialGridType;

            /**
             * Decodes a specialGridType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns specialGridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10017Type.specialGridType;

            /**
             * Verifies a specialGridType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a specialGridType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns specialGridType
             */
            public static fromObject(object: { [k: string]: any }): game10017Type.specialGridType;

            /**
             * Creates a plain object from a specialGridType message. Also converts values to other types if specified.
             * @param message specialGridType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10017Type.specialGridType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this specialGridType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a crushTaskType. */
        interface IcrushTaskType {

            /** crushTaskType id */
            id: number;

            /** crushTaskType num */
            num: number;

            /** crushTaskType targetNum */
            targetNum: number;

            /** crushTaskType isComplete */
            isComplete: boolean;

            /** crushTaskType isReward */
            isReward: boolean;

            /** crushTaskType changePos */
            changePos?: (number[] | null);

            /** crushTaskType rewardType */
            rewardType: number;

            /** crushTaskType isCurTask */
            isCurTask?: (boolean | null);

            /** crushTaskType collectTarget */
            collectTarget?: (game10017Type.crushTaskType.IcollectElemType[] | null);

            /** crushTaskType assignPos */
            assignPos?: (number | null);
        }

        /** Represents a crushTaskType. */
        class crushTaskType implements IcrushTaskType {

            /**
             * Constructs a new crushTaskType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10017Type.IcrushTaskType);

            /** crushTaskType id. */
            public id: number;

            /** crushTaskType num. */
            public num: number;

            /** crushTaskType targetNum. */
            public targetNum: number;

            /** crushTaskType isComplete. */
            public isComplete: boolean;

            /** crushTaskType isReward. */
            public isReward: boolean;

            /** crushTaskType changePos. */
            public changePos: number[];

            /** crushTaskType rewardType. */
            public rewardType: number;

            /** crushTaskType isCurTask. */
            public isCurTask: boolean;

            /** crushTaskType collectTarget. */
            public collectTarget: game10017Type.crushTaskType.IcollectElemType[];

            /** crushTaskType assignPos. */
            public assignPos: number;

            /**
             * Creates a new crushTaskType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns crushTaskType instance
             */
            public static create(properties?: game10017Type.IcrushTaskType): game10017Type.crushTaskType;

            /**
             * Encodes the specified crushTaskType message. Does not implicitly {@link game10017Type.crushTaskType.verify|verify} messages.
             * @param message crushTaskType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10017Type.IcrushTaskType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified crushTaskType message, length delimited. Does not implicitly {@link game10017Type.crushTaskType.verify|verify} messages.
             * @param message crushTaskType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10017Type.IcrushTaskType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a crushTaskType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns crushTaskType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10017Type.crushTaskType;

            /**
             * Decodes a crushTaskType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns crushTaskType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10017Type.crushTaskType;

            /**
             * Verifies a crushTaskType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a crushTaskType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns crushTaskType
             */
            public static fromObject(object: { [k: string]: any }): game10017Type.crushTaskType;

            /**
             * Creates a plain object from a crushTaskType message. Also converts values to other types if specified.
             * @param message crushTaskType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10017Type.crushTaskType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this crushTaskType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace crushTaskType {

            /** Properties of a collectElemType. */
            interface IcollectElemType {

                /** collectElemType elem */
                elem: number;

                /** collectElemType curNum */
                curNum: number;

                /** collectElemType targetNum */
                targetNum: number;
            }

            /** Represents a collectElemType. */
            class collectElemType implements IcollectElemType {

                /**
                 * Constructs a new collectElemType.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: game10017Type.crushTaskType.IcollectElemType);

                /** collectElemType elem. */
                public elem: number;

                /** collectElemType curNum. */
                public curNum: number;

                /** collectElemType targetNum. */
                public targetNum: number;

                /**
                 * Creates a new collectElemType instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns collectElemType instance
                 */
                public static create(properties?: game10017Type.crushTaskType.IcollectElemType): game10017Type.crushTaskType.collectElemType;

                /**
                 * Encodes the specified collectElemType message. Does not implicitly {@link game10017Type.crushTaskType.collectElemType.verify|verify} messages.
                 * @param message collectElemType message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: game10017Type.crushTaskType.IcollectElemType, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified collectElemType message, length delimited. Does not implicitly {@link game10017Type.crushTaskType.collectElemType.verify|verify} messages.
                 * @param message collectElemType message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: game10017Type.crushTaskType.IcollectElemType, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a collectElemType message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns collectElemType
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10017Type.crushTaskType.collectElemType;

                /**
                 * Decodes a collectElemType message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns collectElemType
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10017Type.crushTaskType.collectElemType;

                /**
                 * Verifies a collectElemType message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string | null);

                /**
                 * Creates a collectElemType message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns collectElemType
                 */
                public static fromObject(object: { [k: string]: any }): game10017Type.crushTaskType.collectElemType;

                /**
                 * Creates a plain object from a collectElemType message. Also converts values to other types if specified.
                 * @param message collectElemType
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: game10017Type.crushTaskType.collectElemType, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this collectElemType to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a specialElemGridPieceListType. */
        interface IspecialElemGridPieceListType {

            /** specialElemGridPieceListType pos */
            pos: number;

            /** specialElemGridPieceListType elem */
            elem: number;

            /** specialElemGridPieceListType posList */
            posList?: (number[] | null);
        }

        /** Represents a specialElemGridPieceListType. */
        class specialElemGridPieceListType implements IspecialElemGridPieceListType {

            /**
             * Constructs a new specialElemGridPieceListType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10017Type.IspecialElemGridPieceListType);

            /** specialElemGridPieceListType pos. */
            public pos: number;

            /** specialElemGridPieceListType elem. */
            public elem: number;

            /** specialElemGridPieceListType posList. */
            public posList: number[];

            /**
             * Creates a new specialElemGridPieceListType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns specialElemGridPieceListType instance
             */
            public static create(properties?: game10017Type.IspecialElemGridPieceListType): game10017Type.specialElemGridPieceListType;

            /**
             * Encodes the specified specialElemGridPieceListType message. Does not implicitly {@link game10017Type.specialElemGridPieceListType.verify|verify} messages.
             * @param message specialElemGridPieceListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10017Type.IspecialElemGridPieceListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified specialElemGridPieceListType message, length delimited. Does not implicitly {@link game10017Type.specialElemGridPieceListType.verify|verify} messages.
             * @param message specialElemGridPieceListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10017Type.IspecialElemGridPieceListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a specialElemGridPieceListType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns specialElemGridPieceListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10017Type.specialElemGridPieceListType;

            /**
             * Decodes a specialElemGridPieceListType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns specialElemGridPieceListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10017Type.specialElemGridPieceListType;

            /**
             * Verifies a specialElemGridPieceListType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a specialElemGridPieceListType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns specialElemGridPieceListType
             */
            public static fromObject(object: { [k: string]: any }): game10017Type.specialElemGridPieceListType;

            /**
             * Creates a plain object from a specialElemGridPieceListType message. Also converts values to other types if specified.
             * @param message specialElemGridPieceListType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10017Type.specialElemGridPieceListType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this specialElemGridPieceListType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a list1dType. */
        interface Ilist1dType {

            /** list1dType list1d */
            list1d?: (number[] | null);
        }

        /** Represents a list1dType. */
        class list1dType implements Ilist1dType {

            /**
             * Constructs a new list1dType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10017Type.Ilist1dType);

            /** list1dType list1d. */
            public list1d: number[];

            /**
             * Creates a new list1dType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns list1dType instance
             */
            public static create(properties?: game10017Type.Ilist1dType): game10017Type.list1dType;

            /**
             * Encodes the specified list1dType message. Does not implicitly {@link game10017Type.list1dType.verify|verify} messages.
             * @param message list1dType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10017Type.Ilist1dType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified list1dType message, length delimited. Does not implicitly {@link game10017Type.list1dType.verify|verify} messages.
             * @param message list1dType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10017Type.Ilist1dType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a list1dType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns list1dType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10017Type.list1dType;

            /**
             * Decodes a list1dType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns list1dType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10017Type.list1dType;

            /**
             * Verifies a list1dType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a list1dType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns list1dType
             */
            public static fromObject(object: { [k: string]: any }): game10017Type.list1dType;

            /**
             * Creates a plain object from a list1dType message. Also converts values to other types if specified.
             * @param message list1dType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10017Type.list1dType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this list1dType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a posToGridListType. */
        interface IposToGridListType {

            /** posToGridListType pos */
            pos: number;

            /** posToGridListType gridList */
            gridList?: (game10017Type.posToGridListType.IMoveGridType[] | null);
        }

        /** Represents a posToGridListType. */
        class posToGridListType implements IposToGridListType {

            /**
             * Constructs a new posToGridListType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10017Type.IposToGridListType);

            /** posToGridListType pos. */
            public pos: number;

            /** posToGridListType gridList. */
            public gridList: game10017Type.posToGridListType.IMoveGridType[];

            /**
             * Creates a new posToGridListType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns posToGridListType instance
             */
            public static create(properties?: game10017Type.IposToGridListType): game10017Type.posToGridListType;

            /**
             * Encodes the specified posToGridListType message. Does not implicitly {@link game10017Type.posToGridListType.verify|verify} messages.
             * @param message posToGridListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10017Type.IposToGridListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified posToGridListType message, length delimited. Does not implicitly {@link game10017Type.posToGridListType.verify|verify} messages.
             * @param message posToGridListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10017Type.IposToGridListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a posToGridListType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns posToGridListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10017Type.posToGridListType;

            /**
             * Decodes a posToGridListType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns posToGridListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10017Type.posToGridListType;

            /**
             * Verifies a posToGridListType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a posToGridListType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns posToGridListType
             */
            public static fromObject(object: { [k: string]: any }): game10017Type.posToGridListType;

            /**
             * Creates a plain object from a posToGridListType message. Also converts values to other types if specified.
             * @param message posToGridListType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10017Type.posToGridListType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this posToGridListType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace posToGridListType {

            /** Properties of a MoveGridType. */
            interface IMoveGridType {

                /** MoveGridType pos */
                pos: number;

                /** MoveGridType elem */
                elem: number;

                /** MoveGridType order */
                order: number;
            }

            /** Represents a MoveGridType. */
            class MoveGridType implements IMoveGridType {

                /**
                 * Constructs a new MoveGridType.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: game10017Type.posToGridListType.IMoveGridType);

                /** MoveGridType pos. */
                public pos: number;

                /** MoveGridType elem. */
                public elem: number;

                /** MoveGridType order. */
                public order: number;

                /**
                 * Creates a new MoveGridType instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns MoveGridType instance
                 */
                public static create(properties?: game10017Type.posToGridListType.IMoveGridType): game10017Type.posToGridListType.MoveGridType;

                /**
                 * Encodes the specified MoveGridType message. Does not implicitly {@link game10017Type.posToGridListType.MoveGridType.verify|verify} messages.
                 * @param message MoveGridType message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: game10017Type.posToGridListType.IMoveGridType, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MoveGridType message, length delimited. Does not implicitly {@link game10017Type.posToGridListType.MoveGridType.verify|verify} messages.
                 * @param message MoveGridType message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: game10017Type.posToGridListType.IMoveGridType, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MoveGridType message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MoveGridType
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10017Type.posToGridListType.MoveGridType;

                /**
                 * Decodes a MoveGridType message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MoveGridType
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10017Type.posToGridListType.MoveGridType;

                /**
                 * Verifies a MoveGridType message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string | null);

                /**
                 * Creates a MoveGridType message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MoveGridType
                 */
                public static fromObject(object: { [k: string]: any }): game10017Type.posToGridListType.MoveGridType;

                /**
                 * Creates a plain object from a MoveGridType message. Also converts values to other types if specified.
                 * @param message MoveGridType
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: game10017Type.posToGridListType.MoveGridType, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MoveGridType to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a splitGridDataType. */
        interface IsplitGridDataType {

            /** splitGridDataType pos */
            pos: number;

            /** splitGridDataType splitGridData2 */
            splitGridData2?: (game10017Type.splitGridDataType.IsplitGridDataType2[] | null);
        }

        /** Represents a splitGridDataType. */
        class splitGridDataType implements IsplitGridDataType {

            /**
             * Constructs a new splitGridDataType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10017Type.IsplitGridDataType);

            /** splitGridDataType pos. */
            public pos: number;

            /** splitGridDataType splitGridData2. */
            public splitGridData2: game10017Type.splitGridDataType.IsplitGridDataType2[];

            /**
             * Creates a new splitGridDataType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns splitGridDataType instance
             */
            public static create(properties?: game10017Type.IsplitGridDataType): game10017Type.splitGridDataType;

            /**
             * Encodes the specified splitGridDataType message. Does not implicitly {@link game10017Type.splitGridDataType.verify|verify} messages.
             * @param message splitGridDataType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10017Type.IsplitGridDataType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified splitGridDataType message, length delimited. Does not implicitly {@link game10017Type.splitGridDataType.verify|verify} messages.
             * @param message splitGridDataType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10017Type.IsplitGridDataType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a splitGridDataType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns splitGridDataType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10017Type.splitGridDataType;

            /**
             * Decodes a splitGridDataType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns splitGridDataType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10017Type.splitGridDataType;

            /**
             * Verifies a splitGridDataType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a splitGridDataType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns splitGridDataType
             */
            public static fromObject(object: { [k: string]: any }): game10017Type.splitGridDataType;

            /**
             * Creates a plain object from a splitGridDataType message. Also converts values to other types if specified.
             * @param message splitGridDataType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10017Type.splitGridDataType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this splitGridDataType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace splitGridDataType {

            /** Properties of a splitGridDataType2. */
            interface IsplitGridDataType2 {

                /** splitGridDataType2 pos */
                pos: number;

                /** splitGridDataType2 elem */
                elem: number;

                /** splitGridDataType2 len */
                len: number;
            }

            /** Represents a splitGridDataType2. */
            class splitGridDataType2 implements IsplitGridDataType2 {

                /**
                 * Constructs a new splitGridDataType2.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: game10017Type.splitGridDataType.IsplitGridDataType2);

                /** splitGridDataType2 pos. */
                public pos: number;

                /** splitGridDataType2 elem. */
                public elem: number;

                /** splitGridDataType2 len. */
                public len: number;

                /**
                 * Creates a new splitGridDataType2 instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns splitGridDataType2 instance
                 */
                public static create(properties?: game10017Type.splitGridDataType.IsplitGridDataType2): game10017Type.splitGridDataType.splitGridDataType2;

                /**
                 * Encodes the specified splitGridDataType2 message. Does not implicitly {@link game10017Type.splitGridDataType.splitGridDataType2.verify|verify} messages.
                 * @param message splitGridDataType2 message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: game10017Type.splitGridDataType.IsplitGridDataType2, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified splitGridDataType2 message, length delimited. Does not implicitly {@link game10017Type.splitGridDataType.splitGridDataType2.verify|verify} messages.
                 * @param message splitGridDataType2 message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: game10017Type.splitGridDataType.IsplitGridDataType2, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a splitGridDataType2 message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns splitGridDataType2
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10017Type.splitGridDataType.splitGridDataType2;

                /**
                 * Decodes a splitGridDataType2 message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns splitGridDataType2
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10017Type.splitGridDataType.splitGridDataType2;

                /**
                 * Verifies a splitGridDataType2 message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string | null);

                /**
                 * Creates a splitGridDataType2 message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns splitGridDataType2
                 */
                public static fromObject(object: { [k: string]: any }): game10017Type.splitGridDataType.splitGridDataType2;

                /**
                 * Creates a plain object from a splitGridDataType2 message. Also converts values to other types if specified.
                 * @param message splitGridDataType2
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: game10017Type.splitGridDataType.splitGridDataType2, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this splitGridDataType2 to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a keyValueListType. */
        interface IkeyValueListType {

            /** keyValueListType key1 */
            key1: number;

            /** keyValueListType kvList */
            kvList?: (game10017Type.keyValueListType.IkvListType[] | null);
        }

        /** Represents a keyValueListType. */
        class keyValueListType implements IkeyValueListType {

            /**
             * Constructs a new keyValueListType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10017Type.IkeyValueListType);

            /** keyValueListType key1. */
            public key1: number;

            /** keyValueListType kvList. */
            public kvList: game10017Type.keyValueListType.IkvListType[];

            /**
             * Creates a new keyValueListType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns keyValueListType instance
             */
            public static create(properties?: game10017Type.IkeyValueListType): game10017Type.keyValueListType;

            /**
             * Encodes the specified keyValueListType message. Does not implicitly {@link game10017Type.keyValueListType.verify|verify} messages.
             * @param message keyValueListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10017Type.IkeyValueListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified keyValueListType message, length delimited. Does not implicitly {@link game10017Type.keyValueListType.verify|verify} messages.
             * @param message keyValueListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10017Type.IkeyValueListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a keyValueListType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns keyValueListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10017Type.keyValueListType;

            /**
             * Decodes a keyValueListType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns keyValueListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10017Type.keyValueListType;

            /**
             * Verifies a keyValueListType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a keyValueListType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns keyValueListType
             */
            public static fromObject(object: { [k: string]: any }): game10017Type.keyValueListType;

            /**
             * Creates a plain object from a keyValueListType message. Also converts values to other types if specified.
             * @param message keyValueListType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10017Type.keyValueListType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this keyValueListType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace keyValueListType {

            /** Properties of a kvListType. */
            interface IkvListType {

                /** kvListType key2 */
                key2: number;

                /** kvListType value2 */
                value2: number;
            }

            /** Represents a kvListType. */
            class kvListType implements IkvListType {

                /**
                 * Constructs a new kvListType.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: game10017Type.keyValueListType.IkvListType);

                /** kvListType key2. */
                public key2: number;

                /** kvListType value2. */
                public value2: number;

                /**
                 * Creates a new kvListType instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns kvListType instance
                 */
                public static create(properties?: game10017Type.keyValueListType.IkvListType): game10017Type.keyValueListType.kvListType;

                /**
                 * Encodes the specified kvListType message. Does not implicitly {@link game10017Type.keyValueListType.kvListType.verify|verify} messages.
                 * @param message kvListType message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: game10017Type.keyValueListType.IkvListType, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified kvListType message, length delimited. Does not implicitly {@link game10017Type.keyValueListType.kvListType.verify|verify} messages.
                 * @param message kvListType message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: game10017Type.keyValueListType.IkvListType, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a kvListType message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns kvListType
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10017Type.keyValueListType.kvListType;

                /**
                 * Decodes a kvListType message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns kvListType
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10017Type.keyValueListType.kvListType;

                /**
                 * Verifies a kvListType message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string | null);

                /**
                 * Creates a kvListType message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns kvListType
                 */
                public static fromObject(object: { [k: string]: any }): game10017Type.keyValueListType.kvListType;

                /**
                 * Creates a plain object from a kvListType message. Also converts values to other types if specified.
                 * @param message kvListType
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: game10017Type.keyValueListType.kvListType, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this kvListType to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a columnRateType. */
        interface IcolumnRateType {

            /** columnRateType column */
            column: number;

            /** columnRateType rate */
            rate: number;
        }

        /** Represents a columnRateType. */
        class columnRateType implements IcolumnRateType {

            /**
             * Constructs a new columnRateType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10017Type.IcolumnRateType);

            /** columnRateType column. */
            public column: number;

            /** columnRateType rate. */
            public rate: number;

            /**
             * Creates a new columnRateType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns columnRateType instance
             */
            public static create(properties?: game10017Type.IcolumnRateType): game10017Type.columnRateType;

            /**
             * Encodes the specified columnRateType message. Does not implicitly {@link game10017Type.columnRateType.verify|verify} messages.
             * @param message columnRateType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10017Type.IcolumnRateType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified columnRateType message, length delimited. Does not implicitly {@link game10017Type.columnRateType.verify|verify} messages.
             * @param message columnRateType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10017Type.IcolumnRateType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a columnRateType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns columnRateType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10017Type.columnRateType;

            /**
             * Decodes a columnRateType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns columnRateType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10017Type.columnRateType;

            /**
             * Verifies a columnRateType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a columnRateType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns columnRateType
             */
            public static fromObject(object: { [k: string]: any }): game10017Type.columnRateType;

            /**
             * Creates a plain object from a columnRateType message. Also converts values to other types if specified.
             * @param message columnRateType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10017Type.columnRateType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this columnRateType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a collectTaskType. */
        interface IcollectTaskType {

            /** collectTaskType id */
            id: number;

            /** collectTaskType curNum */
            curNum: number;

            /** collectTaskType targetNum */
            targetNum: number;

            /** collectTaskType isComplete */
            isComplete: boolean;

            /** collectTaskType superfluousNum */
            superfluousNum: number;

            /** collectTaskType crushRate */
            crushRate?: (number | null);
        }

        /** Represents a collectTaskType. */
        class collectTaskType implements IcollectTaskType {

            /**
             * Constructs a new collectTaskType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10017Type.IcollectTaskType);

            /** collectTaskType id. */
            public id: number;

            /** collectTaskType curNum. */
            public curNum: number;

            /** collectTaskType targetNum. */
            public targetNum: number;

            /** collectTaskType isComplete. */
            public isComplete: boolean;

            /** collectTaskType superfluousNum. */
            public superfluousNum: number;

            /** collectTaskType crushRate. */
            public crushRate: number;

            /**
             * Creates a new collectTaskType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns collectTaskType instance
             */
            public static create(properties?: game10017Type.IcollectTaskType): game10017Type.collectTaskType;

            /**
             * Encodes the specified collectTaskType message. Does not implicitly {@link game10017Type.collectTaskType.verify|verify} messages.
             * @param message collectTaskType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10017Type.IcollectTaskType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified collectTaskType message, length delimited. Does not implicitly {@link game10017Type.collectTaskType.verify|verify} messages.
             * @param message collectTaskType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10017Type.IcollectTaskType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a collectTaskType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns collectTaskType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10017Type.collectTaskType;

            /**
             * Decodes a collectTaskType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns collectTaskType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10017Type.collectTaskType;

            /**
             * Verifies a collectTaskType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a collectTaskType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns collectTaskType
             */
            public static fromObject(object: { [k: string]: any }): game10017Type.collectTaskType;

            /**
             * Creates a plain object from a collectTaskType message. Also converts values to other types if specified.
             * @param message collectTaskType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10017Type.collectTaskType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this collectTaskType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a crushChangeElemLvDataType. */
        interface IcrushChangeElemLvDataType {

            /** crushChangeElemLvDataType lv */
            lv: number;

            /** crushChangeElemLvDataType upgradeCount */
            upgradeCount: number;
        }

        /** Represents a crushChangeElemLvDataType. */
        class crushChangeElemLvDataType implements IcrushChangeElemLvDataType {

            /**
             * Constructs a new crushChangeElemLvDataType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10017Type.IcrushChangeElemLvDataType);

            /** crushChangeElemLvDataType lv. */
            public lv: number;

            /** crushChangeElemLvDataType upgradeCount. */
            public upgradeCount: number;

            /**
             * Creates a new crushChangeElemLvDataType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns crushChangeElemLvDataType instance
             */
            public static create(properties?: game10017Type.IcrushChangeElemLvDataType): game10017Type.crushChangeElemLvDataType;

            /**
             * Encodes the specified crushChangeElemLvDataType message. Does not implicitly {@link game10017Type.crushChangeElemLvDataType.verify|verify} messages.
             * @param message crushChangeElemLvDataType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10017Type.IcrushChangeElemLvDataType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified crushChangeElemLvDataType message, length delimited. Does not implicitly {@link game10017Type.crushChangeElemLvDataType.verify|verify} messages.
             * @param message crushChangeElemLvDataType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10017Type.IcrushChangeElemLvDataType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a crushChangeElemLvDataType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns crushChangeElemLvDataType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10017Type.crushChangeElemLvDataType;

            /**
             * Decodes a crushChangeElemLvDataType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns crushChangeElemLvDataType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10017Type.crushChangeElemLvDataType;

            /**
             * Verifies a crushChangeElemLvDataType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a crushChangeElemLvDataType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns crushChangeElemLvDataType
             */
            public static fromObject(object: { [k: string]: any }): game10017Type.crushChangeElemLvDataType;

            /**
             * Creates a plain object from a crushChangeElemLvDataType message. Also converts values to other types if specified.
             * @param message crushChangeElemLvDataType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10017Type.crushChangeElemLvDataType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this crushChangeElemLvDataType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a crushAndChangeAssignPosType. */
        interface IcrushAndChangeAssignPosType {

            /** crushAndChangeAssignPosType pos */
            pos: number;

            /** crushAndChangeAssignPosType assignPos */
            assignPos: number;

            /** crushAndChangeAssignPosType elem */
            elem: number;
        }

        /** Represents a crushAndChangeAssignPosType. */
        class crushAndChangeAssignPosType implements IcrushAndChangeAssignPosType {

            /**
             * Constructs a new crushAndChangeAssignPosType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10017Type.IcrushAndChangeAssignPosType);

            /** crushAndChangeAssignPosType pos. */
            public pos: number;

            /** crushAndChangeAssignPosType assignPos. */
            public assignPos: number;

            /** crushAndChangeAssignPosType elem. */
            public elem: number;

            /**
             * Creates a new crushAndChangeAssignPosType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns crushAndChangeAssignPosType instance
             */
            public static create(properties?: game10017Type.IcrushAndChangeAssignPosType): game10017Type.crushAndChangeAssignPosType;

            /**
             * Encodes the specified crushAndChangeAssignPosType message. Does not implicitly {@link game10017Type.crushAndChangeAssignPosType.verify|verify} messages.
             * @param message crushAndChangeAssignPosType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10017Type.IcrushAndChangeAssignPosType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified crushAndChangeAssignPosType message, length delimited. Does not implicitly {@link game10017Type.crushAndChangeAssignPosType.verify|verify} messages.
             * @param message crushAndChangeAssignPosType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10017Type.IcrushAndChangeAssignPosType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a crushAndChangeAssignPosType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns crushAndChangeAssignPosType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10017Type.crushAndChangeAssignPosType;

            /**
             * Decodes a crushAndChangeAssignPosType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns crushAndChangeAssignPosType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10017Type.crushAndChangeAssignPosType;

            /**
             * Verifies a crushAndChangeAssignPosType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a crushAndChangeAssignPosType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns crushAndChangeAssignPosType
             */
            public static fromObject(object: { [k: string]: any }): game10017Type.crushAndChangeAssignPosType;

            /**
             * Creates a plain object from a crushAndChangeAssignPosType message. Also converts values to other types if specified.
             * @param message crushAndChangeAssignPosType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10017Type.crushAndChangeAssignPosType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this crushAndChangeAssignPosType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a propListType. */
        interface IpropListType {

            /** propListType key */
            key: number;

            /** propListType val */
            val: (number | Long);
        }

        /** Represents a propListType. */
        class propListType implements IpropListType {

            /**
             * Constructs a new propListType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10017Type.IpropListType);

            /** propListType key. */
            public key: number;

            /** propListType val. */
            public val: (number | Long);

            /**
             * Creates a new propListType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns propListType instance
             */
            public static create(properties?: game10017Type.IpropListType): game10017Type.propListType;

            /**
             * Encodes the specified propListType message. Does not implicitly {@link game10017Type.propListType.verify|verify} messages.
             * @param message propListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10017Type.IpropListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified propListType message, length delimited. Does not implicitly {@link game10017Type.propListType.verify|verify} messages.
             * @param message propListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10017Type.IpropListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a propListType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns propListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10017Type.propListType;

            /**
             * Decodes a propListType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns propListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10017Type.propListType;

            /**
             * Verifies a propListType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a propListType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns propListType
             */
            public static fromObject(object: { [k: string]: any }): game10017Type.propListType;

            /**
             * Creates a plain object from a propListType message. Also converts values to other types if specified.
             * @param message propListType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10017Type.propListType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this propListType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a spePosActiveType. */
        interface IspePosActiveType {

            /** spePosActiveType pos */
            pos: number;

            /** spePosActiveType isActive */
            isActive: boolean;

            /** spePosActiveType multi */
            multi: number;
        }

        /** Represents a spePosActiveType. */
        class spePosActiveType implements IspePosActiveType {

            /**
             * Constructs a new spePosActiveType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10017Type.IspePosActiveType);

            /** spePosActiveType pos. */
            public pos: number;

            /** spePosActiveType isActive. */
            public isActive: boolean;

            /** spePosActiveType multi. */
            public multi: number;

            /**
             * Creates a new spePosActiveType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns spePosActiveType instance
             */
            public static create(properties?: game10017Type.IspePosActiveType): game10017Type.spePosActiveType;

            /**
             * Encodes the specified spePosActiveType message. Does not implicitly {@link game10017Type.spePosActiveType.verify|verify} messages.
             * @param message spePosActiveType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10017Type.IspePosActiveType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified spePosActiveType message, length delimited. Does not implicitly {@link game10017Type.spePosActiveType.verify|verify} messages.
             * @param message spePosActiveType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10017Type.IspePosActiveType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a spePosActiveType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns spePosActiveType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10017Type.spePosActiveType;

            /**
             * Decodes a spePosActiveType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns spePosActiveType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10017Type.spePosActiveType;

            /**
             * Verifies a spePosActiveType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a spePosActiveType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns spePosActiveType
             */
            public static fromObject(object: { [k: string]: any }): game10017Type.spePosActiveType;

            /**
             * Creates a plain object from a spePosActiveType message. Also converts values to other types if specified.
             * @param message spePosActiveType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10017Type.spePosActiveType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this spePosActiveType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a columnRateNumType. */
        interface IcolumnRateNumType {

            /** columnRateNumType column */
            column: number;

            /** columnRateNumType rate */
            rate: number;

            /** columnRateNumType num */
            num: number;
        }

        /** Represents a columnRateNumType. */
        class columnRateNumType implements IcolumnRateNumType {

            /**
             * Constructs a new columnRateNumType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10017Type.IcolumnRateNumType);

            /** columnRateNumType column. */
            public column: number;

            /** columnRateNumType rate. */
            public rate: number;

            /** columnRateNumType num. */
            public num: number;

            /**
             * Creates a new columnRateNumType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns columnRateNumType instance
             */
            public static create(properties?: game10017Type.IcolumnRateNumType): game10017Type.columnRateNumType;

            /**
             * Encodes the specified columnRateNumType message. Does not implicitly {@link game10017Type.columnRateNumType.verify|verify} messages.
             * @param message columnRateNumType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10017Type.IcolumnRateNumType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified columnRateNumType message, length delimited. Does not implicitly {@link game10017Type.columnRateNumType.verify|verify} messages.
             * @param message columnRateNumType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10017Type.IcolumnRateNumType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a columnRateNumType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns columnRateNumType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10017Type.columnRateNumType;

            /**
             * Decodes a columnRateNumType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns columnRateNumType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10017Type.columnRateNumType;

            /**
             * Verifies a columnRateNumType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a columnRateNumType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns columnRateNumType
             */
            public static fromObject(object: { [k: string]: any }): game10017Type.columnRateNumType;

            /**
             * Creates a plain object from a columnRateNumType message. Also converts values to other types if specified.
             * @param message columnRateNumType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10017Type.columnRateNumType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this columnRateNumType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game10019Type. */
    export class game10019Type implements Igame10019Type {

        /**
         * Constructs a new game10019Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame10019Type);

        /** game10019Type data. */
        public data?: (game10019Type.Idata10019Type | null);

        /** game10019Type update. */
        public update: game10019Type.Iupdate10019Type[];

        /**
         * Creates a new game10019Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game10019Type instance
         */
        public static create(properties?: Igame10019Type): game10019Type;

        /**
         * Encodes the specified game10019Type message. Does not implicitly {@link game10019Type.verify|verify} messages.
         * @param message game10019Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame10019Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game10019Type message, length delimited. Does not implicitly {@link game10019Type.verify|verify} messages.
         * @param message game10019Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame10019Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game10019Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game10019Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10019Type;

        /**
         * Decodes a game10019Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game10019Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10019Type;

        /**
         * Verifies a game10019Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game10019Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game10019Type
         */
        public static fromObject(object: { [k: string]: any }): game10019Type;

        /**
         * Creates a plain object from a game10019Type message. Also converts values to other types if specified.
         * @param message game10019Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game10019Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game10019Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game10019Type {

        /** Properties of a data10019Type. */
        interface Idata10019Type {

            /** data10019Type costList */
            costList?: (game10019Type.IrollerCostType[] | null);

            /** data10019Type resultList */
            resultList?: (game10019Type.IResultType[] | null);
        }

        /** Represents a data10019Type. */
        class data10019Type implements Idata10019Type {

            /**
             * Constructs a new data10019Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10019Type.Idata10019Type);

            /** data10019Type costList. */
            public costList: game10019Type.IrollerCostType[];

            /** data10019Type resultList. */
            public resultList: game10019Type.IResultType[];

            /**
             * Creates a new data10019Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data10019Type instance
             */
            public static create(properties?: game10019Type.Idata10019Type): game10019Type.data10019Type;

            /**
             * Encodes the specified data10019Type message. Does not implicitly {@link game10019Type.data10019Type.verify|verify} messages.
             * @param message data10019Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10019Type.Idata10019Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data10019Type message, length delimited. Does not implicitly {@link game10019Type.data10019Type.verify|verify} messages.
             * @param message data10019Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10019Type.Idata10019Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data10019Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data10019Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10019Type.data10019Type;

            /**
             * Decodes a data10019Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data10019Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10019Type.data10019Type;

            /**
             * Verifies a data10019Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data10019Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data10019Type
             */
            public static fromObject(object: { [k: string]: any }): game10019Type.data10019Type;

            /**
             * Creates a plain object from a data10019Type message. Also converts values to other types if specified.
             * @param message data10019Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10019Type.data10019Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data10019Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update10019Type. */
        interface Iupdate10019Type {

            /** update10019Type index */
            index: number;

            /** update10019Type costList */
            costList?: (game10019Type.IrollerCostType[] | null);

            /** update10019Type resultList */
            resultList?: (game10019Type.IResultType[] | null);
        }

        /** Represents an update10019Type. */
        class update10019Type implements Iupdate10019Type {

            /**
             * Constructs a new update10019Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10019Type.Iupdate10019Type);

            /** update10019Type index. */
            public index: number;

            /** update10019Type costList. */
            public costList: game10019Type.IrollerCostType[];

            /** update10019Type resultList. */
            public resultList: game10019Type.IResultType[];

            /**
             * Creates a new update10019Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update10019Type instance
             */
            public static create(properties?: game10019Type.Iupdate10019Type): game10019Type.update10019Type;

            /**
             * Encodes the specified update10019Type message. Does not implicitly {@link game10019Type.update10019Type.verify|verify} messages.
             * @param message update10019Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10019Type.Iupdate10019Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update10019Type message, length delimited. Does not implicitly {@link game10019Type.update10019Type.verify|verify} messages.
             * @param message update10019Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10019Type.Iupdate10019Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update10019Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update10019Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10019Type.update10019Type;

            /**
             * Decodes an update10019Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update10019Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10019Type.update10019Type;

            /**
             * Verifies an update10019Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update10019Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update10019Type
             */
            public static fromObject(object: { [k: string]: any }): game10019Type.update10019Type;

            /**
             * Creates a plain object from an update10019Type message. Also converts values to other types if specified.
             * @param message update10019Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10019Type.update10019Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update10019Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a rollerCostType. */
        interface IrollerCostType {

            /** rollerCostType rollerId */
            rollerId?: (number | null);

            /** rollerCostType cost */
            cost?: (number | Long | null);
        }

        /** Represents a rollerCostType. */
        class rollerCostType implements IrollerCostType {

            /**
             * Constructs a new rollerCostType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10019Type.IrollerCostType);

            /** rollerCostType rollerId. */
            public rollerId: number;

            /** rollerCostType cost. */
            public cost: (number | Long);

            /**
             * Creates a new rollerCostType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns rollerCostType instance
             */
            public static create(properties?: game10019Type.IrollerCostType): game10019Type.rollerCostType;

            /**
             * Encodes the specified rollerCostType message. Does not implicitly {@link game10019Type.rollerCostType.verify|verify} messages.
             * @param message rollerCostType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10019Type.IrollerCostType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified rollerCostType message, length delimited. Does not implicitly {@link game10019Type.rollerCostType.verify|verify} messages.
             * @param message rollerCostType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10019Type.IrollerCostType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a rollerCostType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns rollerCostType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10019Type.rollerCostType;

            /**
             * Decodes a rollerCostType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns rollerCostType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10019Type.rollerCostType;

            /**
             * Verifies a rollerCostType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a rollerCostType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns rollerCostType
             */
            public static fromObject(object: { [k: string]: any }): game10019Type.rollerCostType;

            /**
             * Creates a plain object from a rollerCostType message. Also converts values to other types if specified.
             * @param message rollerCostType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10019Type.rollerCostType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this rollerCostType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ResultType. */
        interface IResultType {

            /** ResultType spinResult */
            spinResult: IspinResultType;
        }

        /** Represents a ResultType. */
        class ResultType implements IResultType {

            /**
             * Constructs a new ResultType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10019Type.IResultType);

            /** ResultType spinResult. */
            public spinResult: IspinResultType;

            /**
             * Creates a new ResultType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ResultType instance
             */
            public static create(properties?: game10019Type.IResultType): game10019Type.ResultType;

            /**
             * Encodes the specified ResultType message. Does not implicitly {@link game10019Type.ResultType.verify|verify} messages.
             * @param message ResultType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10019Type.IResultType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ResultType message, length delimited. Does not implicitly {@link game10019Type.ResultType.verify|verify} messages.
             * @param message ResultType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10019Type.IResultType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResultType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ResultType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10019Type.ResultType;

            /**
             * Decodes a ResultType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ResultType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10019Type.ResultType;

            /**
             * Verifies a ResultType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a ResultType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ResultType
             */
            public static fromObject(object: { [k: string]: any }): game10019Type.ResultType;

            /**
             * Creates a plain object from a ResultType message. Also converts values to other types if specified.
             * @param message ResultType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10019Type.ResultType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ResultType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game10020Type. */
    export class game10020Type implements Igame10020Type {

        /**
         * Constructs a new game10020Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame10020Type);

        /** game10020Type data. */
        public data?: (game10020Type.Idata10020Type | null);

        /** game10020Type update. */
        public update: game10020Type.Iupdate10020Type[];

        /**
         * Creates a new game10020Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game10020Type instance
         */
        public static create(properties?: Igame10020Type): game10020Type;

        /**
         * Encodes the specified game10020Type message. Does not implicitly {@link game10020Type.verify|verify} messages.
         * @param message game10020Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame10020Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game10020Type message, length delimited. Does not implicitly {@link game10020Type.verify|verify} messages.
         * @param message game10020Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame10020Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game10020Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game10020Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10020Type;

        /**
         * Decodes a game10020Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game10020Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10020Type;

        /**
         * Verifies a game10020Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game10020Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game10020Type
         */
        public static fromObject(object: { [k: string]: any }): game10020Type;

        /**
         * Creates a plain object from a game10020Type message. Also converts values to other types if specified.
         * @param message game10020Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game10020Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game10020Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game10020Type {

        /** Properties of a data10020Type. */
        interface Idata10020Type {

            /** data10020Type specialElement */
            specialElement: number;
        }

        /** Represents a data10020Type. */
        class data10020Type implements Idata10020Type {

            /**
             * Constructs a new data10020Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10020Type.Idata10020Type);

            /** data10020Type specialElement. */
            public specialElement: number;

            /**
             * Creates a new data10020Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data10020Type instance
             */
            public static create(properties?: game10020Type.Idata10020Type): game10020Type.data10020Type;

            /**
             * Encodes the specified data10020Type message. Does not implicitly {@link game10020Type.data10020Type.verify|verify} messages.
             * @param message data10020Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10020Type.Idata10020Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data10020Type message, length delimited. Does not implicitly {@link game10020Type.data10020Type.verify|verify} messages.
             * @param message data10020Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10020Type.Idata10020Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data10020Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data10020Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10020Type.data10020Type;

            /**
             * Decodes a data10020Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data10020Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10020Type.data10020Type;

            /**
             * Verifies a data10020Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data10020Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data10020Type
             */
            public static fromObject(object: { [k: string]: any }): game10020Type.data10020Type;

            /**
             * Creates a plain object from a data10020Type message. Also converts values to other types if specified.
             * @param message data10020Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10020Type.data10020Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data10020Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update10020Type. */
        interface Iupdate10020Type {

            /** update10020Type index */
            index: number;

            /** update10020Type specialElement */
            specialElement?: (number | null);
        }

        /** Represents an update10020Type. */
        class update10020Type implements Iupdate10020Type {

            /**
             * Constructs a new update10020Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10020Type.Iupdate10020Type);

            /** update10020Type index. */
            public index: number;

            /** update10020Type specialElement. */
            public specialElement: number;

            /**
             * Creates a new update10020Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update10020Type instance
             */
            public static create(properties?: game10020Type.Iupdate10020Type): game10020Type.update10020Type;

            /**
             * Encodes the specified update10020Type message. Does not implicitly {@link game10020Type.update10020Type.verify|verify} messages.
             * @param message update10020Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10020Type.Iupdate10020Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update10020Type message, length delimited. Does not implicitly {@link game10020Type.update10020Type.verify|verify} messages.
             * @param message update10020Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10020Type.Iupdate10020Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update10020Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update10020Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10020Type.update10020Type;

            /**
             * Decodes an update10020Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update10020Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10020Type.update10020Type;

            /**
             * Verifies an update10020Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update10020Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update10020Type
             */
            public static fromObject(object: { [k: string]: any }): game10020Type.update10020Type;

            /**
             * Creates a plain object from an update10020Type message. Also converts values to other types if specified.
             * @param message update10020Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10020Type.update10020Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update10020Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game10024Type. */
    export class game10024Type implements Igame10024Type {

        /**
         * Constructs a new game10024Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame10024Type);

        /** game10024Type data. */
        public data?: (game10024Type.Idata10024Type | null);

        /** game10024Type update. */
        public update: game10024Type.Iupdate10024Type[];

        /**
         * Creates a new game10024Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game10024Type instance
         */
        public static create(properties?: Igame10024Type): game10024Type;

        /**
         * Encodes the specified game10024Type message. Does not implicitly {@link game10024Type.verify|verify} messages.
         * @param message game10024Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame10024Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game10024Type message, length delimited. Does not implicitly {@link game10024Type.verify|verify} messages.
         * @param message game10024Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame10024Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game10024Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game10024Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10024Type;

        /**
         * Decodes a game10024Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game10024Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10024Type;

        /**
         * Verifies a game10024Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game10024Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game10024Type
         */
        public static fromObject(object: { [k: string]: any }): game10024Type;

        /**
         * Creates a plain object from a game10024Type message. Also converts values to other types if specified.
         * @param message game10024Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game10024Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game10024Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game10024Type {

        /** Properties of a data10024Type. */
        interface Idata10024Type {

            /** data10024Type resultRate */
            resultRate: number;
        }

        /** Represents a data10024Type. */
        class data10024Type implements Idata10024Type {

            /**
             * Constructs a new data10024Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10024Type.Idata10024Type);

            /** data10024Type resultRate. */
            public resultRate: number;

            /**
             * Creates a new data10024Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data10024Type instance
             */
            public static create(properties?: game10024Type.Idata10024Type): game10024Type.data10024Type;

            /**
             * Encodes the specified data10024Type message. Does not implicitly {@link game10024Type.data10024Type.verify|verify} messages.
             * @param message data10024Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10024Type.Idata10024Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data10024Type message, length delimited. Does not implicitly {@link game10024Type.data10024Type.verify|verify} messages.
             * @param message data10024Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10024Type.Idata10024Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data10024Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data10024Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10024Type.data10024Type;

            /**
             * Decodes a data10024Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data10024Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10024Type.data10024Type;

            /**
             * Verifies a data10024Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data10024Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data10024Type
             */
            public static fromObject(object: { [k: string]: any }): game10024Type.data10024Type;

            /**
             * Creates a plain object from a data10024Type message. Also converts values to other types if specified.
             * @param message data10024Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10024Type.data10024Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data10024Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update10024Type. */
        interface Iupdate10024Type {

            /** update10024Type index */
            index: number;

            /** update10024Type resultRate */
            resultRate: number;
        }

        /** Represents an update10024Type. */
        class update10024Type implements Iupdate10024Type {

            /**
             * Constructs a new update10024Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10024Type.Iupdate10024Type);

            /** update10024Type index. */
            public index: number;

            /** update10024Type resultRate. */
            public resultRate: number;

            /**
             * Creates a new update10024Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update10024Type instance
             */
            public static create(properties?: game10024Type.Iupdate10024Type): game10024Type.update10024Type;

            /**
             * Encodes the specified update10024Type message. Does not implicitly {@link game10024Type.update10024Type.verify|verify} messages.
             * @param message update10024Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10024Type.Iupdate10024Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update10024Type message, length delimited. Does not implicitly {@link game10024Type.update10024Type.verify|verify} messages.
             * @param message update10024Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10024Type.Iupdate10024Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update10024Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update10024Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10024Type.update10024Type;

            /**
             * Decodes an update10024Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update10024Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10024Type.update10024Type;

            /**
             * Verifies an update10024Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update10024Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update10024Type
             */
            public static fromObject(object: { [k: string]: any }): game10024Type.update10024Type;

            /**
             * Creates a plain object from an update10024Type message. Also converts values to other types if specified.
             * @param message update10024Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10024Type.update10024Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update10024Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game10027Type. */
    export class game10027Type implements Igame10027Type {

        /**
         * Constructs a new game10027Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame10027Type);

        /** game10027Type data. */
        public data?: (game10027Type.Idata10027Type | null);

        /** game10027Type update. */
        public update: game10027Type.Iupdate10027Type[];

        /**
         * Creates a new game10027Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game10027Type instance
         */
        public static create(properties?: Igame10027Type): game10027Type;

        /**
         * Encodes the specified game10027Type message. Does not implicitly {@link game10027Type.verify|verify} messages.
         * @param message game10027Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame10027Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game10027Type message, length delimited. Does not implicitly {@link game10027Type.verify|verify} messages.
         * @param message game10027Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame10027Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game10027Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game10027Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10027Type;

        /**
         * Decodes a game10027Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game10027Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10027Type;

        /**
         * Verifies a game10027Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game10027Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game10027Type
         */
        public static fromObject(object: { [k: string]: any }): game10027Type;

        /**
         * Creates a plain object from a game10027Type message. Also converts values to other types if specified.
         * @param message game10027Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game10027Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game10027Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game10027Type {

        /** Properties of a data10027Type. */
        interface Idata10027Type {

            /** data10027Type resultList */
            resultList?: (game10027Type.IResultType[] | null);
        }

        /** Represents a data10027Type. */
        class data10027Type implements Idata10027Type {

            /**
             * Constructs a new data10027Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10027Type.Idata10027Type);

            /** data10027Type resultList. */
            public resultList: game10027Type.IResultType[];

            /**
             * Creates a new data10027Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data10027Type instance
             */
            public static create(properties?: game10027Type.Idata10027Type): game10027Type.data10027Type;

            /**
             * Encodes the specified data10027Type message. Does not implicitly {@link game10027Type.data10027Type.verify|verify} messages.
             * @param message data10027Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10027Type.Idata10027Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data10027Type message, length delimited. Does not implicitly {@link game10027Type.data10027Type.verify|verify} messages.
             * @param message data10027Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10027Type.Idata10027Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data10027Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data10027Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10027Type.data10027Type;

            /**
             * Decodes a data10027Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data10027Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10027Type.data10027Type;

            /**
             * Verifies a data10027Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data10027Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data10027Type
             */
            public static fromObject(object: { [k: string]: any }): game10027Type.data10027Type;

            /**
             * Creates a plain object from a data10027Type message. Also converts values to other types if specified.
             * @param message data10027Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10027Type.data10027Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data10027Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update10027Type. */
        interface Iupdate10027Type {

            /** update10027Type resultList */
            resultList?: (game10027Type.IResultType[] | null);
        }

        /** Represents an update10027Type. */
        class update10027Type implements Iupdate10027Type {

            /**
             * Constructs a new update10027Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10027Type.Iupdate10027Type);

            /** update10027Type resultList. */
            public resultList: game10027Type.IResultType[];

            /**
             * Creates a new update10027Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update10027Type instance
             */
            public static create(properties?: game10027Type.Iupdate10027Type): game10027Type.update10027Type;

            /**
             * Encodes the specified update10027Type message. Does not implicitly {@link game10027Type.update10027Type.verify|verify} messages.
             * @param message update10027Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10027Type.Iupdate10027Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update10027Type message, length delimited. Does not implicitly {@link game10027Type.update10027Type.verify|verify} messages.
             * @param message update10027Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10027Type.Iupdate10027Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update10027Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update10027Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10027Type.update10027Type;

            /**
             * Decodes an update10027Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update10027Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10027Type.update10027Type;

            /**
             * Verifies an update10027Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update10027Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update10027Type
             */
            public static fromObject(object: { [k: string]: any }): game10027Type.update10027Type;

            /**
             * Creates a plain object from an update10027Type message. Also converts values to other types if specified.
             * @param message update10027Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10027Type.update10027Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update10027Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ResultType. */
        interface IResultType {

            /** ResultType spinResult */
            spinResult: IspinResultType;

            /** ResultType removePos */
            removePos?: (number[] | null);

            /** ResultType crushRate */
            crushRate: number;
        }

        /** Represents a ResultType. */
        class ResultType implements IResultType {

            /**
             * Constructs a new ResultType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10027Type.IResultType);

            /** ResultType spinResult. */
            public spinResult: IspinResultType;

            /** ResultType removePos. */
            public removePos: number[];

            /** ResultType crushRate. */
            public crushRate: number;

            /**
             * Creates a new ResultType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ResultType instance
             */
            public static create(properties?: game10027Type.IResultType): game10027Type.ResultType;

            /**
             * Encodes the specified ResultType message. Does not implicitly {@link game10027Type.ResultType.verify|verify} messages.
             * @param message ResultType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10027Type.IResultType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ResultType message, length delimited. Does not implicitly {@link game10027Type.ResultType.verify|verify} messages.
             * @param message ResultType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10027Type.IResultType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResultType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ResultType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10027Type.ResultType;

            /**
             * Decodes a ResultType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ResultType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10027Type.ResultType;

            /**
             * Verifies a ResultType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a ResultType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ResultType
             */
            public static fromObject(object: { [k: string]: any }): game10027Type.ResultType;

            /**
             * Creates a plain object from a ResultType message. Also converts values to other types if specified.
             * @param message ResultType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10027Type.ResultType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ResultType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game10038Type. */
    export class game10038Type implements Igame10038Type {

        /**
         * Constructs a new game10038Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame10038Type);

        /** game10038Type data. */
        public data?: (game10038Type.Idata10038Type | null);

        /**
         * Creates a new game10038Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game10038Type instance
         */
        public static create(properties?: Igame10038Type): game10038Type;

        /**
         * Encodes the specified game10038Type message. Does not implicitly {@link game10038Type.verify|verify} messages.
         * @param message game10038Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame10038Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game10038Type message, length delimited. Does not implicitly {@link game10038Type.verify|verify} messages.
         * @param message game10038Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame10038Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game10038Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game10038Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10038Type;

        /**
         * Decodes a game10038Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game10038Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10038Type;

        /**
         * Verifies a game10038Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game10038Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game10038Type
         */
        public static fromObject(object: { [k: string]: any }): game10038Type;

        /**
         * Creates a plain object from a game10038Type message. Also converts values to other types if specified.
         * @param message game10038Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game10038Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game10038Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game10038Type {

        /** Properties of a data10038Type. */
        interface Idata10038Type {

            /** data10038Type normalGameData */
            normalGameData?: (game10038Type.Itask10038Type[] | null);

            /** data10038Type freeGameData */
            freeGameData?: (game10038Type.Itask10038Type[] | null);

            /** data10038Type wildChangePosList */
            wildChangePosList?: ((number | Long)[] | null);

            /** data10038Type averageCost */
            averageCost: (number | Long);
        }

        /** Represents a data10038Type. */
        class data10038Type implements Idata10038Type {

            /**
             * Constructs a new data10038Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10038Type.Idata10038Type);

            /** data10038Type normalGameData. */
            public normalGameData: game10038Type.Itask10038Type[];

            /** data10038Type freeGameData. */
            public freeGameData: game10038Type.Itask10038Type[];

            /** data10038Type wildChangePosList. */
            public wildChangePosList: (number | Long)[];

            /** data10038Type averageCost. */
            public averageCost: (number | Long);

            /**
             * Creates a new data10038Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data10038Type instance
             */
            public static create(properties?: game10038Type.Idata10038Type): game10038Type.data10038Type;

            /**
             * Encodes the specified data10038Type message. Does not implicitly {@link game10038Type.data10038Type.verify|verify} messages.
             * @param message data10038Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10038Type.Idata10038Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data10038Type message, length delimited. Does not implicitly {@link game10038Type.data10038Type.verify|verify} messages.
             * @param message data10038Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10038Type.Idata10038Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data10038Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data10038Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10038Type.data10038Type;

            /**
             * Decodes a data10038Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data10038Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10038Type.data10038Type;

            /**
             * Verifies a data10038Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data10038Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data10038Type
             */
            public static fromObject(object: { [k: string]: any }): game10038Type.data10038Type;

            /**
             * Creates a plain object from a data10038Type message. Also converts values to other types if specified.
             * @param message data10038Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10038Type.data10038Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data10038Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a task10038Type. */
        interface Itask10038Type {

            /** task10038Type elementId */
            elementId?: (number | null);

            /** task10038Type maxNum */
            maxNum?: (number | null);

            /** task10038Type num */
            num?: (number | null);
        }

        /** Represents a task10038Type. */
        class task10038Type implements Itask10038Type {

            /**
             * Constructs a new task10038Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10038Type.Itask10038Type);

            /** task10038Type elementId. */
            public elementId: number;

            /** task10038Type maxNum. */
            public maxNum: number;

            /** task10038Type num. */
            public num: number;

            /**
             * Creates a new task10038Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns task10038Type instance
             */
            public static create(properties?: game10038Type.Itask10038Type): game10038Type.task10038Type;

            /**
             * Encodes the specified task10038Type message. Does not implicitly {@link game10038Type.task10038Type.verify|verify} messages.
             * @param message task10038Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10038Type.Itask10038Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified task10038Type message, length delimited. Does not implicitly {@link game10038Type.task10038Type.verify|verify} messages.
             * @param message task10038Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10038Type.Itask10038Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a task10038Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns task10038Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10038Type.task10038Type;

            /**
             * Decodes a task10038Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns task10038Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10038Type.task10038Type;

            /**
             * Verifies a task10038Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a task10038Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns task10038Type
             */
            public static fromObject(object: { [k: string]: any }): game10038Type.task10038Type;

            /**
             * Creates a plain object from a task10038Type message. Also converts values to other types if specified.
             * @param message task10038Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10038Type.task10038Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this task10038Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game10039Type. */
    export class game10039Type implements Igame10039Type {

        /**
         * Constructs a new game10039Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame10039Type);

        /** game10039Type data. */
        public data?: (game10039Type.Idata10039Type | null);

        /** game10039Type update. */
        public update: game10039Type.Iupdate10039Type[];

        /**
         * Creates a new game10039Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game10039Type instance
         */
        public static create(properties?: Igame10039Type): game10039Type;

        /**
         * Encodes the specified game10039Type message. Does not implicitly {@link game10039Type.verify|verify} messages.
         * @param message game10039Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame10039Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game10039Type message, length delimited. Does not implicitly {@link game10039Type.verify|verify} messages.
         * @param message game10039Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame10039Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game10039Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game10039Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10039Type;

        /**
         * Decodes a game10039Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game10039Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10039Type;

        /**
         * Verifies a game10039Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game10039Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game10039Type
         */
        public static fromObject(object: { [k: string]: any }): game10039Type;

        /**
         * Creates a plain object from a game10039Type message. Also converts values to other types if specified.
         * @param message game10039Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game10039Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game10039Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game10039Type {

        /** Properties of a data10039Type. */
        interface Idata10039Type {

            /** data10039Type maskGrid */
            maskGrid?: (game10039Type.ImaskGridType[] | null);

            /** data10039Type changeMaskGrid */
            changeMaskGrid?: (game10039Type.ImaskGridType[] | null);

            /** data10039Type fixWildList */
            fixWildList?: (game10039Type.ImaskGridType[] | null);

            /** data10039Type deleteMaskPos */
            deleteMaskPos?: ((number | Long)[] | null);

            /** data10039Type freeNumList */
            freeNumList?: (game10039Type.IfreeNumListType[] | null);

            /** data10039Type targetNum */
            targetNum: number;

            /** data10039Type num */
            num: number;

            /** data10039Type reward */
            reward: (number | Long);
        }

        /** Represents a data10039Type. */
        class data10039Type implements Idata10039Type {

            /**
             * Constructs a new data10039Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10039Type.Idata10039Type);

            /** data10039Type maskGrid. */
            public maskGrid: game10039Type.ImaskGridType[];

            /** data10039Type changeMaskGrid. */
            public changeMaskGrid: game10039Type.ImaskGridType[];

            /** data10039Type fixWildList. */
            public fixWildList: game10039Type.ImaskGridType[];

            /** data10039Type deleteMaskPos. */
            public deleteMaskPos: (number | Long)[];

            /** data10039Type freeNumList. */
            public freeNumList: game10039Type.IfreeNumListType[];

            /** data10039Type targetNum. */
            public targetNum: number;

            /** data10039Type num. */
            public num: number;

            /** data10039Type reward. */
            public reward: (number | Long);

            /**
             * Creates a new data10039Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data10039Type instance
             */
            public static create(properties?: game10039Type.Idata10039Type): game10039Type.data10039Type;

            /**
             * Encodes the specified data10039Type message. Does not implicitly {@link game10039Type.data10039Type.verify|verify} messages.
             * @param message data10039Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10039Type.Idata10039Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data10039Type message, length delimited. Does not implicitly {@link game10039Type.data10039Type.verify|verify} messages.
             * @param message data10039Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10039Type.Idata10039Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data10039Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data10039Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10039Type.data10039Type;

            /**
             * Decodes a data10039Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data10039Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10039Type.data10039Type;

            /**
             * Verifies a data10039Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data10039Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data10039Type
             */
            public static fromObject(object: { [k: string]: any }): game10039Type.data10039Type;

            /**
             * Creates a plain object from a data10039Type message. Also converts values to other types if specified.
             * @param message data10039Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10039Type.data10039Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data10039Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update10039Type. */
        interface Iupdate10039Type {

            /** update10039Type index */
            index: number;

            /** update10039Type maskGrid */
            maskGrid?: (game10039Type.ImaskGridType[] | null);

            /** update10039Type changeMaskGrid */
            changeMaskGrid?: (game10039Type.ImaskGridType[] | null);

            /** update10039Type fixWildList */
            fixWildList?: (game10039Type.ImaskGridType[] | null);

            /** update10039Type deleteMaskPos */
            deleteMaskPos?: ((number | Long)[] | null);

            /** update10039Type freeNumList */
            freeNumList?: (game10039Type.IfreeNumListType[] | null);

            /** update10039Type targetNum */
            targetNum: number;

            /** update10039Type num */
            num: number;

            /** update10039Type reward */
            reward: (number | Long);
        }

        /** Represents an update10039Type. */
        class update10039Type implements Iupdate10039Type {

            /**
             * Constructs a new update10039Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10039Type.Iupdate10039Type);

            /** update10039Type index. */
            public index: number;

            /** update10039Type maskGrid. */
            public maskGrid: game10039Type.ImaskGridType[];

            /** update10039Type changeMaskGrid. */
            public changeMaskGrid: game10039Type.ImaskGridType[];

            /** update10039Type fixWildList. */
            public fixWildList: game10039Type.ImaskGridType[];

            /** update10039Type deleteMaskPos. */
            public deleteMaskPos: (number | Long)[];

            /** update10039Type freeNumList. */
            public freeNumList: game10039Type.IfreeNumListType[];

            /** update10039Type targetNum. */
            public targetNum: number;

            /** update10039Type num. */
            public num: number;

            /** update10039Type reward. */
            public reward: (number | Long);

            /**
             * Creates a new update10039Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update10039Type instance
             */
            public static create(properties?: game10039Type.Iupdate10039Type): game10039Type.update10039Type;

            /**
             * Encodes the specified update10039Type message. Does not implicitly {@link game10039Type.update10039Type.verify|verify} messages.
             * @param message update10039Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10039Type.Iupdate10039Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update10039Type message, length delimited. Does not implicitly {@link game10039Type.update10039Type.verify|verify} messages.
             * @param message update10039Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10039Type.Iupdate10039Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update10039Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update10039Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10039Type.update10039Type;

            /**
             * Decodes an update10039Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update10039Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10039Type.update10039Type;

            /**
             * Verifies an update10039Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update10039Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update10039Type
             */
            public static fromObject(object: { [k: string]: any }): game10039Type.update10039Type;

            /**
             * Creates a plain object from an update10039Type message. Also converts values to other types if specified.
             * @param message update10039Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10039Type.update10039Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update10039Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a maskGridType. */
        interface ImaskGridType {

            /** maskGridType pos */
            pos: number;

            /** maskGridType elem */
            elem: number;
        }

        /** Represents a maskGridType. */
        class maskGridType implements ImaskGridType {

            /**
             * Constructs a new maskGridType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10039Type.ImaskGridType);

            /** maskGridType pos. */
            public pos: number;

            /** maskGridType elem. */
            public elem: number;

            /**
             * Creates a new maskGridType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns maskGridType instance
             */
            public static create(properties?: game10039Type.ImaskGridType): game10039Type.maskGridType;

            /**
             * Encodes the specified maskGridType message. Does not implicitly {@link game10039Type.maskGridType.verify|verify} messages.
             * @param message maskGridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10039Type.ImaskGridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified maskGridType message, length delimited. Does not implicitly {@link game10039Type.maskGridType.verify|verify} messages.
             * @param message maskGridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10039Type.ImaskGridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a maskGridType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns maskGridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10039Type.maskGridType;

            /**
             * Decodes a maskGridType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns maskGridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10039Type.maskGridType;

            /**
             * Verifies a maskGridType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a maskGridType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns maskGridType
             */
            public static fromObject(object: { [k: string]: any }): game10039Type.maskGridType;

            /**
             * Creates a plain object from a maskGridType message. Also converts values to other types if specified.
             * @param message maskGridType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10039Type.maskGridType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this maskGridType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a freeNumListType. */
        interface IfreeNumListType {

            /** freeNumListType pos */
            pos: number;

            /** freeNumListType num */
            num: number;
        }

        /** Represents a freeNumListType. */
        class freeNumListType implements IfreeNumListType {

            /**
             * Constructs a new freeNumListType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10039Type.IfreeNumListType);

            /** freeNumListType pos. */
            public pos: number;

            /** freeNumListType num. */
            public num: number;

            /**
             * Creates a new freeNumListType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns freeNumListType instance
             */
            public static create(properties?: game10039Type.IfreeNumListType): game10039Type.freeNumListType;

            /**
             * Encodes the specified freeNumListType message. Does not implicitly {@link game10039Type.freeNumListType.verify|verify} messages.
             * @param message freeNumListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10039Type.IfreeNumListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified freeNumListType message, length delimited. Does not implicitly {@link game10039Type.freeNumListType.verify|verify} messages.
             * @param message freeNumListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10039Type.IfreeNumListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a freeNumListType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns freeNumListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10039Type.freeNumListType;

            /**
             * Decodes a freeNumListType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns freeNumListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10039Type.freeNumListType;

            /**
             * Verifies a freeNumListType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a freeNumListType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns freeNumListType
             */
            public static fromObject(object: { [k: string]: any }): game10039Type.freeNumListType;

            /**
             * Creates a plain object from a freeNumListType message. Also converts values to other types if specified.
             * @param message freeNumListType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10039Type.freeNumListType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this freeNumListType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game10042Type. */
    export class game10042Type implements Igame10042Type {

        /**
         * Constructs a new game10042Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame10042Type);

        /** game10042Type data. */
        public data?: (game10042Type.Idata10042Type | null);

        /** game10042Type update. */
        public update: game10042Type.Iupdate10042Type[];

        /**
         * Creates a new game10042Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game10042Type instance
         */
        public static create(properties?: Igame10042Type): game10042Type;

        /**
         * Encodes the specified game10042Type message. Does not implicitly {@link game10042Type.verify|verify} messages.
         * @param message game10042Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame10042Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game10042Type message, length delimited. Does not implicitly {@link game10042Type.verify|verify} messages.
         * @param message game10042Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame10042Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game10042Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game10042Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10042Type;

        /**
         * Decodes a game10042Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game10042Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10042Type;

        /**
         * Verifies a game10042Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game10042Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game10042Type
         */
        public static fromObject(object: { [k: string]: any }): game10042Type;

        /**
         * Creates a plain object from a game10042Type message. Also converts values to other types if specified.
         * @param message game10042Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game10042Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game10042Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game10042Type {

        /** Properties of a data10042Type. */
        interface Idata10042Type {

            /** data10042Type fixColumn */
            fixColumn?: ((number | Long)[] | null);
        }

        /** Represents a data10042Type. */
        class data10042Type implements Idata10042Type {

            /**
             * Constructs a new data10042Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10042Type.Idata10042Type);

            /** data10042Type fixColumn. */
            public fixColumn: (number | Long)[];

            /**
             * Creates a new data10042Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data10042Type instance
             */
            public static create(properties?: game10042Type.Idata10042Type): game10042Type.data10042Type;

            /**
             * Encodes the specified data10042Type message. Does not implicitly {@link game10042Type.data10042Type.verify|verify} messages.
             * @param message data10042Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10042Type.Idata10042Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data10042Type message, length delimited. Does not implicitly {@link game10042Type.data10042Type.verify|verify} messages.
             * @param message data10042Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10042Type.Idata10042Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data10042Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data10042Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10042Type.data10042Type;

            /**
             * Decodes a data10042Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data10042Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10042Type.data10042Type;

            /**
             * Verifies a data10042Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data10042Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data10042Type
             */
            public static fromObject(object: { [k: string]: any }): game10042Type.data10042Type;

            /**
             * Creates a plain object from a data10042Type message. Also converts values to other types if specified.
             * @param message data10042Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10042Type.data10042Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data10042Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update10042Type. */
        interface Iupdate10042Type {

            /** update10042Type index */
            index: number;

            /** update10042Type fixColumn */
            fixColumn?: ((number | Long)[] | null);
        }

        /** Represents an update10042Type. */
        class update10042Type implements Iupdate10042Type {

            /**
             * Constructs a new update10042Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10042Type.Iupdate10042Type);

            /** update10042Type index. */
            public index: number;

            /** update10042Type fixColumn. */
            public fixColumn: (number | Long)[];

            /**
             * Creates a new update10042Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update10042Type instance
             */
            public static create(properties?: game10042Type.Iupdate10042Type): game10042Type.update10042Type;

            /**
             * Encodes the specified update10042Type message. Does not implicitly {@link game10042Type.update10042Type.verify|verify} messages.
             * @param message update10042Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10042Type.Iupdate10042Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update10042Type message, length delimited. Does not implicitly {@link game10042Type.update10042Type.verify|verify} messages.
             * @param message update10042Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10042Type.Iupdate10042Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update10042Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update10042Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10042Type.update10042Type;

            /**
             * Decodes an update10042Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update10042Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10042Type.update10042Type;

            /**
             * Verifies an update10042Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update10042Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update10042Type
             */
            public static fromObject(object: { [k: string]: any }): game10042Type.update10042Type;

            /**
             * Creates a plain object from an update10042Type message. Also converts values to other types if specified.
             * @param message update10042Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10042Type.update10042Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update10042Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game10044Type. */
    export class game10044Type implements Igame10044Type {

        /**
         * Constructs a new game10044Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame10044Type);

        /** game10044Type data. */
        public data?: (game10044Type.Idata10044Type | null);

        /** game10044Type update. */
        public update: game10044Type.Iupdate10044Type[];

        /**
         * Creates a new game10044Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game10044Type instance
         */
        public static create(properties?: Igame10044Type): game10044Type;

        /**
         * Encodes the specified game10044Type message. Does not implicitly {@link game10044Type.verify|verify} messages.
         * @param message game10044Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame10044Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game10044Type message, length delimited. Does not implicitly {@link game10044Type.verify|verify} messages.
         * @param message game10044Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame10044Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game10044Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game10044Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10044Type;

        /**
         * Decodes a game10044Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game10044Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10044Type;

        /**
         * Verifies a game10044Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game10044Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game10044Type
         */
        public static fromObject(object: { [k: string]: any }): game10044Type;

        /**
         * Creates a plain object from a game10044Type message. Also converts values to other types if specified.
         * @param message game10044Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game10044Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game10044Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game10044Type {

        /** Properties of a data10044Type. */
        interface Idata10044Type {

            /** data10044Type uniteGrid */
            uniteGrid?: (IuniteGridType[] | null);
        }

        /** Represents a data10044Type. */
        class data10044Type implements Idata10044Type {

            /**
             * Constructs a new data10044Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10044Type.Idata10044Type);

            /** data10044Type uniteGrid. */
            public uniteGrid: IuniteGridType[];

            /**
             * Creates a new data10044Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data10044Type instance
             */
            public static create(properties?: game10044Type.Idata10044Type): game10044Type.data10044Type;

            /**
             * Encodes the specified data10044Type message. Does not implicitly {@link game10044Type.data10044Type.verify|verify} messages.
             * @param message data10044Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10044Type.Idata10044Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data10044Type message, length delimited. Does not implicitly {@link game10044Type.data10044Type.verify|verify} messages.
             * @param message data10044Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10044Type.Idata10044Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data10044Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data10044Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10044Type.data10044Type;

            /**
             * Decodes a data10044Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data10044Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10044Type.data10044Type;

            /**
             * Verifies a data10044Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data10044Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data10044Type
             */
            public static fromObject(object: { [k: string]: any }): game10044Type.data10044Type;

            /**
             * Creates a plain object from a data10044Type message. Also converts values to other types if specified.
             * @param message data10044Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10044Type.data10044Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data10044Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update10044Type. */
        interface Iupdate10044Type {

            /** update10044Type index */
            index: number;

            /** update10044Type uniteGrid */
            uniteGrid: IuniteGridType;
        }

        /** Represents an update10044Type. */
        class update10044Type implements Iupdate10044Type {

            /**
             * Constructs a new update10044Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10044Type.Iupdate10044Type);

            /** update10044Type index. */
            public index: number;

            /** update10044Type uniteGrid. */
            public uniteGrid: IuniteGridType;

            /**
             * Creates a new update10044Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update10044Type instance
             */
            public static create(properties?: game10044Type.Iupdate10044Type): game10044Type.update10044Type;

            /**
             * Encodes the specified update10044Type message. Does not implicitly {@link game10044Type.update10044Type.verify|verify} messages.
             * @param message update10044Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10044Type.Iupdate10044Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update10044Type message, length delimited. Does not implicitly {@link game10044Type.update10044Type.verify|verify} messages.
             * @param message update10044Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10044Type.Iupdate10044Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update10044Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update10044Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10044Type.update10044Type;

            /**
             * Decodes an update10044Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update10044Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10044Type.update10044Type;

            /**
             * Verifies an update10044Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update10044Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update10044Type
             */
            public static fromObject(object: { [k: string]: any }): game10044Type.update10044Type;

            /**
             * Creates a plain object from an update10044Type message. Also converts values to other types if specified.
             * @param message update10044Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10044Type.update10044Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update10044Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents an uniteGridType. */
    export class uniteGridType implements IuniteGridType {

        /**
         * Constructs a new uniteGridType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IuniteGridType);

        /** uniteGridType pos. */
        public pos: number;

        /** uniteGridType elem. */
        public elem: number;

        /**
         * Creates a new uniteGridType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns uniteGridType instance
         */
        public static create(properties?: IuniteGridType): uniteGridType;

        /**
         * Encodes the specified uniteGridType message. Does not implicitly {@link uniteGridType.verify|verify} messages.
         * @param message uniteGridType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IuniteGridType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified uniteGridType message, length delimited. Does not implicitly {@link uniteGridType.verify|verify} messages.
         * @param message uniteGridType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IuniteGridType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an uniteGridType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns uniteGridType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): uniteGridType;

        /**
         * Decodes an uniteGridType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns uniteGridType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): uniteGridType;

        /**
         * Verifies an uniteGridType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates an uniteGridType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns uniteGridType
         */
        public static fromObject(object: { [k: string]: any }): uniteGridType;

        /**
         * Creates a plain object from an uniteGridType message. Also converts values to other types if specified.
         * @param message uniteGridType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: uniteGridType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this uniteGridType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a game10045Type. */
    export class game10045Type implements Igame10045Type {

        /**
         * Constructs a new game10045Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame10045Type);

        /** game10045Type data. */
        public data?: (game10045Type.Idata10045Type | null);

        /** game10045Type update. */
        public update: game10045Type.Iupdate10045Type[];

        /**
         * Creates a new game10045Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game10045Type instance
         */
        public static create(properties?: Igame10045Type): game10045Type;

        /**
         * Encodes the specified game10045Type message. Does not implicitly {@link game10045Type.verify|verify} messages.
         * @param message game10045Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame10045Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game10045Type message, length delimited. Does not implicitly {@link game10045Type.verify|verify} messages.
         * @param message game10045Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame10045Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game10045Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game10045Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10045Type;

        /**
         * Decodes a game10045Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game10045Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10045Type;

        /**
         * Verifies a game10045Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game10045Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game10045Type
         */
        public static fromObject(object: { [k: string]: any }): game10045Type;

        /**
         * Creates a plain object from a game10045Type message. Also converts values to other types if specified.
         * @param message game10045Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game10045Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game10045Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game10045Type {

        /** Properties of a data10045Type. */
        interface Idata10045Type {

            /** data10045Type resultList */
            resultList?: (game10045Type.IResultType[] | null);
        }

        /** Represents a data10045Type. */
        class data10045Type implements Idata10045Type {

            /**
             * Constructs a new data10045Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10045Type.Idata10045Type);

            /** data10045Type resultList. */
            public resultList: game10045Type.IResultType[];

            /**
             * Creates a new data10045Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data10045Type instance
             */
            public static create(properties?: game10045Type.Idata10045Type): game10045Type.data10045Type;

            /**
             * Encodes the specified data10045Type message. Does not implicitly {@link game10045Type.data10045Type.verify|verify} messages.
             * @param message data10045Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10045Type.Idata10045Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data10045Type message, length delimited. Does not implicitly {@link game10045Type.data10045Type.verify|verify} messages.
             * @param message data10045Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10045Type.Idata10045Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data10045Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data10045Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10045Type.data10045Type;

            /**
             * Decodes a data10045Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data10045Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10045Type.data10045Type;

            /**
             * Verifies a data10045Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data10045Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data10045Type
             */
            public static fromObject(object: { [k: string]: any }): game10045Type.data10045Type;

            /**
             * Creates a plain object from a data10045Type message. Also converts values to other types if specified.
             * @param message data10045Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10045Type.data10045Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data10045Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update10045Type. */
        interface Iupdate10045Type {

            /** update10045Type index */
            index: number;

            /** update10045Type resultList */
            resultList?: (game10045Type.IResultType[] | null);
        }

        /** Represents an update10045Type. */
        class update10045Type implements Iupdate10045Type {

            /**
             * Constructs a new update10045Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10045Type.Iupdate10045Type);

            /** update10045Type index. */
            public index: number;

            /** update10045Type resultList. */
            public resultList: game10045Type.IResultType[];

            /**
             * Creates a new update10045Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update10045Type instance
             */
            public static create(properties?: game10045Type.Iupdate10045Type): game10045Type.update10045Type;

            /**
             * Encodes the specified update10045Type message. Does not implicitly {@link game10045Type.update10045Type.verify|verify} messages.
             * @param message update10045Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10045Type.Iupdate10045Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update10045Type message, length delimited. Does not implicitly {@link game10045Type.update10045Type.verify|verify} messages.
             * @param message update10045Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10045Type.Iupdate10045Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update10045Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update10045Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10045Type.update10045Type;

            /**
             * Decodes an update10045Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update10045Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10045Type.update10045Type;

            /**
             * Verifies an update10045Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update10045Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update10045Type
             */
            public static fromObject(object: { [k: string]: any }): game10045Type.update10045Type;

            /**
             * Creates a plain object from an update10045Type message. Also converts values to other types if specified.
             * @param message update10045Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10045Type.update10045Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update10045Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ResultType. */
        interface IResultType {

            /** ResultType spinResult */
            spinResult: IspinResultType;

            /** ResultType moveColumns_List */
            moveColumns_List?: (number[] | null);

            /** ResultType winStreakNum */
            winStreakNum: number;
        }

        /** Represents a ResultType. */
        class ResultType implements IResultType {

            /**
             * Constructs a new ResultType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10045Type.IResultType);

            /** ResultType spinResult. */
            public spinResult: IspinResultType;

            /** ResultType moveColumns_List. */
            public moveColumns_List: number[];

            /** ResultType winStreakNum. */
            public winStreakNum: number;

            /**
             * Creates a new ResultType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ResultType instance
             */
            public static create(properties?: game10045Type.IResultType): game10045Type.ResultType;

            /**
             * Encodes the specified ResultType message. Does not implicitly {@link game10045Type.ResultType.verify|verify} messages.
             * @param message ResultType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10045Type.IResultType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ResultType message, length delimited. Does not implicitly {@link game10045Type.ResultType.verify|verify} messages.
             * @param message ResultType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10045Type.IResultType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResultType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ResultType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10045Type.ResultType;

            /**
             * Decodes a ResultType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ResultType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10045Type.ResultType;

            /**
             * Verifies a ResultType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a ResultType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ResultType
             */
            public static fromObject(object: { [k: string]: any }): game10045Type.ResultType;

            /**
             * Creates a plain object from a ResultType message. Also converts values to other types if specified.
             * @param message ResultType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10045Type.ResultType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ResultType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game10046Type. */
    export class game10046Type implements Igame10046Type {

        /**
         * Constructs a new game10046Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame10046Type);

        /** game10046Type data. */
        public data?: (game10046Type.Idata10046Type | null);

        /** game10046Type update. */
        public update: game10046Type.Iupdate10046Type[];

        /**
         * Creates a new game10046Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game10046Type instance
         */
        public static create(properties?: Igame10046Type): game10046Type;

        /**
         * Encodes the specified game10046Type message. Does not implicitly {@link game10046Type.verify|verify} messages.
         * @param message game10046Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame10046Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game10046Type message, length delimited. Does not implicitly {@link game10046Type.verify|verify} messages.
         * @param message game10046Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame10046Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game10046Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game10046Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10046Type;

        /**
         * Decodes a game10046Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game10046Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10046Type;

        /**
         * Verifies a game10046Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game10046Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game10046Type
         */
        public static fromObject(object: { [k: string]: any }): game10046Type;

        /**
         * Creates a plain object from a game10046Type message. Also converts values to other types if specified.
         * @param message game10046Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game10046Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game10046Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game10046Type {

        /** Properties of a data10046Type. */
        interface Idata10046Type {

            /** data10046Type wildRecentPos */
            wildRecentPos?: (game10046Type.IwildType[] | null);

            /** data10046Type wildNextPos */
            wildNextPos?: (game10046Type.IwildType[] | null);
        }

        /** Represents a data10046Type. */
        class data10046Type implements Idata10046Type {

            /**
             * Constructs a new data10046Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10046Type.Idata10046Type);

            /** data10046Type wildRecentPos. */
            public wildRecentPos: game10046Type.IwildType[];

            /** data10046Type wildNextPos. */
            public wildNextPos: game10046Type.IwildType[];

            /**
             * Creates a new data10046Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data10046Type instance
             */
            public static create(properties?: game10046Type.Idata10046Type): game10046Type.data10046Type;

            /**
             * Encodes the specified data10046Type message. Does not implicitly {@link game10046Type.data10046Type.verify|verify} messages.
             * @param message data10046Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10046Type.Idata10046Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data10046Type message, length delimited. Does not implicitly {@link game10046Type.data10046Type.verify|verify} messages.
             * @param message data10046Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10046Type.Idata10046Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data10046Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data10046Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10046Type.data10046Type;

            /**
             * Decodes a data10046Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data10046Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10046Type.data10046Type;

            /**
             * Verifies a data10046Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data10046Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data10046Type
             */
            public static fromObject(object: { [k: string]: any }): game10046Type.data10046Type;

            /**
             * Creates a plain object from a data10046Type message. Also converts values to other types if specified.
             * @param message data10046Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10046Type.data10046Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data10046Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update10046Type. */
        interface Iupdate10046Type {

            /** update10046Type index */
            index: number;

            /** update10046Type wildRecentPos */
            wildRecentPos?: (game10046Type.IwildType[] | null);

            /** update10046Type wildNextPos */
            wildNextPos?: (game10046Type.IwildType[] | null);
        }

        /** Represents an update10046Type. */
        class update10046Type implements Iupdate10046Type {

            /**
             * Constructs a new update10046Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10046Type.Iupdate10046Type);

            /** update10046Type index. */
            public index: number;

            /** update10046Type wildRecentPos. */
            public wildRecentPos: game10046Type.IwildType[];

            /** update10046Type wildNextPos. */
            public wildNextPos: game10046Type.IwildType[];

            /**
             * Creates a new update10046Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update10046Type instance
             */
            public static create(properties?: game10046Type.Iupdate10046Type): game10046Type.update10046Type;

            /**
             * Encodes the specified update10046Type message. Does not implicitly {@link game10046Type.update10046Type.verify|verify} messages.
             * @param message update10046Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10046Type.Iupdate10046Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update10046Type message, length delimited. Does not implicitly {@link game10046Type.update10046Type.verify|verify} messages.
             * @param message update10046Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10046Type.Iupdate10046Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update10046Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update10046Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10046Type.update10046Type;

            /**
             * Decodes an update10046Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update10046Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10046Type.update10046Type;

            /**
             * Verifies an update10046Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update10046Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update10046Type
             */
            public static fromObject(object: { [k: string]: any }): game10046Type.update10046Type;

            /**
             * Creates a plain object from an update10046Type message. Also converts values to other types if specified.
             * @param message update10046Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10046Type.update10046Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update10046Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a wildType. */
        interface IwildType {

            /** wildType pos */
            pos: number;

            /** wildType ele */
            ele: number;

            /** wildType nextPos */
            nextPos?: (number | null);

            /** wildType isNew */
            isNew?: (number | null);
        }

        /** Represents a wildType. */
        class wildType implements IwildType {

            /**
             * Constructs a new wildType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10046Type.IwildType);

            /** wildType pos. */
            public pos: number;

            /** wildType ele. */
            public ele: number;

            /** wildType nextPos. */
            public nextPos: number;

            /** wildType isNew. */
            public isNew: number;

            /**
             * Creates a new wildType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns wildType instance
             */
            public static create(properties?: game10046Type.IwildType): game10046Type.wildType;

            /**
             * Encodes the specified wildType message. Does not implicitly {@link game10046Type.wildType.verify|verify} messages.
             * @param message wildType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10046Type.IwildType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified wildType message, length delimited. Does not implicitly {@link game10046Type.wildType.verify|verify} messages.
             * @param message wildType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10046Type.IwildType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a wildType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns wildType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10046Type.wildType;

            /**
             * Decodes a wildType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns wildType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10046Type.wildType;

            /**
             * Verifies a wildType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a wildType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns wildType
             */
            public static fromObject(object: { [k: string]: any }): game10046Type.wildType;

            /**
             * Creates a plain object from a wildType message. Also converts values to other types if specified.
             * @param message wildType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10046Type.wildType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this wildType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game10053Type. */
    export class game10053Type implements Igame10053Type {

        /**
         * Constructs a new game10053Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame10053Type);

        /** game10053Type data. */
        public data?: (game10053Type.Idata10053Type | null);

        /** game10053Type update. */
        public update: game10053Type.Iupdate10053Type[];

        /**
         * Creates a new game10053Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game10053Type instance
         */
        public static create(properties?: Igame10053Type): game10053Type;

        /**
         * Encodes the specified game10053Type message. Does not implicitly {@link game10053Type.verify|verify} messages.
         * @param message game10053Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame10053Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game10053Type message, length delimited. Does not implicitly {@link game10053Type.verify|verify} messages.
         * @param message game10053Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame10053Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game10053Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game10053Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10053Type;

        /**
         * Decodes a game10053Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game10053Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10053Type;

        /**
         * Verifies a game10053Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game10053Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game10053Type
         */
        public static fromObject(object: { [k: string]: any }): game10053Type;

        /**
         * Creates a plain object from a game10053Type message. Also converts values to other types if specified.
         * @param message game10053Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game10053Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game10053Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game10053Type {

        /** Properties of a data10053Type. */
        interface Idata10053Type {

            /** data10053Type isSpiderAppear */
            isSpiderAppear: boolean;

            /** data10053Type isGoblinAppear */
            isGoblinAppear: boolean;

            /** data10053Type isFreezing */
            isFreezing: boolean;
        }

        /** Represents a data10053Type. */
        class data10053Type implements Idata10053Type {

            /**
             * Constructs a new data10053Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10053Type.Idata10053Type);

            /** data10053Type isSpiderAppear. */
            public isSpiderAppear: boolean;

            /** data10053Type isGoblinAppear. */
            public isGoblinAppear: boolean;

            /** data10053Type isFreezing. */
            public isFreezing: boolean;

            /**
             * Creates a new data10053Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data10053Type instance
             */
            public static create(properties?: game10053Type.Idata10053Type): game10053Type.data10053Type;

            /**
             * Encodes the specified data10053Type message. Does not implicitly {@link game10053Type.data10053Type.verify|verify} messages.
             * @param message data10053Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10053Type.Idata10053Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data10053Type message, length delimited. Does not implicitly {@link game10053Type.data10053Type.verify|verify} messages.
             * @param message data10053Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10053Type.Idata10053Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data10053Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data10053Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10053Type.data10053Type;

            /**
             * Decodes a data10053Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data10053Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10053Type.data10053Type;

            /**
             * Verifies a data10053Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data10053Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data10053Type
             */
            public static fromObject(object: { [k: string]: any }): game10053Type.data10053Type;

            /**
             * Creates a plain object from a data10053Type message. Also converts values to other types if specified.
             * @param message data10053Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10053Type.data10053Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data10053Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update10053Type. */
        interface Iupdate10053Type {

            /** update10053Type index */
            index: number;

            /** update10053Type isSpiderAppear */
            isSpiderAppear: boolean;

            /** update10053Type isGoblinAppear */
            isGoblinAppear: boolean;

            /** update10053Type isFreezing */
            isFreezing: boolean;
        }

        /** Represents an update10053Type. */
        class update10053Type implements Iupdate10053Type {

            /**
             * Constructs a new update10053Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10053Type.Iupdate10053Type);

            /** update10053Type index. */
            public index: number;

            /** update10053Type isSpiderAppear. */
            public isSpiderAppear: boolean;

            /** update10053Type isGoblinAppear. */
            public isGoblinAppear: boolean;

            /** update10053Type isFreezing. */
            public isFreezing: boolean;

            /**
             * Creates a new update10053Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update10053Type instance
             */
            public static create(properties?: game10053Type.Iupdate10053Type): game10053Type.update10053Type;

            /**
             * Encodes the specified update10053Type message. Does not implicitly {@link game10053Type.update10053Type.verify|verify} messages.
             * @param message update10053Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10053Type.Iupdate10053Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update10053Type message, length delimited. Does not implicitly {@link game10053Type.update10053Type.verify|verify} messages.
             * @param message update10053Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10053Type.Iupdate10053Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update10053Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update10053Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10053Type.update10053Type;

            /**
             * Decodes an update10053Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update10053Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10053Type.update10053Type;

            /**
             * Verifies an update10053Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update10053Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update10053Type
             */
            public static fromObject(object: { [k: string]: any }): game10053Type.update10053Type;

            /**
             * Creates a plain object from an update10053Type message. Also converts values to other types if specified.
             * @param message update10053Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10053Type.update10053Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update10053Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game10056Type. */
    export class game10056Type implements Igame10056Type {

        /**
         * Constructs a new game10056Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame10056Type);

        /** game10056Type data. */
        public data?: (game10056Type.Idata10056Type | null);

        /** game10056Type update. */
        public update: game10056Type.Iupdate10056Type[];

        /**
         * Creates a new game10056Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game10056Type instance
         */
        public static create(properties?: Igame10056Type): game10056Type;

        /**
         * Encodes the specified game10056Type message. Does not implicitly {@link game10056Type.verify|verify} messages.
         * @param message game10056Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame10056Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game10056Type message, length delimited. Does not implicitly {@link game10056Type.verify|verify} messages.
         * @param message game10056Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame10056Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game10056Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game10056Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10056Type;

        /**
         * Decodes a game10056Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game10056Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10056Type;

        /**
         * Verifies a game10056Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game10056Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game10056Type
         */
        public static fromObject(object: { [k: string]: any }): game10056Type;

        /**
         * Creates a plain object from a game10056Type message. Also converts values to other types if specified.
         * @param message game10056Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game10056Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game10056Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game10056Type {

        /** Properties of a data10056Type. */
        interface Idata10056Type {

            /** data10056Type freezeList */
            freezeList?: (IfreezeListType[] | null);
        }

        /** Represents a data10056Type. */
        class data10056Type implements Idata10056Type {

            /**
             * Constructs a new data10056Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10056Type.Idata10056Type);

            /** data10056Type freezeList. */
            public freezeList: IfreezeListType[];

            /**
             * Creates a new data10056Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data10056Type instance
             */
            public static create(properties?: game10056Type.Idata10056Type): game10056Type.data10056Type;

            /**
             * Encodes the specified data10056Type message. Does not implicitly {@link game10056Type.data10056Type.verify|verify} messages.
             * @param message data10056Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10056Type.Idata10056Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data10056Type message, length delimited. Does not implicitly {@link game10056Type.data10056Type.verify|verify} messages.
             * @param message data10056Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10056Type.Idata10056Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data10056Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data10056Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10056Type.data10056Type;

            /**
             * Decodes a data10056Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data10056Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10056Type.data10056Type;

            /**
             * Verifies a data10056Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data10056Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data10056Type
             */
            public static fromObject(object: { [k: string]: any }): game10056Type.data10056Type;

            /**
             * Creates a plain object from a data10056Type message. Also converts values to other types if specified.
             * @param message data10056Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10056Type.data10056Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data10056Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update10056Type. */
        interface Iupdate10056Type {

            /** update10056Type index */
            index: number;

            /** update10056Type freezeList */
            freezeList?: (IfreezeListType[] | null);
        }

        /** Represents an update10056Type. */
        class update10056Type implements Iupdate10056Type {

            /**
             * Constructs a new update10056Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10056Type.Iupdate10056Type);

            /** update10056Type index. */
            public index: number;

            /** update10056Type freezeList. */
            public freezeList: IfreezeListType[];

            /**
             * Creates a new update10056Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update10056Type instance
             */
            public static create(properties?: game10056Type.Iupdate10056Type): game10056Type.update10056Type;

            /**
             * Encodes the specified update10056Type message. Does not implicitly {@link game10056Type.update10056Type.verify|verify} messages.
             * @param message update10056Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10056Type.Iupdate10056Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update10056Type message, length delimited. Does not implicitly {@link game10056Type.update10056Type.verify|verify} messages.
             * @param message update10056Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10056Type.Iupdate10056Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update10056Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update10056Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10056Type.update10056Type;

            /**
             * Decodes an update10056Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update10056Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10056Type.update10056Type;

            /**
             * Verifies an update10056Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update10056Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update10056Type
             */
            public static fromObject(object: { [k: string]: any }): game10056Type.update10056Type;

            /**
             * Creates a plain object from an update10056Type message. Also converts values to other types if specified.
             * @param message update10056Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10056Type.update10056Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update10056Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a freezeListType. */
    export class freezeListType implements IfreezeListType {

        /**
         * Constructs a new freezeListType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IfreezeListType);

        /** freezeListType pos. */
        public pos: number;

        /** freezeListType elem. */
        public elem: number;

        /** freezeListType num. */
        public num: number;

        /**
         * Creates a new freezeListType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns freezeListType instance
         */
        public static create(properties?: IfreezeListType): freezeListType;

        /**
         * Encodes the specified freezeListType message. Does not implicitly {@link freezeListType.verify|verify} messages.
         * @param message freezeListType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IfreezeListType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified freezeListType message, length delimited. Does not implicitly {@link freezeListType.verify|verify} messages.
         * @param message freezeListType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IfreezeListType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a freezeListType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns freezeListType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): freezeListType;

        /**
         * Decodes a freezeListType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns freezeListType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): freezeListType;

        /**
         * Verifies a freezeListType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a freezeListType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns freezeListType
         */
        public static fromObject(object: { [k: string]: any }): freezeListType;

        /**
         * Creates a plain object from a freezeListType message. Also converts values to other types if specified.
         * @param message freezeListType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: freezeListType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this freezeListType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a game10057Type. */
    export class game10057Type implements Igame10057Type {

        /**
         * Constructs a new game10057Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame10057Type);

        /** game10057Type data. */
        public data?: (game10057Type.Idata10057Type | null);

        /** game10057Type update. */
        public update: game10057Type.Iupdate10057Type[];

        /**
         * Creates a new game10057Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game10057Type instance
         */
        public static create(properties?: Igame10057Type): game10057Type;

        /**
         * Encodes the specified game10057Type message. Does not implicitly {@link game10057Type.verify|verify} messages.
         * @param message game10057Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame10057Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game10057Type message, length delimited. Does not implicitly {@link game10057Type.verify|verify} messages.
         * @param message game10057Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame10057Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game10057Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game10057Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10057Type;

        /**
         * Decodes a game10057Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game10057Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10057Type;

        /**
         * Verifies a game10057Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game10057Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game10057Type
         */
        public static fromObject(object: { [k: string]: any }): game10057Type;

        /**
         * Creates a plain object from a game10057Type message. Also converts values to other types if specified.
         * @param message game10057Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game10057Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game10057Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game10057Type {

        /** Properties of a data10057Type. */
        interface Idata10057Type {

            /** data10057Type freezeList */
            freezeList?: (IfreezeListsType[] | null);

            /** data10057Type fixedPos */
            fixedPos?: (IfixedPosType[] | null);
        }

        /** Represents a data10057Type. */
        class data10057Type implements Idata10057Type {

            /**
             * Constructs a new data10057Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10057Type.Idata10057Type);

            /** data10057Type freezeList. */
            public freezeList: IfreezeListsType[];

            /** data10057Type fixedPos. */
            public fixedPos: IfixedPosType[];

            /**
             * Creates a new data10057Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data10057Type instance
             */
            public static create(properties?: game10057Type.Idata10057Type): game10057Type.data10057Type;

            /**
             * Encodes the specified data10057Type message. Does not implicitly {@link game10057Type.data10057Type.verify|verify} messages.
             * @param message data10057Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10057Type.Idata10057Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data10057Type message, length delimited. Does not implicitly {@link game10057Type.data10057Type.verify|verify} messages.
             * @param message data10057Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10057Type.Idata10057Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data10057Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data10057Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10057Type.data10057Type;

            /**
             * Decodes a data10057Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data10057Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10057Type.data10057Type;

            /**
             * Verifies a data10057Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data10057Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data10057Type
             */
            public static fromObject(object: { [k: string]: any }): game10057Type.data10057Type;

            /**
             * Creates a plain object from a data10057Type message. Also converts values to other types if specified.
             * @param message data10057Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10057Type.data10057Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data10057Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update10057Type. */
        interface Iupdate10057Type {

            /** update10057Type index */
            index: number;

            /** update10057Type freezeList */
            freezeList?: (IfreezeListsType[] | null);

            /** update10057Type fixedPos */
            fixedPos?: (IfixedPosType[] | null);
        }

        /** Represents an update10057Type. */
        class update10057Type implements Iupdate10057Type {

            /**
             * Constructs a new update10057Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10057Type.Iupdate10057Type);

            /** update10057Type index. */
            public index: number;

            /** update10057Type freezeList. */
            public freezeList: IfreezeListsType[];

            /** update10057Type fixedPos. */
            public fixedPos: IfixedPosType[];

            /**
             * Creates a new update10057Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update10057Type instance
             */
            public static create(properties?: game10057Type.Iupdate10057Type): game10057Type.update10057Type;

            /**
             * Encodes the specified update10057Type message. Does not implicitly {@link game10057Type.update10057Type.verify|verify} messages.
             * @param message update10057Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10057Type.Iupdate10057Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update10057Type message, length delimited. Does not implicitly {@link game10057Type.update10057Type.verify|verify} messages.
             * @param message update10057Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10057Type.Iupdate10057Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update10057Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update10057Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10057Type.update10057Type;

            /**
             * Decodes an update10057Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update10057Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10057Type.update10057Type;

            /**
             * Verifies an update10057Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update10057Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update10057Type
             */
            public static fromObject(object: { [k: string]: any }): game10057Type.update10057Type;

            /**
             * Creates a plain object from an update10057Type message. Also converts values to other types if specified.
             * @param message update10057Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10057Type.update10057Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update10057Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a freezeListsType. */
    export class freezeListsType implements IfreezeListsType {

        /**
         * Constructs a new freezeListsType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IfreezeListsType);

        /** freezeListsType pos. */
        public pos: number;

        /** freezeListsType elem. */
        public elem: number;

        /** freezeListsType num. */
        public num: number;

        /**
         * Creates a new freezeListsType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns freezeListsType instance
         */
        public static create(properties?: IfreezeListsType): freezeListsType;

        /**
         * Encodes the specified freezeListsType message. Does not implicitly {@link freezeListsType.verify|verify} messages.
         * @param message freezeListsType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IfreezeListsType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified freezeListsType message, length delimited. Does not implicitly {@link freezeListsType.verify|verify} messages.
         * @param message freezeListsType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IfreezeListsType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a freezeListsType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns freezeListsType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): freezeListsType;

        /**
         * Decodes a freezeListsType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns freezeListsType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): freezeListsType;

        /**
         * Verifies a freezeListsType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a freezeListsType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns freezeListsType
         */
        public static fromObject(object: { [k: string]: any }): freezeListsType;

        /**
         * Creates a plain object from a freezeListsType message. Also converts values to other types if specified.
         * @param message freezeListsType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: freezeListsType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this freezeListsType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a fixedPosType. */
    export class fixedPosType implements IfixedPosType {

        /**
         * Constructs a new fixedPosType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IfixedPosType);

        /** fixedPosType pos. */
        public pos: number;

        /** fixedPosType elem. */
        public elem: number;

        /**
         * Creates a new fixedPosType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns fixedPosType instance
         */
        public static create(properties?: IfixedPosType): fixedPosType;

        /**
         * Encodes the specified fixedPosType message. Does not implicitly {@link fixedPosType.verify|verify} messages.
         * @param message fixedPosType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IfixedPosType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified fixedPosType message, length delimited. Does not implicitly {@link fixedPosType.verify|verify} messages.
         * @param message fixedPosType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IfixedPosType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a fixedPosType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns fixedPosType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): fixedPosType;

        /**
         * Decodes a fixedPosType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns fixedPosType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): fixedPosType;

        /**
         * Verifies a fixedPosType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a fixedPosType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns fixedPosType
         */
        public static fromObject(object: { [k: string]: any }): fixedPosType;

        /**
         * Creates a plain object from a fixedPosType message. Also converts values to other types if specified.
         * @param message fixedPosType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: fixedPosType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this fixedPosType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a game10066Type. */
    export class game10066Type implements Igame10066Type {

        /**
         * Constructs a new game10066Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame10066Type);

        /** game10066Type data. */
        public data?: (game10066Type.Idata10066Type | null);

        /** game10066Type update. */
        public update: game10066Type.Iupdate10066Type[];

        /**
         * Creates a new game10066Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game10066Type instance
         */
        public static create(properties?: Igame10066Type): game10066Type;

        /**
         * Encodes the specified game10066Type message. Does not implicitly {@link game10066Type.verify|verify} messages.
         * @param message game10066Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame10066Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game10066Type message, length delimited. Does not implicitly {@link game10066Type.verify|verify} messages.
         * @param message game10066Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame10066Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game10066Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game10066Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10066Type;

        /**
         * Decodes a game10066Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game10066Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10066Type;

        /**
         * Verifies a game10066Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game10066Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game10066Type
         */
        public static fromObject(object: { [k: string]: any }): game10066Type;

        /**
         * Creates a plain object from a game10066Type message. Also converts values to other types if specified.
         * @param message game10066Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game10066Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game10066Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game10066Type {

        /** Properties of a data10066Type. */
        interface Idata10066Type {

            /** data10066Type lockList */
            lockList?: (IlockListType[] | null);
        }

        /** Represents a data10066Type. */
        class data10066Type implements Idata10066Type {

            /**
             * Constructs a new data10066Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10066Type.Idata10066Type);

            /** data10066Type lockList. */
            public lockList: IlockListType[];

            /**
             * Creates a new data10066Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data10066Type instance
             */
            public static create(properties?: game10066Type.Idata10066Type): game10066Type.data10066Type;

            /**
             * Encodes the specified data10066Type message. Does not implicitly {@link game10066Type.data10066Type.verify|verify} messages.
             * @param message data10066Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10066Type.Idata10066Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data10066Type message, length delimited. Does not implicitly {@link game10066Type.data10066Type.verify|verify} messages.
             * @param message data10066Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10066Type.Idata10066Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data10066Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data10066Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10066Type.data10066Type;

            /**
             * Decodes a data10066Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data10066Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10066Type.data10066Type;

            /**
             * Verifies a data10066Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data10066Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data10066Type
             */
            public static fromObject(object: { [k: string]: any }): game10066Type.data10066Type;

            /**
             * Creates a plain object from a data10066Type message. Also converts values to other types if specified.
             * @param message data10066Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10066Type.data10066Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data10066Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update10066Type. */
        interface Iupdate10066Type {

            /** update10066Type index */
            index: number;

            /** update10066Type lockList */
            lockList: IlockListType;
        }

        /** Represents an update10066Type. */
        class update10066Type implements Iupdate10066Type {

            /**
             * Constructs a new update10066Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10066Type.Iupdate10066Type);

            /** update10066Type index. */
            public index: number;

            /** update10066Type lockList. */
            public lockList: IlockListType;

            /**
             * Creates a new update10066Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update10066Type instance
             */
            public static create(properties?: game10066Type.Iupdate10066Type): game10066Type.update10066Type;

            /**
             * Encodes the specified update10066Type message. Does not implicitly {@link game10066Type.update10066Type.verify|verify} messages.
             * @param message update10066Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10066Type.Iupdate10066Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update10066Type message, length delimited. Does not implicitly {@link game10066Type.update10066Type.verify|verify} messages.
             * @param message update10066Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10066Type.Iupdate10066Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update10066Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update10066Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10066Type.update10066Type;

            /**
             * Decodes an update10066Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update10066Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10066Type.update10066Type;

            /**
             * Verifies an update10066Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update10066Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update10066Type
             */
            public static fromObject(object: { [k: string]: any }): game10066Type.update10066Type;

            /**
             * Creates a plain object from an update10066Type message. Also converts values to other types if specified.
             * @param message update10066Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10066Type.update10066Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update10066Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a lockListType. */
    export class lockListType implements IlockListType {

        /**
         * Constructs a new lockListType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IlockListType);

        /** lockListType pos. */
        public pos: number;

        /** lockListType elem. */
        public elem: number;

        /** lockListType num. */
        public num: number;

        /**
         * Creates a new lockListType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns lockListType instance
         */
        public static create(properties?: IlockListType): lockListType;

        /**
         * Encodes the specified lockListType message. Does not implicitly {@link lockListType.verify|verify} messages.
         * @param message lockListType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IlockListType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified lockListType message, length delimited. Does not implicitly {@link lockListType.verify|verify} messages.
         * @param message lockListType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IlockListType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a lockListType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns lockListType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): lockListType;

        /**
         * Decodes a lockListType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns lockListType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): lockListType;

        /**
         * Verifies a lockListType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a lockListType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns lockListType
         */
        public static fromObject(object: { [k: string]: any }): lockListType;

        /**
         * Creates a plain object from a lockListType message. Also converts values to other types if specified.
         * @param message lockListType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: lockListType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this lockListType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a game10073Type. */
    export class game10073Type implements Igame10073Type {

        /**
         * Constructs a new game10073Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame10073Type);

        /** game10073Type data. */
        public data?: (game10073Type.Idata10073Type | null);

        /** game10073Type update. */
        public update: game10073Type.Iupdate10073Type[];

        /**
         * Creates a new game10073Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game10073Type instance
         */
        public static create(properties?: Igame10073Type): game10073Type;

        /**
         * Encodes the specified game10073Type message. Does not implicitly {@link game10073Type.verify|verify} messages.
         * @param message game10073Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame10073Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game10073Type message, length delimited. Does not implicitly {@link game10073Type.verify|verify} messages.
         * @param message game10073Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame10073Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game10073Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game10073Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10073Type;

        /**
         * Decodes a game10073Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game10073Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10073Type;

        /**
         * Verifies a game10073Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game10073Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game10073Type
         */
        public static fromObject(object: { [k: string]: any }): game10073Type;

        /**
         * Creates a plain object from a game10073Type message. Also converts values to other types if specified.
         * @param message game10073Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game10073Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game10073Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game10073Type {

        /** Properties of a data10073Type. */
        interface Idata10073Type {

            /** data10073Type gridReward */
            gridReward?: (IgridRewardType[] | null);

            /** data10073Type randomReward */
            randomReward?: (IrandomRewardType[] | null);

            /** data10073Type extraReward */
            extraReward?: (IgridRewardType[] | null);

            /** data10073Type collectReward */
            collectReward?: (IgridRewardType[] | null);

            /** data10073Type collectNum */
            collectNum?: (number | null);

            /** data10073Type beCollectedNum */
            beCollectedNum?: (number | null);

            /** data10073Type collectRewardType */
            collectRewardType?: (IcollectRewardType[] | null);

            /** data10073Type collectRewardMulti */
            collectRewardMulti?: (number | null);

            /** data10073Type originalGridReward */
            originalGridReward?: (IgridRewardType[] | null);

            /** data10073Type extraCollectReward */
            extraCollectReward?: (number | Long | null);

            /** data10073Type afterEscapeExtraCollectReward */
            afterEscapeExtraCollectReward?: (number | Long | null);

            /** data10073Type getExtraCollectReward */
            getExtraCollectReward?: (game10073Type.IextraCollectRewardType[] | null);

            /** data10073Type goldRewardAcc */
            goldRewardAcc?: (number | Long | null);

            /** data10073Type gridLgReward */
            gridLgReward?: (game10073Type.IgridLgType[] | null);

            /** data10073Type triggerSpeElemReward */
            triggerSpeElemReward?: (number | Long | null);

            /** data10073Type curSpeElemReward */
            curSpeElemReward?: (number | Long | null);

            /** data10073Type totalSpeElemReward */
            totalSpeElemReward?: (number | Long | null);

            /** data10073Type posSpeElemReward */
            posSpeElemReward?: (IgridRewardType[] | null);
        }

        /** Represents a data10073Type. */
        class data10073Type implements Idata10073Type {

            /**
             * Constructs a new data10073Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10073Type.Idata10073Type);

            /** data10073Type gridReward. */
            public gridReward: IgridRewardType[];

            /** data10073Type randomReward. */
            public randomReward: IrandomRewardType[];

            /** data10073Type extraReward. */
            public extraReward: IgridRewardType[];

            /** data10073Type collectReward. */
            public collectReward: IgridRewardType[];

            /** data10073Type collectNum. */
            public collectNum: number;

            /** data10073Type beCollectedNum. */
            public beCollectedNum: number;

            /** data10073Type collectRewardType. */
            public collectRewardType: IcollectRewardType[];

            /** data10073Type collectRewardMulti. */
            public collectRewardMulti: number;

            /** data10073Type originalGridReward. */
            public originalGridReward: IgridRewardType[];

            /** data10073Type extraCollectReward. */
            public extraCollectReward: (number | Long);

            /** data10073Type afterEscapeExtraCollectReward. */
            public afterEscapeExtraCollectReward: (number | Long);

            /** data10073Type getExtraCollectReward. */
            public getExtraCollectReward: game10073Type.IextraCollectRewardType[];

            /** data10073Type goldRewardAcc. */
            public goldRewardAcc: (number | Long);

            /** data10073Type gridLgReward. */
            public gridLgReward: game10073Type.IgridLgType[];

            /** data10073Type triggerSpeElemReward. */
            public triggerSpeElemReward: (number | Long);

            /** data10073Type curSpeElemReward. */
            public curSpeElemReward: (number | Long);

            /** data10073Type totalSpeElemReward. */
            public totalSpeElemReward: (number | Long);

            /** data10073Type posSpeElemReward. */
            public posSpeElemReward: IgridRewardType[];

            /**
             * Creates a new data10073Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data10073Type instance
             */
            public static create(properties?: game10073Type.Idata10073Type): game10073Type.data10073Type;

            /**
             * Encodes the specified data10073Type message. Does not implicitly {@link game10073Type.data10073Type.verify|verify} messages.
             * @param message data10073Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10073Type.Idata10073Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data10073Type message, length delimited. Does not implicitly {@link game10073Type.data10073Type.verify|verify} messages.
             * @param message data10073Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10073Type.Idata10073Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data10073Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data10073Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10073Type.data10073Type;

            /**
             * Decodes a data10073Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data10073Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10073Type.data10073Type;

            /**
             * Verifies a data10073Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data10073Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data10073Type
             */
            public static fromObject(object: { [k: string]: any }): game10073Type.data10073Type;

            /**
             * Creates a plain object from a data10073Type message. Also converts values to other types if specified.
             * @param message data10073Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10073Type.data10073Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data10073Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update10073Type. */
        interface Iupdate10073Type {

            /** update10073Type index */
            index: number;

            /** update10073Type gridReward */
            gridReward?: (IgridRewardType[] | null);

            /** update10073Type randomReward */
            randomReward?: (IrandomRewardType[] | null);

            /** update10073Type extraReward */
            extraReward?: (IgridRewardType[] | null);

            /** update10073Type collectReward */
            collectReward?: (IgridRewardType[] | null);

            /** update10073Type collectNum */
            collectNum?: (number | null);

            /** update10073Type beCollectedNum */
            beCollectedNum?: (number | null);

            /** update10073Type collectRewardType */
            collectRewardType?: (IcollectRewardType[] | null);

            /** update10073Type collectRewardMulti */
            collectRewardMulti?: (number | null);

            /** update10073Type originalGridReward */
            originalGridReward?: (IgridRewardType[] | null);

            /** update10073Type extraCollectReward */
            extraCollectReward?: (number | Long | null);

            /** update10073Type afterEscapeExtraCollectReward */
            afterEscapeExtraCollectReward?: (number | Long | null);

            /** update10073Type getExtraCollectReward */
            getExtraCollectReward?: (game10073Type.IextraCollectRewardType[] | null);

            /** update10073Type goldRewardAcc */
            goldRewardAcc?: (number | Long | null);

            /** update10073Type gridLgReward */
            gridLgReward?: (game10073Type.IgridLgType[] | null);

            /** update10073Type triggerSpeElemReward */
            triggerSpeElemReward?: (number | Long | null);

            /** update10073Type curSpeElemReward */
            curSpeElemReward?: (number | Long | null);

            /** update10073Type totalSpeElemReward */
            totalSpeElemReward?: (number | Long | null);

            /** update10073Type posSpeElemReward */
            posSpeElemReward?: (IgridRewardType[] | null);
        }

        /** Represents an update10073Type. */
        class update10073Type implements Iupdate10073Type {

            /**
             * Constructs a new update10073Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10073Type.Iupdate10073Type);

            /** update10073Type index. */
            public index: number;

            /** update10073Type gridReward. */
            public gridReward: IgridRewardType[];

            /** update10073Type randomReward. */
            public randomReward: IrandomRewardType[];

            /** update10073Type extraReward. */
            public extraReward: IgridRewardType[];

            /** update10073Type collectReward. */
            public collectReward: IgridRewardType[];

            /** update10073Type collectNum. */
            public collectNum: number;

            /** update10073Type beCollectedNum. */
            public beCollectedNum: number;

            /** update10073Type collectRewardType. */
            public collectRewardType: IcollectRewardType[];

            /** update10073Type collectRewardMulti. */
            public collectRewardMulti: number;

            /** update10073Type originalGridReward. */
            public originalGridReward: IgridRewardType[];

            /** update10073Type extraCollectReward. */
            public extraCollectReward: (number | Long);

            /** update10073Type afterEscapeExtraCollectReward. */
            public afterEscapeExtraCollectReward: (number | Long);

            /** update10073Type getExtraCollectReward. */
            public getExtraCollectReward: game10073Type.IextraCollectRewardType[];

            /** update10073Type goldRewardAcc. */
            public goldRewardAcc: (number | Long);

            /** update10073Type gridLgReward. */
            public gridLgReward: game10073Type.IgridLgType[];

            /** update10073Type triggerSpeElemReward. */
            public triggerSpeElemReward: (number | Long);

            /** update10073Type curSpeElemReward. */
            public curSpeElemReward: (number | Long);

            /** update10073Type totalSpeElemReward. */
            public totalSpeElemReward: (number | Long);

            /** update10073Type posSpeElemReward. */
            public posSpeElemReward: IgridRewardType[];

            /**
             * Creates a new update10073Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update10073Type instance
             */
            public static create(properties?: game10073Type.Iupdate10073Type): game10073Type.update10073Type;

            /**
             * Encodes the specified update10073Type message. Does not implicitly {@link game10073Type.update10073Type.verify|verify} messages.
             * @param message update10073Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10073Type.Iupdate10073Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update10073Type message, length delimited. Does not implicitly {@link game10073Type.update10073Type.verify|verify} messages.
             * @param message update10073Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10073Type.Iupdate10073Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update10073Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update10073Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10073Type.update10073Type;

            /**
             * Decodes an update10073Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update10073Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10073Type.update10073Type;

            /**
             * Verifies an update10073Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update10073Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update10073Type
             */
            public static fromObject(object: { [k: string]: any }): game10073Type.update10073Type;

            /**
             * Creates a plain object from an update10073Type message. Also converts values to other types if specified.
             * @param message update10073Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10073Type.update10073Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update10073Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an extraCollectRewardType. */
        interface IextraCollectRewardType {

            /** extraCollectRewardType pos */
            pos: number;

            /** extraCollectRewardType reward */
            reward: (number | Long);
        }

        /** Represents an extraCollectRewardType. */
        class extraCollectRewardType implements IextraCollectRewardType {

            /**
             * Constructs a new extraCollectRewardType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10073Type.IextraCollectRewardType);

            /** extraCollectRewardType pos. */
            public pos: number;

            /** extraCollectRewardType reward. */
            public reward: (number | Long);

            /**
             * Creates a new extraCollectRewardType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns extraCollectRewardType instance
             */
            public static create(properties?: game10073Type.IextraCollectRewardType): game10073Type.extraCollectRewardType;

            /**
             * Encodes the specified extraCollectRewardType message. Does not implicitly {@link game10073Type.extraCollectRewardType.verify|verify} messages.
             * @param message extraCollectRewardType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10073Type.IextraCollectRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified extraCollectRewardType message, length delimited. Does not implicitly {@link game10073Type.extraCollectRewardType.verify|verify} messages.
             * @param message extraCollectRewardType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10073Type.IextraCollectRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an extraCollectRewardType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns extraCollectRewardType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10073Type.extraCollectRewardType;

            /**
             * Decodes an extraCollectRewardType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns extraCollectRewardType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10073Type.extraCollectRewardType;

            /**
             * Verifies an extraCollectRewardType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an extraCollectRewardType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns extraCollectRewardType
             */
            public static fromObject(object: { [k: string]: any }): game10073Type.extraCollectRewardType;

            /**
             * Creates a plain object from an extraCollectRewardType message. Also converts values to other types if specified.
             * @param message extraCollectRewardType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10073Type.extraCollectRewardType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this extraCollectRewardType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a gridLgType. */
        interface IgridLgType {

            /** gridLgType pos */
            pos: number;

            /** gridLgType lgId */
            lgId?: ((number | Long)[] | null);
        }

        /** Represents a gridLgType. */
        class gridLgType implements IgridLgType {

            /**
             * Constructs a new gridLgType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10073Type.IgridLgType);

            /** gridLgType pos. */
            public pos: number;

            /** gridLgType lgId. */
            public lgId: (number | Long)[];

            /**
             * Creates a new gridLgType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns gridLgType instance
             */
            public static create(properties?: game10073Type.IgridLgType): game10073Type.gridLgType;

            /**
             * Encodes the specified gridLgType message. Does not implicitly {@link game10073Type.gridLgType.verify|verify} messages.
             * @param message gridLgType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10073Type.IgridLgType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified gridLgType message, length delimited. Does not implicitly {@link game10073Type.gridLgType.verify|verify} messages.
             * @param message gridLgType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10073Type.IgridLgType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a gridLgType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns gridLgType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10073Type.gridLgType;

            /**
             * Decodes a gridLgType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns gridLgType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10073Type.gridLgType;

            /**
             * Verifies a gridLgType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a gridLgType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns gridLgType
             */
            public static fromObject(object: { [k: string]: any }): game10073Type.gridLgType;

            /**
             * Creates a plain object from a gridLgType message. Also converts values to other types if specified.
             * @param message gridLgType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10073Type.gridLgType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this gridLgType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a gridRewardType. */
    export class gridRewardType implements IgridRewardType {

        /**
         * Constructs a new gridRewardType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IgridRewardType);

        /** gridRewardType pos. */
        public pos: number;

        /** gridRewardType goldReward. */
        public goldReward: (number | Long);

        /**
         * Creates a new gridRewardType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns gridRewardType instance
         */
        public static create(properties?: IgridRewardType): gridRewardType;

        /**
         * Encodes the specified gridRewardType message. Does not implicitly {@link gridRewardType.verify|verify} messages.
         * @param message gridRewardType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IgridRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified gridRewardType message, length delimited. Does not implicitly {@link gridRewardType.verify|verify} messages.
         * @param message gridRewardType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IgridRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a gridRewardType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns gridRewardType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gridRewardType;

        /**
         * Decodes a gridRewardType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns gridRewardType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gridRewardType;

        /**
         * Verifies a gridRewardType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a gridRewardType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns gridRewardType
         */
        public static fromObject(object: { [k: string]: any }): gridRewardType;

        /**
         * Creates a plain object from a gridRewardType message. Also converts values to other types if specified.
         * @param message gridRewardType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gridRewardType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this gridRewardType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a randomRewardType. */
    export class randomRewardType implements IrandomRewardType {

        /**
         * Constructs a new randomRewardType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IrandomRewardType);

        /** randomRewardType elem. */
        public elem: number;

        /** randomRewardType goldReward. */
        public goldReward: (number | Long);

        /**
         * Creates a new randomRewardType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns randomRewardType instance
         */
        public static create(properties?: IrandomRewardType): randomRewardType;

        /**
         * Encodes the specified randomRewardType message. Does not implicitly {@link randomRewardType.verify|verify} messages.
         * @param message randomRewardType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IrandomRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified randomRewardType message, length delimited. Does not implicitly {@link randomRewardType.verify|verify} messages.
         * @param message randomRewardType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IrandomRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a randomRewardType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns randomRewardType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): randomRewardType;

        /**
         * Decodes a randomRewardType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns randomRewardType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): randomRewardType;

        /**
         * Verifies a randomRewardType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a randomRewardType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns randomRewardType
         */
        public static fromObject(object: { [k: string]: any }): randomRewardType;

        /**
         * Creates a plain object from a randomRewardType message. Also converts values to other types if specified.
         * @param message randomRewardType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: randomRewardType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this randomRewardType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a collectRewardType. */
    export class collectRewardType implements IcollectRewardType {

        /**
         * Constructs a new collectRewardType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IcollectRewardType);

        /** collectRewardType pos. */
        public pos: number;

        /** collectRewardType rewardType. */
        public rewardType: number;

        /** collectRewardType rewardData. */
        public rewardData: number;

        /** collectRewardType lgId. */
        public lgId: (number | Long)[];

        /**
         * Creates a new collectRewardType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns collectRewardType instance
         */
        public static create(properties?: IcollectRewardType): collectRewardType;

        /**
         * Encodes the specified collectRewardType message. Does not implicitly {@link collectRewardType.verify|verify} messages.
         * @param message collectRewardType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IcollectRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified collectRewardType message, length delimited. Does not implicitly {@link collectRewardType.verify|verify} messages.
         * @param message collectRewardType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IcollectRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a collectRewardType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns collectRewardType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): collectRewardType;

        /**
         * Decodes a collectRewardType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns collectRewardType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): collectRewardType;

        /**
         * Verifies a collectRewardType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a collectRewardType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns collectRewardType
         */
        public static fromObject(object: { [k: string]: any }): collectRewardType;

        /**
         * Creates a plain object from a collectRewardType message. Also converts values to other types if specified.
         * @param message collectRewardType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: collectRewardType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this collectRewardType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a game10074Type. */
    export class game10074Type implements Igame10074Type {

        /**
         * Constructs a new game10074Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame10074Type);

        /** game10074Type data. */
        public data?: (game10074Type.Idata10074Type | null);

        /**
         * Creates a new game10074Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game10074Type instance
         */
        public static create(properties?: Igame10074Type): game10074Type;

        /**
         * Encodes the specified game10074Type message. Does not implicitly {@link game10074Type.verify|verify} messages.
         * @param message game10074Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame10074Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game10074Type message, length delimited. Does not implicitly {@link game10074Type.verify|verify} messages.
         * @param message game10074Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame10074Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game10074Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game10074Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10074Type;

        /**
         * Decodes a game10074Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game10074Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10074Type;

        /**
         * Verifies a game10074Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game10074Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game10074Type
         */
        public static fromObject(object: { [k: string]: any }): game10074Type;

        /**
         * Creates a plain object from a game10074Type message. Also converts values to other types if specified.
         * @param message game10074Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game10074Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game10074Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game10074Type {

        /** Properties of a data10074Type. */
        interface Idata10074Type {

            /** data10074Type lineNumRewardRateList */
            lineNumRewardRateList?: (game10074Type.ILineNumRewardRateType[] | null);

            /** data10074Type resultList */
            resultList?: (game10074Type.IResultType[] | null);
        }

        /** Represents a data10074Type. */
        class data10074Type implements Idata10074Type {

            /**
             * Constructs a new data10074Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10074Type.Idata10074Type);

            /** data10074Type lineNumRewardRateList. */
            public lineNumRewardRateList: game10074Type.ILineNumRewardRateType[];

            /** data10074Type resultList. */
            public resultList: game10074Type.IResultType[];

            /**
             * Creates a new data10074Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data10074Type instance
             */
            public static create(properties?: game10074Type.Idata10074Type): game10074Type.data10074Type;

            /**
             * Encodes the specified data10074Type message. Does not implicitly {@link game10074Type.data10074Type.verify|verify} messages.
             * @param message data10074Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10074Type.Idata10074Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data10074Type message, length delimited. Does not implicitly {@link game10074Type.data10074Type.verify|verify} messages.
             * @param message data10074Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10074Type.Idata10074Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data10074Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data10074Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10074Type.data10074Type;

            /**
             * Decodes a data10074Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data10074Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10074Type.data10074Type;

            /**
             * Verifies a data10074Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data10074Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data10074Type
             */
            public static fromObject(object: { [k: string]: any }): game10074Type.data10074Type;

            /**
             * Creates a plain object from a data10074Type message. Also converts values to other types if specified.
             * @param message data10074Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10074Type.data10074Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data10074Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ResultType. */
        interface IResultType {

            /** ResultType spinResult */
            spinResult: IspinResultType;
        }

        /** Represents a ResultType. */
        class ResultType implements IResultType {

            /**
             * Constructs a new ResultType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10074Type.IResultType);

            /** ResultType spinResult. */
            public spinResult: IspinResultType;

            /**
             * Creates a new ResultType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ResultType instance
             */
            public static create(properties?: game10074Type.IResultType): game10074Type.ResultType;

            /**
             * Encodes the specified ResultType message. Does not implicitly {@link game10074Type.ResultType.verify|verify} messages.
             * @param message ResultType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10074Type.IResultType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ResultType message, length delimited. Does not implicitly {@link game10074Type.ResultType.verify|verify} messages.
             * @param message ResultType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10074Type.IResultType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResultType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ResultType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10074Type.ResultType;

            /**
             * Decodes a ResultType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ResultType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10074Type.ResultType;

            /**
             * Verifies a ResultType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a ResultType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ResultType
             */
            public static fromObject(object: { [k: string]: any }): game10074Type.ResultType;

            /**
             * Creates a plain object from a ResultType message. Also converts values to other types if specified.
             * @param message ResultType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10074Type.ResultType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ResultType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a LineNumRewardRateType. */
        interface ILineNumRewardRateType {

            /** LineNumRewardRateType lineNum */
            lineNum: number;

            /** LineNumRewardRateType rate */
            rate: number;
        }

        /** Represents a LineNumRewardRateType. */
        class LineNumRewardRateType implements ILineNumRewardRateType {

            /**
             * Constructs a new LineNumRewardRateType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10074Type.ILineNumRewardRateType);

            /** LineNumRewardRateType lineNum. */
            public lineNum: number;

            /** LineNumRewardRateType rate. */
            public rate: number;

            /**
             * Creates a new LineNumRewardRateType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LineNumRewardRateType instance
             */
            public static create(properties?: game10074Type.ILineNumRewardRateType): game10074Type.LineNumRewardRateType;

            /**
             * Encodes the specified LineNumRewardRateType message. Does not implicitly {@link game10074Type.LineNumRewardRateType.verify|verify} messages.
             * @param message LineNumRewardRateType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10074Type.ILineNumRewardRateType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LineNumRewardRateType message, length delimited. Does not implicitly {@link game10074Type.LineNumRewardRateType.verify|verify} messages.
             * @param message LineNumRewardRateType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10074Type.ILineNumRewardRateType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LineNumRewardRateType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LineNumRewardRateType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10074Type.LineNumRewardRateType;

            /**
             * Decodes a LineNumRewardRateType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LineNumRewardRateType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10074Type.LineNumRewardRateType;

            /**
             * Verifies a LineNumRewardRateType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a LineNumRewardRateType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LineNumRewardRateType
             */
            public static fromObject(object: { [k: string]: any }): game10074Type.LineNumRewardRateType;

            /**
             * Creates a plain object from a LineNumRewardRateType message. Also converts values to other types if specified.
             * @param message LineNumRewardRateType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10074Type.LineNumRewardRateType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LineNumRewardRateType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game10075Type. */
    export class game10075Type implements Igame10075Type {

        /**
         * Constructs a new game10075Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame10075Type);

        /** game10075Type data. */
        public data?: (game10075Type.Idata10075Type | null);

        /** game10075Type update. */
        public update: game10075Type.Iupdate10075Type[];

        /**
         * Creates a new game10075Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game10075Type instance
         */
        public static create(properties?: Igame10075Type): game10075Type;

        /**
         * Encodes the specified game10075Type message. Does not implicitly {@link game10075Type.verify|verify} messages.
         * @param message game10075Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame10075Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game10075Type message, length delimited. Does not implicitly {@link game10075Type.verify|verify} messages.
         * @param message game10075Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame10075Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game10075Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game10075Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10075Type;

        /**
         * Decodes a game10075Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game10075Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10075Type;

        /**
         * Verifies a game10075Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game10075Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game10075Type
         */
        public static fromObject(object: { [k: string]: any }): game10075Type;

        /**
         * Creates a plain object from a game10075Type message. Also converts values to other types if specified.
         * @param message game10075Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game10075Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game10075Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game10075Type {

        /** Properties of a data10075Type. */
        interface Idata10075Type {

            /** data10075Type specialElement */
            specialElement: number;
        }

        /** Represents a data10075Type. */
        class data10075Type implements Idata10075Type {

            /**
             * Constructs a new data10075Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10075Type.Idata10075Type);

            /** data10075Type specialElement. */
            public specialElement: number;

            /**
             * Creates a new data10075Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data10075Type instance
             */
            public static create(properties?: game10075Type.Idata10075Type): game10075Type.data10075Type;

            /**
             * Encodes the specified data10075Type message. Does not implicitly {@link game10075Type.data10075Type.verify|verify} messages.
             * @param message data10075Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10075Type.Idata10075Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data10075Type message, length delimited. Does not implicitly {@link game10075Type.data10075Type.verify|verify} messages.
             * @param message data10075Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10075Type.Idata10075Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data10075Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data10075Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10075Type.data10075Type;

            /**
             * Decodes a data10075Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data10075Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10075Type.data10075Type;

            /**
             * Verifies a data10075Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data10075Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data10075Type
             */
            public static fromObject(object: { [k: string]: any }): game10075Type.data10075Type;

            /**
             * Creates a plain object from a data10075Type message. Also converts values to other types if specified.
             * @param message data10075Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10075Type.data10075Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data10075Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update10075Type. */
        interface Iupdate10075Type {

            /** update10075Type index */
            index: number;

            /** update10075Type specialElement */
            specialElement?: (number | null);
        }

        /** Represents an update10075Type. */
        class update10075Type implements Iupdate10075Type {

            /**
             * Constructs a new update10075Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10075Type.Iupdate10075Type);

            /** update10075Type index. */
            public index: number;

            /** update10075Type specialElement. */
            public specialElement: number;

            /**
             * Creates a new update10075Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update10075Type instance
             */
            public static create(properties?: game10075Type.Iupdate10075Type): game10075Type.update10075Type;

            /**
             * Encodes the specified update10075Type message. Does not implicitly {@link game10075Type.update10075Type.verify|verify} messages.
             * @param message update10075Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10075Type.Iupdate10075Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update10075Type message, length delimited. Does not implicitly {@link game10075Type.update10075Type.verify|verify} messages.
             * @param message update10075Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10075Type.Iupdate10075Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update10075Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update10075Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10075Type.update10075Type;

            /**
             * Decodes an update10075Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update10075Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10075Type.update10075Type;

            /**
             * Verifies an update10075Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update10075Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update10075Type
             */
            public static fromObject(object: { [k: string]: any }): game10075Type.update10075Type;

            /**
             * Creates a plain object from an update10075Type message. Also converts values to other types if specified.
             * @param message update10075Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10075Type.update10075Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update10075Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game10087Type. */
    export class game10087Type implements Igame10087Type {

        /**
         * Constructs a new game10087Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame10087Type);

        /** game10087Type data. */
        public data?: (game10087Type.Idata10087Type | null);

        /** game10087Type update. */
        public update: game10087Type.Iupdate10087Type[];

        /**
         * Creates a new game10087Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game10087Type instance
         */
        public static create(properties?: Igame10087Type): game10087Type;

        /**
         * Encodes the specified game10087Type message. Does not implicitly {@link game10087Type.verify|verify} messages.
         * @param message game10087Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame10087Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game10087Type message, length delimited. Does not implicitly {@link game10087Type.verify|verify} messages.
         * @param message game10087Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame10087Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game10087Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game10087Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10087Type;

        /**
         * Decodes a game10087Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game10087Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10087Type;

        /**
         * Verifies a game10087Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game10087Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game10087Type
         */
        public static fromObject(object: { [k: string]: any }): game10087Type;

        /**
         * Creates a plain object from a game10087Type message. Also converts values to other types if specified.
         * @param message game10087Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game10087Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game10087Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game10087Type {

        /** Properties of a data10087Type. */
        interface Idata10087Type {

            /** data10087Type resultList */
            resultList?: (game10087Type.IResultType[] | null);

            /** data10087Type gameAttack */
            gameAttack?: (game10087Type.IgameAttackType[] | null);

            /** data10087Type killCount */
            killCount: game10087Type.IkillCountType;

            /** data10087Type gameAttackUpdate */
            gameAttackUpdate?: (game10087Type.IgameAttackType[] | null);
        }

        /** Represents a data10087Type. */
        class data10087Type implements Idata10087Type {

            /**
             * Constructs a new data10087Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10087Type.Idata10087Type);

            /** data10087Type resultList. */
            public resultList: game10087Type.IResultType[];

            /** data10087Type gameAttack. */
            public gameAttack: game10087Type.IgameAttackType[];

            /** data10087Type killCount. */
            public killCount: game10087Type.IkillCountType;

            /** data10087Type gameAttackUpdate. */
            public gameAttackUpdate: game10087Type.IgameAttackType[];

            /**
             * Creates a new data10087Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data10087Type instance
             */
            public static create(properties?: game10087Type.Idata10087Type): game10087Type.data10087Type;

            /**
             * Encodes the specified data10087Type message. Does not implicitly {@link game10087Type.data10087Type.verify|verify} messages.
             * @param message data10087Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10087Type.Idata10087Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data10087Type message, length delimited. Does not implicitly {@link game10087Type.data10087Type.verify|verify} messages.
             * @param message data10087Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10087Type.Idata10087Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data10087Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data10087Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10087Type.data10087Type;

            /**
             * Decodes a data10087Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data10087Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10087Type.data10087Type;

            /**
             * Verifies a data10087Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data10087Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data10087Type
             */
            public static fromObject(object: { [k: string]: any }): game10087Type.data10087Type;

            /**
             * Creates a plain object from a data10087Type message. Also converts values to other types if specified.
             * @param message data10087Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10087Type.data10087Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data10087Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update10087Type. */
        interface Iupdate10087Type {

            /** update10087Type index */
            index: number;

            /** update10087Type resultList */
            resultList?: (game10087Type.IResultType[] | null);
        }

        /** Represents an update10087Type. */
        class update10087Type implements Iupdate10087Type {

            /**
             * Constructs a new update10087Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10087Type.Iupdate10087Type);

            /** update10087Type index. */
            public index: number;

            /** update10087Type resultList. */
            public resultList: game10087Type.IResultType[];

            /**
             * Creates a new update10087Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update10087Type instance
             */
            public static create(properties?: game10087Type.Iupdate10087Type): game10087Type.update10087Type;

            /**
             * Encodes the specified update10087Type message. Does not implicitly {@link game10087Type.update10087Type.verify|verify} messages.
             * @param message update10087Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10087Type.Iupdate10087Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update10087Type message, length delimited. Does not implicitly {@link game10087Type.update10087Type.verify|verify} messages.
             * @param message update10087Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10087Type.Iupdate10087Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update10087Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update10087Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10087Type.update10087Type;

            /**
             * Decodes an update10087Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update10087Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10087Type.update10087Type;

            /**
             * Verifies an update10087Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update10087Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update10087Type
             */
            public static fromObject(object: { [k: string]: any }): game10087Type.update10087Type;

            /**
             * Creates a plain object from an update10087Type message. Also converts values to other types if specified.
             * @param message update10087Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10087Type.update10087Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update10087Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ResultType. */
        interface IResultType {

            /** ResultType spinResult */
            spinResult: IspinResultType;

            /** ResultType removePos */
            removePos?: (number[] | null);

            /** ResultType gameAttack */
            gameAttack?: (game10087Type.IgameAttackType[] | null);

            /** ResultType killCount */
            killCount: game10087Type.IkillCountType;

            /** ResultType gameAttackUpdate */
            gameAttackUpdate?: (game10087Type.IgameAttackType[] | null);

            /** ResultType worldMission */
            worldMission: (number | Long);
        }

        /** Represents a ResultType. */
        class ResultType implements IResultType {

            /**
             * Constructs a new ResultType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10087Type.IResultType);

            /** ResultType spinResult. */
            public spinResult: IspinResultType;

            /** ResultType removePos. */
            public removePos: number[];

            /** ResultType gameAttack. */
            public gameAttack: game10087Type.IgameAttackType[];

            /** ResultType killCount. */
            public killCount: game10087Type.IkillCountType;

            /** ResultType gameAttackUpdate. */
            public gameAttackUpdate: game10087Type.IgameAttackType[];

            /** ResultType worldMission. */
            public worldMission: (number | Long);

            /**
             * Creates a new ResultType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ResultType instance
             */
            public static create(properties?: game10087Type.IResultType): game10087Type.ResultType;

            /**
             * Encodes the specified ResultType message. Does not implicitly {@link game10087Type.ResultType.verify|verify} messages.
             * @param message ResultType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10087Type.IResultType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ResultType message, length delimited. Does not implicitly {@link game10087Type.ResultType.verify|verify} messages.
             * @param message ResultType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10087Type.IResultType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResultType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ResultType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10087Type.ResultType;

            /**
             * Decodes a ResultType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ResultType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10087Type.ResultType;

            /**
             * Verifies a ResultType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a ResultType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ResultType
             */
            public static fromObject(object: { [k: string]: any }): game10087Type.ResultType;

            /**
             * Creates a plain object from a ResultType message. Also converts values to other types if specified.
             * @param message ResultType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10087Type.ResultType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ResultType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a gameAttackType. */
        interface IgameAttackType {

            /** gameAttackType targetId */
            targetId: number;

            /** gameAttackType targetHp */
            targetHp: (number | Long);

            /** gameAttackType attackHp */
            attackHp: (number | Long);

            /** gameAttackType attackUpdateHp */
            attackUpdateHp: (number | Long);

            /** gameAttackType killRate */
            killRate: number;
        }

        /** Represents a gameAttackType. */
        class gameAttackType implements IgameAttackType {

            /**
             * Constructs a new gameAttackType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10087Type.IgameAttackType);

            /** gameAttackType targetId. */
            public targetId: number;

            /** gameAttackType targetHp. */
            public targetHp: (number | Long);

            /** gameAttackType attackHp. */
            public attackHp: (number | Long);

            /** gameAttackType attackUpdateHp. */
            public attackUpdateHp: (number | Long);

            /** gameAttackType killRate. */
            public killRate: number;

            /**
             * Creates a new gameAttackType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns gameAttackType instance
             */
            public static create(properties?: game10087Type.IgameAttackType): game10087Type.gameAttackType;

            /**
             * Encodes the specified gameAttackType message. Does not implicitly {@link game10087Type.gameAttackType.verify|verify} messages.
             * @param message gameAttackType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10087Type.IgameAttackType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified gameAttackType message, length delimited. Does not implicitly {@link game10087Type.gameAttackType.verify|verify} messages.
             * @param message gameAttackType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10087Type.IgameAttackType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a gameAttackType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns gameAttackType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10087Type.gameAttackType;

            /**
             * Decodes a gameAttackType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns gameAttackType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10087Type.gameAttackType;

            /**
             * Verifies a gameAttackType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a gameAttackType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns gameAttackType
             */
            public static fromObject(object: { [k: string]: any }): game10087Type.gameAttackType;

            /**
             * Creates a plain object from a gameAttackType message. Also converts values to other types if specified.
             * @param message gameAttackType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10087Type.gameAttackType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this gameAttackType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a killCountType. */
        interface IkillCountType {

            /** killCountType triggerCount */
            triggerCount: number;

            /** killCountType count */
            count: number;

            /** killCountType isTrigger */
            isTrigger: boolean;
        }

        /** Represents a killCountType. */
        class killCountType implements IkillCountType {

            /**
             * Constructs a new killCountType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10087Type.IkillCountType);

            /** killCountType triggerCount. */
            public triggerCount: number;

            /** killCountType count. */
            public count: number;

            /** killCountType isTrigger. */
            public isTrigger: boolean;

            /**
             * Creates a new killCountType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns killCountType instance
             */
            public static create(properties?: game10087Type.IkillCountType): game10087Type.killCountType;

            /**
             * Encodes the specified killCountType message. Does not implicitly {@link game10087Type.killCountType.verify|verify} messages.
             * @param message killCountType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10087Type.IkillCountType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified killCountType message, length delimited. Does not implicitly {@link game10087Type.killCountType.verify|verify} messages.
             * @param message killCountType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10087Type.IkillCountType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a killCountType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns killCountType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10087Type.killCountType;

            /**
             * Decodes a killCountType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns killCountType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10087Type.killCountType;

            /**
             * Verifies a killCountType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a killCountType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns killCountType
             */
            public static fromObject(object: { [k: string]: any }): game10087Type.killCountType;

            /**
             * Creates a plain object from a killCountType message. Also converts values to other types if specified.
             * @param message killCountType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10087Type.killCountType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this killCountType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game10088Type. */
    export class game10088Type implements Igame10088Type {

        /**
         * Constructs a new game10088Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame10088Type);

        /** game10088Type data. */
        public data?: (game10088Type.Idata10088Type | null);

        /** game10088Type update. */
        public update: game10088Type.Iupdate10088Type[];

        /**
         * Creates a new game10088Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game10088Type instance
         */
        public static create(properties?: Igame10088Type): game10088Type;

        /**
         * Encodes the specified game10088Type message. Does not implicitly {@link game10088Type.verify|verify} messages.
         * @param message game10088Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame10088Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game10088Type message, length delimited. Does not implicitly {@link game10088Type.verify|verify} messages.
         * @param message game10088Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame10088Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game10088Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game10088Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10088Type;

        /**
         * Decodes a game10088Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game10088Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10088Type;

        /**
         * Verifies a game10088Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game10088Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game10088Type
         */
        public static fromObject(object: { [k: string]: any }): game10088Type;

        /**
         * Creates a plain object from a game10088Type message. Also converts values to other types if specified.
         * @param message game10088Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game10088Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game10088Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game10088Type {

        /** Properties of a data10088Type. */
        interface Idata10088Type {

            /** data10088Type resultList */
            resultList?: (game10088Type.IResultType[] | null);
        }

        /** Represents a data10088Type. */
        class data10088Type implements Idata10088Type {

            /**
             * Constructs a new data10088Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10088Type.Idata10088Type);

            /** data10088Type resultList. */
            public resultList: game10088Type.IResultType[];

            /**
             * Creates a new data10088Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data10088Type instance
             */
            public static create(properties?: game10088Type.Idata10088Type): game10088Type.data10088Type;

            /**
             * Encodes the specified data10088Type message. Does not implicitly {@link game10088Type.data10088Type.verify|verify} messages.
             * @param message data10088Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10088Type.Idata10088Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data10088Type message, length delimited. Does not implicitly {@link game10088Type.data10088Type.verify|verify} messages.
             * @param message data10088Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10088Type.Idata10088Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data10088Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data10088Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10088Type.data10088Type;

            /**
             * Decodes a data10088Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data10088Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10088Type.data10088Type;

            /**
             * Verifies a data10088Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data10088Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data10088Type
             */
            public static fromObject(object: { [k: string]: any }): game10088Type.data10088Type;

            /**
             * Creates a plain object from a data10088Type message. Also converts values to other types if specified.
             * @param message data10088Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10088Type.data10088Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data10088Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update10088Type. */
        interface Iupdate10088Type {

            /** update10088Type index */
            index: number;

            /** update10088Type resultList */
            resultList?: (game10088Type.IResultType[] | null);
        }

        /** Represents an update10088Type. */
        class update10088Type implements Iupdate10088Type {

            /**
             * Constructs a new update10088Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10088Type.Iupdate10088Type);

            /** update10088Type index. */
            public index: number;

            /** update10088Type resultList. */
            public resultList: game10088Type.IResultType[];

            /**
             * Creates a new update10088Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update10088Type instance
             */
            public static create(properties?: game10088Type.Iupdate10088Type): game10088Type.update10088Type;

            /**
             * Encodes the specified update10088Type message. Does not implicitly {@link game10088Type.update10088Type.verify|verify} messages.
             * @param message update10088Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10088Type.Iupdate10088Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update10088Type message, length delimited. Does not implicitly {@link game10088Type.update10088Type.verify|verify} messages.
             * @param message update10088Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10088Type.Iupdate10088Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update10088Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update10088Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10088Type.update10088Type;

            /**
             * Decodes an update10088Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update10088Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10088Type.update10088Type;

            /**
             * Verifies an update10088Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update10088Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update10088Type
             */
            public static fromObject(object: { [k: string]: any }): game10088Type.update10088Type;

            /**
             * Creates a plain object from an update10088Type message. Also converts values to other types if specified.
             * @param message update10088Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10088Type.update10088Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update10088Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ResultType. */
        interface IResultType {

            /** ResultType spinResult */
            spinResult: IspinResultType;

            /** ResultType scrollPath */
            scrollPath: number;
        }

        /** Represents a ResultType. */
        class ResultType implements IResultType {

            /**
             * Constructs a new ResultType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10088Type.IResultType);

            /** ResultType spinResult. */
            public spinResult: IspinResultType;

            /** ResultType scrollPath. */
            public scrollPath: number;

            /**
             * Creates a new ResultType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ResultType instance
             */
            public static create(properties?: game10088Type.IResultType): game10088Type.ResultType;

            /**
             * Encodes the specified ResultType message. Does not implicitly {@link game10088Type.ResultType.verify|verify} messages.
             * @param message ResultType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10088Type.IResultType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ResultType message, length delimited. Does not implicitly {@link game10088Type.ResultType.verify|verify} messages.
             * @param message ResultType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10088Type.IResultType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResultType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ResultType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10088Type.ResultType;

            /**
             * Decodes a ResultType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ResultType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10088Type.ResultType;

            /**
             * Verifies a ResultType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a ResultType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ResultType
             */
            public static fromObject(object: { [k: string]: any }): game10088Type.ResultType;

            /**
             * Creates a plain object from a ResultType message. Also converts values to other types if specified.
             * @param message ResultType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10088Type.ResultType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ResultType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game10090Type. */
    export class game10090Type implements Igame10090Type {

        /**
         * Constructs a new game10090Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame10090Type);

        /** game10090Type data. */
        public data?: (game10090Type.Idata10090Type | null);

        /** game10090Type update. */
        public update: game10090Type.Iupdate10090Type[];

        /**
         * Creates a new game10090Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game10090Type instance
         */
        public static create(properties?: Igame10090Type): game10090Type;

        /**
         * Encodes the specified game10090Type message. Does not implicitly {@link game10090Type.verify|verify} messages.
         * @param message game10090Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame10090Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game10090Type message, length delimited. Does not implicitly {@link game10090Type.verify|verify} messages.
         * @param message game10090Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame10090Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game10090Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game10090Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10090Type;

        /**
         * Decodes a game10090Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game10090Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10090Type;

        /**
         * Verifies a game10090Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game10090Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game10090Type
         */
        public static fromObject(object: { [k: string]: any }): game10090Type;

        /**
         * Creates a plain object from a game10090Type message. Also converts values to other types if specified.
         * @param message game10090Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game10090Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game10090Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game10090Type {

        /** Properties of a data10090Type. */
        interface Idata10090Type {

            /** data10090Type resultList */
            resultList?: (game10090Type.IResultType[] | null);
        }

        /** Represents a data10090Type. */
        class data10090Type implements Idata10090Type {

            /**
             * Constructs a new data10090Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10090Type.Idata10090Type);

            /** data10090Type resultList. */
            public resultList: game10090Type.IResultType[];

            /**
             * Creates a new data10090Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data10090Type instance
             */
            public static create(properties?: game10090Type.Idata10090Type): game10090Type.data10090Type;

            /**
             * Encodes the specified data10090Type message. Does not implicitly {@link game10090Type.data10090Type.verify|verify} messages.
             * @param message data10090Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10090Type.Idata10090Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data10090Type message, length delimited. Does not implicitly {@link game10090Type.data10090Type.verify|verify} messages.
             * @param message data10090Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10090Type.Idata10090Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data10090Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data10090Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10090Type.data10090Type;

            /**
             * Decodes a data10090Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data10090Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10090Type.data10090Type;

            /**
             * Verifies a data10090Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data10090Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data10090Type
             */
            public static fromObject(object: { [k: string]: any }): game10090Type.data10090Type;

            /**
             * Creates a plain object from a data10090Type message. Also converts values to other types if specified.
             * @param message data10090Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10090Type.data10090Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data10090Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update10090Type. */
        interface Iupdate10090Type {

            /** update10090Type index */
            index: number;

            /** update10090Type resultList */
            resultList?: (game10090Type.IResultType[] | null);
        }

        /** Represents an update10090Type. */
        class update10090Type implements Iupdate10090Type {

            /**
             * Constructs a new update10090Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10090Type.Iupdate10090Type);

            /** update10090Type index. */
            public index: number;

            /** update10090Type resultList. */
            public resultList: game10090Type.IResultType[];

            /**
             * Creates a new update10090Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update10090Type instance
             */
            public static create(properties?: game10090Type.Iupdate10090Type): game10090Type.update10090Type;

            /**
             * Encodes the specified update10090Type message. Does not implicitly {@link game10090Type.update10090Type.verify|verify} messages.
             * @param message update10090Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10090Type.Iupdate10090Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update10090Type message, length delimited. Does not implicitly {@link game10090Type.update10090Type.verify|verify} messages.
             * @param message update10090Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10090Type.Iupdate10090Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update10090Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update10090Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10090Type.update10090Type;

            /**
             * Decodes an update10090Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update10090Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10090Type.update10090Type;

            /**
             * Verifies an update10090Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update10090Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update10090Type
             */
            public static fromObject(object: { [k: string]: any }): game10090Type.update10090Type;

            /**
             * Creates a plain object from an update10090Type message. Also converts values to other types if specified.
             * @param message update10090Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10090Type.update10090Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update10090Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ResultType. */
        interface IResultType {

            /** ResultType spinResult */
            spinResult: IspinResultType;

            /** ResultType unityElemList */
            unityElemList?: (IunityElementListType[] | null);
        }

        /** Represents a ResultType. */
        class ResultType implements IResultType {

            /**
             * Constructs a new ResultType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10090Type.IResultType);

            /** ResultType spinResult. */
            public spinResult: IspinResultType;

            /** ResultType unityElemList. */
            public unityElemList: IunityElementListType[];

            /**
             * Creates a new ResultType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ResultType instance
             */
            public static create(properties?: game10090Type.IResultType): game10090Type.ResultType;

            /**
             * Encodes the specified ResultType message. Does not implicitly {@link game10090Type.ResultType.verify|verify} messages.
             * @param message ResultType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10090Type.IResultType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ResultType message, length delimited. Does not implicitly {@link game10090Type.ResultType.verify|verify} messages.
             * @param message ResultType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10090Type.IResultType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResultType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ResultType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10090Type.ResultType;

            /**
             * Decodes a ResultType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ResultType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10090Type.ResultType;

            /**
             * Verifies a ResultType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a ResultType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ResultType
             */
            public static fromObject(object: { [k: string]: any }): game10090Type.ResultType;

            /**
             * Creates a plain object from a ResultType message. Also converts values to other types if specified.
             * @param message ResultType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10090Type.ResultType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ResultType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents an unityElementListType. */
    export class unityElementListType implements IunityElementListType {

        /**
         * Constructs a new unityElementListType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IunityElementListType);

        /** unityElementListType elem. */
        public elem: number;

        /** unityElementListType replacePosList. */
        public replacePosList: number[];

        /**
         * Creates a new unityElementListType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns unityElementListType instance
         */
        public static create(properties?: IunityElementListType): unityElementListType;

        /**
         * Encodes the specified unityElementListType message. Does not implicitly {@link unityElementListType.verify|verify} messages.
         * @param message unityElementListType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IunityElementListType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified unityElementListType message, length delimited. Does not implicitly {@link unityElementListType.verify|verify} messages.
         * @param message unityElementListType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IunityElementListType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an unityElementListType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns unityElementListType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): unityElementListType;

        /**
         * Decodes an unityElementListType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns unityElementListType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): unityElementListType;

        /**
         * Verifies an unityElementListType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates an unityElementListType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns unityElementListType
         */
        public static fromObject(object: { [k: string]: any }): unityElementListType;

        /**
         * Creates a plain object from an unityElementListType message. Also converts values to other types if specified.
         * @param message unityElementListType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: unityElementListType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this unityElementListType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a game10092Type. */
    export class game10092Type implements Igame10092Type {

        /**
         * Constructs a new game10092Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame10092Type);

        /** game10092Type data. */
        public data?: (game10092Type.Idata10092Type | null);

        /** game10092Type update. */
        public update: game10092Type.Iupdate10092Type[];

        /**
         * Creates a new game10092Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game10092Type instance
         */
        public static create(properties?: Igame10092Type): game10092Type;

        /**
         * Encodes the specified game10092Type message. Does not implicitly {@link game10092Type.verify|verify} messages.
         * @param message game10092Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame10092Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game10092Type message, length delimited. Does not implicitly {@link game10092Type.verify|verify} messages.
         * @param message game10092Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame10092Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game10092Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game10092Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10092Type;

        /**
         * Decodes a game10092Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game10092Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10092Type;

        /**
         * Verifies a game10092Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game10092Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game10092Type
         */
        public static fromObject(object: { [k: string]: any }): game10092Type;

        /**
         * Creates a plain object from a game10092Type message. Also converts values to other types if specified.
         * @param message game10092Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game10092Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game10092Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game10092Type {

        /** Properties of a data10092Type. */
        interface Idata10092Type {

            /** data10092Type resultRateList */
            resultRateList?: (number[] | null);
        }

        /** Represents a data10092Type. */
        class data10092Type implements Idata10092Type {

            /**
             * Constructs a new data10092Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10092Type.Idata10092Type);

            /** data10092Type resultRateList. */
            public resultRateList: number[];

            /**
             * Creates a new data10092Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data10092Type instance
             */
            public static create(properties?: game10092Type.Idata10092Type): game10092Type.data10092Type;

            /**
             * Encodes the specified data10092Type message. Does not implicitly {@link game10092Type.data10092Type.verify|verify} messages.
             * @param message data10092Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10092Type.Idata10092Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data10092Type message, length delimited. Does not implicitly {@link game10092Type.data10092Type.verify|verify} messages.
             * @param message data10092Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10092Type.Idata10092Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data10092Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data10092Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10092Type.data10092Type;

            /**
             * Decodes a data10092Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data10092Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10092Type.data10092Type;

            /**
             * Verifies a data10092Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data10092Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data10092Type
             */
            public static fromObject(object: { [k: string]: any }): game10092Type.data10092Type;

            /**
             * Creates a plain object from a data10092Type message. Also converts values to other types if specified.
             * @param message data10092Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10092Type.data10092Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data10092Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update10092Type. */
        interface Iupdate10092Type {

            /** update10092Type index */
            index: number;

            /** update10092Type resultRateList */
            resultRateList: number;
        }

        /** Represents an update10092Type. */
        class update10092Type implements Iupdate10092Type {

            /**
             * Constructs a new update10092Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10092Type.Iupdate10092Type);

            /** update10092Type index. */
            public index: number;

            /** update10092Type resultRateList. */
            public resultRateList: number;

            /**
             * Creates a new update10092Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update10092Type instance
             */
            public static create(properties?: game10092Type.Iupdate10092Type): game10092Type.update10092Type;

            /**
             * Encodes the specified update10092Type message. Does not implicitly {@link game10092Type.update10092Type.verify|verify} messages.
             * @param message update10092Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10092Type.Iupdate10092Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update10092Type message, length delimited. Does not implicitly {@link game10092Type.update10092Type.verify|verify} messages.
             * @param message update10092Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10092Type.Iupdate10092Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update10092Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update10092Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10092Type.update10092Type;

            /**
             * Decodes an update10092Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update10092Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10092Type.update10092Type;

            /**
             * Verifies an update10092Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update10092Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update10092Type
             */
            public static fromObject(object: { [k: string]: any }): game10092Type.update10092Type;

            /**
             * Creates a plain object from an update10092Type message. Also converts values to other types if specified.
             * @param message update10092Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10092Type.update10092Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update10092Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game10095Type. */
    export class game10095Type implements Igame10095Type {

        /**
         * Constructs a new game10095Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame10095Type);

        /** game10095Type data. */
        public data?: (game10095Type.Idata10095Type | null);

        /** game10095Type update. */
        public update: game10095Type.Iupdate10095Type[];

        /**
         * Creates a new game10095Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game10095Type instance
         */
        public static create(properties?: Igame10095Type): game10095Type;

        /**
         * Encodes the specified game10095Type message. Does not implicitly {@link game10095Type.verify|verify} messages.
         * @param message game10095Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame10095Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game10095Type message, length delimited. Does not implicitly {@link game10095Type.verify|verify} messages.
         * @param message game10095Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame10095Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game10095Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game10095Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10095Type;

        /**
         * Decodes a game10095Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game10095Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10095Type;

        /**
         * Verifies a game10095Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game10095Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game10095Type
         */
        public static fromObject(object: { [k: string]: any }): game10095Type;

        /**
         * Creates a plain object from a game10095Type message. Also converts values to other types if specified.
         * @param message game10095Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game10095Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game10095Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game10095Type {

        /** Properties of a data10095Type. */
        interface Idata10095Type {

            /** data10095Type gridReward */
            gridReward?: (game10095Type.IGridRewardType[] | null);
        }

        /** Represents a data10095Type. */
        class data10095Type implements Idata10095Type {

            /**
             * Constructs a new data10095Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10095Type.Idata10095Type);

            /** data10095Type gridReward. */
            public gridReward: game10095Type.IGridRewardType[];

            /**
             * Creates a new data10095Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data10095Type instance
             */
            public static create(properties?: game10095Type.Idata10095Type): game10095Type.data10095Type;

            /**
             * Encodes the specified data10095Type message. Does not implicitly {@link game10095Type.data10095Type.verify|verify} messages.
             * @param message data10095Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10095Type.Idata10095Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data10095Type message, length delimited. Does not implicitly {@link game10095Type.data10095Type.verify|verify} messages.
             * @param message data10095Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10095Type.Idata10095Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data10095Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data10095Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10095Type.data10095Type;

            /**
             * Decodes a data10095Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data10095Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10095Type.data10095Type;

            /**
             * Verifies a data10095Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data10095Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data10095Type
             */
            public static fromObject(object: { [k: string]: any }): game10095Type.data10095Type;

            /**
             * Creates a plain object from a data10095Type message. Also converts values to other types if specified.
             * @param message data10095Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10095Type.data10095Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data10095Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update10095Type. */
        interface Iupdate10095Type {

            /** update10095Type index */
            index: number;

            /** update10095Type gridReward */
            gridReward?: (game10095Type.IGridRewardType[] | null);
        }

        /** Represents an update10095Type. */
        class update10095Type implements Iupdate10095Type {

            /**
             * Constructs a new update10095Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10095Type.Iupdate10095Type);

            /** update10095Type index. */
            public index: number;

            /** update10095Type gridReward. */
            public gridReward: game10095Type.IGridRewardType[];

            /**
             * Creates a new update10095Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update10095Type instance
             */
            public static create(properties?: game10095Type.Iupdate10095Type): game10095Type.update10095Type;

            /**
             * Encodes the specified update10095Type message. Does not implicitly {@link game10095Type.update10095Type.verify|verify} messages.
             * @param message update10095Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10095Type.Iupdate10095Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update10095Type message, length delimited. Does not implicitly {@link game10095Type.update10095Type.verify|verify} messages.
             * @param message update10095Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10095Type.Iupdate10095Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update10095Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update10095Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10095Type.update10095Type;

            /**
             * Decodes an update10095Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update10095Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10095Type.update10095Type;

            /**
             * Verifies an update10095Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update10095Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update10095Type
             */
            public static fromObject(object: { [k: string]: any }): game10095Type.update10095Type;

            /**
             * Creates a plain object from an update10095Type message. Also converts values to other types if specified.
             * @param message update10095Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10095Type.update10095Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update10095Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GridRewardType. */
        interface IGridRewardType {

            /** GridRewardType pos */
            pos: number;

            /** GridRewardType goldReward */
            goldReward: (number | Long);
        }

        /** Represents a GridRewardType. */
        class GridRewardType implements IGridRewardType {

            /**
             * Constructs a new GridRewardType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10095Type.IGridRewardType);

            /** GridRewardType pos. */
            public pos: number;

            /** GridRewardType goldReward. */
            public goldReward: (number | Long);

            /**
             * Creates a new GridRewardType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GridRewardType instance
             */
            public static create(properties?: game10095Type.IGridRewardType): game10095Type.GridRewardType;

            /**
             * Encodes the specified GridRewardType message. Does not implicitly {@link game10095Type.GridRewardType.verify|verify} messages.
             * @param message GridRewardType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10095Type.IGridRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GridRewardType message, length delimited. Does not implicitly {@link game10095Type.GridRewardType.verify|verify} messages.
             * @param message GridRewardType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10095Type.IGridRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GridRewardType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GridRewardType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10095Type.GridRewardType;

            /**
             * Decodes a GridRewardType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GridRewardType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10095Type.GridRewardType;

            /**
             * Verifies a GridRewardType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a GridRewardType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GridRewardType
             */
            public static fromObject(object: { [k: string]: any }): game10095Type.GridRewardType;

            /**
             * Creates a plain object from a GridRewardType message. Also converts values to other types if specified.
             * @param message GridRewardType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10095Type.GridRewardType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GridRewardType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game10099Type. */
    export class game10099Type implements Igame10099Type {

        /**
         * Constructs a new game10099Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame10099Type);

        /** game10099Type data. */
        public data?: (game10099Type.Idata10099Type | null);

        /** game10099Type update. */
        public update: game10099Type.Iupdate10099Type[];

        /**
         * Creates a new game10099Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game10099Type instance
         */
        public static create(properties?: Igame10099Type): game10099Type;

        /**
         * Encodes the specified game10099Type message. Does not implicitly {@link game10099Type.verify|verify} messages.
         * @param message game10099Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame10099Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game10099Type message, length delimited. Does not implicitly {@link game10099Type.verify|verify} messages.
         * @param message game10099Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame10099Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game10099Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game10099Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10099Type;

        /**
         * Decodes a game10099Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game10099Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10099Type;

        /**
         * Verifies a game10099Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game10099Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game10099Type
         */
        public static fromObject(object: { [k: string]: any }): game10099Type;

        /**
         * Creates a plain object from a game10099Type message. Also converts values to other types if specified.
         * @param message game10099Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game10099Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game10099Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game10099Type {

        /** Properties of a data10099Type. */
        interface Idata10099Type {

            /** data10099Type exchangeColumnList */
            exchangeColumnList?: (IExchangeColumnListType[] | null);
        }

        /** Represents a data10099Type. */
        class data10099Type implements Idata10099Type {

            /**
             * Constructs a new data10099Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10099Type.Idata10099Type);

            /** data10099Type exchangeColumnList. */
            public exchangeColumnList: IExchangeColumnListType[];

            /**
             * Creates a new data10099Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data10099Type instance
             */
            public static create(properties?: game10099Type.Idata10099Type): game10099Type.data10099Type;

            /**
             * Encodes the specified data10099Type message. Does not implicitly {@link game10099Type.data10099Type.verify|verify} messages.
             * @param message data10099Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10099Type.Idata10099Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data10099Type message, length delimited. Does not implicitly {@link game10099Type.data10099Type.verify|verify} messages.
             * @param message data10099Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10099Type.Idata10099Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data10099Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data10099Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10099Type.data10099Type;

            /**
             * Decodes a data10099Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data10099Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10099Type.data10099Type;

            /**
             * Verifies a data10099Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data10099Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data10099Type
             */
            public static fromObject(object: { [k: string]: any }): game10099Type.data10099Type;

            /**
             * Creates a plain object from a data10099Type message. Also converts values to other types if specified.
             * @param message data10099Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10099Type.data10099Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data10099Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update10099Type. */
        interface Iupdate10099Type {

            /** update10099Type index */
            index: number;

            /** update10099Type exchangeColumnList */
            exchangeColumnList: IExchangeColumnListType;
        }

        /** Represents an update10099Type. */
        class update10099Type implements Iupdate10099Type {

            /**
             * Constructs a new update10099Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game10099Type.Iupdate10099Type);

            /** update10099Type index. */
            public index: number;

            /** update10099Type exchangeColumnList. */
            public exchangeColumnList: IExchangeColumnListType;

            /**
             * Creates a new update10099Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update10099Type instance
             */
            public static create(properties?: game10099Type.Iupdate10099Type): game10099Type.update10099Type;

            /**
             * Encodes the specified update10099Type message. Does not implicitly {@link game10099Type.update10099Type.verify|verify} messages.
             * @param message update10099Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game10099Type.Iupdate10099Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update10099Type message, length delimited. Does not implicitly {@link game10099Type.update10099Type.verify|verify} messages.
             * @param message update10099Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game10099Type.Iupdate10099Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update10099Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update10099Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game10099Type.update10099Type;

            /**
             * Decodes an update10099Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update10099Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game10099Type.update10099Type;

            /**
             * Verifies an update10099Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update10099Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update10099Type
             */
            public static fromObject(object: { [k: string]: any }): game10099Type.update10099Type;

            /**
             * Creates a plain object from an update10099Type message. Also converts values to other types if specified.
             * @param message update10099Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game10099Type.update10099Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update10099Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents an ExchangeColumnListType. */
    export class ExchangeColumnListType implements IExchangeColumnListType {

        /**
         * Constructs a new ExchangeColumnListType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IExchangeColumnListType);

        /** ExchangeColumnListType startColumn. */
        public startColumn: number;

        /** ExchangeColumnListType endColumn. */
        public endColumn: number;

        /**
         * Creates a new ExchangeColumnListType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ExchangeColumnListType instance
         */
        public static create(properties?: IExchangeColumnListType): ExchangeColumnListType;

        /**
         * Encodes the specified ExchangeColumnListType message. Does not implicitly {@link ExchangeColumnListType.verify|verify} messages.
         * @param message ExchangeColumnListType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IExchangeColumnListType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ExchangeColumnListType message, length delimited. Does not implicitly {@link ExchangeColumnListType.verify|verify} messages.
         * @param message ExchangeColumnListType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IExchangeColumnListType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ExchangeColumnListType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ExchangeColumnListType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): ExchangeColumnListType;

        /**
         * Decodes an ExchangeColumnListType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ExchangeColumnListType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): ExchangeColumnListType;

        /**
         * Verifies an ExchangeColumnListType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates an ExchangeColumnListType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ExchangeColumnListType
         */
        public static fromObject(object: { [k: string]: any }): ExchangeColumnListType;

        /**
         * Creates a plain object from an ExchangeColumnListType message. Also converts values to other types if specified.
         * @param message ExchangeColumnListType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ExchangeColumnListType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ExchangeColumnListType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a game1110003Type. */
    export class game1110003Type implements Igame1110003Type {

        /**
         * Constructs a new game1110003Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1110003Type);

        /** game1110003Type data. */
        public data?: (game1110003Type.Idata1110003Type | null);

        /** game1110003Type update. */
        public update: game1110003Type.Iupdate1110003Type[];

        /**
         * Creates a new game1110003Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1110003Type instance
         */
        public static create(properties?: Igame1110003Type): game1110003Type;

        /**
         * Encodes the specified game1110003Type message. Does not implicitly {@link game1110003Type.verify|verify} messages.
         * @param message game1110003Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1110003Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1110003Type message, length delimited. Does not implicitly {@link game1110003Type.verify|verify} messages.
         * @param message game1110003Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1110003Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1110003Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1110003Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110003Type;

        /**
         * Decodes a game1110003Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1110003Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110003Type;

        /**
         * Verifies a game1110003Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1110003Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1110003Type
         */
        public static fromObject(object: { [k: string]: any }): game1110003Type;

        /**
         * Creates a plain object from a game1110003Type message. Also converts values to other types if specified.
         * @param message game1110003Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1110003Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1110003Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1110003Type {

        /** Properties of a data1110003Type. */
        interface Idata1110003Type {

            /** data1110003Type resultList */
            resultList?: (IspinResultType[] | null);
        }

        /** Represents a data1110003Type. */
        class data1110003Type implements Idata1110003Type {

            /**
             * Constructs a new data1110003Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110003Type.Idata1110003Type);

            /** data1110003Type resultList. */
            public resultList: IspinResultType[];

            /**
             * Creates a new data1110003Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1110003Type instance
             */
            public static create(properties?: game1110003Type.Idata1110003Type): game1110003Type.data1110003Type;

            /**
             * Encodes the specified data1110003Type message. Does not implicitly {@link game1110003Type.data1110003Type.verify|verify} messages.
             * @param message data1110003Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110003Type.Idata1110003Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1110003Type message, length delimited. Does not implicitly {@link game1110003Type.data1110003Type.verify|verify} messages.
             * @param message data1110003Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110003Type.Idata1110003Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1110003Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1110003Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110003Type.data1110003Type;

            /**
             * Decodes a data1110003Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1110003Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110003Type.data1110003Type;

            /**
             * Verifies a data1110003Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1110003Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1110003Type
             */
            public static fromObject(object: { [k: string]: any }): game1110003Type.data1110003Type;

            /**
             * Creates a plain object from a data1110003Type message. Also converts values to other types if specified.
             * @param message data1110003Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110003Type.data1110003Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1110003Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1110003Type. */
        interface Iupdate1110003Type {

            /** update1110003Type index */
            index: number;

            /** update1110003Type resultList */
            resultList?: (IspinResultType[] | null);
        }

        /** Represents an update1110003Type. */
        class update1110003Type implements Iupdate1110003Type {

            /**
             * Constructs a new update1110003Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110003Type.Iupdate1110003Type);

            /** update1110003Type index. */
            public index: number;

            /** update1110003Type resultList. */
            public resultList: IspinResultType[];

            /**
             * Creates a new update1110003Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1110003Type instance
             */
            public static create(properties?: game1110003Type.Iupdate1110003Type): game1110003Type.update1110003Type;

            /**
             * Encodes the specified update1110003Type message. Does not implicitly {@link game1110003Type.update1110003Type.verify|verify} messages.
             * @param message update1110003Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110003Type.Iupdate1110003Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1110003Type message, length delimited. Does not implicitly {@link game1110003Type.update1110003Type.verify|verify} messages.
             * @param message update1110003Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110003Type.Iupdate1110003Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1110003Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1110003Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110003Type.update1110003Type;

            /**
             * Decodes an update1110003Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1110003Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110003Type.update1110003Type;

            /**
             * Verifies an update1110003Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1110003Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1110003Type
             */
            public static fromObject(object: { [k: string]: any }): game1110003Type.update1110003Type;

            /**
             * Creates a plain object from an update1110003Type message. Also converts values to other types if specified.
             * @param message update1110003Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110003Type.update1110003Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1110003Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1110004Type. */
    export class game1110004Type implements Igame1110004Type {

        /**
         * Constructs a new game1110004Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1110004Type);

        /** game1110004Type data. */
        public data?: (game1110004Type.Idata1110004Type | null);

        /** game1110004Type update. */
        public update: game1110004Type.Iupdate1110004Type[];

        /**
         * Creates a new game1110004Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1110004Type instance
         */
        public static create(properties?: Igame1110004Type): game1110004Type;

        /**
         * Encodes the specified game1110004Type message. Does not implicitly {@link game1110004Type.verify|verify} messages.
         * @param message game1110004Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1110004Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1110004Type message, length delimited. Does not implicitly {@link game1110004Type.verify|verify} messages.
         * @param message game1110004Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1110004Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1110004Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1110004Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110004Type;

        /**
         * Decodes a game1110004Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1110004Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110004Type;

        /**
         * Verifies a game1110004Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1110004Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1110004Type
         */
        public static fromObject(object: { [k: string]: any }): game1110004Type;

        /**
         * Creates a plain object from a game1110004Type message. Also converts values to other types if specified.
         * @param message game1110004Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1110004Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1110004Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1110004Type {

        /** Properties of a data1110004Type. */
        interface Idata1110004Type {

            /** data1110004Type resultList */
            resultList?: (game1110004Type.IResultType[] | null);
        }

        /** Represents a data1110004Type. */
        class data1110004Type implements Idata1110004Type {

            /**
             * Constructs a new data1110004Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110004Type.Idata1110004Type);

            /** data1110004Type resultList. */
            public resultList: game1110004Type.IResultType[];

            /**
             * Creates a new data1110004Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1110004Type instance
             */
            public static create(properties?: game1110004Type.Idata1110004Type): game1110004Type.data1110004Type;

            /**
             * Encodes the specified data1110004Type message. Does not implicitly {@link game1110004Type.data1110004Type.verify|verify} messages.
             * @param message data1110004Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110004Type.Idata1110004Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1110004Type message, length delimited. Does not implicitly {@link game1110004Type.data1110004Type.verify|verify} messages.
             * @param message data1110004Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110004Type.Idata1110004Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1110004Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1110004Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110004Type.data1110004Type;

            /**
             * Decodes a data1110004Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1110004Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110004Type.data1110004Type;

            /**
             * Verifies a data1110004Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1110004Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1110004Type
             */
            public static fromObject(object: { [k: string]: any }): game1110004Type.data1110004Type;

            /**
             * Creates a plain object from a data1110004Type message. Also converts values to other types if specified.
             * @param message data1110004Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110004Type.data1110004Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1110004Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1110004Type. */
        interface Iupdate1110004Type {

            /** update1110004Type index */
            index: number;

            /** update1110004Type resultList */
            resultList?: (game1110004Type.IResultType[] | null);
        }

        /** Represents an update1110004Type. */
        class update1110004Type implements Iupdate1110004Type {

            /**
             * Constructs a new update1110004Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110004Type.Iupdate1110004Type);

            /** update1110004Type index. */
            public index: number;

            /** update1110004Type resultList. */
            public resultList: game1110004Type.IResultType[];

            /**
             * Creates a new update1110004Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1110004Type instance
             */
            public static create(properties?: game1110004Type.Iupdate1110004Type): game1110004Type.update1110004Type;

            /**
             * Encodes the specified update1110004Type message. Does not implicitly {@link game1110004Type.update1110004Type.verify|verify} messages.
             * @param message update1110004Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110004Type.Iupdate1110004Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1110004Type message, length delimited. Does not implicitly {@link game1110004Type.update1110004Type.verify|verify} messages.
             * @param message update1110004Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110004Type.Iupdate1110004Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1110004Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1110004Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110004Type.update1110004Type;

            /**
             * Decodes an update1110004Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1110004Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110004Type.update1110004Type;

            /**
             * Verifies an update1110004Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1110004Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1110004Type
             */
            public static fromObject(object: { [k: string]: any }): game1110004Type.update1110004Type;

            /**
             * Creates a plain object from an update1110004Type message. Also converts values to other types if specified.
             * @param message update1110004Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110004Type.update1110004Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1110004Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ResultType. */
        interface IResultType {

            /** ResultType spinResult */
            spinResult: IspinResultType;

            /** ResultType winRate */
            winRate: number;

            /** ResultType nextWinRate */
            nextWinRate: number;
        }

        /** Represents a ResultType. */
        class ResultType implements IResultType {

            /**
             * Constructs a new ResultType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110004Type.IResultType);

            /** ResultType spinResult. */
            public spinResult: IspinResultType;

            /** ResultType winRate. */
            public winRate: number;

            /** ResultType nextWinRate. */
            public nextWinRate: number;

            /**
             * Creates a new ResultType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ResultType instance
             */
            public static create(properties?: game1110004Type.IResultType): game1110004Type.ResultType;

            /**
             * Encodes the specified ResultType message. Does not implicitly {@link game1110004Type.ResultType.verify|verify} messages.
             * @param message ResultType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110004Type.IResultType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ResultType message, length delimited. Does not implicitly {@link game1110004Type.ResultType.verify|verify} messages.
             * @param message ResultType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110004Type.IResultType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResultType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ResultType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110004Type.ResultType;

            /**
             * Decodes a ResultType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ResultType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110004Type.ResultType;

            /**
             * Verifies a ResultType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a ResultType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ResultType
             */
            public static fromObject(object: { [k: string]: any }): game1110004Type.ResultType;

            /**
             * Creates a plain object from a ResultType message. Also converts values to other types if specified.
             * @param message ResultType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110004Type.ResultType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ResultType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1110015Type. */
    export class game1110015Type implements Igame1110015Type {

        /**
         * Constructs a new game1110015Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1110015Type);

        /** game1110015Type data. */
        public data?: (game1110015Type.Idata1110015Type | null);

        /** game1110015Type update. */
        public update: game1110015Type.Iupdate1110015Type[];

        /**
         * Creates a new game1110015Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1110015Type instance
         */
        public static create(properties?: Igame1110015Type): game1110015Type;

        /**
         * Encodes the specified game1110015Type message. Does not implicitly {@link game1110015Type.verify|verify} messages.
         * @param message game1110015Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1110015Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1110015Type message, length delimited. Does not implicitly {@link game1110015Type.verify|verify} messages.
         * @param message game1110015Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1110015Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1110015Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1110015Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110015Type;

        /**
         * Decodes a game1110015Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1110015Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110015Type;

        /**
         * Verifies a game1110015Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1110015Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1110015Type
         */
        public static fromObject(object: { [k: string]: any }): game1110015Type;

        /**
         * Creates a plain object from a game1110015Type message. Also converts values to other types if specified.
         * @param message game1110015Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1110015Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1110015Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1110015Type {

        /** Properties of a data1110015Type. */
        interface Idata1110015Type {

            /** data1110015Type scene */
            scene: number;

            /** data1110015Type status */
            status: gemSaviourType;

            /** data1110015Type withKey */
            withKey: boolean;

            /** data1110015Type mapInfo */
            mapInfo?: (game1110015Type.ImapInfoType | null);

            /** data1110015Type stoneInfo */
            stoneInfo?: (game1110015Type.IstoneInfoType | null);

            /** data1110015Type fightInfo */
            fightInfo?: (game1110015Type.IfightInfoType | null);

            /** data1110015Type stoneResult */
            stoneResult?: (game1110015Type.IstoneResultType[] | null);

            /** data1110015Type fightResult */
            fightResult?: (game1110015Type.IfightResultType[] | null);

            /** data1110015Type specialGem */
            specialGem?: (game1110015Type.IspecialGemType | null);
        }

        /** Represents a data1110015Type. */
        class data1110015Type implements Idata1110015Type {

            /**
             * Constructs a new data1110015Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110015Type.Idata1110015Type);

            /** data1110015Type scene. */
            public scene: number;

            /** data1110015Type status. */
            public status: gemSaviourType;

            /** data1110015Type withKey. */
            public withKey: boolean;

            /** data1110015Type mapInfo. */
            public mapInfo?: (game1110015Type.ImapInfoType | null);

            /** data1110015Type stoneInfo. */
            public stoneInfo?: (game1110015Type.IstoneInfoType | null);

            /** data1110015Type fightInfo. */
            public fightInfo?: (game1110015Type.IfightInfoType | null);

            /** data1110015Type stoneResult. */
            public stoneResult: game1110015Type.IstoneResultType[];

            /** data1110015Type fightResult. */
            public fightResult: game1110015Type.IfightResultType[];

            /** data1110015Type specialGem. */
            public specialGem?: (game1110015Type.IspecialGemType | null);

            /**
             * Creates a new data1110015Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1110015Type instance
             */
            public static create(properties?: game1110015Type.Idata1110015Type): game1110015Type.data1110015Type;

            /**
             * Encodes the specified data1110015Type message. Does not implicitly {@link game1110015Type.data1110015Type.verify|verify} messages.
             * @param message data1110015Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110015Type.Idata1110015Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1110015Type message, length delimited. Does not implicitly {@link game1110015Type.data1110015Type.verify|verify} messages.
             * @param message data1110015Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110015Type.Idata1110015Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1110015Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1110015Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110015Type.data1110015Type;

            /**
             * Decodes a data1110015Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1110015Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110015Type.data1110015Type;

            /**
             * Verifies a data1110015Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1110015Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1110015Type
             */
            public static fromObject(object: { [k: string]: any }): game1110015Type.data1110015Type;

            /**
             * Creates a plain object from a data1110015Type message. Also converts values to other types if specified.
             * @param message data1110015Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110015Type.data1110015Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1110015Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1110015Type. */
        interface Iupdate1110015Type {

            /** update1110015Type index */
            index: number;

            /** update1110015Type scene */
            scene: number;

            /** update1110015Type status */
            status: gemSaviourType;

            /** update1110015Type withKey */
            withKey: boolean;

            /** update1110015Type mapInfo */
            mapInfo?: (game1110015Type.ImapInfoType | null);

            /** update1110015Type stoneInfo */
            stoneInfo?: (game1110015Type.IstoneInfoType | null);

            /** update1110015Type fightInfo */
            fightInfo?: (game1110015Type.IfightInfoType | null);

            /** update1110015Type stoneResult */
            stoneResult?: (game1110015Type.IstoneResultType[] | null);

            /** update1110015Type fightResult */
            fightResult?: (game1110015Type.IfightResultType[] | null);

            /** update1110015Type specialGem */
            specialGem?: (game1110015Type.IspecialGemType | null);
        }

        /** Represents an update1110015Type. */
        class update1110015Type implements Iupdate1110015Type {

            /**
             * Constructs a new update1110015Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110015Type.Iupdate1110015Type);

            /** update1110015Type index. */
            public index: number;

            /** update1110015Type scene. */
            public scene: number;

            /** update1110015Type status. */
            public status: gemSaviourType;

            /** update1110015Type withKey. */
            public withKey: boolean;

            /** update1110015Type mapInfo. */
            public mapInfo?: (game1110015Type.ImapInfoType | null);

            /** update1110015Type stoneInfo. */
            public stoneInfo?: (game1110015Type.IstoneInfoType | null);

            /** update1110015Type fightInfo. */
            public fightInfo?: (game1110015Type.IfightInfoType | null);

            /** update1110015Type stoneResult. */
            public stoneResult: game1110015Type.IstoneResultType[];

            /** update1110015Type fightResult. */
            public fightResult: game1110015Type.IfightResultType[];

            /** update1110015Type specialGem. */
            public specialGem?: (game1110015Type.IspecialGemType | null);

            /**
             * Creates a new update1110015Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1110015Type instance
             */
            public static create(properties?: game1110015Type.Iupdate1110015Type): game1110015Type.update1110015Type;

            /**
             * Encodes the specified update1110015Type message. Does not implicitly {@link game1110015Type.update1110015Type.verify|verify} messages.
             * @param message update1110015Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110015Type.Iupdate1110015Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1110015Type message, length delimited. Does not implicitly {@link game1110015Type.update1110015Type.verify|verify} messages.
             * @param message update1110015Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110015Type.Iupdate1110015Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1110015Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1110015Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110015Type.update1110015Type;

            /**
             * Decodes an update1110015Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1110015Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110015Type.update1110015Type;

            /**
             * Verifies an update1110015Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1110015Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1110015Type
             */
            public static fromObject(object: { [k: string]: any }): game1110015Type.update1110015Type;

            /**
             * Creates a plain object from an update1110015Type message. Also converts values to other types if specified.
             * @param message update1110015Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110015Type.update1110015Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1110015Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a gemSaviourReward. */
        interface IgemSaviourReward {

            /** gemSaviourReward rewardType */
            rewardType: gemSaviourRewardType;

            /** gemSaviourReward rewardNum */
            rewardNum?: (number | Long | null);
        }

        /** Represents a gemSaviourReward. */
        class gemSaviourReward implements IgemSaviourReward {

            /**
             * Constructs a new gemSaviourReward.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110015Type.IgemSaviourReward);

            /** gemSaviourReward rewardType. */
            public rewardType: gemSaviourRewardType;

            /** gemSaviourReward rewardNum. */
            public rewardNum: (number | Long);

            /**
             * Creates a new gemSaviourReward instance using the specified properties.
             * @param [properties] Properties to set
             * @returns gemSaviourReward instance
             */
            public static create(properties?: game1110015Type.IgemSaviourReward): game1110015Type.gemSaviourReward;

            /**
             * Encodes the specified gemSaviourReward message. Does not implicitly {@link game1110015Type.gemSaviourReward.verify|verify} messages.
             * @param message gemSaviourReward message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110015Type.IgemSaviourReward, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified gemSaviourReward message, length delimited. Does not implicitly {@link game1110015Type.gemSaviourReward.verify|verify} messages.
             * @param message gemSaviourReward message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110015Type.IgemSaviourReward, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a gemSaviourReward message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns gemSaviourReward
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110015Type.gemSaviourReward;

            /**
             * Decodes a gemSaviourReward message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns gemSaviourReward
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110015Type.gemSaviourReward;

            /**
             * Verifies a gemSaviourReward message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a gemSaviourReward message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns gemSaviourReward
             */
            public static fromObject(object: { [k: string]: any }): game1110015Type.gemSaviourReward;

            /**
             * Creates a plain object from a gemSaviourReward message. Also converts values to other types if specified.
             * @param message gemSaviourReward
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110015Type.gemSaviourReward, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this gemSaviourReward to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a mapInfoType. */
        interface ImapInfoType {

            /** mapInfoType mapPos */
            mapPos?: (number[] | null);

            /** mapInfoType activePos */
            activePos?: (number[] | null);
        }

        /** Represents a mapInfoType. */
        class mapInfoType implements ImapInfoType {

            /**
             * Constructs a new mapInfoType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110015Type.ImapInfoType);

            /** mapInfoType mapPos. */
            public mapPos: number[];

            /** mapInfoType activePos. */
            public activePos: number[];

            /**
             * Creates a new mapInfoType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns mapInfoType instance
             */
            public static create(properties?: game1110015Type.ImapInfoType): game1110015Type.mapInfoType;

            /**
             * Encodes the specified mapInfoType message. Does not implicitly {@link game1110015Type.mapInfoType.verify|verify} messages.
             * @param message mapInfoType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110015Type.ImapInfoType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified mapInfoType message, length delimited. Does not implicitly {@link game1110015Type.mapInfoType.verify|verify} messages.
             * @param message mapInfoType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110015Type.ImapInfoType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a mapInfoType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns mapInfoType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110015Type.mapInfoType;

            /**
             * Decodes a mapInfoType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns mapInfoType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110015Type.mapInfoType;

            /**
             * Verifies a mapInfoType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a mapInfoType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns mapInfoType
             */
            public static fromObject(object: { [k: string]: any }): game1110015Type.mapInfoType;

            /**
             * Creates a plain object from a mapInfoType message. Also converts values to other types if specified.
             * @param message mapInfoType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110015Type.mapInfoType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this mapInfoType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a stoneInfoType. */
        interface IstoneInfoType {

            /** stoneInfoType stoneNum */
            stoneNum: number;

            /** stoneInfoType reward */
            reward?: (game1110015Type.IgemSaviourReward[] | null);
        }

        /** Represents a stoneInfoType. */
        class stoneInfoType implements IstoneInfoType {

            /**
             * Constructs a new stoneInfoType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110015Type.IstoneInfoType);

            /** stoneInfoType stoneNum. */
            public stoneNum: number;

            /** stoneInfoType reward. */
            public reward: game1110015Type.IgemSaviourReward[];

            /**
             * Creates a new stoneInfoType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns stoneInfoType instance
             */
            public static create(properties?: game1110015Type.IstoneInfoType): game1110015Type.stoneInfoType;

            /**
             * Encodes the specified stoneInfoType message. Does not implicitly {@link game1110015Type.stoneInfoType.verify|verify} messages.
             * @param message stoneInfoType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110015Type.IstoneInfoType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified stoneInfoType message, length delimited. Does not implicitly {@link game1110015Type.stoneInfoType.verify|verify} messages.
             * @param message stoneInfoType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110015Type.IstoneInfoType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a stoneInfoType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns stoneInfoType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110015Type.stoneInfoType;

            /**
             * Decodes a stoneInfoType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns stoneInfoType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110015Type.stoneInfoType;

            /**
             * Verifies a stoneInfoType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a stoneInfoType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns stoneInfoType
             */
            public static fromObject(object: { [k: string]: any }): game1110015Type.stoneInfoType;

            /**
             * Creates a plain object from a stoneInfoType message. Also converts values to other types if specified.
             * @param message stoneInfoType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110015Type.stoneInfoType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this stoneInfoType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a gemSaviourMonster. */
        interface IgemSaviourMonster {

            /** gemSaviourMonster id */
            id: number;

            /** gemSaviourMonster curHp */
            curHp: (number | Long);

            /** gemSaviourMonster hp */
            hp: (number | Long);

            /** gemSaviourMonster status */
            status: gemSaviourMonsterStatus;

            /** gemSaviourMonster beingDamage */
            beingDamage: (number | Long);

            /** gemSaviourMonster reward */
            reward?: (game1110015Type.IgemSaviourReward | null);
        }

        /** Represents a gemSaviourMonster. */
        class gemSaviourMonster implements IgemSaviourMonster {

            /**
             * Constructs a new gemSaviourMonster.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110015Type.IgemSaviourMonster);

            /** gemSaviourMonster id. */
            public id: number;

            /** gemSaviourMonster curHp. */
            public curHp: (number | Long);

            /** gemSaviourMonster hp. */
            public hp: (number | Long);

            /** gemSaviourMonster status. */
            public status: gemSaviourMonsterStatus;

            /** gemSaviourMonster beingDamage. */
            public beingDamage: (number | Long);

            /** gemSaviourMonster reward. */
            public reward?: (game1110015Type.IgemSaviourReward | null);

            /**
             * Creates a new gemSaviourMonster instance using the specified properties.
             * @param [properties] Properties to set
             * @returns gemSaviourMonster instance
             */
            public static create(properties?: game1110015Type.IgemSaviourMonster): game1110015Type.gemSaviourMonster;

            /**
             * Encodes the specified gemSaviourMonster message. Does not implicitly {@link game1110015Type.gemSaviourMonster.verify|verify} messages.
             * @param message gemSaviourMonster message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110015Type.IgemSaviourMonster, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified gemSaviourMonster message, length delimited. Does not implicitly {@link game1110015Type.gemSaviourMonster.verify|verify} messages.
             * @param message gemSaviourMonster message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110015Type.IgemSaviourMonster, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a gemSaviourMonster message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns gemSaviourMonster
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110015Type.gemSaviourMonster;

            /**
             * Decodes a gemSaviourMonster message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns gemSaviourMonster
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110015Type.gemSaviourMonster;

            /**
             * Verifies a gemSaviourMonster message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a gemSaviourMonster message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns gemSaviourMonster
             */
            public static fromObject(object: { [k: string]: any }): game1110015Type.gemSaviourMonster;

            /**
             * Creates a plain object from a gemSaviourMonster message. Also converts values to other types if specified.
             * @param message gemSaviourMonster
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110015Type.gemSaviourMonster, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this gemSaviourMonster to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a fightInfoType. */
        interface IfightInfoType {

            /** fightInfoType role */
            role: game1110015Type.IgemSaviourMonster;

            /** fightInfoType monster */
            monster?: (game1110015Type.IgemSaviourMonster[] | null);
        }

        /** Represents a fightInfoType. */
        class fightInfoType implements IfightInfoType {

            /**
             * Constructs a new fightInfoType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110015Type.IfightInfoType);

            /** fightInfoType role. */
            public role: game1110015Type.IgemSaviourMonster;

            /** fightInfoType monster. */
            public monster: game1110015Type.IgemSaviourMonster[];

            /**
             * Creates a new fightInfoType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns fightInfoType instance
             */
            public static create(properties?: game1110015Type.IfightInfoType): game1110015Type.fightInfoType;

            /**
             * Encodes the specified fightInfoType message. Does not implicitly {@link game1110015Type.fightInfoType.verify|verify} messages.
             * @param message fightInfoType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110015Type.IfightInfoType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified fightInfoType message, length delimited. Does not implicitly {@link game1110015Type.fightInfoType.verify|verify} messages.
             * @param message fightInfoType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110015Type.IfightInfoType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a fightInfoType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns fightInfoType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110015Type.fightInfoType;

            /**
             * Decodes a fightInfoType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns fightInfoType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110015Type.fightInfoType;

            /**
             * Verifies a fightInfoType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a fightInfoType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns fightInfoType
             */
            public static fromObject(object: { [k: string]: any }): game1110015Type.fightInfoType;

            /**
             * Creates a plain object from a fightInfoType message. Also converts values to other types if specified.
             * @param message fightInfoType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110015Type.fightInfoType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this fightInfoType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a stoneResultType. */
        interface IstoneResultType {

            /** stoneResultType decStoneNum */
            decStoneNum: number;

            /** stoneResultType newStoneNum */
            newStoneNum: number;
        }

        /** Represents a stoneResultType. */
        class stoneResultType implements IstoneResultType {

            /**
             * Constructs a new stoneResultType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110015Type.IstoneResultType);

            /** stoneResultType decStoneNum. */
            public decStoneNum: number;

            /** stoneResultType newStoneNum. */
            public newStoneNum: number;

            /**
             * Creates a new stoneResultType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns stoneResultType instance
             */
            public static create(properties?: game1110015Type.IstoneResultType): game1110015Type.stoneResultType;

            /**
             * Encodes the specified stoneResultType message. Does not implicitly {@link game1110015Type.stoneResultType.verify|verify} messages.
             * @param message stoneResultType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110015Type.IstoneResultType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified stoneResultType message, length delimited. Does not implicitly {@link game1110015Type.stoneResultType.verify|verify} messages.
             * @param message stoneResultType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110015Type.IstoneResultType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a stoneResultType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns stoneResultType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110015Type.stoneResultType;

            /**
             * Decodes a stoneResultType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns stoneResultType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110015Type.stoneResultType;

            /**
             * Verifies a stoneResultType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a stoneResultType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns stoneResultType
             */
            public static fromObject(object: { [k: string]: any }): game1110015Type.stoneResultType;

            /**
             * Creates a plain object from a stoneResultType message. Also converts values to other types if specified.
             * @param message stoneResultType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110015Type.stoneResultType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this stoneResultType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a fightResultType. */
        interface IfightResultType {

            /** fightResultType actorChange */
            actorChange?: (game1110015Type.IgemSaviourMonster[] | null);

            /** fightResultType actorAction */
            actorAction?: (game1110015Type.IgemSaviourAction[] | null);
        }

        /** Represents a fightResultType. */
        class fightResultType implements IfightResultType {

            /**
             * Constructs a new fightResultType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110015Type.IfightResultType);

            /** fightResultType actorChange. */
            public actorChange: game1110015Type.IgemSaviourMonster[];

            /** fightResultType actorAction. */
            public actorAction: game1110015Type.IgemSaviourAction[];

            /**
             * Creates a new fightResultType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns fightResultType instance
             */
            public static create(properties?: game1110015Type.IfightResultType): game1110015Type.fightResultType;

            /**
             * Encodes the specified fightResultType message. Does not implicitly {@link game1110015Type.fightResultType.verify|verify} messages.
             * @param message fightResultType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110015Type.IfightResultType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified fightResultType message, length delimited. Does not implicitly {@link game1110015Type.fightResultType.verify|verify} messages.
             * @param message fightResultType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110015Type.IfightResultType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a fightResultType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns fightResultType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110015Type.fightResultType;

            /**
             * Decodes a fightResultType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns fightResultType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110015Type.fightResultType;

            /**
             * Verifies a fightResultType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a fightResultType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns fightResultType
             */
            public static fromObject(object: { [k: string]: any }): game1110015Type.fightResultType;

            /**
             * Creates a plain object from a fightResultType message. Also converts values to other types if specified.
             * @param message fightResultType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110015Type.fightResultType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this fightResultType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a gemSaviourAction. */
        interface IgemSaviourAction {

            /** gemSaviourAction id */
            id: number;

            /** gemSaviourAction actionType */
            actionType: gemSaviourActionType;

            /** gemSaviourAction skill */
            skill?: (number | null);

            /** gemSaviourAction multiAttack */
            multiAttack?: (number | null);

            /** gemSaviourAction actionValue */
            actionValue?: (game1110015Type.IgemSaviourActionValue[] | null);
        }

        /** Represents a gemSaviourAction. */
        class gemSaviourAction implements IgemSaviourAction {

            /**
             * Constructs a new gemSaviourAction.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110015Type.IgemSaviourAction);

            /** gemSaviourAction id. */
            public id: number;

            /** gemSaviourAction actionType. */
            public actionType: gemSaviourActionType;

            /** gemSaviourAction skill. */
            public skill: number;

            /** gemSaviourAction multiAttack. */
            public multiAttack: number;

            /** gemSaviourAction actionValue. */
            public actionValue: game1110015Type.IgemSaviourActionValue[];

            /**
             * Creates a new gemSaviourAction instance using the specified properties.
             * @param [properties] Properties to set
             * @returns gemSaviourAction instance
             */
            public static create(properties?: game1110015Type.IgemSaviourAction): game1110015Type.gemSaviourAction;

            /**
             * Encodes the specified gemSaviourAction message. Does not implicitly {@link game1110015Type.gemSaviourAction.verify|verify} messages.
             * @param message gemSaviourAction message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110015Type.IgemSaviourAction, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified gemSaviourAction message, length delimited. Does not implicitly {@link game1110015Type.gemSaviourAction.verify|verify} messages.
             * @param message gemSaviourAction message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110015Type.IgemSaviourAction, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a gemSaviourAction message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns gemSaviourAction
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110015Type.gemSaviourAction;

            /**
             * Decodes a gemSaviourAction message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns gemSaviourAction
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110015Type.gemSaviourAction;

            /**
             * Verifies a gemSaviourAction message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a gemSaviourAction message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns gemSaviourAction
             */
            public static fromObject(object: { [k: string]: any }): game1110015Type.gemSaviourAction;

            /**
             * Creates a plain object from a gemSaviourAction message. Also converts values to other types if specified.
             * @param message gemSaviourAction
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110015Type.gemSaviourAction, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this gemSaviourAction to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a gemSaviourActionValue. */
        interface IgemSaviourActionValue {

            /** gemSaviourActionValue id */
            id: number;

            /** gemSaviourActionValue value */
            value: (number | Long);

            /** gemSaviourActionValue isDropSpecialGem */
            isDropSpecialGem?: (boolean | null);
        }

        /** Represents a gemSaviourActionValue. */
        class gemSaviourActionValue implements IgemSaviourActionValue {

            /**
             * Constructs a new gemSaviourActionValue.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110015Type.IgemSaviourActionValue);

            /** gemSaviourActionValue id. */
            public id: number;

            /** gemSaviourActionValue value. */
            public value: (number | Long);

            /** gemSaviourActionValue isDropSpecialGem. */
            public isDropSpecialGem: boolean;

            /**
             * Creates a new gemSaviourActionValue instance using the specified properties.
             * @param [properties] Properties to set
             * @returns gemSaviourActionValue instance
             */
            public static create(properties?: game1110015Type.IgemSaviourActionValue): game1110015Type.gemSaviourActionValue;

            /**
             * Encodes the specified gemSaviourActionValue message. Does not implicitly {@link game1110015Type.gemSaviourActionValue.verify|verify} messages.
             * @param message gemSaviourActionValue message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110015Type.IgemSaviourActionValue, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified gemSaviourActionValue message, length delimited. Does not implicitly {@link game1110015Type.gemSaviourActionValue.verify|verify} messages.
             * @param message gemSaviourActionValue message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110015Type.IgemSaviourActionValue, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a gemSaviourActionValue message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns gemSaviourActionValue
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110015Type.gemSaviourActionValue;

            /**
             * Decodes a gemSaviourActionValue message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns gemSaviourActionValue
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110015Type.gemSaviourActionValue;

            /**
             * Verifies a gemSaviourActionValue message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a gemSaviourActionValue message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns gemSaviourActionValue
             */
            public static fromObject(object: { [k: string]: any }): game1110015Type.gemSaviourActionValue;

            /**
             * Creates a plain object from a gemSaviourActionValue message. Also converts values to other types if specified.
             * @param message gemSaviourActionValue
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110015Type.gemSaviourActionValue, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this gemSaviourActionValue to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a specialGemType. */
        interface IspecialGemType {

            /** specialGemType gemElem */
            gemElem: number;

            /** specialGemType triggerPos */
            triggerPos: number;

            /** specialGemType replacePosList */
            replacePosList?: (number[] | null);
        }

        /** Represents a specialGemType. */
        class specialGemType implements IspecialGemType {

            /**
             * Constructs a new specialGemType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110015Type.IspecialGemType);

            /** specialGemType gemElem. */
            public gemElem: number;

            /** specialGemType triggerPos. */
            public triggerPos: number;

            /** specialGemType replacePosList. */
            public replacePosList: number[];

            /**
             * Creates a new specialGemType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns specialGemType instance
             */
            public static create(properties?: game1110015Type.IspecialGemType): game1110015Type.specialGemType;

            /**
             * Encodes the specified specialGemType message. Does not implicitly {@link game1110015Type.specialGemType.verify|verify} messages.
             * @param message specialGemType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110015Type.IspecialGemType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified specialGemType message, length delimited. Does not implicitly {@link game1110015Type.specialGemType.verify|verify} messages.
             * @param message specialGemType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110015Type.IspecialGemType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a specialGemType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns specialGemType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110015Type.specialGemType;

            /**
             * Decodes a specialGemType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns specialGemType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110015Type.specialGemType;

            /**
             * Verifies a specialGemType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a specialGemType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns specialGemType
             */
            public static fromObject(object: { [k: string]: any }): game1110015Type.specialGemType;

            /**
             * Creates a plain object from a specialGemType message. Also converts values to other types if specified.
             * @param message specialGemType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110015Type.specialGemType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this specialGemType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** gemSaviourRewardType enum. */
    export enum gemSaviourRewardType {
        purse = 1,
        treasure_map = 2,
        box = 3,
        coin = 4
    }

    /** gemSaviourType enum. */
    export enum gemSaviourType {
        move = 0,
        stone = 1,
        fight = 2
    }

    /** gemSaviourMonsterStatus enum. */
    export enum gemSaviourMonsterStatus {
        normal = 0,
        recover = 1,
        dizziness = 2,
        dead = 3
    }

    /** gemSaviourActionType enum. */
    export enum gemSaviourActionType {
        attack = 1,
        recover = 2
    }

    /** Represents a game1110017Type. */
    export class game1110017Type implements Igame1110017Type {

        /**
         * Constructs a new game1110017Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1110017Type);

        /** game1110017Type data. */
        public data?: (game1110017Type.Idata1110017Type | null);

        /** game1110017Type update. */
        public update: game1110017Type.Iupdate1110017Type[];

        /**
         * Creates a new game1110017Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1110017Type instance
         */
        public static create(properties?: Igame1110017Type): game1110017Type;

        /**
         * Encodes the specified game1110017Type message. Does not implicitly {@link game1110017Type.verify|verify} messages.
         * @param message game1110017Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1110017Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1110017Type message, length delimited. Does not implicitly {@link game1110017Type.verify|verify} messages.
         * @param message game1110017Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1110017Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1110017Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1110017Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110017Type;

        /**
         * Decodes a game1110017Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1110017Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110017Type;

        /**
         * Verifies a game1110017Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1110017Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1110017Type
         */
        public static fromObject(object: { [k: string]: any }): game1110017Type;

        /**
         * Creates a plain object from a game1110017Type message. Also converts values to other types if specified.
         * @param message game1110017Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1110017Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1110017Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1110017Type {

        /** Properties of a data1110017Type. */
        interface Idata1110017Type {

            /** data1110017Type randomElem */
            randomElem: number;

            /** data1110017Type fixedElemGrid */
            fixedElemGrid?: (IfixedElemGridType[] | null);

            /** data1110017Type gridReward */
            gridReward?: (IposRewardType[] | null);
        }

        /** Represents a data1110017Type. */
        class data1110017Type implements Idata1110017Type {

            /**
             * Constructs a new data1110017Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110017Type.Idata1110017Type);

            /** data1110017Type randomElem. */
            public randomElem: number;

            /** data1110017Type fixedElemGrid. */
            public fixedElemGrid: IfixedElemGridType[];

            /** data1110017Type gridReward. */
            public gridReward: IposRewardType[];

            /**
             * Creates a new data1110017Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1110017Type instance
             */
            public static create(properties?: game1110017Type.Idata1110017Type): game1110017Type.data1110017Type;

            /**
             * Encodes the specified data1110017Type message. Does not implicitly {@link game1110017Type.data1110017Type.verify|verify} messages.
             * @param message data1110017Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110017Type.Idata1110017Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1110017Type message, length delimited. Does not implicitly {@link game1110017Type.data1110017Type.verify|verify} messages.
             * @param message data1110017Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110017Type.Idata1110017Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1110017Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1110017Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110017Type.data1110017Type;

            /**
             * Decodes a data1110017Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1110017Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110017Type.data1110017Type;

            /**
             * Verifies a data1110017Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1110017Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1110017Type
             */
            public static fromObject(object: { [k: string]: any }): game1110017Type.data1110017Type;

            /**
             * Creates a plain object from a data1110017Type message. Also converts values to other types if specified.
             * @param message data1110017Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110017Type.data1110017Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1110017Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1110017Type. */
        interface Iupdate1110017Type {

            /** update1110017Type index */
            index: number;

            /** update1110017Type randomElem */
            randomElem: number;

            /** update1110017Type fixedElemGrid */
            fixedElemGrid?: (IfixedElemGridType[] | null);

            /** update1110017Type posReward */
            posReward?: (IposRewardType[] | null);
        }

        /** Represents an update1110017Type. */
        class update1110017Type implements Iupdate1110017Type {

            /**
             * Constructs a new update1110017Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110017Type.Iupdate1110017Type);

            /** update1110017Type index. */
            public index: number;

            /** update1110017Type randomElem. */
            public randomElem: number;

            /** update1110017Type fixedElemGrid. */
            public fixedElemGrid: IfixedElemGridType[];

            /** update1110017Type posReward. */
            public posReward: IposRewardType[];

            /**
             * Creates a new update1110017Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1110017Type instance
             */
            public static create(properties?: game1110017Type.Iupdate1110017Type): game1110017Type.update1110017Type;

            /**
             * Encodes the specified update1110017Type message. Does not implicitly {@link game1110017Type.update1110017Type.verify|verify} messages.
             * @param message update1110017Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110017Type.Iupdate1110017Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1110017Type message, length delimited. Does not implicitly {@link game1110017Type.update1110017Type.verify|verify} messages.
             * @param message update1110017Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110017Type.Iupdate1110017Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1110017Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1110017Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110017Type.update1110017Type;

            /**
             * Decodes an update1110017Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1110017Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110017Type.update1110017Type;

            /**
             * Verifies an update1110017Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1110017Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1110017Type
             */
            public static fromObject(object: { [k: string]: any }): game1110017Type.update1110017Type;

            /**
             * Creates a plain object from an update1110017Type message. Also converts values to other types if specified.
             * @param message update1110017Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110017Type.update1110017Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1110017Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a fixedElemGridType. */
    export class fixedElemGridType implements IfixedElemGridType {

        /**
         * Constructs a new fixedElemGridType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IfixedElemGridType);

        /** fixedElemGridType pos. */
        public pos: number;

        /** fixedElemGridType elem. */
        public elem: number;

        /**
         * Creates a new fixedElemGridType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns fixedElemGridType instance
         */
        public static create(properties?: IfixedElemGridType): fixedElemGridType;

        /**
         * Encodes the specified fixedElemGridType message. Does not implicitly {@link fixedElemGridType.verify|verify} messages.
         * @param message fixedElemGridType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IfixedElemGridType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified fixedElemGridType message, length delimited. Does not implicitly {@link fixedElemGridType.verify|verify} messages.
         * @param message fixedElemGridType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IfixedElemGridType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a fixedElemGridType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns fixedElemGridType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): fixedElemGridType;

        /**
         * Decodes a fixedElemGridType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns fixedElemGridType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): fixedElemGridType;

        /**
         * Verifies a fixedElemGridType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a fixedElemGridType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns fixedElemGridType
         */
        public static fromObject(object: { [k: string]: any }): fixedElemGridType;

        /**
         * Creates a plain object from a fixedElemGridType message. Also converts values to other types if specified.
         * @param message fixedElemGridType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: fixedElemGridType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this fixedElemGridType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a posRewardType. */
    export class posRewardType implements IposRewardType {

        /**
         * Constructs a new posRewardType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IposRewardType);

        /** posRewardType pos. */
        public pos: number;

        /** posRewardType reward. */
        public reward: (number | Long);

        /**
         * Creates a new posRewardType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns posRewardType instance
         */
        public static create(properties?: IposRewardType): posRewardType;

        /**
         * Encodes the specified posRewardType message. Does not implicitly {@link posRewardType.verify|verify} messages.
         * @param message posRewardType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IposRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified posRewardType message, length delimited. Does not implicitly {@link posRewardType.verify|verify} messages.
         * @param message posRewardType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IposRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a posRewardType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns posRewardType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): posRewardType;

        /**
         * Decodes a posRewardType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns posRewardType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): posRewardType;

        /**
         * Verifies a posRewardType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a posRewardType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns posRewardType
         */
        public static fromObject(object: { [k: string]: any }): posRewardType;

        /**
         * Creates a plain object from a posRewardType message. Also converts values to other types if specified.
         * @param message posRewardType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: posRewardType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this posRewardType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a game1110018Type. */
    export class game1110018Type implements Igame1110018Type {

        /**
         * Constructs a new game1110018Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1110018Type);

        /** game1110018Type data. */
        public data?: (game1110018Type.Idata1110018Type | null);

        /** game1110018Type update. */
        public update: game1110018Type.Iupdate1110018Type[];

        /**
         * Creates a new game1110018Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1110018Type instance
         */
        public static create(properties?: Igame1110018Type): game1110018Type;

        /**
         * Encodes the specified game1110018Type message. Does not implicitly {@link game1110018Type.verify|verify} messages.
         * @param message game1110018Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1110018Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1110018Type message, length delimited. Does not implicitly {@link game1110018Type.verify|verify} messages.
         * @param message game1110018Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1110018Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1110018Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1110018Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110018Type;

        /**
         * Decodes a game1110018Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1110018Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110018Type;

        /**
         * Verifies a game1110018Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1110018Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1110018Type
         */
        public static fromObject(object: { [k: string]: any }): game1110018Type;

        /**
         * Creates a plain object from a game1110018Type message. Also converts values to other types if specified.
         * @param message game1110018Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1110018Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1110018Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1110018Type {

        /** Properties of a data1110018Type. */
        interface Idata1110018Type {

            /** data1110018Type resultList */
            resultList?: (game1110018Type.IResultType[] | null);
        }

        /** Represents a data1110018Type. */
        class data1110018Type implements Idata1110018Type {

            /**
             * Constructs a new data1110018Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110018Type.Idata1110018Type);

            /** data1110018Type resultList. */
            public resultList: game1110018Type.IResultType[];

            /**
             * Creates a new data1110018Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1110018Type instance
             */
            public static create(properties?: game1110018Type.Idata1110018Type): game1110018Type.data1110018Type;

            /**
             * Encodes the specified data1110018Type message. Does not implicitly {@link game1110018Type.data1110018Type.verify|verify} messages.
             * @param message data1110018Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110018Type.Idata1110018Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1110018Type message, length delimited. Does not implicitly {@link game1110018Type.data1110018Type.verify|verify} messages.
             * @param message data1110018Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110018Type.Idata1110018Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1110018Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1110018Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110018Type.data1110018Type;

            /**
             * Decodes a data1110018Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1110018Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110018Type.data1110018Type;

            /**
             * Verifies a data1110018Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1110018Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1110018Type
             */
            public static fromObject(object: { [k: string]: any }): game1110018Type.data1110018Type;

            /**
             * Creates a plain object from a data1110018Type message. Also converts values to other types if specified.
             * @param message data1110018Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110018Type.data1110018Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1110018Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1110018Type. */
        interface Iupdate1110018Type {

            /** update1110018Type index */
            index: number;

            /** update1110018Type resultList */
            resultList?: (game1110018Type.IResultType[] | null);
        }

        /** Represents an update1110018Type. */
        class update1110018Type implements Iupdate1110018Type {

            /**
             * Constructs a new update1110018Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110018Type.Iupdate1110018Type);

            /** update1110018Type index. */
            public index: number;

            /** update1110018Type resultList. */
            public resultList: game1110018Type.IResultType[];

            /**
             * Creates a new update1110018Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1110018Type instance
             */
            public static create(properties?: game1110018Type.Iupdate1110018Type): game1110018Type.update1110018Type;

            /**
             * Encodes the specified update1110018Type message. Does not implicitly {@link game1110018Type.update1110018Type.verify|verify} messages.
             * @param message update1110018Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110018Type.Iupdate1110018Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1110018Type message, length delimited. Does not implicitly {@link game1110018Type.update1110018Type.verify|verify} messages.
             * @param message update1110018Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110018Type.Iupdate1110018Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1110018Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1110018Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110018Type.update1110018Type;

            /**
             * Decodes an update1110018Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1110018Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110018Type.update1110018Type;

            /**
             * Verifies an update1110018Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1110018Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1110018Type
             */
            public static fromObject(object: { [k: string]: any }): game1110018Type.update1110018Type;

            /**
             * Creates a plain object from an update1110018Type message. Also converts values to other types if specified.
             * @param message update1110018Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110018Type.update1110018Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1110018Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ResultType. */
        interface IResultType {

            /** ResultType spinResult */
            spinResult: IspinResultType;

            /** ResultType removePos */
            removePos?: (number[] | null);

            /** ResultType crushRate */
            crushRate: number;

            /** ResultType magicCrushList */
            magicCrushList?: (ImagicCruchListType[] | null);

            /** ResultType num */
            num: number;

            /** ResultType balance */
            balance: (number | Long);

            /** ResultType rate */
            rate: number;
        }

        /** Represents a ResultType. */
        class ResultType implements IResultType {

            /**
             * Constructs a new ResultType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110018Type.IResultType);

            /** ResultType spinResult. */
            public spinResult: IspinResultType;

            /** ResultType removePos. */
            public removePos: number[];

            /** ResultType crushRate. */
            public crushRate: number;

            /** ResultType magicCrushList. */
            public magicCrushList: ImagicCruchListType[];

            /** ResultType num. */
            public num: number;

            /** ResultType balance. */
            public balance: (number | Long);

            /** ResultType rate. */
            public rate: number;

            /**
             * Creates a new ResultType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ResultType instance
             */
            public static create(properties?: game1110018Type.IResultType): game1110018Type.ResultType;

            /**
             * Encodes the specified ResultType message. Does not implicitly {@link game1110018Type.ResultType.verify|verify} messages.
             * @param message ResultType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110018Type.IResultType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ResultType message, length delimited. Does not implicitly {@link game1110018Type.ResultType.verify|verify} messages.
             * @param message ResultType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110018Type.IResultType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResultType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ResultType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110018Type.ResultType;

            /**
             * Decodes a ResultType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ResultType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110018Type.ResultType;

            /**
             * Verifies a ResultType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a ResultType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ResultType
             */
            public static fromObject(object: { [k: string]: any }): game1110018Type.ResultType;

            /**
             * Creates a plain object from a ResultType message. Also converts values to other types if specified.
             * @param message ResultType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110018Type.ResultType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ResultType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a magicCruchListType. */
    export class magicCruchListType implements ImagicCruchListType {

        /**
         * Constructs a new magicCruchListType.
         * @param [properties] Properties to set
         */
        constructor(properties?: ImagicCruchListType);

        /** magicCruchListType magicId. */
        public magicId: number;

        /** magicCruchListType pos. */
        public pos: number;

        /** magicCruchListType crushPos. */
        public crushPos: number[];

        /**
         * Creates a new magicCruchListType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns magicCruchListType instance
         */
        public static create(properties?: ImagicCruchListType): magicCruchListType;

        /**
         * Encodes the specified magicCruchListType message. Does not implicitly {@link magicCruchListType.verify|verify} messages.
         * @param message magicCruchListType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ImagicCruchListType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified magicCruchListType message, length delimited. Does not implicitly {@link magicCruchListType.verify|verify} messages.
         * @param message magicCruchListType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ImagicCruchListType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a magicCruchListType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns magicCruchListType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): magicCruchListType;

        /**
         * Decodes a magicCruchListType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns magicCruchListType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): magicCruchListType;

        /**
         * Verifies a magicCruchListType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a magicCruchListType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns magicCruchListType
         */
        public static fromObject(object: { [k: string]: any }): magicCruchListType;

        /**
         * Creates a plain object from a magicCruchListType message. Also converts values to other types if specified.
         * @param message magicCruchListType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: magicCruchListType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this magicCruchListType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a game1110019Type. */
    export class game1110019Type implements Igame1110019Type {

        /**
         * Constructs a new game1110019Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1110019Type);

        /** game1110019Type data. */
        public data?: (game1110019Type.Idata1110019Type | null);

        /** game1110019Type update. */
        public update: game1110019Type.Iupdate1110019Type[];

        /**
         * Creates a new game1110019Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1110019Type instance
         */
        public static create(properties?: Igame1110019Type): game1110019Type;

        /**
         * Encodes the specified game1110019Type message. Does not implicitly {@link game1110019Type.verify|verify} messages.
         * @param message game1110019Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1110019Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1110019Type message, length delimited. Does not implicitly {@link game1110019Type.verify|verify} messages.
         * @param message game1110019Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1110019Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1110019Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1110019Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110019Type;

        /**
         * Decodes a game1110019Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1110019Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110019Type;

        /**
         * Verifies a game1110019Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1110019Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1110019Type
         */
        public static fromObject(object: { [k: string]: any }): game1110019Type;

        /**
         * Creates a plain object from a game1110019Type message. Also converts values to other types if specified.
         * @param message game1110019Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1110019Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1110019Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1110019Type {

        /** Properties of a data1110019Type. */
        interface Idata1110019Type {

            /** data1110019Type gem */
            gem: number;

            /** data1110019Type power */
            power: number;

            /** data1110019Type stoneRoller */
            stoneRoller?: (IStoneRollerType[] | null);

            /** data1110019Type normalMedusa */
            normalMedusa?: (INormalMedusaType[] | null);

            /** data1110019Type freeMedusa */
            freeMedusa?: (IFreeMedusaType | null);

            /** data1110019Type event */
            event?: (IeventType[] | null);
        }

        /** Represents a data1110019Type. */
        class data1110019Type implements Idata1110019Type {

            /**
             * Constructs a new data1110019Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110019Type.Idata1110019Type);

            /** data1110019Type gem. */
            public gem: number;

            /** data1110019Type power. */
            public power: number;

            /** data1110019Type stoneRoller. */
            public stoneRoller: IStoneRollerType[];

            /** data1110019Type normalMedusa. */
            public normalMedusa: INormalMedusaType[];

            /** data1110019Type freeMedusa. */
            public freeMedusa?: (IFreeMedusaType | null);

            /** data1110019Type event. */
            public event: IeventType[];

            /**
             * Creates a new data1110019Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1110019Type instance
             */
            public static create(properties?: game1110019Type.Idata1110019Type): game1110019Type.data1110019Type;

            /**
             * Encodes the specified data1110019Type message. Does not implicitly {@link game1110019Type.data1110019Type.verify|verify} messages.
             * @param message data1110019Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110019Type.Idata1110019Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1110019Type message, length delimited. Does not implicitly {@link game1110019Type.data1110019Type.verify|verify} messages.
             * @param message data1110019Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110019Type.Idata1110019Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1110019Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1110019Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110019Type.data1110019Type;

            /**
             * Decodes a data1110019Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1110019Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110019Type.data1110019Type;

            /**
             * Verifies a data1110019Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1110019Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1110019Type
             */
            public static fromObject(object: { [k: string]: any }): game1110019Type.data1110019Type;

            /**
             * Creates a plain object from a data1110019Type message. Also converts values to other types if specified.
             * @param message data1110019Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110019Type.data1110019Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1110019Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1110019Type. */
        interface Iupdate1110019Type {

            /** update1110019Type index */
            index: number;

            /** update1110019Type gem */
            gem: number;

            /** update1110019Type power */
            power: number;

            /** update1110019Type stoneRoller */
            stoneRoller?: (IStoneRollerType[] | null);

            /** update1110019Type normalMedusa */
            normalMedusa?: (INormalMedusaType[] | null);

            /** update1110019Type freeMedusa */
            freeMedusa?: (IFreeMedusaType | null);

            /** update1110019Type event */
            event?: (IeventType[] | null);
        }

        /** Represents an update1110019Type. */
        class update1110019Type implements Iupdate1110019Type {

            /**
             * Constructs a new update1110019Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110019Type.Iupdate1110019Type);

            /** update1110019Type index. */
            public index: number;

            /** update1110019Type gem. */
            public gem: number;

            /** update1110019Type power. */
            public power: number;

            /** update1110019Type stoneRoller. */
            public stoneRoller: IStoneRollerType[];

            /** update1110019Type normalMedusa. */
            public normalMedusa: INormalMedusaType[];

            /** update1110019Type freeMedusa. */
            public freeMedusa?: (IFreeMedusaType | null);

            /** update1110019Type event. */
            public event: IeventType[];

            /**
             * Creates a new update1110019Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1110019Type instance
             */
            public static create(properties?: game1110019Type.Iupdate1110019Type): game1110019Type.update1110019Type;

            /**
             * Encodes the specified update1110019Type message. Does not implicitly {@link game1110019Type.update1110019Type.verify|verify} messages.
             * @param message update1110019Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110019Type.Iupdate1110019Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1110019Type message, length delimited. Does not implicitly {@link game1110019Type.update1110019Type.verify|verify} messages.
             * @param message update1110019Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110019Type.Iupdate1110019Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1110019Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1110019Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110019Type.update1110019Type;

            /**
             * Decodes an update1110019Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1110019Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110019Type.update1110019Type;

            /**
             * Verifies an update1110019Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1110019Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1110019Type
             */
            public static fromObject(object: { [k: string]: any }): game1110019Type.update1110019Type;

            /**
             * Creates a plain object from an update1110019Type message. Also converts values to other types if specified.
             * @param message update1110019Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110019Type.update1110019Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1110019Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a StoneRollerType. */
    export class StoneRollerType implements IStoneRollerType {

        /**
         * Constructs a new StoneRollerType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IStoneRollerType);

        /** StoneRollerType rollerId. */
        public rollerId: number;

        /** StoneRollerType lgId. */
        public lgId: (number | Long);

        /**
         * Creates a new StoneRollerType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StoneRollerType instance
         */
        public static create(properties?: IStoneRollerType): StoneRollerType;

        /**
         * Encodes the specified StoneRollerType message. Does not implicitly {@link StoneRollerType.verify|verify} messages.
         * @param message StoneRollerType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IStoneRollerType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StoneRollerType message, length delimited. Does not implicitly {@link StoneRollerType.verify|verify} messages.
         * @param message StoneRollerType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IStoneRollerType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StoneRollerType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StoneRollerType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): StoneRollerType;

        /**
         * Decodes a StoneRollerType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StoneRollerType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): StoneRollerType;

        /**
         * Verifies a StoneRollerType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a StoneRollerType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StoneRollerType
         */
        public static fromObject(object: { [k: string]: any }): StoneRollerType;

        /**
         * Creates a plain object from a StoneRollerType message. Also converts values to other types if specified.
         * @param message StoneRollerType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: StoneRollerType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StoneRollerType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a NormalMedusaType. */
    export class NormalMedusaType implements INormalMedusaType {

        /**
         * Constructs a new NormalMedusaType.
         * @param [properties] Properties to set
         */
        constructor(properties?: INormalMedusaType);

        /** NormalMedusaType isTrigger. */
        public isTrigger: boolean;

        /** NormalMedusaType getGemNum. */
        public getGemNum: number;

        /** NormalMedusaType lineId. */
        public lineId: number;

        /**
         * Creates a new NormalMedusaType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns NormalMedusaType instance
         */
        public static create(properties?: INormalMedusaType): NormalMedusaType;

        /**
         * Encodes the specified NormalMedusaType message. Does not implicitly {@link NormalMedusaType.verify|verify} messages.
         * @param message NormalMedusaType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: INormalMedusaType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified NormalMedusaType message, length delimited. Does not implicitly {@link NormalMedusaType.verify|verify} messages.
         * @param message NormalMedusaType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: INormalMedusaType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a NormalMedusaType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NormalMedusaType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): NormalMedusaType;

        /**
         * Decodes a NormalMedusaType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns NormalMedusaType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): NormalMedusaType;

        /**
         * Verifies a NormalMedusaType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a NormalMedusaType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns NormalMedusaType
         */
        public static fromObject(object: { [k: string]: any }): NormalMedusaType;

        /**
         * Creates a plain object from a NormalMedusaType message. Also converts values to other types if specified.
         * @param message NormalMedusaType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NormalMedusaType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this NormalMedusaType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a FreeMedusaType. */
    export class FreeMedusaType implements IFreeMedusaType {

        /**
         * Constructs a new FreeMedusaType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IFreeMedusaType);

        /** FreeMedusaType hp. */
        public hp: number;

        /** FreeMedusaType petrochemicalRoller. */
        public petrochemicalRoller: FreeMedusaType.IRollerType[];

        /** FreeMedusaType wildRoller. */
        public wildRoller: FreeMedusaType.IRollerType[];

        /** FreeMedusaType lineAttack. */
        public lineAttack: FreeMedusaType.ILineAttackType[];

        /**
         * Creates a new FreeMedusaType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FreeMedusaType instance
         */
        public static create(properties?: IFreeMedusaType): FreeMedusaType;

        /**
         * Encodes the specified FreeMedusaType message. Does not implicitly {@link FreeMedusaType.verify|verify} messages.
         * @param message FreeMedusaType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IFreeMedusaType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FreeMedusaType message, length delimited. Does not implicitly {@link FreeMedusaType.verify|verify} messages.
         * @param message FreeMedusaType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IFreeMedusaType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FreeMedusaType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FreeMedusaType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): FreeMedusaType;

        /**
         * Decodes a FreeMedusaType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FreeMedusaType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): FreeMedusaType;

        /**
         * Verifies a FreeMedusaType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a FreeMedusaType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FreeMedusaType
         */
        public static fromObject(object: { [k: string]: any }): FreeMedusaType;

        /**
         * Creates a plain object from a FreeMedusaType message. Also converts values to other types if specified.
         * @param message FreeMedusaType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: FreeMedusaType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FreeMedusaType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace FreeMedusaType {

        /** Properties of a RollerType. */
        interface IRollerType {

            /** RollerType rollerId */
            rollerId: number;

            /** RollerType remainRound */
            remainRound: number;
        }

        /** Represents a RollerType. */
        class RollerType implements IRollerType {

            /**
             * Constructs a new RollerType.
             * @param [properties] Properties to set
             */
            constructor(properties?: FreeMedusaType.IRollerType);

            /** RollerType rollerId. */
            public rollerId: number;

            /** RollerType remainRound. */
            public remainRound: number;

            /**
             * Creates a new RollerType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RollerType instance
             */
            public static create(properties?: FreeMedusaType.IRollerType): FreeMedusaType.RollerType;

            /**
             * Encodes the specified RollerType message. Does not implicitly {@link FreeMedusaType.RollerType.verify|verify} messages.
             * @param message RollerType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: FreeMedusaType.IRollerType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RollerType message, length delimited. Does not implicitly {@link FreeMedusaType.RollerType.verify|verify} messages.
             * @param message RollerType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: FreeMedusaType.IRollerType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RollerType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RollerType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): FreeMedusaType.RollerType;

            /**
             * Decodes a RollerType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RollerType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): FreeMedusaType.RollerType;

            /**
             * Verifies a RollerType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a RollerType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RollerType
             */
            public static fromObject(object: { [k: string]: any }): FreeMedusaType.RollerType;

            /**
             * Creates a plain object from a RollerType message. Also converts values to other types if specified.
             * @param message RollerType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: FreeMedusaType.RollerType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RollerType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a LineAttackType. */
        interface ILineAttackType {

            /** LineAttackType lineId */
            lineId: number;

            /** LineAttackType hp */
            hp: number;
        }

        /** Represents a LineAttackType. */
        class LineAttackType implements ILineAttackType {

            /**
             * Constructs a new LineAttackType.
             * @param [properties] Properties to set
             */
            constructor(properties?: FreeMedusaType.ILineAttackType);

            /** LineAttackType lineId. */
            public lineId: number;

            /** LineAttackType hp. */
            public hp: number;

            /**
             * Creates a new LineAttackType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LineAttackType instance
             */
            public static create(properties?: FreeMedusaType.ILineAttackType): FreeMedusaType.LineAttackType;

            /**
             * Encodes the specified LineAttackType message. Does not implicitly {@link FreeMedusaType.LineAttackType.verify|verify} messages.
             * @param message LineAttackType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: FreeMedusaType.ILineAttackType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LineAttackType message, length delimited. Does not implicitly {@link FreeMedusaType.LineAttackType.verify|verify} messages.
             * @param message LineAttackType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: FreeMedusaType.ILineAttackType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LineAttackType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LineAttackType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): FreeMedusaType.LineAttackType;

            /**
             * Decodes a LineAttackType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LineAttackType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): FreeMedusaType.LineAttackType;

            /**
             * Verifies a LineAttackType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a LineAttackType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LineAttackType
             */
            public static fromObject(object: { [k: string]: any }): FreeMedusaType.LineAttackType;

            /**
             * Creates a plain object from a LineAttackType message. Also converts values to other types if specified.
             * @param message LineAttackType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: FreeMedusaType.LineAttackType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LineAttackType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents an eventType. */
    export class eventType implements IeventType {

        /**
         * Constructs a new eventType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IeventType);

        /** eventType type. */
        public type: number;

        /** eventType powerChange. */
        public powerChange: number;

        /** eventType power. */
        public power: number;

        /** eventType gemChange. */
        public gemChange: number;

        /** eventType gem. */
        public gem: number;

        /**
         * Creates a new eventType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns eventType instance
         */
        public static create(properties?: IeventType): eventType;

        /**
         * Encodes the specified eventType message. Does not implicitly {@link eventType.verify|verify} messages.
         * @param message eventType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IeventType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified eventType message, length delimited. Does not implicitly {@link eventType.verify|verify} messages.
         * @param message eventType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IeventType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an eventType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns eventType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): eventType;

        /**
         * Decodes an eventType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns eventType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): eventType;

        /**
         * Verifies an eventType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates an eventType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns eventType
         */
        public static fromObject(object: { [k: string]: any }): eventType;

        /**
         * Creates a plain object from an eventType message. Also converts values to other types if specified.
         * @param message eventType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: eventType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this eventType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a game1110020Type. */
    export class game1110020Type implements Igame1110020Type {

        /**
         * Constructs a new game1110020Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1110020Type);

        /** game1110020Type data. */
        public data?: (game1110020Type.Idata1110020Type | null);

        /** game1110020Type update. */
        public update: game1110020Type.Iupdate1110020Type[];

        /**
         * Creates a new game1110020Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1110020Type instance
         */
        public static create(properties?: Igame1110020Type): game1110020Type;

        /**
         * Encodes the specified game1110020Type message. Does not implicitly {@link game1110020Type.verify|verify} messages.
         * @param message game1110020Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1110020Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1110020Type message, length delimited. Does not implicitly {@link game1110020Type.verify|verify} messages.
         * @param message game1110020Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1110020Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1110020Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1110020Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110020Type;

        /**
         * Decodes a game1110020Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1110020Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110020Type;

        /**
         * Verifies a game1110020Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1110020Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1110020Type
         */
        public static fromObject(object: { [k: string]: any }): game1110020Type;

        /**
         * Creates a plain object from a game1110020Type message. Also converts values to other types if specified.
         * @param message game1110020Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1110020Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1110020Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1110020Type {

        /** Properties of a data1110020Type. */
        interface Idata1110020Type {

            /** data1110020Type lgIdList */
            lgIdList?: ((number | Long)[] | null);
        }

        /** Represents a data1110020Type. */
        class data1110020Type implements Idata1110020Type {

            /**
             * Constructs a new data1110020Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110020Type.Idata1110020Type);

            /** data1110020Type lgIdList. */
            public lgIdList: (number | Long)[];

            /**
             * Creates a new data1110020Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1110020Type instance
             */
            public static create(properties?: game1110020Type.Idata1110020Type): game1110020Type.data1110020Type;

            /**
             * Encodes the specified data1110020Type message. Does not implicitly {@link game1110020Type.data1110020Type.verify|verify} messages.
             * @param message data1110020Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110020Type.Idata1110020Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1110020Type message, length delimited. Does not implicitly {@link game1110020Type.data1110020Type.verify|verify} messages.
             * @param message data1110020Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110020Type.Idata1110020Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1110020Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1110020Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110020Type.data1110020Type;

            /**
             * Decodes a data1110020Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1110020Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110020Type.data1110020Type;

            /**
             * Verifies a data1110020Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1110020Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1110020Type
             */
            public static fromObject(object: { [k: string]: any }): game1110020Type.data1110020Type;

            /**
             * Creates a plain object from a data1110020Type message. Also converts values to other types if specified.
             * @param message data1110020Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110020Type.data1110020Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1110020Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1110020Type. */
        interface Iupdate1110020Type {

            /** update1110020Type index */
            index: number;

            /** update1110020Type lgIdList */
            lgIdList?: ((number | Long)[] | null);
        }

        /** Represents an update1110020Type. */
        class update1110020Type implements Iupdate1110020Type {

            /**
             * Constructs a new update1110020Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110020Type.Iupdate1110020Type);

            /** update1110020Type index. */
            public index: number;

            /** update1110020Type lgIdList. */
            public lgIdList: (number | Long)[];

            /**
             * Creates a new update1110020Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1110020Type instance
             */
            public static create(properties?: game1110020Type.Iupdate1110020Type): game1110020Type.update1110020Type;

            /**
             * Encodes the specified update1110020Type message. Does not implicitly {@link game1110020Type.update1110020Type.verify|verify} messages.
             * @param message update1110020Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110020Type.Iupdate1110020Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1110020Type message, length delimited. Does not implicitly {@link game1110020Type.update1110020Type.verify|verify} messages.
             * @param message update1110020Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110020Type.Iupdate1110020Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1110020Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1110020Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110020Type.update1110020Type;

            /**
             * Decodes an update1110020Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1110020Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110020Type.update1110020Type;

            /**
             * Verifies an update1110020Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1110020Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1110020Type
             */
            public static fromObject(object: { [k: string]: any }): game1110020Type.update1110020Type;

            /**
             * Creates a plain object from an update1110020Type message. Also converts values to other types if specified.
             * @param message update1110020Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110020Type.update1110020Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1110020Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1110021Type. */
    export class game1110021Type implements Igame1110021Type {

        /**
         * Constructs a new game1110021Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1110021Type);

        /** game1110021Type data. */
        public data?: (game1110021Type.Idata1110021Type | null);

        /** game1110021Type update. */
        public update: game1110021Type.Iupdate1110021Type[];

        /**
         * Creates a new game1110021Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1110021Type instance
         */
        public static create(properties?: Igame1110021Type): game1110021Type;

        /**
         * Encodes the specified game1110021Type message. Does not implicitly {@link game1110021Type.verify|verify} messages.
         * @param message game1110021Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1110021Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1110021Type message, length delimited. Does not implicitly {@link game1110021Type.verify|verify} messages.
         * @param message game1110021Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1110021Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1110021Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1110021Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110021Type;

        /**
         * Decodes a game1110021Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1110021Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110021Type;

        /**
         * Verifies a game1110021Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1110021Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1110021Type
         */
        public static fromObject(object: { [k: string]: any }): game1110021Type;

        /**
         * Creates a plain object from a game1110021Type message. Also converts values to other types if specified.
         * @param message game1110021Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1110021Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1110021Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1110021Type {

        /** Properties of a data1110021Type. */
        interface Idata1110021Type {

            /** data1110021Type resultRateList */
            resultRateList?: ((number | Long)[] | null);
        }

        /** Represents a data1110021Type. */
        class data1110021Type implements Idata1110021Type {

            /**
             * Constructs a new data1110021Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110021Type.Idata1110021Type);

            /** data1110021Type resultRateList. */
            public resultRateList: (number | Long)[];

            /**
             * Creates a new data1110021Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1110021Type instance
             */
            public static create(properties?: game1110021Type.Idata1110021Type): game1110021Type.data1110021Type;

            /**
             * Encodes the specified data1110021Type message. Does not implicitly {@link game1110021Type.data1110021Type.verify|verify} messages.
             * @param message data1110021Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110021Type.Idata1110021Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1110021Type message, length delimited. Does not implicitly {@link game1110021Type.data1110021Type.verify|verify} messages.
             * @param message data1110021Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110021Type.Idata1110021Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1110021Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1110021Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110021Type.data1110021Type;

            /**
             * Decodes a data1110021Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1110021Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110021Type.data1110021Type;

            /**
             * Verifies a data1110021Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1110021Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1110021Type
             */
            public static fromObject(object: { [k: string]: any }): game1110021Type.data1110021Type;

            /**
             * Creates a plain object from a data1110021Type message. Also converts values to other types if specified.
             * @param message data1110021Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110021Type.data1110021Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1110021Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1110021Type. */
        interface Iupdate1110021Type {

            /** update1110021Type index */
            index: number;

            /** update1110021Type resultRateList */
            resultRateList?: ((number | Long)[] | null);
        }

        /** Represents an update1110021Type. */
        class update1110021Type implements Iupdate1110021Type {

            /**
             * Constructs a new update1110021Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110021Type.Iupdate1110021Type);

            /** update1110021Type index. */
            public index: number;

            /** update1110021Type resultRateList. */
            public resultRateList: (number | Long)[];

            /**
             * Creates a new update1110021Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1110021Type instance
             */
            public static create(properties?: game1110021Type.Iupdate1110021Type): game1110021Type.update1110021Type;

            /**
             * Encodes the specified update1110021Type message. Does not implicitly {@link game1110021Type.update1110021Type.verify|verify} messages.
             * @param message update1110021Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110021Type.Iupdate1110021Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1110021Type message, length delimited. Does not implicitly {@link game1110021Type.update1110021Type.verify|verify} messages.
             * @param message update1110021Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110021Type.Iupdate1110021Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1110021Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1110021Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110021Type.update1110021Type;

            /**
             * Decodes an update1110021Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1110021Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110021Type.update1110021Type;

            /**
             * Verifies an update1110021Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1110021Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1110021Type
             */
            public static fromObject(object: { [k: string]: any }): game1110021Type.update1110021Type;

            /**
             * Creates a plain object from an update1110021Type message. Also converts values to other types if specified.
             * @param message update1110021Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110021Type.update1110021Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1110021Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1110023Type. */
    export class game1110023Type implements Igame1110023Type {

        /**
         * Constructs a new game1110023Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1110023Type);

        /** game1110023Type data. */
        public data?: (game1110023Type.Idata1110023Type | null);

        /** game1110023Type update. */
        public update: game1110023Type.Iupdate1110023Type[];

        /**
         * Creates a new game1110023Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1110023Type instance
         */
        public static create(properties?: Igame1110023Type): game1110023Type;

        /**
         * Encodes the specified game1110023Type message. Does not implicitly {@link game1110023Type.verify|verify} messages.
         * @param message game1110023Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1110023Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1110023Type message, length delimited. Does not implicitly {@link game1110023Type.verify|verify} messages.
         * @param message game1110023Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1110023Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1110023Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1110023Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110023Type;

        /**
         * Decodes a game1110023Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1110023Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110023Type;

        /**
         * Verifies a game1110023Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1110023Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1110023Type
         */
        public static fromObject(object: { [k: string]: any }): game1110023Type;

        /**
         * Creates a plain object from a game1110023Type message. Also converts values to other types if specified.
         * @param message game1110023Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1110023Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1110023Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1110023Type {

        /** Properties of a data1110023Type. */
        interface Idata1110023Type {

            /** data1110023Type triggerRate */
            triggerRate: number;
        }

        /** Represents a data1110023Type. */
        class data1110023Type implements Idata1110023Type {

            /**
             * Constructs a new data1110023Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110023Type.Idata1110023Type);

            /** data1110023Type triggerRate. */
            public triggerRate: number;

            /**
             * Creates a new data1110023Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1110023Type instance
             */
            public static create(properties?: game1110023Type.Idata1110023Type): game1110023Type.data1110023Type;

            /**
             * Encodes the specified data1110023Type message. Does not implicitly {@link game1110023Type.data1110023Type.verify|verify} messages.
             * @param message data1110023Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110023Type.Idata1110023Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1110023Type message, length delimited. Does not implicitly {@link game1110023Type.data1110023Type.verify|verify} messages.
             * @param message data1110023Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110023Type.Idata1110023Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1110023Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1110023Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110023Type.data1110023Type;

            /**
             * Decodes a data1110023Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1110023Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110023Type.data1110023Type;

            /**
             * Verifies a data1110023Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1110023Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1110023Type
             */
            public static fromObject(object: { [k: string]: any }): game1110023Type.data1110023Type;

            /**
             * Creates a plain object from a data1110023Type message. Also converts values to other types if specified.
             * @param message data1110023Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110023Type.data1110023Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1110023Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1110023Type. */
        interface Iupdate1110023Type {

            /** update1110023Type index */
            index: number;

            /** update1110023Type triggerRate */
            triggerRate: number;
        }

        /** Represents an update1110023Type. */
        class update1110023Type implements Iupdate1110023Type {

            /**
             * Constructs a new update1110023Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110023Type.Iupdate1110023Type);

            /** update1110023Type index. */
            public index: number;

            /** update1110023Type triggerRate. */
            public triggerRate: number;

            /**
             * Creates a new update1110023Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1110023Type instance
             */
            public static create(properties?: game1110023Type.Iupdate1110023Type): game1110023Type.update1110023Type;

            /**
             * Encodes the specified update1110023Type message. Does not implicitly {@link game1110023Type.update1110023Type.verify|verify} messages.
             * @param message update1110023Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110023Type.Iupdate1110023Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1110023Type message, length delimited. Does not implicitly {@link game1110023Type.update1110023Type.verify|verify} messages.
             * @param message update1110023Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110023Type.Iupdate1110023Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1110023Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1110023Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110023Type.update1110023Type;

            /**
             * Decodes an update1110023Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1110023Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110023Type.update1110023Type;

            /**
             * Verifies an update1110023Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1110023Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1110023Type
             */
            public static fromObject(object: { [k: string]: any }): game1110023Type.update1110023Type;

            /**
             * Creates a plain object from an update1110023Type message. Also converts values to other types if specified.
             * @param message update1110023Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110023Type.update1110023Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1110023Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1110024Type. */
    export class game1110024Type implements Igame1110024Type {

        /**
         * Constructs a new game1110024Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1110024Type);

        /** game1110024Type data. */
        public data?: (game1110024Type.Idata1110024Type | null);

        /** game1110024Type update. */
        public update: game1110024Type.Iupdate1110024Type[];

        /**
         * Creates a new game1110024Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1110024Type instance
         */
        public static create(properties?: Igame1110024Type): game1110024Type;

        /**
         * Encodes the specified game1110024Type message. Does not implicitly {@link game1110024Type.verify|verify} messages.
         * @param message game1110024Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1110024Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1110024Type message, length delimited. Does not implicitly {@link game1110024Type.verify|verify} messages.
         * @param message game1110024Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1110024Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1110024Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1110024Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110024Type;

        /**
         * Decodes a game1110024Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1110024Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110024Type;

        /**
         * Verifies a game1110024Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1110024Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1110024Type
         */
        public static fromObject(object: { [k: string]: any }): game1110024Type;

        /**
         * Creates a plain object from a game1110024Type message. Also converts values to other types if specified.
         * @param message game1110024Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1110024Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1110024Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1110024Type {

        /** Properties of a data1110024Type. */
        interface Idata1110024Type {

            /** data1110024Type reward */
            reward?: (IrewardType[] | null);

            /** data1110024Type prizePoolList */
            prizePoolList?: (IprizePoolListType[] | null);

            /** data1110024Type spicyPos */
            spicyPos?: (number[] | null);
        }

        /** Represents a data1110024Type. */
        class data1110024Type implements Idata1110024Type {

            /**
             * Constructs a new data1110024Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110024Type.Idata1110024Type);

            /** data1110024Type reward. */
            public reward: IrewardType[];

            /** data1110024Type prizePoolList. */
            public prizePoolList: IprizePoolListType[];

            /** data1110024Type spicyPos. */
            public spicyPos: number[];

            /**
             * Creates a new data1110024Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1110024Type instance
             */
            public static create(properties?: game1110024Type.Idata1110024Type): game1110024Type.data1110024Type;

            /**
             * Encodes the specified data1110024Type message. Does not implicitly {@link game1110024Type.data1110024Type.verify|verify} messages.
             * @param message data1110024Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110024Type.Idata1110024Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1110024Type message, length delimited. Does not implicitly {@link game1110024Type.data1110024Type.verify|verify} messages.
             * @param message data1110024Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110024Type.Idata1110024Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1110024Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1110024Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110024Type.data1110024Type;

            /**
             * Decodes a data1110024Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1110024Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110024Type.data1110024Type;

            /**
             * Verifies a data1110024Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1110024Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1110024Type
             */
            public static fromObject(object: { [k: string]: any }): game1110024Type.data1110024Type;

            /**
             * Creates a plain object from a data1110024Type message. Also converts values to other types if specified.
             * @param message data1110024Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110024Type.data1110024Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1110024Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1110024Type. */
        interface Iupdate1110024Type {

            /** update1110024Type index */
            index: number;

            /** update1110024Type reward */
            reward?: (IrewardType[] | null);

            /** update1110024Type prizePoolList */
            prizePoolList?: (IprizePoolListType[] | null);

            /** update1110024Type spicyPos */
            spicyPos?: (number[] | null);
        }

        /** Represents an update1110024Type. */
        class update1110024Type implements Iupdate1110024Type {

            /**
             * Constructs a new update1110024Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110024Type.Iupdate1110024Type);

            /** update1110024Type index. */
            public index: number;

            /** update1110024Type reward. */
            public reward: IrewardType[];

            /** update1110024Type prizePoolList. */
            public prizePoolList: IprizePoolListType[];

            /** update1110024Type spicyPos. */
            public spicyPos: number[];

            /**
             * Creates a new update1110024Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1110024Type instance
             */
            public static create(properties?: game1110024Type.Iupdate1110024Type): game1110024Type.update1110024Type;

            /**
             * Encodes the specified update1110024Type message. Does not implicitly {@link game1110024Type.update1110024Type.verify|verify} messages.
             * @param message update1110024Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110024Type.Iupdate1110024Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1110024Type message, length delimited. Does not implicitly {@link game1110024Type.update1110024Type.verify|verify} messages.
             * @param message update1110024Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110024Type.Iupdate1110024Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1110024Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1110024Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110024Type.update1110024Type;

            /**
             * Decodes an update1110024Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1110024Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110024Type.update1110024Type;

            /**
             * Verifies an update1110024Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1110024Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1110024Type
             */
            public static fromObject(object: { [k: string]: any }): game1110024Type.update1110024Type;

            /**
             * Creates a plain object from an update1110024Type message. Also converts values to other types if specified.
             * @param message update1110024Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110024Type.update1110024Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1110024Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a rewardType. */
    export class rewardType implements IrewardType {

        /**
         * Constructs a new rewardType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IrewardType);

        /** rewardType poolId. */
        public poolId: number;

        /** rewardType coin. */
        public coin: (number | Long);

        /**
         * Creates a new rewardType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns rewardType instance
         */
        public static create(properties?: IrewardType): rewardType;

        /**
         * Encodes the specified rewardType message. Does not implicitly {@link rewardType.verify|verify} messages.
         * @param message rewardType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IrewardType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified rewardType message, length delimited. Does not implicitly {@link rewardType.verify|verify} messages.
         * @param message rewardType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IrewardType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a rewardType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns rewardType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): rewardType;

        /**
         * Decodes a rewardType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns rewardType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): rewardType;

        /**
         * Verifies a rewardType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a rewardType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns rewardType
         */
        public static fromObject(object: { [k: string]: any }): rewardType;

        /**
         * Creates a plain object from a rewardType message. Also converts values to other types if specified.
         * @param message rewardType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rewardType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this rewardType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a prizePoolListType. */
    export class prizePoolListType implements IprizePoolListType {

        /**
         * Constructs a new prizePoolListType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IprizePoolListType);

        /** prizePoolListType poolId. */
        public poolId: number;

        /** prizePoolListType prizePool. */
        public prizePool: (number | Long);

        /** prizePoolListType additionalPrizePool. */
        public additionalPrizePool: (number | Long);

        /**
         * Creates a new prizePoolListType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns prizePoolListType instance
         */
        public static create(properties?: IprizePoolListType): prizePoolListType;

        /**
         * Encodes the specified prizePoolListType message. Does not implicitly {@link prizePoolListType.verify|verify} messages.
         * @param message prizePoolListType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IprizePoolListType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified prizePoolListType message, length delimited. Does not implicitly {@link prizePoolListType.verify|verify} messages.
         * @param message prizePoolListType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IprizePoolListType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a prizePoolListType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns prizePoolListType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): prizePoolListType;

        /**
         * Decodes a prizePoolListType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns prizePoolListType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): prizePoolListType;

        /**
         * Verifies a prizePoolListType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a prizePoolListType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns prizePoolListType
         */
        public static fromObject(object: { [k: string]: any }): prizePoolListType;

        /**
         * Creates a plain object from a prizePoolListType message. Also converts values to other types if specified.
         * @param message prizePoolListType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: prizePoolListType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this prizePoolListType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a game1110025Type. */
    export class game1110025Type implements Igame1110025Type {

        /**
         * Constructs a new game1110025Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1110025Type);

        /** game1110025Type data. */
        public data?: (game1110025Type.Idata1110025Type | null);

        /** game1110025Type update. */
        public update: game1110025Type.Iupdate1110025Type[];

        /**
         * Creates a new game1110025Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1110025Type instance
         */
        public static create(properties?: Igame1110025Type): game1110025Type;

        /**
         * Encodes the specified game1110025Type message. Does not implicitly {@link game1110025Type.verify|verify} messages.
         * @param message game1110025Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1110025Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1110025Type message, length delimited. Does not implicitly {@link game1110025Type.verify|verify} messages.
         * @param message game1110025Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1110025Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1110025Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1110025Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110025Type;

        /**
         * Decodes a game1110025Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1110025Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110025Type;

        /**
         * Verifies a game1110025Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1110025Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1110025Type
         */
        public static fromObject(object: { [k: string]: any }): game1110025Type;

        /**
         * Creates a plain object from a game1110025Type message. Also converts values to other types if specified.
         * @param message game1110025Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1110025Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1110025Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1110025Type {

        /** Properties of a data1110025Type. */
        interface Idata1110025Type {

            /** data1110025Type smallRoller */
            smallRoller?: ((number | Long)[] | null);

            /** data1110025Type changeList */
            changeList?: ((number | Long)[] | null);

            /** data1110025Type lgTaskList */
            lgTaskList?: (IlgTaskListType[] | null);

            /** data1110025Type rewardCoin */
            rewardCoin: (number | Long);
        }

        /** Represents a data1110025Type. */
        class data1110025Type implements Idata1110025Type {

            /**
             * Constructs a new data1110025Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110025Type.Idata1110025Type);

            /** data1110025Type smallRoller. */
            public smallRoller: (number | Long)[];

            /** data1110025Type changeList. */
            public changeList: (number | Long)[];

            /** data1110025Type lgTaskList. */
            public lgTaskList: IlgTaskListType[];

            /** data1110025Type rewardCoin. */
            public rewardCoin: (number | Long);

            /**
             * Creates a new data1110025Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1110025Type instance
             */
            public static create(properties?: game1110025Type.Idata1110025Type): game1110025Type.data1110025Type;

            /**
             * Encodes the specified data1110025Type message. Does not implicitly {@link game1110025Type.data1110025Type.verify|verify} messages.
             * @param message data1110025Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110025Type.Idata1110025Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1110025Type message, length delimited. Does not implicitly {@link game1110025Type.data1110025Type.verify|verify} messages.
             * @param message data1110025Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110025Type.Idata1110025Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1110025Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1110025Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110025Type.data1110025Type;

            /**
             * Decodes a data1110025Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1110025Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110025Type.data1110025Type;

            /**
             * Verifies a data1110025Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1110025Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1110025Type
             */
            public static fromObject(object: { [k: string]: any }): game1110025Type.data1110025Type;

            /**
             * Creates a plain object from a data1110025Type message. Also converts values to other types if specified.
             * @param message data1110025Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110025Type.data1110025Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1110025Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1110025Type. */
        interface Iupdate1110025Type {

            /** update1110025Type index */
            index: number;

            /** update1110025Type smallRoller */
            smallRoller?: ((number | Long)[] | null);

            /** update1110025Type changeList */
            changeList?: ((number | Long)[] | null);

            /** update1110025Type lgTaskList */
            lgTaskList?: (IlgTaskListType[] | null);

            /** update1110025Type rewardCoin */
            rewardCoin: (number | Long);
        }

        /** Represents an update1110025Type. */
        class update1110025Type implements Iupdate1110025Type {

            /**
             * Constructs a new update1110025Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110025Type.Iupdate1110025Type);

            /** update1110025Type index. */
            public index: number;

            /** update1110025Type smallRoller. */
            public smallRoller: (number | Long)[];

            /** update1110025Type changeList. */
            public changeList: (number | Long)[];

            /** update1110025Type lgTaskList. */
            public lgTaskList: IlgTaskListType[];

            /** update1110025Type rewardCoin. */
            public rewardCoin: (number | Long);

            /**
             * Creates a new update1110025Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1110025Type instance
             */
            public static create(properties?: game1110025Type.Iupdate1110025Type): game1110025Type.update1110025Type;

            /**
             * Encodes the specified update1110025Type message. Does not implicitly {@link game1110025Type.update1110025Type.verify|verify} messages.
             * @param message update1110025Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110025Type.Iupdate1110025Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1110025Type message, length delimited. Does not implicitly {@link game1110025Type.update1110025Type.verify|verify} messages.
             * @param message update1110025Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110025Type.Iupdate1110025Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1110025Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1110025Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110025Type.update1110025Type;

            /**
             * Decodes an update1110025Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1110025Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110025Type.update1110025Type;

            /**
             * Verifies an update1110025Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1110025Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1110025Type
             */
            public static fromObject(object: { [k: string]: any }): game1110025Type.update1110025Type;

            /**
             * Creates a plain object from an update1110025Type message. Also converts values to other types if specified.
             * @param message update1110025Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110025Type.update1110025Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1110025Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a lgTaskListType. */
    export class lgTaskListType implements IlgTaskListType {

        /**
         * Constructs a new lgTaskListType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IlgTaskListType);

        /** lgTaskListType num. */
        public num: number;

        /** lgTaskListType reward. */
        public reward: (number | Long);

        /** lgTaskListType targetNum. */
        public targetNum: number;

        /**
         * Creates a new lgTaskListType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns lgTaskListType instance
         */
        public static create(properties?: IlgTaskListType): lgTaskListType;

        /**
         * Encodes the specified lgTaskListType message. Does not implicitly {@link lgTaskListType.verify|verify} messages.
         * @param message lgTaskListType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IlgTaskListType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified lgTaskListType message, length delimited. Does not implicitly {@link lgTaskListType.verify|verify} messages.
         * @param message lgTaskListType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IlgTaskListType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a lgTaskListType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns lgTaskListType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): lgTaskListType;

        /**
         * Decodes a lgTaskListType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns lgTaskListType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): lgTaskListType;

        /**
         * Verifies a lgTaskListType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a lgTaskListType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns lgTaskListType
         */
        public static fromObject(object: { [k: string]: any }): lgTaskListType;

        /**
         * Creates a plain object from a lgTaskListType message. Also converts values to other types if specified.
         * @param message lgTaskListType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: lgTaskListType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this lgTaskListType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a game1110027Type. */
    export class game1110027Type implements Igame1110027Type {

        /**
         * Constructs a new game1110027Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1110027Type);

        /** game1110027Type data. */
        public data?: (game1110027Type.Idata1110027Type | null);

        /** game1110027Type update. */
        public update: game1110027Type.Iupdate1110027Type[];

        /**
         * Creates a new game1110027Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1110027Type instance
         */
        public static create(properties?: Igame1110027Type): game1110027Type;

        /**
         * Encodes the specified game1110027Type message. Does not implicitly {@link game1110027Type.verify|verify} messages.
         * @param message game1110027Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1110027Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1110027Type message, length delimited. Does not implicitly {@link game1110027Type.verify|verify} messages.
         * @param message game1110027Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1110027Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1110027Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1110027Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110027Type;

        /**
         * Decodes a game1110027Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1110027Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110027Type;

        /**
         * Verifies a game1110027Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1110027Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1110027Type
         */
        public static fromObject(object: { [k: string]: any }): game1110027Type;

        /**
         * Creates a plain object from a game1110027Type message. Also converts values to other types if specified.
         * @param message game1110027Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1110027Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1110027Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1110027Type {

        /** Properties of a data1110027Type. */
        interface Idata1110027Type {

            /** data1110027Type resultList */
            resultList?: (IspinResultType[] | null);
        }

        /** Represents a data1110027Type. */
        class data1110027Type implements Idata1110027Type {

            /**
             * Constructs a new data1110027Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110027Type.Idata1110027Type);

            /** data1110027Type resultList. */
            public resultList: IspinResultType[];

            /**
             * Creates a new data1110027Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1110027Type instance
             */
            public static create(properties?: game1110027Type.Idata1110027Type): game1110027Type.data1110027Type;

            /**
             * Encodes the specified data1110027Type message. Does not implicitly {@link game1110027Type.data1110027Type.verify|verify} messages.
             * @param message data1110027Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110027Type.Idata1110027Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1110027Type message, length delimited. Does not implicitly {@link game1110027Type.data1110027Type.verify|verify} messages.
             * @param message data1110027Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110027Type.Idata1110027Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1110027Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1110027Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110027Type.data1110027Type;

            /**
             * Decodes a data1110027Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1110027Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110027Type.data1110027Type;

            /**
             * Verifies a data1110027Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1110027Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1110027Type
             */
            public static fromObject(object: { [k: string]: any }): game1110027Type.data1110027Type;

            /**
             * Creates a plain object from a data1110027Type message. Also converts values to other types if specified.
             * @param message data1110027Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110027Type.data1110027Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1110027Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1110027Type. */
        interface Iupdate1110027Type {

            /** update1110027Type index */
            index: number;

            /** update1110027Type resultList */
            resultList?: (IspinResultType[] | null);
        }

        /** Represents an update1110027Type. */
        class update1110027Type implements Iupdate1110027Type {

            /**
             * Constructs a new update1110027Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110027Type.Iupdate1110027Type);

            /** update1110027Type index. */
            public index: number;

            /** update1110027Type resultList. */
            public resultList: IspinResultType[];

            /**
             * Creates a new update1110027Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1110027Type instance
             */
            public static create(properties?: game1110027Type.Iupdate1110027Type): game1110027Type.update1110027Type;

            /**
             * Encodes the specified update1110027Type message. Does not implicitly {@link game1110027Type.update1110027Type.verify|verify} messages.
             * @param message update1110027Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110027Type.Iupdate1110027Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1110027Type message, length delimited. Does not implicitly {@link game1110027Type.update1110027Type.verify|verify} messages.
             * @param message update1110027Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110027Type.Iupdate1110027Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1110027Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1110027Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110027Type.update1110027Type;

            /**
             * Decodes an update1110027Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1110027Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110027Type.update1110027Type;

            /**
             * Verifies an update1110027Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1110027Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1110027Type
             */
            public static fromObject(object: { [k: string]: any }): game1110027Type.update1110027Type;

            /**
             * Creates a plain object from an update1110027Type message. Also converts values to other types if specified.
             * @param message update1110027Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110027Type.update1110027Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1110027Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1110042Type. */
    export class game1110042Type implements Igame1110042Type {

        /**
         * Constructs a new game1110042Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1110042Type);

        /** game1110042Type data. */
        public data?: (game1110042Type.Idata1110042Type | null);

        /** game1110042Type update. */
        public update: game1110042Type.Iupdate1110042Type[];

        /**
         * Creates a new game1110042Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1110042Type instance
         */
        public static create(properties?: Igame1110042Type): game1110042Type;

        /**
         * Encodes the specified game1110042Type message. Does not implicitly {@link game1110042Type.verify|verify} messages.
         * @param message game1110042Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1110042Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1110042Type message, length delimited. Does not implicitly {@link game1110042Type.verify|verify} messages.
         * @param message game1110042Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1110042Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1110042Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1110042Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110042Type;

        /**
         * Decodes a game1110042Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1110042Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110042Type;

        /**
         * Verifies a game1110042Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1110042Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1110042Type
         */
        public static fromObject(object: { [k: string]: any }): game1110042Type;

        /**
         * Creates a plain object from a game1110042Type message. Also converts values to other types if specified.
         * @param message game1110042Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1110042Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1110042Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1110042Type {

        /** Properties of a data1110042Type. */
        interface Idata1110042Type {

            /** data1110042Type beforeMysticColumnList */
            beforeMysticColumnList?: (number[] | null);

            /** data1110042Type afterMysticColumnList */
            afterMysticColumnList?: (number[] | null);

            /** data1110042Type startGrid */
            startGrid?: (game1110042Type.IColGridListType[] | null);

            /** data1110042Type endGrid */
            endGrid?: (game1110042Type.IColGridListType[] | null);

            /** data1110042Type posToColList */
            posToColList?: (game1110042Type.IPosToColType[] | null);
        }

        /** Represents a data1110042Type. */
        class data1110042Type implements Idata1110042Type {

            /**
             * Constructs a new data1110042Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110042Type.Idata1110042Type);

            /** data1110042Type beforeMysticColumnList. */
            public beforeMysticColumnList: number[];

            /** data1110042Type afterMysticColumnList. */
            public afterMysticColumnList: number[];

            /** data1110042Type startGrid. */
            public startGrid: game1110042Type.IColGridListType[];

            /** data1110042Type endGrid. */
            public endGrid: game1110042Type.IColGridListType[];

            /** data1110042Type posToColList. */
            public posToColList: game1110042Type.IPosToColType[];

            /**
             * Creates a new data1110042Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1110042Type instance
             */
            public static create(properties?: game1110042Type.Idata1110042Type): game1110042Type.data1110042Type;

            /**
             * Encodes the specified data1110042Type message. Does not implicitly {@link game1110042Type.data1110042Type.verify|verify} messages.
             * @param message data1110042Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110042Type.Idata1110042Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1110042Type message, length delimited. Does not implicitly {@link game1110042Type.data1110042Type.verify|verify} messages.
             * @param message data1110042Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110042Type.Idata1110042Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1110042Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1110042Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110042Type.data1110042Type;

            /**
             * Decodes a data1110042Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1110042Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110042Type.data1110042Type;

            /**
             * Verifies a data1110042Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1110042Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1110042Type
             */
            public static fromObject(object: { [k: string]: any }): game1110042Type.data1110042Type;

            /**
             * Creates a plain object from a data1110042Type message. Also converts values to other types if specified.
             * @param message data1110042Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110042Type.data1110042Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1110042Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1110042Type. */
        interface Iupdate1110042Type {

            /** update1110042Type index */
            index: number;

            /** update1110042Type beforeMysticColumnList */
            beforeMysticColumnList?: (number[] | null);

            /** update1110042Type afterMysticColumnList */
            afterMysticColumnList?: (number[] | null);

            /** update1110042Type startGrid */
            startGrid?: (game1110042Type.IColGridListType[] | null);

            /** update1110042Type endGrid */
            endGrid?: (game1110042Type.IColGridListType[] | null);

            /** update1110042Type posToColList */
            posToColList?: (game1110042Type.IPosToColType[] | null);
        }

        /** Represents an update1110042Type. */
        class update1110042Type implements Iupdate1110042Type {

            /**
             * Constructs a new update1110042Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110042Type.Iupdate1110042Type);

            /** update1110042Type index. */
            public index: number;

            /** update1110042Type beforeMysticColumnList. */
            public beforeMysticColumnList: number[];

            /** update1110042Type afterMysticColumnList. */
            public afterMysticColumnList: number[];

            /** update1110042Type startGrid. */
            public startGrid: game1110042Type.IColGridListType[];

            /** update1110042Type endGrid. */
            public endGrid: game1110042Type.IColGridListType[];

            /** update1110042Type posToColList. */
            public posToColList: game1110042Type.IPosToColType[];

            /**
             * Creates a new update1110042Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1110042Type instance
             */
            public static create(properties?: game1110042Type.Iupdate1110042Type): game1110042Type.update1110042Type;

            /**
             * Encodes the specified update1110042Type message. Does not implicitly {@link game1110042Type.update1110042Type.verify|verify} messages.
             * @param message update1110042Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110042Type.Iupdate1110042Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1110042Type message, length delimited. Does not implicitly {@link game1110042Type.update1110042Type.verify|verify} messages.
             * @param message update1110042Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110042Type.Iupdate1110042Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1110042Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1110042Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110042Type.update1110042Type;

            /**
             * Decodes an update1110042Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1110042Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110042Type.update1110042Type;

            /**
             * Verifies an update1110042Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1110042Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1110042Type
             */
            public static fromObject(object: { [k: string]: any }): game1110042Type.update1110042Type;

            /**
             * Creates a plain object from an update1110042Type message. Also converts values to other types if specified.
             * @param message update1110042Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110042Type.update1110042Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1110042Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ColGridListType. */
        interface IColGridListType {

            /** ColGridListType col */
            col: number;

            /** ColGridListType gridList */
            gridList?: (game1110042Type.IGridType[] | null);
        }

        /** Represents a ColGridListType. */
        class ColGridListType implements IColGridListType {

            /**
             * Constructs a new ColGridListType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110042Type.IColGridListType);

            /** ColGridListType col. */
            public col: number;

            /** ColGridListType gridList. */
            public gridList: game1110042Type.IGridType[];

            /**
             * Creates a new ColGridListType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ColGridListType instance
             */
            public static create(properties?: game1110042Type.IColGridListType): game1110042Type.ColGridListType;

            /**
             * Encodes the specified ColGridListType message. Does not implicitly {@link game1110042Type.ColGridListType.verify|verify} messages.
             * @param message ColGridListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110042Type.IColGridListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ColGridListType message, length delimited. Does not implicitly {@link game1110042Type.ColGridListType.verify|verify} messages.
             * @param message ColGridListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110042Type.IColGridListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ColGridListType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ColGridListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110042Type.ColGridListType;

            /**
             * Decodes a ColGridListType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ColGridListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110042Type.ColGridListType;

            /**
             * Verifies a ColGridListType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a ColGridListType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ColGridListType
             */
            public static fromObject(object: { [k: string]: any }): game1110042Type.ColGridListType;

            /**
             * Creates a plain object from a ColGridListType message. Also converts values to other types if specified.
             * @param message ColGridListType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110042Type.ColGridListType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ColGridListType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GridType. */
        interface IGridType {

            /** GridType pos */
            pos: number;

            /** GridType elem */
            elem: number;
        }

        /** Represents a GridType. */
        class GridType implements IGridType {

            /**
             * Constructs a new GridType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110042Type.IGridType);

            /** GridType pos. */
            public pos: number;

            /** GridType elem. */
            public elem: number;

            /**
             * Creates a new GridType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GridType instance
             */
            public static create(properties?: game1110042Type.IGridType): game1110042Type.GridType;

            /**
             * Encodes the specified GridType message. Does not implicitly {@link game1110042Type.GridType.verify|verify} messages.
             * @param message GridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110042Type.IGridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GridType message, length delimited. Does not implicitly {@link game1110042Type.GridType.verify|verify} messages.
             * @param message GridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110042Type.IGridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GridType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110042Type.GridType;

            /**
             * Decodes a GridType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110042Type.GridType;

            /**
             * Verifies a GridType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a GridType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GridType
             */
            public static fromObject(object: { [k: string]: any }): game1110042Type.GridType;

            /**
             * Creates a plain object from a GridType message. Also converts values to other types if specified.
             * @param message GridType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110042Type.GridType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GridType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a PosToColType. */
        interface IPosToColType {

            /** PosToColType pos */
            pos: number;

            /** PosToColType col */
            col: number;
        }

        /** Represents a PosToColType. */
        class PosToColType implements IPosToColType {

            /**
             * Constructs a new PosToColType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110042Type.IPosToColType);

            /** PosToColType pos. */
            public pos: number;

            /** PosToColType col. */
            public col: number;

            /**
             * Creates a new PosToColType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PosToColType instance
             */
            public static create(properties?: game1110042Type.IPosToColType): game1110042Type.PosToColType;

            /**
             * Encodes the specified PosToColType message. Does not implicitly {@link game1110042Type.PosToColType.verify|verify} messages.
             * @param message PosToColType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110042Type.IPosToColType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PosToColType message, length delimited. Does not implicitly {@link game1110042Type.PosToColType.verify|verify} messages.
             * @param message PosToColType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110042Type.IPosToColType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PosToColType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PosToColType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110042Type.PosToColType;

            /**
             * Decodes a PosToColType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PosToColType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110042Type.PosToColType;

            /**
             * Verifies a PosToColType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a PosToColType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PosToColType
             */
            public static fromObject(object: { [k: string]: any }): game1110042Type.PosToColType;

            /**
             * Creates a plain object from a PosToColType message. Also converts values to other types if specified.
             * @param message PosToColType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110042Type.PosToColType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PosToColType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1110045Type. */
    export class game1110045Type implements Igame1110045Type {

        /**
         * Constructs a new game1110045Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1110045Type);

        /** game1110045Type data. */
        public data?: (game1110045Type.Idata1110045Type | null);

        /** game1110045Type update. */
        public update: game1110045Type.Iupdate1110045Type[];

        /**
         * Creates a new game1110045Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1110045Type instance
         */
        public static create(properties?: Igame1110045Type): game1110045Type;

        /**
         * Encodes the specified game1110045Type message. Does not implicitly {@link game1110045Type.verify|verify} messages.
         * @param message game1110045Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1110045Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1110045Type message, length delimited. Does not implicitly {@link game1110045Type.verify|verify} messages.
         * @param message game1110045Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1110045Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1110045Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1110045Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110045Type;

        /**
         * Decodes a game1110045Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1110045Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110045Type;

        /**
         * Verifies a game1110045Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1110045Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1110045Type
         */
        public static fromObject(object: { [k: string]: any }): game1110045Type;

        /**
         * Creates a plain object from a game1110045Type message. Also converts values to other types if specified.
         * @param message game1110045Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1110045Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1110045Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1110045Type {

        /** Properties of a data1110045Type. */
        interface Idata1110045Type {

            /** data1110045Type beforeMysticColumnList */
            beforeMysticColumnList?: (number[] | null);

            /** data1110045Type afterMysticColumnList */
            afterMysticColumnList?: (number[] | null);

            /** data1110045Type startGrid */
            startGrid?: (game1110045Type.IColGridListType[] | null);

            /** data1110045Type endGrid */
            endGrid?: (game1110045Type.IColGridListType[] | null);
        }

        /** Represents a data1110045Type. */
        class data1110045Type implements Idata1110045Type {

            /**
             * Constructs a new data1110045Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110045Type.Idata1110045Type);

            /** data1110045Type beforeMysticColumnList. */
            public beforeMysticColumnList: number[];

            /** data1110045Type afterMysticColumnList. */
            public afterMysticColumnList: number[];

            /** data1110045Type startGrid. */
            public startGrid: game1110045Type.IColGridListType[];

            /** data1110045Type endGrid. */
            public endGrid: game1110045Type.IColGridListType[];

            /**
             * Creates a new data1110045Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1110045Type instance
             */
            public static create(properties?: game1110045Type.Idata1110045Type): game1110045Type.data1110045Type;

            /**
             * Encodes the specified data1110045Type message. Does not implicitly {@link game1110045Type.data1110045Type.verify|verify} messages.
             * @param message data1110045Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110045Type.Idata1110045Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1110045Type message, length delimited. Does not implicitly {@link game1110045Type.data1110045Type.verify|verify} messages.
             * @param message data1110045Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110045Type.Idata1110045Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1110045Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1110045Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110045Type.data1110045Type;

            /**
             * Decodes a data1110045Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1110045Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110045Type.data1110045Type;

            /**
             * Verifies a data1110045Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1110045Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1110045Type
             */
            public static fromObject(object: { [k: string]: any }): game1110045Type.data1110045Type;

            /**
             * Creates a plain object from a data1110045Type message. Also converts values to other types if specified.
             * @param message data1110045Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110045Type.data1110045Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1110045Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1110045Type. */
        interface Iupdate1110045Type {

            /** update1110045Type index */
            index: number;

            /** update1110045Type beforeMysticColumnList */
            beforeMysticColumnList?: (number[] | null);

            /** update1110045Type afterMysticColumnList */
            afterMysticColumnList?: (number[] | null);

            /** update1110045Type startGrid */
            startGrid?: (game1110045Type.IColGridListType[] | null);

            /** update1110045Type endGrid */
            endGrid?: (game1110045Type.IColGridListType[] | null);
        }

        /** Represents an update1110045Type. */
        class update1110045Type implements Iupdate1110045Type {

            /**
             * Constructs a new update1110045Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110045Type.Iupdate1110045Type);

            /** update1110045Type index. */
            public index: number;

            /** update1110045Type beforeMysticColumnList. */
            public beforeMysticColumnList: number[];

            /** update1110045Type afterMysticColumnList. */
            public afterMysticColumnList: number[];

            /** update1110045Type startGrid. */
            public startGrid: game1110045Type.IColGridListType[];

            /** update1110045Type endGrid. */
            public endGrid: game1110045Type.IColGridListType[];

            /**
             * Creates a new update1110045Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1110045Type instance
             */
            public static create(properties?: game1110045Type.Iupdate1110045Type): game1110045Type.update1110045Type;

            /**
             * Encodes the specified update1110045Type message. Does not implicitly {@link game1110045Type.update1110045Type.verify|verify} messages.
             * @param message update1110045Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110045Type.Iupdate1110045Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1110045Type message, length delimited. Does not implicitly {@link game1110045Type.update1110045Type.verify|verify} messages.
             * @param message update1110045Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110045Type.Iupdate1110045Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1110045Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1110045Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110045Type.update1110045Type;

            /**
             * Decodes an update1110045Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1110045Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110045Type.update1110045Type;

            /**
             * Verifies an update1110045Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1110045Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1110045Type
             */
            public static fromObject(object: { [k: string]: any }): game1110045Type.update1110045Type;

            /**
             * Creates a plain object from an update1110045Type message. Also converts values to other types if specified.
             * @param message update1110045Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110045Type.update1110045Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1110045Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ColGridListType. */
        interface IColGridListType {

            /** ColGridListType col */
            col: number;

            /** ColGridListType gridList */
            gridList?: (game1110045Type.IGridType[] | null);
        }

        /** Represents a ColGridListType. */
        class ColGridListType implements IColGridListType {

            /**
             * Constructs a new ColGridListType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110045Type.IColGridListType);

            /** ColGridListType col. */
            public col: number;

            /** ColGridListType gridList. */
            public gridList: game1110045Type.IGridType[];

            /**
             * Creates a new ColGridListType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ColGridListType instance
             */
            public static create(properties?: game1110045Type.IColGridListType): game1110045Type.ColGridListType;

            /**
             * Encodes the specified ColGridListType message. Does not implicitly {@link game1110045Type.ColGridListType.verify|verify} messages.
             * @param message ColGridListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110045Type.IColGridListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ColGridListType message, length delimited. Does not implicitly {@link game1110045Type.ColGridListType.verify|verify} messages.
             * @param message ColGridListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110045Type.IColGridListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ColGridListType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ColGridListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110045Type.ColGridListType;

            /**
             * Decodes a ColGridListType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ColGridListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110045Type.ColGridListType;

            /**
             * Verifies a ColGridListType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a ColGridListType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ColGridListType
             */
            public static fromObject(object: { [k: string]: any }): game1110045Type.ColGridListType;

            /**
             * Creates a plain object from a ColGridListType message. Also converts values to other types if specified.
             * @param message ColGridListType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110045Type.ColGridListType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ColGridListType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GridType. */
        interface IGridType {

            /** GridType pos */
            pos: number;

            /** GridType elem */
            elem: number;
        }

        /** Represents a GridType. */
        class GridType implements IGridType {

            /**
             * Constructs a new GridType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110045Type.IGridType);

            /** GridType pos. */
            public pos: number;

            /** GridType elem. */
            public elem: number;

            /**
             * Creates a new GridType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GridType instance
             */
            public static create(properties?: game1110045Type.IGridType): game1110045Type.GridType;

            /**
             * Encodes the specified GridType message. Does not implicitly {@link game1110045Type.GridType.verify|verify} messages.
             * @param message GridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110045Type.IGridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GridType message, length delimited. Does not implicitly {@link game1110045Type.GridType.verify|verify} messages.
             * @param message GridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110045Type.IGridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GridType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110045Type.GridType;

            /**
             * Decodes a GridType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110045Type.GridType;

            /**
             * Verifies a GridType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a GridType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GridType
             */
            public static fromObject(object: { [k: string]: any }): game1110045Type.GridType;

            /**
             * Creates a plain object from a GridType message. Also converts values to other types if specified.
             * @param message GridType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110045Type.GridType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GridType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1110048Type. */
    export class game1110048Type implements Igame1110048Type {

        /**
         * Constructs a new game1110048Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1110048Type);

        /** game1110048Type data. */
        public data?: (game1110048Type.Idata1110048Type | null);

        /** game1110048Type update. */
        public update: game1110048Type.Iupdate1110048Type[];

        /**
         * Creates a new game1110048Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1110048Type instance
         */
        public static create(properties?: Igame1110048Type): game1110048Type;

        /**
         * Encodes the specified game1110048Type message. Does not implicitly {@link game1110048Type.verify|verify} messages.
         * @param message game1110048Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1110048Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1110048Type message, length delimited. Does not implicitly {@link game1110048Type.verify|verify} messages.
         * @param message game1110048Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1110048Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1110048Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1110048Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110048Type;

        /**
         * Decodes a game1110048Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1110048Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110048Type;

        /**
         * Verifies a game1110048Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1110048Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1110048Type
         */
        public static fromObject(object: { [k: string]: any }): game1110048Type;

        /**
         * Creates a plain object from a game1110048Type message. Also converts values to other types if specified.
         * @param message game1110048Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1110048Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1110048Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1110048Type {

        /** Properties of a data1110048Type. */
        interface Idata1110048Type {

            /** data1110048Type coverPosList */
            coverPosList?: ((number | Long)[] | null);

            /** data1110048Type smashPosList */
            smashPosList?: ((number | Long)[] | null);

            /** data1110048Type lgTaskList */
            lgTaskList?: (game1110048Type.ITaskListType[] | null);

            /** data1110048Type overPosList */
            overPosList?: ((number | Long)[] | null);

            /** data1110048Type rate */
            rate: number;
        }

        /** Represents a data1110048Type. */
        class data1110048Type implements Idata1110048Type {

            /**
             * Constructs a new data1110048Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110048Type.Idata1110048Type);

            /** data1110048Type coverPosList. */
            public coverPosList: (number | Long)[];

            /** data1110048Type smashPosList. */
            public smashPosList: (number | Long)[];

            /** data1110048Type lgTaskList. */
            public lgTaskList: game1110048Type.ITaskListType[];

            /** data1110048Type overPosList. */
            public overPosList: (number | Long)[];

            /** data1110048Type rate. */
            public rate: number;

            /**
             * Creates a new data1110048Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1110048Type instance
             */
            public static create(properties?: game1110048Type.Idata1110048Type): game1110048Type.data1110048Type;

            /**
             * Encodes the specified data1110048Type message. Does not implicitly {@link game1110048Type.data1110048Type.verify|verify} messages.
             * @param message data1110048Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110048Type.Idata1110048Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1110048Type message, length delimited. Does not implicitly {@link game1110048Type.data1110048Type.verify|verify} messages.
             * @param message data1110048Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110048Type.Idata1110048Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1110048Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1110048Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110048Type.data1110048Type;

            /**
             * Decodes a data1110048Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1110048Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110048Type.data1110048Type;

            /**
             * Verifies a data1110048Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1110048Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1110048Type
             */
            public static fromObject(object: { [k: string]: any }): game1110048Type.data1110048Type;

            /**
             * Creates a plain object from a data1110048Type message. Also converts values to other types if specified.
             * @param message data1110048Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110048Type.data1110048Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1110048Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1110048Type. */
        interface Iupdate1110048Type {

            /** update1110048Type index */
            index: number;

            /** update1110048Type coverPosList */
            coverPosList?: ((number | Long)[] | null);

            /** update1110048Type smashPosList */
            smashPosList?: ((number | Long)[] | null);

            /** update1110048Type lgTaskList */
            lgTaskList?: (game1110048Type.ITaskListType[] | null);

            /** update1110048Type overPosList */
            overPosList?: ((number | Long)[] | null);

            /** update1110048Type rate */
            rate: number;
        }

        /** Represents an update1110048Type. */
        class update1110048Type implements Iupdate1110048Type {

            /**
             * Constructs a new update1110048Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110048Type.Iupdate1110048Type);

            /** update1110048Type index. */
            public index: number;

            /** update1110048Type coverPosList. */
            public coverPosList: (number | Long)[];

            /** update1110048Type smashPosList. */
            public smashPosList: (number | Long)[];

            /** update1110048Type lgTaskList. */
            public lgTaskList: game1110048Type.ITaskListType[];

            /** update1110048Type overPosList. */
            public overPosList: (number | Long)[];

            /** update1110048Type rate. */
            public rate: number;

            /**
             * Creates a new update1110048Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1110048Type instance
             */
            public static create(properties?: game1110048Type.Iupdate1110048Type): game1110048Type.update1110048Type;

            /**
             * Encodes the specified update1110048Type message. Does not implicitly {@link game1110048Type.update1110048Type.verify|verify} messages.
             * @param message update1110048Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110048Type.Iupdate1110048Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1110048Type message, length delimited. Does not implicitly {@link game1110048Type.update1110048Type.verify|verify} messages.
             * @param message update1110048Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110048Type.Iupdate1110048Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1110048Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1110048Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110048Type.update1110048Type;

            /**
             * Decodes an update1110048Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1110048Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110048Type.update1110048Type;

            /**
             * Verifies an update1110048Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1110048Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1110048Type
             */
            public static fromObject(object: { [k: string]: any }): game1110048Type.update1110048Type;

            /**
             * Creates a plain object from an update1110048Type message. Also converts values to other types if specified.
             * @param message update1110048Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110048Type.update1110048Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1110048Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a TaskListType. */
        interface ITaskListType {

            /** TaskListType num */
            num: number;

            /** TaskListType targetNum */
            targetNum: (number | Long);

            /** TaskListType collectElem */
            collectElem?: (number[] | null);
        }

        /** Represents a TaskListType. */
        class TaskListType implements ITaskListType {

            /**
             * Constructs a new TaskListType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110048Type.ITaskListType);

            /** TaskListType num. */
            public num: number;

            /** TaskListType targetNum. */
            public targetNum: (number | Long);

            /** TaskListType collectElem. */
            public collectElem: number[];

            /**
             * Creates a new TaskListType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TaskListType instance
             */
            public static create(properties?: game1110048Type.ITaskListType): game1110048Type.TaskListType;

            /**
             * Encodes the specified TaskListType message. Does not implicitly {@link game1110048Type.TaskListType.verify|verify} messages.
             * @param message TaskListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110048Type.ITaskListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified TaskListType message, length delimited. Does not implicitly {@link game1110048Type.TaskListType.verify|verify} messages.
             * @param message TaskListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110048Type.ITaskListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a TaskListType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TaskListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110048Type.TaskListType;

            /**
             * Decodes a TaskListType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TaskListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110048Type.TaskListType;

            /**
             * Verifies a TaskListType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a TaskListType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TaskListType
             */
            public static fromObject(object: { [k: string]: any }): game1110048Type.TaskListType;

            /**
             * Creates a plain object from a TaskListType message. Also converts values to other types if specified.
             * @param message TaskListType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110048Type.TaskListType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TaskListType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1110052Type. */
    export class game1110052Type implements Igame1110052Type {

        /**
         * Constructs a new game1110052Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1110052Type);

        /** game1110052Type data. */
        public data?: (game1110052Type.Idata1110052Type | null);

        /** game1110052Type update. */
        public update: game1110052Type.Iupdate1110052Type[];

        /**
         * Creates a new game1110052Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1110052Type instance
         */
        public static create(properties?: Igame1110052Type): game1110052Type;

        /**
         * Encodes the specified game1110052Type message. Does not implicitly {@link game1110052Type.verify|verify} messages.
         * @param message game1110052Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1110052Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1110052Type message, length delimited. Does not implicitly {@link game1110052Type.verify|verify} messages.
         * @param message game1110052Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1110052Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1110052Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1110052Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110052Type;

        /**
         * Decodes a game1110052Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1110052Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110052Type;

        /**
         * Verifies a game1110052Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1110052Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1110052Type
         */
        public static fromObject(object: { [k: string]: any }): game1110052Type;

        /**
         * Creates a plain object from a game1110052Type message. Also converts values to other types if specified.
         * @param message game1110052Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1110052Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1110052Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1110052Type {

        /** Properties of a data1110052Type. */
        interface Idata1110052Type {

            /** data1110052Type specElem */
            specElem: number;

            /** data1110052Type tranElem */
            tranElem: number;
        }

        /** Represents a data1110052Type. */
        class data1110052Type implements Idata1110052Type {

            /**
             * Constructs a new data1110052Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110052Type.Idata1110052Type);

            /** data1110052Type specElem. */
            public specElem: number;

            /** data1110052Type tranElem. */
            public tranElem: number;

            /**
             * Creates a new data1110052Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1110052Type instance
             */
            public static create(properties?: game1110052Type.Idata1110052Type): game1110052Type.data1110052Type;

            /**
             * Encodes the specified data1110052Type message. Does not implicitly {@link game1110052Type.data1110052Type.verify|verify} messages.
             * @param message data1110052Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110052Type.Idata1110052Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1110052Type message, length delimited. Does not implicitly {@link game1110052Type.data1110052Type.verify|verify} messages.
             * @param message data1110052Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110052Type.Idata1110052Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1110052Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1110052Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110052Type.data1110052Type;

            /**
             * Decodes a data1110052Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1110052Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110052Type.data1110052Type;

            /**
             * Verifies a data1110052Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1110052Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1110052Type
             */
            public static fromObject(object: { [k: string]: any }): game1110052Type.data1110052Type;

            /**
             * Creates a plain object from a data1110052Type message. Also converts values to other types if specified.
             * @param message data1110052Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110052Type.data1110052Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1110052Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1110052Type. */
        interface Iupdate1110052Type {

            /** update1110052Type index */
            index: number;

            /** update1110052Type specElem */
            specElem: number;

            /** update1110052Type tranElem */
            tranElem: number;
        }

        /** Represents an update1110052Type. */
        class update1110052Type implements Iupdate1110052Type {

            /**
             * Constructs a new update1110052Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110052Type.Iupdate1110052Type);

            /** update1110052Type index. */
            public index: number;

            /** update1110052Type specElem. */
            public specElem: number;

            /** update1110052Type tranElem. */
            public tranElem: number;

            /**
             * Creates a new update1110052Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1110052Type instance
             */
            public static create(properties?: game1110052Type.Iupdate1110052Type): game1110052Type.update1110052Type;

            /**
             * Encodes the specified update1110052Type message. Does not implicitly {@link game1110052Type.update1110052Type.verify|verify} messages.
             * @param message update1110052Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110052Type.Iupdate1110052Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1110052Type message, length delimited. Does not implicitly {@link game1110052Type.update1110052Type.verify|verify} messages.
             * @param message update1110052Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110052Type.Iupdate1110052Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1110052Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1110052Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110052Type.update1110052Type;

            /**
             * Decodes an update1110052Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1110052Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110052Type.update1110052Type;

            /**
             * Verifies an update1110052Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1110052Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1110052Type
             */
            public static fromObject(object: { [k: string]: any }): game1110052Type.update1110052Type;

            /**
             * Creates a plain object from an update1110052Type message. Also converts values to other types if specified.
             * @param message update1110052Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110052Type.update1110052Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1110052Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1110053Type. */
    export class game1110053Type implements Igame1110053Type {

        /**
         * Constructs a new game1110053Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1110053Type);

        /** game1110053Type data. */
        public data?: (game1110053Type.Idata1110053Type | null);

        /** game1110053Type update. */
        public update: game1110053Type.Iupdate1110053Type[];

        /**
         * Creates a new game1110053Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1110053Type instance
         */
        public static create(properties?: Igame1110053Type): game1110053Type;

        /**
         * Encodes the specified game1110053Type message. Does not implicitly {@link game1110053Type.verify|verify} messages.
         * @param message game1110053Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1110053Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1110053Type message, length delimited. Does not implicitly {@link game1110053Type.verify|verify} messages.
         * @param message game1110053Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1110053Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1110053Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1110053Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110053Type;

        /**
         * Decodes a game1110053Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1110053Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110053Type;

        /**
         * Verifies a game1110053Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1110053Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1110053Type
         */
        public static fromObject(object: { [k: string]: any }): game1110053Type;

        /**
         * Creates a plain object from a game1110053Type message. Also converts values to other types if specified.
         * @param message game1110053Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1110053Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1110053Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1110053Type {

        /** Properties of a data1110053Type. */
        interface Idata1110053Type {

            /** data1110053Type taskList */
            taskList?: (game1110053Type.ITaskType[] | null);

            /** data1110053Type posToRedPacket */
            posToRedPacket?: (game1110053Type.IPosToRedPacketType[] | null);
        }

        /** Represents a data1110053Type. */
        class data1110053Type implements Idata1110053Type {

            /**
             * Constructs a new data1110053Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110053Type.Idata1110053Type);

            /** data1110053Type taskList. */
            public taskList: game1110053Type.ITaskType[];

            /** data1110053Type posToRedPacket. */
            public posToRedPacket: game1110053Type.IPosToRedPacketType[];

            /**
             * Creates a new data1110053Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1110053Type instance
             */
            public static create(properties?: game1110053Type.Idata1110053Type): game1110053Type.data1110053Type;

            /**
             * Encodes the specified data1110053Type message. Does not implicitly {@link game1110053Type.data1110053Type.verify|verify} messages.
             * @param message data1110053Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110053Type.Idata1110053Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1110053Type message, length delimited. Does not implicitly {@link game1110053Type.data1110053Type.verify|verify} messages.
             * @param message data1110053Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110053Type.Idata1110053Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1110053Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1110053Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110053Type.data1110053Type;

            /**
             * Decodes a data1110053Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1110053Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110053Type.data1110053Type;

            /**
             * Verifies a data1110053Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1110053Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1110053Type
             */
            public static fromObject(object: { [k: string]: any }): game1110053Type.data1110053Type;

            /**
             * Creates a plain object from a data1110053Type message. Also converts values to other types if specified.
             * @param message data1110053Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110053Type.data1110053Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1110053Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1110053Type. */
        interface Iupdate1110053Type {

            /** update1110053Type index */
            index: number;

            /** update1110053Type taskList */
            taskList?: (game1110053Type.ITaskType[] | null);

            /** update1110053Type posToRedPacket */
            posToRedPacket?: (game1110053Type.IPosToRedPacketType[] | null);
        }

        /** Represents an update1110053Type. */
        class update1110053Type implements Iupdate1110053Type {

            /**
             * Constructs a new update1110053Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110053Type.Iupdate1110053Type);

            /** update1110053Type index. */
            public index: number;

            /** update1110053Type taskList. */
            public taskList: game1110053Type.ITaskType[];

            /** update1110053Type posToRedPacket. */
            public posToRedPacket: game1110053Type.IPosToRedPacketType[];

            /**
             * Creates a new update1110053Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1110053Type instance
             */
            public static create(properties?: game1110053Type.Iupdate1110053Type): game1110053Type.update1110053Type;

            /**
             * Encodes the specified update1110053Type message. Does not implicitly {@link game1110053Type.update1110053Type.verify|verify} messages.
             * @param message update1110053Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110053Type.Iupdate1110053Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1110053Type message, length delimited. Does not implicitly {@link game1110053Type.update1110053Type.verify|verify} messages.
             * @param message update1110053Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110053Type.Iupdate1110053Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1110053Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1110053Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110053Type.update1110053Type;

            /**
             * Decodes an update1110053Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1110053Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110053Type.update1110053Type;

            /**
             * Verifies an update1110053Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1110053Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1110053Type
             */
            public static fromObject(object: { [k: string]: any }): game1110053Type.update1110053Type;

            /**
             * Creates a plain object from an update1110053Type message. Also converts values to other types if specified.
             * @param message update1110053Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110053Type.update1110053Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1110053Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a TaskType. */
        interface ITaskType {

            /** TaskType id */
            id: number;

            /** TaskType num */
            num: number;

            /** TaskType targetNum */
            targetNum: (number | Long);
        }

        /** Represents a TaskType. */
        class TaskType implements ITaskType {

            /**
             * Constructs a new TaskType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110053Type.ITaskType);

            /** TaskType id. */
            public id: number;

            /** TaskType num. */
            public num: number;

            /** TaskType targetNum. */
            public targetNum: (number | Long);

            /**
             * Creates a new TaskType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TaskType instance
             */
            public static create(properties?: game1110053Type.ITaskType): game1110053Type.TaskType;

            /**
             * Encodes the specified TaskType message. Does not implicitly {@link game1110053Type.TaskType.verify|verify} messages.
             * @param message TaskType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110053Type.ITaskType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified TaskType message, length delimited. Does not implicitly {@link game1110053Type.TaskType.verify|verify} messages.
             * @param message TaskType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110053Type.ITaskType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a TaskType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TaskType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110053Type.TaskType;

            /**
             * Decodes a TaskType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TaskType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110053Type.TaskType;

            /**
             * Verifies a TaskType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a TaskType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TaskType
             */
            public static fromObject(object: { [k: string]: any }): game1110053Type.TaskType;

            /**
             * Creates a plain object from a TaskType message. Also converts values to other types if specified.
             * @param message TaskType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110053Type.TaskType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TaskType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a PosToRedPacketType. */
        interface IPosToRedPacketType {

            /** PosToRedPacketType pos */
            pos: number;

            /** PosToRedPacketType task */
            task: game1110053Type.ITaskType;
        }

        /** Represents a PosToRedPacketType. */
        class PosToRedPacketType implements IPosToRedPacketType {

            /**
             * Constructs a new PosToRedPacketType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110053Type.IPosToRedPacketType);

            /** PosToRedPacketType pos. */
            public pos: number;

            /** PosToRedPacketType task. */
            public task: game1110053Type.ITaskType;

            /**
             * Creates a new PosToRedPacketType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PosToRedPacketType instance
             */
            public static create(properties?: game1110053Type.IPosToRedPacketType): game1110053Type.PosToRedPacketType;

            /**
             * Encodes the specified PosToRedPacketType message. Does not implicitly {@link game1110053Type.PosToRedPacketType.verify|verify} messages.
             * @param message PosToRedPacketType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110053Type.IPosToRedPacketType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PosToRedPacketType message, length delimited. Does not implicitly {@link game1110053Type.PosToRedPacketType.verify|verify} messages.
             * @param message PosToRedPacketType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110053Type.IPosToRedPacketType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PosToRedPacketType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PosToRedPacketType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110053Type.PosToRedPacketType;

            /**
             * Decodes a PosToRedPacketType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PosToRedPacketType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110053Type.PosToRedPacketType;

            /**
             * Verifies a PosToRedPacketType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a PosToRedPacketType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PosToRedPacketType
             */
            public static fromObject(object: { [k: string]: any }): game1110053Type.PosToRedPacketType;

            /**
             * Creates a plain object from a PosToRedPacketType message. Also converts values to other types if specified.
             * @param message PosToRedPacketType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110053Type.PosToRedPacketType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PosToRedPacketType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1110059Type. */
    export class game1110059Type implements Igame1110059Type {

        /**
         * Constructs a new game1110059Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1110059Type);

        /** game1110059Type data. */
        public data?: (game1110059Type.Idata1110059Type | null);

        /** game1110059Type update. */
        public update: game1110059Type.Iupdate1110059Type[];

        /**
         * Creates a new game1110059Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1110059Type instance
         */
        public static create(properties?: Igame1110059Type): game1110059Type;

        /**
         * Encodes the specified game1110059Type message. Does not implicitly {@link game1110059Type.verify|verify} messages.
         * @param message game1110059Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1110059Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1110059Type message, length delimited. Does not implicitly {@link game1110059Type.verify|verify} messages.
         * @param message game1110059Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1110059Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1110059Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1110059Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110059Type;

        /**
         * Decodes a game1110059Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1110059Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110059Type;

        /**
         * Verifies a game1110059Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1110059Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1110059Type
         */
        public static fromObject(object: { [k: string]: any }): game1110059Type;

        /**
         * Creates a plain object from a game1110059Type message. Also converts values to other types if specified.
         * @param message game1110059Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1110059Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1110059Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1110059Type {

        /** Properties of a data1110059Type. */
        interface Idata1110059Type {

            /** data1110059Type randomElem */
            randomElem: number;

            /** data1110059Type changedPosList */
            changedPosList?: ((number | Long)[] | null);

            /** data1110059Type elemAndRateList */
            elemAndRateList?: (game1110059Type.IelemAndRateListType[] | null);

            /** data1110059Type addRateElemPosList */
            addRateElemPosList?: ((number | Long)[] | null);
        }

        /** Represents a data1110059Type. */
        class data1110059Type implements Idata1110059Type {

            /**
             * Constructs a new data1110059Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110059Type.Idata1110059Type);

            /** data1110059Type randomElem. */
            public randomElem: number;

            /** data1110059Type changedPosList. */
            public changedPosList: (number | Long)[];

            /** data1110059Type elemAndRateList. */
            public elemAndRateList: game1110059Type.IelemAndRateListType[];

            /** data1110059Type addRateElemPosList. */
            public addRateElemPosList: (number | Long)[];

            /**
             * Creates a new data1110059Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1110059Type instance
             */
            public static create(properties?: game1110059Type.Idata1110059Type): game1110059Type.data1110059Type;

            /**
             * Encodes the specified data1110059Type message. Does not implicitly {@link game1110059Type.data1110059Type.verify|verify} messages.
             * @param message data1110059Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110059Type.Idata1110059Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1110059Type message, length delimited. Does not implicitly {@link game1110059Type.data1110059Type.verify|verify} messages.
             * @param message data1110059Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110059Type.Idata1110059Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1110059Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1110059Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110059Type.data1110059Type;

            /**
             * Decodes a data1110059Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1110059Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110059Type.data1110059Type;

            /**
             * Verifies a data1110059Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1110059Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1110059Type
             */
            public static fromObject(object: { [k: string]: any }): game1110059Type.data1110059Type;

            /**
             * Creates a plain object from a data1110059Type message. Also converts values to other types if specified.
             * @param message data1110059Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110059Type.data1110059Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1110059Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1110059Type. */
        interface Iupdate1110059Type {

            /** update1110059Type index */
            index: number;

            /** update1110059Type randomElem */
            randomElem: number;

            /** update1110059Type changedPosList */
            changedPosList?: ((number | Long)[] | null);

            /** update1110059Type elemAndRateList */
            elemAndRateList?: (game1110059Type.IelemAndRateListType[] | null);

            /** update1110059Type addRateElemPosList */
            addRateElemPosList?: ((number | Long)[] | null);
        }

        /** Represents an update1110059Type. */
        class update1110059Type implements Iupdate1110059Type {

            /**
             * Constructs a new update1110059Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110059Type.Iupdate1110059Type);

            /** update1110059Type index. */
            public index: number;

            /** update1110059Type randomElem. */
            public randomElem: number;

            /** update1110059Type changedPosList. */
            public changedPosList: (number | Long)[];

            /** update1110059Type elemAndRateList. */
            public elemAndRateList: game1110059Type.IelemAndRateListType[];

            /** update1110059Type addRateElemPosList. */
            public addRateElemPosList: (number | Long)[];

            /**
             * Creates a new update1110059Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1110059Type instance
             */
            public static create(properties?: game1110059Type.Iupdate1110059Type): game1110059Type.update1110059Type;

            /**
             * Encodes the specified update1110059Type message. Does not implicitly {@link game1110059Type.update1110059Type.verify|verify} messages.
             * @param message update1110059Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110059Type.Iupdate1110059Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1110059Type message, length delimited. Does not implicitly {@link game1110059Type.update1110059Type.verify|verify} messages.
             * @param message update1110059Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110059Type.Iupdate1110059Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1110059Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1110059Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110059Type.update1110059Type;

            /**
             * Decodes an update1110059Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1110059Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110059Type.update1110059Type;

            /**
             * Verifies an update1110059Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1110059Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1110059Type
             */
            public static fromObject(object: { [k: string]: any }): game1110059Type.update1110059Type;

            /**
             * Creates a plain object from an update1110059Type message. Also converts values to other types if specified.
             * @param message update1110059Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110059Type.update1110059Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1110059Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an elemAndRateListType. */
        interface IelemAndRateListType {

            /** elemAndRateListType elem */
            elem: number;

            /** elemAndRateListType rate */
            rate: number;
        }

        /** Represents an elemAndRateListType. */
        class elemAndRateListType implements IelemAndRateListType {

            /**
             * Constructs a new elemAndRateListType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110059Type.IelemAndRateListType);

            /** elemAndRateListType elem. */
            public elem: number;

            /** elemAndRateListType rate. */
            public rate: number;

            /**
             * Creates a new elemAndRateListType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns elemAndRateListType instance
             */
            public static create(properties?: game1110059Type.IelemAndRateListType): game1110059Type.elemAndRateListType;

            /**
             * Encodes the specified elemAndRateListType message. Does not implicitly {@link game1110059Type.elemAndRateListType.verify|verify} messages.
             * @param message elemAndRateListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110059Type.IelemAndRateListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified elemAndRateListType message, length delimited. Does not implicitly {@link game1110059Type.elemAndRateListType.verify|verify} messages.
             * @param message elemAndRateListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110059Type.IelemAndRateListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an elemAndRateListType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns elemAndRateListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110059Type.elemAndRateListType;

            /**
             * Decodes an elemAndRateListType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns elemAndRateListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110059Type.elemAndRateListType;

            /**
             * Verifies an elemAndRateListType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an elemAndRateListType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns elemAndRateListType
             */
            public static fromObject(object: { [k: string]: any }): game1110059Type.elemAndRateListType;

            /**
             * Creates a plain object from an elemAndRateListType message. Also converts values to other types if specified.
             * @param message elemAndRateListType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110059Type.elemAndRateListType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this elemAndRateListType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1110064Type. */
    export class game1110064Type implements Igame1110064Type {

        /**
         * Constructs a new game1110064Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1110064Type);

        /** game1110064Type data. */
        public data?: (game1110064Type.Idata1110064Type | null);

        /** game1110064Type update. */
        public update: game1110064Type.Iupdate1110064Type[];

        /**
         * Creates a new game1110064Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1110064Type instance
         */
        public static create(properties?: Igame1110064Type): game1110064Type;

        /**
         * Encodes the specified game1110064Type message. Does not implicitly {@link game1110064Type.verify|verify} messages.
         * @param message game1110064Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1110064Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1110064Type message, length delimited. Does not implicitly {@link game1110064Type.verify|verify} messages.
         * @param message game1110064Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1110064Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1110064Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1110064Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110064Type;

        /**
         * Decodes a game1110064Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1110064Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110064Type;

        /**
         * Verifies a game1110064Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1110064Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1110064Type
         */
        public static fromObject(object: { [k: string]: any }): game1110064Type;

        /**
         * Creates a plain object from a game1110064Type message. Also converts values to other types if specified.
         * @param message game1110064Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1110064Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1110064Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1110064Type {

        /** Properties of a data1110064Type. */
        interface Idata1110064Type {

            /** data1110064Type normalBoxGrid */
            normalBoxGrid?: (INormalBoxGridType[] | null);

            /** data1110064Type freeFramePosList */
            freeFramePosList?: (number[] | null);

            /** data1110064Type freeElem */
            freeElem: number;
        }

        /** Represents a data1110064Type. */
        class data1110064Type implements Idata1110064Type {

            /**
             * Constructs a new data1110064Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110064Type.Idata1110064Type);

            /** data1110064Type normalBoxGrid. */
            public normalBoxGrid: INormalBoxGridType[];

            /** data1110064Type freeFramePosList. */
            public freeFramePosList: number[];

            /** data1110064Type freeElem. */
            public freeElem: number;

            /**
             * Creates a new data1110064Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1110064Type instance
             */
            public static create(properties?: game1110064Type.Idata1110064Type): game1110064Type.data1110064Type;

            /**
             * Encodes the specified data1110064Type message. Does not implicitly {@link game1110064Type.data1110064Type.verify|verify} messages.
             * @param message data1110064Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110064Type.Idata1110064Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1110064Type message, length delimited. Does not implicitly {@link game1110064Type.data1110064Type.verify|verify} messages.
             * @param message data1110064Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110064Type.Idata1110064Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1110064Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1110064Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110064Type.data1110064Type;

            /**
             * Decodes a data1110064Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1110064Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110064Type.data1110064Type;

            /**
             * Verifies a data1110064Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1110064Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1110064Type
             */
            public static fromObject(object: { [k: string]: any }): game1110064Type.data1110064Type;

            /**
             * Creates a plain object from a data1110064Type message. Also converts values to other types if specified.
             * @param message data1110064Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110064Type.data1110064Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1110064Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1110064Type. */
        interface Iupdate1110064Type {

            /** update1110064Type index */
            index: number;

            /** update1110064Type normalBoxGrid */
            normalBoxGrid?: (INormalBoxGridType[] | null);

            /** update1110064Type freeFramePosList */
            freeFramePosList?: (number[] | null);

            /** update1110064Type freeElem */
            freeElem: number;
        }

        /** Represents an update1110064Type. */
        class update1110064Type implements Iupdate1110064Type {

            /**
             * Constructs a new update1110064Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110064Type.Iupdate1110064Type);

            /** update1110064Type index. */
            public index: number;

            /** update1110064Type normalBoxGrid. */
            public normalBoxGrid: INormalBoxGridType[];

            /** update1110064Type freeFramePosList. */
            public freeFramePosList: number[];

            /** update1110064Type freeElem. */
            public freeElem: number;

            /**
             * Creates a new update1110064Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1110064Type instance
             */
            public static create(properties?: game1110064Type.Iupdate1110064Type): game1110064Type.update1110064Type;

            /**
             * Encodes the specified update1110064Type message. Does not implicitly {@link game1110064Type.update1110064Type.verify|verify} messages.
             * @param message update1110064Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110064Type.Iupdate1110064Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1110064Type message, length delimited. Does not implicitly {@link game1110064Type.update1110064Type.verify|verify} messages.
             * @param message update1110064Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110064Type.Iupdate1110064Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1110064Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1110064Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110064Type.update1110064Type;

            /**
             * Decodes an update1110064Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1110064Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110064Type.update1110064Type;

            /**
             * Verifies an update1110064Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1110064Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1110064Type
             */
            public static fromObject(object: { [k: string]: any }): game1110064Type.update1110064Type;

            /**
             * Creates a plain object from an update1110064Type message. Also converts values to other types if specified.
             * @param message update1110064Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110064Type.update1110064Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1110064Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a NormalBoxGridType. */
    export class NormalBoxGridType implements INormalBoxGridType {

        /**
         * Constructs a new NormalBoxGridType.
         * @param [properties] Properties to set
         */
        constructor(properties?: INormalBoxGridType);

        /** NormalBoxGridType pos. */
        public pos: number;

        /** NormalBoxGridType elem. */
        public elem: number;

        /**
         * Creates a new NormalBoxGridType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns NormalBoxGridType instance
         */
        public static create(properties?: INormalBoxGridType): NormalBoxGridType;

        /**
         * Encodes the specified NormalBoxGridType message. Does not implicitly {@link NormalBoxGridType.verify|verify} messages.
         * @param message NormalBoxGridType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: INormalBoxGridType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified NormalBoxGridType message, length delimited. Does not implicitly {@link NormalBoxGridType.verify|verify} messages.
         * @param message NormalBoxGridType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: INormalBoxGridType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a NormalBoxGridType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NormalBoxGridType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): NormalBoxGridType;

        /**
         * Decodes a NormalBoxGridType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns NormalBoxGridType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): NormalBoxGridType;

        /**
         * Verifies a NormalBoxGridType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a NormalBoxGridType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns NormalBoxGridType
         */
        public static fromObject(object: { [k: string]: any }): NormalBoxGridType;

        /**
         * Creates a plain object from a NormalBoxGridType message. Also converts values to other types if specified.
         * @param message NormalBoxGridType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NormalBoxGridType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this NormalBoxGridType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a game1110067Type. */
    export class game1110067Type implements Igame1110067Type {

        /**
         * Constructs a new game1110067Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1110067Type);

        /** game1110067Type data. */
        public data?: (game1110067Type.Idata1110067Type | null);

        /** game1110067Type update. */
        public update: game1110067Type.Iupdate1110067Type[];

        /**
         * Creates a new game1110067Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1110067Type instance
         */
        public static create(properties?: Igame1110067Type): game1110067Type;

        /**
         * Encodes the specified game1110067Type message. Does not implicitly {@link game1110067Type.verify|verify} messages.
         * @param message game1110067Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1110067Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1110067Type message, length delimited. Does not implicitly {@link game1110067Type.verify|verify} messages.
         * @param message game1110067Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1110067Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1110067Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1110067Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110067Type;

        /**
         * Decodes a game1110067Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1110067Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110067Type;

        /**
         * Verifies a game1110067Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1110067Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1110067Type
         */
        public static fromObject(object: { [k: string]: any }): game1110067Type;

        /**
         * Creates a plain object from a game1110067Type message. Also converts values to other types if specified.
         * @param message game1110067Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1110067Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1110067Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1110067Type {

        /** Properties of a data1110067Type. */
        interface Idata1110067Type {

            /** data1110067Type manToWildPos */
            manToWildPos?: (game1110067Type.IMan2PosType[] | null);

            /** data1110067Type freeFixPos */
            freeFixPos?: (number[] | null);
        }

        /** Represents a data1110067Type. */
        class data1110067Type implements Idata1110067Type {

            /**
             * Constructs a new data1110067Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110067Type.Idata1110067Type);

            /** data1110067Type manToWildPos. */
            public manToWildPos: game1110067Type.IMan2PosType[];

            /** data1110067Type freeFixPos. */
            public freeFixPos: number[];

            /**
             * Creates a new data1110067Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1110067Type instance
             */
            public static create(properties?: game1110067Type.Idata1110067Type): game1110067Type.data1110067Type;

            /**
             * Encodes the specified data1110067Type message. Does not implicitly {@link game1110067Type.data1110067Type.verify|verify} messages.
             * @param message data1110067Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110067Type.Idata1110067Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1110067Type message, length delimited. Does not implicitly {@link game1110067Type.data1110067Type.verify|verify} messages.
             * @param message data1110067Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110067Type.Idata1110067Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1110067Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1110067Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110067Type.data1110067Type;

            /**
             * Decodes a data1110067Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1110067Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110067Type.data1110067Type;

            /**
             * Verifies a data1110067Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1110067Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1110067Type
             */
            public static fromObject(object: { [k: string]: any }): game1110067Type.data1110067Type;

            /**
             * Creates a plain object from a data1110067Type message. Also converts values to other types if specified.
             * @param message data1110067Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110067Type.data1110067Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1110067Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1110067Type. */
        interface Iupdate1110067Type {

            /** update1110067Type index */
            index: number;

            /** update1110067Type manToWildPos */
            manToWildPos?: (game1110067Type.IMan2PosType[] | null);

            /** update1110067Type freeFixPos */
            freeFixPos?: (number[] | null);
        }

        /** Represents an update1110067Type. */
        class update1110067Type implements Iupdate1110067Type {

            /**
             * Constructs a new update1110067Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110067Type.Iupdate1110067Type);

            /** update1110067Type index. */
            public index: number;

            /** update1110067Type manToWildPos. */
            public manToWildPos: game1110067Type.IMan2PosType[];

            /** update1110067Type freeFixPos. */
            public freeFixPos: number[];

            /**
             * Creates a new update1110067Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1110067Type instance
             */
            public static create(properties?: game1110067Type.Iupdate1110067Type): game1110067Type.update1110067Type;

            /**
             * Encodes the specified update1110067Type message. Does not implicitly {@link game1110067Type.update1110067Type.verify|verify} messages.
             * @param message update1110067Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110067Type.Iupdate1110067Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1110067Type message, length delimited. Does not implicitly {@link game1110067Type.update1110067Type.verify|verify} messages.
             * @param message update1110067Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110067Type.Iupdate1110067Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1110067Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1110067Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110067Type.update1110067Type;

            /**
             * Decodes an update1110067Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1110067Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110067Type.update1110067Type;

            /**
             * Verifies an update1110067Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1110067Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1110067Type
             */
            public static fromObject(object: { [k: string]: any }): game1110067Type.update1110067Type;

            /**
             * Creates a plain object from an update1110067Type message. Also converts values to other types if specified.
             * @param message update1110067Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110067Type.update1110067Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1110067Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Man2PosType. */
        interface IMan2PosType {

            /** Man2PosType from */
            from: number;

            /** Man2PosType to */
            to: number;
        }

        /** Represents a Man2PosType. */
        class Man2PosType implements IMan2PosType {

            /**
             * Constructs a new Man2PosType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110067Type.IMan2PosType);

            /** Man2PosType from. */
            public from: number;

            /** Man2PosType to. */
            public to: number;

            /**
             * Creates a new Man2PosType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Man2PosType instance
             */
            public static create(properties?: game1110067Type.IMan2PosType): game1110067Type.Man2PosType;

            /**
             * Encodes the specified Man2PosType message. Does not implicitly {@link game1110067Type.Man2PosType.verify|verify} messages.
             * @param message Man2PosType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110067Type.IMan2PosType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Man2PosType message, length delimited. Does not implicitly {@link game1110067Type.Man2PosType.verify|verify} messages.
             * @param message Man2PosType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110067Type.IMan2PosType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Man2PosType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Man2PosType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110067Type.Man2PosType;

            /**
             * Decodes a Man2PosType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Man2PosType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110067Type.Man2PosType;

            /**
             * Verifies a Man2PosType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a Man2PosType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Man2PosType
             */
            public static fromObject(object: { [k: string]: any }): game1110067Type.Man2PosType;

            /**
             * Creates a plain object from a Man2PosType message. Also converts values to other types if specified.
             * @param message Man2PosType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110067Type.Man2PosType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Man2PosType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1110069Type. */
    export class game1110069Type implements Igame1110069Type {

        /**
         * Constructs a new game1110069Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1110069Type);

        /** game1110069Type data. */
        public data?: (game1110069Type.Idata1110069Type | null);

        /** game1110069Type update. */
        public update: game1110069Type.Iupdate1110069Type[];

        /**
         * Creates a new game1110069Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1110069Type instance
         */
        public static create(properties?: Igame1110069Type): game1110069Type;

        /**
         * Encodes the specified game1110069Type message. Does not implicitly {@link game1110069Type.verify|verify} messages.
         * @param message game1110069Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1110069Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1110069Type message, length delimited. Does not implicitly {@link game1110069Type.verify|verify} messages.
         * @param message game1110069Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1110069Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1110069Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1110069Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110069Type;

        /**
         * Decodes a game1110069Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1110069Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110069Type;

        /**
         * Verifies a game1110069Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1110069Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1110069Type
         */
        public static fromObject(object: { [k: string]: any }): game1110069Type;

        /**
         * Creates a plain object from a game1110069Type message. Also converts values to other types if specified.
         * @param message game1110069Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1110069Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1110069Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1110069Type {

        /** Properties of a data1110069Type. */
        interface Idata1110069Type {

            /** data1110069Type resultRateList */
            resultRateList?: (number[] | null);

            /** data1110069Type wildColumnList */
            wildColumnList?: (number[] | null);

            /** data1110069Type freeCardList */
            freeCardList?: (number[] | null);
        }

        /** Represents a data1110069Type. */
        class data1110069Type implements Idata1110069Type {

            /**
             * Constructs a new data1110069Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110069Type.Idata1110069Type);

            /** data1110069Type resultRateList. */
            public resultRateList: number[];

            /** data1110069Type wildColumnList. */
            public wildColumnList: number[];

            /** data1110069Type freeCardList. */
            public freeCardList: number[];

            /**
             * Creates a new data1110069Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1110069Type instance
             */
            public static create(properties?: game1110069Type.Idata1110069Type): game1110069Type.data1110069Type;

            /**
             * Encodes the specified data1110069Type message. Does not implicitly {@link game1110069Type.data1110069Type.verify|verify} messages.
             * @param message data1110069Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110069Type.Idata1110069Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1110069Type message, length delimited. Does not implicitly {@link game1110069Type.data1110069Type.verify|verify} messages.
             * @param message data1110069Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110069Type.Idata1110069Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1110069Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1110069Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110069Type.data1110069Type;

            /**
             * Decodes a data1110069Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1110069Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110069Type.data1110069Type;

            /**
             * Verifies a data1110069Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1110069Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1110069Type
             */
            public static fromObject(object: { [k: string]: any }): game1110069Type.data1110069Type;

            /**
             * Creates a plain object from a data1110069Type message. Also converts values to other types if specified.
             * @param message data1110069Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110069Type.data1110069Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1110069Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1110069Type. */
        interface Iupdate1110069Type {

            /** update1110069Type index */
            index: number;

            /** update1110069Type resultRateList */
            resultRateList?: (number[] | null);

            /** update1110069Type wildColumnList */
            wildColumnList?: (number[] | null);

            /** update1110069Type freeCardList */
            freeCardList?: (number[] | null);
        }

        /** Represents an update1110069Type. */
        class update1110069Type implements Iupdate1110069Type {

            /**
             * Constructs a new update1110069Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110069Type.Iupdate1110069Type);

            /** update1110069Type index. */
            public index: number;

            /** update1110069Type resultRateList. */
            public resultRateList: number[];

            /** update1110069Type wildColumnList. */
            public wildColumnList: number[];

            /** update1110069Type freeCardList. */
            public freeCardList: number[];

            /**
             * Creates a new update1110069Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1110069Type instance
             */
            public static create(properties?: game1110069Type.Iupdate1110069Type): game1110069Type.update1110069Type;

            /**
             * Encodes the specified update1110069Type message. Does not implicitly {@link game1110069Type.update1110069Type.verify|verify} messages.
             * @param message update1110069Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110069Type.Iupdate1110069Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1110069Type message, length delimited. Does not implicitly {@link game1110069Type.update1110069Type.verify|verify} messages.
             * @param message update1110069Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110069Type.Iupdate1110069Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1110069Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1110069Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110069Type.update1110069Type;

            /**
             * Decodes an update1110069Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1110069Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110069Type.update1110069Type;

            /**
             * Verifies an update1110069Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1110069Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1110069Type
             */
            public static fromObject(object: { [k: string]: any }): game1110069Type.update1110069Type;

            /**
             * Creates a plain object from an update1110069Type message. Also converts values to other types if specified.
             * @param message update1110069Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110069Type.update1110069Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1110069Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1110070Type. */
    export class game1110070Type implements Igame1110070Type {

        /**
         * Constructs a new game1110070Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1110070Type);

        /** game1110070Type data. */
        public data?: (game1110070Type.Idata1110070Type | null);

        /** game1110070Type update. */
        public update: game1110070Type.Iupdate1110070Type[];

        /**
         * Creates a new game1110070Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1110070Type instance
         */
        public static create(properties?: Igame1110070Type): game1110070Type;

        /**
         * Encodes the specified game1110070Type message. Does not implicitly {@link game1110070Type.verify|verify} messages.
         * @param message game1110070Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1110070Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1110070Type message, length delimited. Does not implicitly {@link game1110070Type.verify|verify} messages.
         * @param message game1110070Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1110070Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1110070Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1110070Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110070Type;

        /**
         * Decodes a game1110070Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1110070Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110070Type;

        /**
         * Verifies a game1110070Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1110070Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1110070Type
         */
        public static fromObject(object: { [k: string]: any }): game1110070Type;

        /**
         * Creates a plain object from a game1110070Type message. Also converts values to other types if specified.
         * @param message game1110070Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1110070Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1110070Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1110070Type {

        /** Properties of a data1110070Type. */
        interface Idata1110070Type {

            /** data1110070Type beforeMuralLineList */
            beforeMuralLineList?: (game1110070Type.ImuralLineType[] | null);

            /** data1110070Type afterMuralLineList */
            afterMuralLineList?: (game1110070Type.ImuralLineType[] | null);

            /** data1110070Type lineRateList */
            lineRateList?: (game1110070Type.ILineRateType[] | null);
        }

        /** Represents a data1110070Type. */
        class data1110070Type implements Idata1110070Type {

            /**
             * Constructs a new data1110070Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110070Type.Idata1110070Type);

            /** data1110070Type beforeMuralLineList. */
            public beforeMuralLineList: game1110070Type.ImuralLineType[];

            /** data1110070Type afterMuralLineList. */
            public afterMuralLineList: game1110070Type.ImuralLineType[];

            /** data1110070Type lineRateList. */
            public lineRateList: game1110070Type.ILineRateType[];

            /**
             * Creates a new data1110070Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1110070Type instance
             */
            public static create(properties?: game1110070Type.Idata1110070Type): game1110070Type.data1110070Type;

            /**
             * Encodes the specified data1110070Type message. Does not implicitly {@link game1110070Type.data1110070Type.verify|verify} messages.
             * @param message data1110070Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110070Type.Idata1110070Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1110070Type message, length delimited. Does not implicitly {@link game1110070Type.data1110070Type.verify|verify} messages.
             * @param message data1110070Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110070Type.Idata1110070Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1110070Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1110070Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110070Type.data1110070Type;

            /**
             * Decodes a data1110070Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1110070Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110070Type.data1110070Type;

            /**
             * Verifies a data1110070Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1110070Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1110070Type
             */
            public static fromObject(object: { [k: string]: any }): game1110070Type.data1110070Type;

            /**
             * Creates a plain object from a data1110070Type message. Also converts values to other types if specified.
             * @param message data1110070Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110070Type.data1110070Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1110070Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1110070Type. */
        interface Iupdate1110070Type {

            /** update1110070Type index */
            index: number;

            /** update1110070Type beforeMuralLineList */
            beforeMuralLineList?: (game1110070Type.ImuralLineType[] | null);

            /** update1110070Type afterMuralLineList */
            afterMuralLineList?: (game1110070Type.ImuralLineType[] | null);

            /** update1110070Type lineRateList */
            lineRateList?: (game1110070Type.ILineRateType[] | null);
        }

        /** Represents an update1110070Type. */
        class update1110070Type implements Iupdate1110070Type {

            /**
             * Constructs a new update1110070Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110070Type.Iupdate1110070Type);

            /** update1110070Type index. */
            public index: number;

            /** update1110070Type beforeMuralLineList. */
            public beforeMuralLineList: game1110070Type.ImuralLineType[];

            /** update1110070Type afterMuralLineList. */
            public afterMuralLineList: game1110070Type.ImuralLineType[];

            /** update1110070Type lineRateList. */
            public lineRateList: game1110070Type.ILineRateType[];

            /**
             * Creates a new update1110070Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1110070Type instance
             */
            public static create(properties?: game1110070Type.Iupdate1110070Type): game1110070Type.update1110070Type;

            /**
             * Encodes the specified update1110070Type message. Does not implicitly {@link game1110070Type.update1110070Type.verify|verify} messages.
             * @param message update1110070Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110070Type.Iupdate1110070Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1110070Type message, length delimited. Does not implicitly {@link game1110070Type.update1110070Type.verify|verify} messages.
             * @param message update1110070Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110070Type.Iupdate1110070Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1110070Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1110070Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110070Type.update1110070Type;

            /**
             * Decodes an update1110070Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1110070Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110070Type.update1110070Type;

            /**
             * Verifies an update1110070Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1110070Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1110070Type
             */
            public static fromObject(object: { [k: string]: any }): game1110070Type.update1110070Type;

            /**
             * Creates a plain object from an update1110070Type message. Also converts values to other types if specified.
             * @param message update1110070Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110070Type.update1110070Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1110070Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a muralLineType. */
        interface ImuralLineType {

            /** muralLineType lineId */
            lineId: number;

            /** muralLineType gridList */
            gridList?: (game1110070Type.ImuralGridType[] | null);
        }

        /** Represents a muralLineType. */
        class muralLineType implements ImuralLineType {

            /**
             * Constructs a new muralLineType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110070Type.ImuralLineType);

            /** muralLineType lineId. */
            public lineId: number;

            /** muralLineType gridList. */
            public gridList: game1110070Type.ImuralGridType[];

            /**
             * Creates a new muralLineType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns muralLineType instance
             */
            public static create(properties?: game1110070Type.ImuralLineType): game1110070Type.muralLineType;

            /**
             * Encodes the specified muralLineType message. Does not implicitly {@link game1110070Type.muralLineType.verify|verify} messages.
             * @param message muralLineType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110070Type.ImuralLineType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified muralLineType message, length delimited. Does not implicitly {@link game1110070Type.muralLineType.verify|verify} messages.
             * @param message muralLineType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110070Type.ImuralLineType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a muralLineType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns muralLineType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110070Type.muralLineType;

            /**
             * Decodes a muralLineType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns muralLineType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110070Type.muralLineType;

            /**
             * Verifies a muralLineType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a muralLineType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns muralLineType
             */
            public static fromObject(object: { [k: string]: any }): game1110070Type.muralLineType;

            /**
             * Creates a plain object from a muralLineType message. Also converts values to other types if specified.
             * @param message muralLineType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110070Type.muralLineType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this muralLineType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a LineRateType. */
        interface ILineRateType {

            /** LineRateType lineId */
            lineId: number;

            /** LineRateType rate */
            rate: number;
        }

        /** Represents a LineRateType. */
        class LineRateType implements ILineRateType {

            /**
             * Constructs a new LineRateType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110070Type.ILineRateType);

            /** LineRateType lineId. */
            public lineId: number;

            /** LineRateType rate. */
            public rate: number;

            /**
             * Creates a new LineRateType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LineRateType instance
             */
            public static create(properties?: game1110070Type.ILineRateType): game1110070Type.LineRateType;

            /**
             * Encodes the specified LineRateType message. Does not implicitly {@link game1110070Type.LineRateType.verify|verify} messages.
             * @param message LineRateType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110070Type.ILineRateType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LineRateType message, length delimited. Does not implicitly {@link game1110070Type.LineRateType.verify|verify} messages.
             * @param message LineRateType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110070Type.ILineRateType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LineRateType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LineRateType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110070Type.LineRateType;

            /**
             * Decodes a LineRateType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LineRateType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110070Type.LineRateType;

            /**
             * Verifies a LineRateType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a LineRateType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LineRateType
             */
            public static fromObject(object: { [k: string]: any }): game1110070Type.LineRateType;

            /**
             * Creates a plain object from a LineRateType message. Also converts values to other types if specified.
             * @param message LineRateType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110070Type.LineRateType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LineRateType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a muralGridType. */
        interface ImuralGridType {

            /** muralGridType pos */
            pos: number;

            /** muralGridType elem */
            elem: number;

            /** muralGridType bright */
            bright: number;
        }

        /** Represents a muralGridType. */
        class muralGridType implements ImuralGridType {

            /**
             * Constructs a new muralGridType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110070Type.ImuralGridType);

            /** muralGridType pos. */
            public pos: number;

            /** muralGridType elem. */
            public elem: number;

            /** muralGridType bright. */
            public bright: number;

            /**
             * Creates a new muralGridType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns muralGridType instance
             */
            public static create(properties?: game1110070Type.ImuralGridType): game1110070Type.muralGridType;

            /**
             * Encodes the specified muralGridType message. Does not implicitly {@link game1110070Type.muralGridType.verify|verify} messages.
             * @param message muralGridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110070Type.ImuralGridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified muralGridType message, length delimited. Does not implicitly {@link game1110070Type.muralGridType.verify|verify} messages.
             * @param message muralGridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110070Type.ImuralGridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a muralGridType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns muralGridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110070Type.muralGridType;

            /**
             * Decodes a muralGridType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns muralGridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110070Type.muralGridType;

            /**
             * Verifies a muralGridType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a muralGridType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns muralGridType
             */
            public static fromObject(object: { [k: string]: any }): game1110070Type.muralGridType;

            /**
             * Creates a plain object from a muralGridType message. Also converts values to other types if specified.
             * @param message muralGridType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110070Type.muralGridType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this muralGridType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1110071Type. */
    export class game1110071Type implements Igame1110071Type {

        /**
         * Constructs a new game1110071Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1110071Type);

        /** game1110071Type data. */
        public data?: (game1110071Type.Idata1110071Type | null);

        /** game1110071Type update. */
        public update: game1110071Type.Iupdate1110071Type[];

        /**
         * Creates a new game1110071Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1110071Type instance
         */
        public static create(properties?: Igame1110071Type): game1110071Type;

        /**
         * Encodes the specified game1110071Type message. Does not implicitly {@link game1110071Type.verify|verify} messages.
         * @param message game1110071Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1110071Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1110071Type message, length delimited. Does not implicitly {@link game1110071Type.verify|verify} messages.
         * @param message game1110071Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1110071Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1110071Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1110071Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110071Type;

        /**
         * Decodes a game1110071Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1110071Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110071Type;

        /**
         * Verifies a game1110071Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1110071Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1110071Type
         */
        public static fromObject(object: { [k: string]: any }): game1110071Type;

        /**
         * Creates a plain object from a game1110071Type message. Also converts values to other types if specified.
         * @param message game1110071Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1110071Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1110071Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1110071Type {

        /** Properties of a data1110071Type. */
        interface Idata1110071Type {

            /** data1110071Type troubleMakerGrid */
            troubleMakerGrid?: (game1110071Type.IgridType[] | null);

            /** data1110071Type curTimeMoveToGrid */
            curTimeMoveToGrid?: (game1110071Type.IgridType[] | null);

            /** data1110071Type lastTimeFreeFixGrid */
            lastTimeFreeFixGrid?: (game1110071Type.IgridType[] | null);
        }

        /** Represents a data1110071Type. */
        class data1110071Type implements Idata1110071Type {

            /**
             * Constructs a new data1110071Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110071Type.Idata1110071Type);

            /** data1110071Type troubleMakerGrid. */
            public troubleMakerGrid: game1110071Type.IgridType[];

            /** data1110071Type curTimeMoveToGrid. */
            public curTimeMoveToGrid: game1110071Type.IgridType[];

            /** data1110071Type lastTimeFreeFixGrid. */
            public lastTimeFreeFixGrid: game1110071Type.IgridType[];

            /**
             * Creates a new data1110071Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1110071Type instance
             */
            public static create(properties?: game1110071Type.Idata1110071Type): game1110071Type.data1110071Type;

            /**
             * Encodes the specified data1110071Type message. Does not implicitly {@link game1110071Type.data1110071Type.verify|verify} messages.
             * @param message data1110071Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110071Type.Idata1110071Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1110071Type message, length delimited. Does not implicitly {@link game1110071Type.data1110071Type.verify|verify} messages.
             * @param message data1110071Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110071Type.Idata1110071Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1110071Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1110071Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110071Type.data1110071Type;

            /**
             * Decodes a data1110071Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1110071Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110071Type.data1110071Type;

            /**
             * Verifies a data1110071Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1110071Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1110071Type
             */
            public static fromObject(object: { [k: string]: any }): game1110071Type.data1110071Type;

            /**
             * Creates a plain object from a data1110071Type message. Also converts values to other types if specified.
             * @param message data1110071Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110071Type.data1110071Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1110071Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1110071Type. */
        interface Iupdate1110071Type {

            /** update1110071Type index */
            index: number;

            /** update1110071Type troubleMakerGrid */
            troubleMakerGrid?: (game1110071Type.IgridType[] | null);

            /** update1110071Type curTimeMoveToGrid */
            curTimeMoveToGrid?: (game1110071Type.IgridType[] | null);

            /** update1110071Type lastTimeFreeFixGrid */
            lastTimeFreeFixGrid?: (game1110071Type.IgridType[] | null);
        }

        /** Represents an update1110071Type. */
        class update1110071Type implements Iupdate1110071Type {

            /**
             * Constructs a new update1110071Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110071Type.Iupdate1110071Type);

            /** update1110071Type index. */
            public index: number;

            /** update1110071Type troubleMakerGrid. */
            public troubleMakerGrid: game1110071Type.IgridType[];

            /** update1110071Type curTimeMoveToGrid. */
            public curTimeMoveToGrid: game1110071Type.IgridType[];

            /** update1110071Type lastTimeFreeFixGrid. */
            public lastTimeFreeFixGrid: game1110071Type.IgridType[];

            /**
             * Creates a new update1110071Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1110071Type instance
             */
            public static create(properties?: game1110071Type.Iupdate1110071Type): game1110071Type.update1110071Type;

            /**
             * Encodes the specified update1110071Type message. Does not implicitly {@link game1110071Type.update1110071Type.verify|verify} messages.
             * @param message update1110071Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110071Type.Iupdate1110071Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1110071Type message, length delimited. Does not implicitly {@link game1110071Type.update1110071Type.verify|verify} messages.
             * @param message update1110071Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110071Type.Iupdate1110071Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1110071Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1110071Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110071Type.update1110071Type;

            /**
             * Decodes an update1110071Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1110071Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110071Type.update1110071Type;

            /**
             * Verifies an update1110071Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1110071Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1110071Type
             */
            public static fromObject(object: { [k: string]: any }): game1110071Type.update1110071Type;

            /**
             * Creates a plain object from an update1110071Type message. Also converts values to other types if specified.
             * @param message update1110071Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110071Type.update1110071Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1110071Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a gridType. */
        interface IgridType {

            /** gridType pos */
            pos: number;

            /** gridType elem */
            elem: number;
        }

        /** Represents a gridType. */
        class gridType implements IgridType {

            /**
             * Constructs a new gridType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110071Type.IgridType);

            /** gridType pos. */
            public pos: number;

            /** gridType elem. */
            public elem: number;

            /**
             * Creates a new gridType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns gridType instance
             */
            public static create(properties?: game1110071Type.IgridType): game1110071Type.gridType;

            /**
             * Encodes the specified gridType message. Does not implicitly {@link game1110071Type.gridType.verify|verify} messages.
             * @param message gridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110071Type.IgridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified gridType message, length delimited. Does not implicitly {@link game1110071Type.gridType.verify|verify} messages.
             * @param message gridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110071Type.IgridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a gridType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns gridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110071Type.gridType;

            /**
             * Decodes a gridType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns gridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110071Type.gridType;

            /**
             * Verifies a gridType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a gridType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns gridType
             */
            public static fromObject(object: { [k: string]: any }): game1110071Type.gridType;

            /**
             * Creates a plain object from a gridType message. Also converts values to other types if specified.
             * @param message gridType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110071Type.gridType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this gridType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1110076Type. */
    export class game1110076Type implements Igame1110076Type {

        /**
         * Constructs a new game1110076Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1110076Type);

        /** game1110076Type data. */
        public data?: (game1110076Type.Idata1110076Type | null);

        /** game1110076Type update. */
        public update: game1110076Type.Iupdate1110076Type[];

        /**
         * Creates a new game1110076Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1110076Type instance
         */
        public static create(properties?: Igame1110076Type): game1110076Type;

        /**
         * Encodes the specified game1110076Type message. Does not implicitly {@link game1110076Type.verify|verify} messages.
         * @param message game1110076Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1110076Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1110076Type message, length delimited. Does not implicitly {@link game1110076Type.verify|verify} messages.
         * @param message game1110076Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1110076Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1110076Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1110076Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110076Type;

        /**
         * Decodes a game1110076Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1110076Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110076Type;

        /**
         * Verifies a game1110076Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1110076Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1110076Type
         */
        public static fromObject(object: { [k: string]: any }): game1110076Type;

        /**
         * Creates a plain object from a game1110076Type message. Also converts values to other types if specified.
         * @param message game1110076Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1110076Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1110076Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1110076Type {

        /** Properties of a data1110076Type. */
        interface Idata1110076Type {

            /** data1110076Type fixWildGrid */
            fixWildGrid?: (game1110076Type.IgridType[] | null);

            /** data1110076Type newFixWildGrid */
            newFixWildGrid?: (game1110076Type.IgridType[] | null);

            /** data1110076Type elemMove */
            elemMove?: (game1110076Type.IelemMoveType[] | null);
        }

        /** Represents a data1110076Type. */
        class data1110076Type implements Idata1110076Type {

            /**
             * Constructs a new data1110076Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110076Type.Idata1110076Type);

            /** data1110076Type fixWildGrid. */
            public fixWildGrid: game1110076Type.IgridType[];

            /** data1110076Type newFixWildGrid. */
            public newFixWildGrid: game1110076Type.IgridType[];

            /** data1110076Type elemMove. */
            public elemMove: game1110076Type.IelemMoveType[];

            /**
             * Creates a new data1110076Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1110076Type instance
             */
            public static create(properties?: game1110076Type.Idata1110076Type): game1110076Type.data1110076Type;

            /**
             * Encodes the specified data1110076Type message. Does not implicitly {@link game1110076Type.data1110076Type.verify|verify} messages.
             * @param message data1110076Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110076Type.Idata1110076Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1110076Type message, length delimited. Does not implicitly {@link game1110076Type.data1110076Type.verify|verify} messages.
             * @param message data1110076Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110076Type.Idata1110076Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1110076Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1110076Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110076Type.data1110076Type;

            /**
             * Decodes a data1110076Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1110076Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110076Type.data1110076Type;

            /**
             * Verifies a data1110076Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1110076Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1110076Type
             */
            public static fromObject(object: { [k: string]: any }): game1110076Type.data1110076Type;

            /**
             * Creates a plain object from a data1110076Type message. Also converts values to other types if specified.
             * @param message data1110076Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110076Type.data1110076Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1110076Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1110076Type. */
        interface Iupdate1110076Type {

            /** update1110076Type index */
            index: number;

            /** update1110076Type fixWildGrid */
            fixWildGrid?: (game1110076Type.IgridType[] | null);

            /** update1110076Type newFixWildGrid */
            newFixWildGrid?: (game1110076Type.IgridType[] | null);

            /** update1110076Type elemMove */
            elemMove?: (game1110076Type.IelemMoveType[] | null);
        }

        /** Represents an update1110076Type. */
        class update1110076Type implements Iupdate1110076Type {

            /**
             * Constructs a new update1110076Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110076Type.Iupdate1110076Type);

            /** update1110076Type index. */
            public index: number;

            /** update1110076Type fixWildGrid. */
            public fixWildGrid: game1110076Type.IgridType[];

            /** update1110076Type newFixWildGrid. */
            public newFixWildGrid: game1110076Type.IgridType[];

            /** update1110076Type elemMove. */
            public elemMove: game1110076Type.IelemMoveType[];

            /**
             * Creates a new update1110076Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1110076Type instance
             */
            public static create(properties?: game1110076Type.Iupdate1110076Type): game1110076Type.update1110076Type;

            /**
             * Encodes the specified update1110076Type message. Does not implicitly {@link game1110076Type.update1110076Type.verify|verify} messages.
             * @param message update1110076Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110076Type.Iupdate1110076Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1110076Type message, length delimited. Does not implicitly {@link game1110076Type.update1110076Type.verify|verify} messages.
             * @param message update1110076Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110076Type.Iupdate1110076Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1110076Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1110076Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110076Type.update1110076Type;

            /**
             * Decodes an update1110076Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1110076Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110076Type.update1110076Type;

            /**
             * Verifies an update1110076Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1110076Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1110076Type
             */
            public static fromObject(object: { [k: string]: any }): game1110076Type.update1110076Type;

            /**
             * Creates a plain object from an update1110076Type message. Also converts values to other types if specified.
             * @param message update1110076Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110076Type.update1110076Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1110076Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an elemMoveType. */
        interface IelemMoveType {

            /** elemMoveType elem */
            elem: number;

            /** elemMoveType move */
            move: game1110076Type.ImoveType;
        }

        /** Represents an elemMoveType. */
        class elemMoveType implements IelemMoveType {

            /**
             * Constructs a new elemMoveType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110076Type.IelemMoveType);

            /** elemMoveType elem. */
            public elem: number;

            /** elemMoveType move. */
            public move: game1110076Type.ImoveType;

            /**
             * Creates a new elemMoveType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns elemMoveType instance
             */
            public static create(properties?: game1110076Type.IelemMoveType): game1110076Type.elemMoveType;

            /**
             * Encodes the specified elemMoveType message. Does not implicitly {@link game1110076Type.elemMoveType.verify|verify} messages.
             * @param message elemMoveType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110076Type.IelemMoveType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified elemMoveType message, length delimited. Does not implicitly {@link game1110076Type.elemMoveType.verify|verify} messages.
             * @param message elemMoveType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110076Type.IelemMoveType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an elemMoveType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns elemMoveType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110076Type.elemMoveType;

            /**
             * Decodes an elemMoveType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns elemMoveType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110076Type.elemMoveType;

            /**
             * Verifies an elemMoveType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an elemMoveType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns elemMoveType
             */
            public static fromObject(object: { [k: string]: any }): game1110076Type.elemMoveType;

            /**
             * Creates a plain object from an elemMoveType message. Also converts values to other types if specified.
             * @param message elemMoveType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110076Type.elemMoveType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this elemMoveType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a moveType. */
        interface ImoveType {

            /** moveType from */
            from: number;

            /** moveType to */
            to: number;
        }

        /** Represents a moveType. */
        class moveType implements ImoveType {

            /**
             * Constructs a new moveType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110076Type.ImoveType);

            /** moveType from. */
            public from: number;

            /** moveType to. */
            public to: number;

            /**
             * Creates a new moveType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns moveType instance
             */
            public static create(properties?: game1110076Type.ImoveType): game1110076Type.moveType;

            /**
             * Encodes the specified moveType message. Does not implicitly {@link game1110076Type.moveType.verify|verify} messages.
             * @param message moveType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110076Type.ImoveType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified moveType message, length delimited. Does not implicitly {@link game1110076Type.moveType.verify|verify} messages.
             * @param message moveType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110076Type.ImoveType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a moveType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns moveType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110076Type.moveType;

            /**
             * Decodes a moveType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns moveType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110076Type.moveType;

            /**
             * Verifies a moveType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a moveType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns moveType
             */
            public static fromObject(object: { [k: string]: any }): game1110076Type.moveType;

            /**
             * Creates a plain object from a moveType message. Also converts values to other types if specified.
             * @param message moveType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110076Type.moveType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this moveType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a gridType. */
        interface IgridType {

            /** gridType pos */
            pos: number;

            /** gridType elem */
            elem: number;
        }

        /** Represents a gridType. */
        class gridType implements IgridType {

            /**
             * Constructs a new gridType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110076Type.IgridType);

            /** gridType pos. */
            public pos: number;

            /** gridType elem. */
            public elem: number;

            /**
             * Creates a new gridType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns gridType instance
             */
            public static create(properties?: game1110076Type.IgridType): game1110076Type.gridType;

            /**
             * Encodes the specified gridType message. Does not implicitly {@link game1110076Type.gridType.verify|verify} messages.
             * @param message gridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110076Type.IgridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified gridType message, length delimited. Does not implicitly {@link game1110076Type.gridType.verify|verify} messages.
             * @param message gridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110076Type.IgridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a gridType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns gridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110076Type.gridType;

            /**
             * Decodes a gridType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns gridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110076Type.gridType;

            /**
             * Verifies a gridType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a gridType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns gridType
             */
            public static fromObject(object: { [k: string]: any }): game1110076Type.gridType;

            /**
             * Creates a plain object from a gridType message. Also converts values to other types if specified.
             * @param message gridType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110076Type.gridType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this gridType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1110080Type. */
    export class game1110080Type implements Igame1110080Type {

        /**
         * Constructs a new game1110080Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1110080Type);

        /** game1110080Type data. */
        public data?: (game1110080Type.Idata1110080Type | null);

        /** game1110080Type update. */
        public update: game1110080Type.Iupdate1110080Type[];

        /**
         * Creates a new game1110080Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1110080Type instance
         */
        public static create(properties?: Igame1110080Type): game1110080Type;

        /**
         * Encodes the specified game1110080Type message. Does not implicitly {@link game1110080Type.verify|verify} messages.
         * @param message game1110080Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1110080Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1110080Type message, length delimited. Does not implicitly {@link game1110080Type.verify|verify} messages.
         * @param message game1110080Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1110080Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1110080Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1110080Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110080Type;

        /**
         * Decodes a game1110080Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1110080Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110080Type;

        /**
         * Verifies a game1110080Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1110080Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1110080Type
         */
        public static fromObject(object: { [k: string]: any }): game1110080Type;

        /**
         * Creates a plain object from a game1110080Type message. Also converts values to other types if specified.
         * @param message game1110080Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1110080Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1110080Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1110080Type {

        /** Properties of a data1110080Type. */
        interface Idata1110080Type {

            /** data1110080Type optElem */
            optElem: number;

            /** data1110080Type resultList */
            resultList?: (IspinResultType[] | null);

            /** data1110080Type blankPos */
            blankPos?: (number[] | null);

            /** data1110080Type repGrid */
            repGrid?: (game1110080Type.IgridType[] | null);
        }

        /** Represents a data1110080Type. */
        class data1110080Type implements Idata1110080Type {

            /**
             * Constructs a new data1110080Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110080Type.Idata1110080Type);

            /** data1110080Type optElem. */
            public optElem: number;

            /** data1110080Type resultList. */
            public resultList: IspinResultType[];

            /** data1110080Type blankPos. */
            public blankPos: number[];

            /** data1110080Type repGrid. */
            public repGrid: game1110080Type.IgridType[];

            /**
             * Creates a new data1110080Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1110080Type instance
             */
            public static create(properties?: game1110080Type.Idata1110080Type): game1110080Type.data1110080Type;

            /**
             * Encodes the specified data1110080Type message. Does not implicitly {@link game1110080Type.data1110080Type.verify|verify} messages.
             * @param message data1110080Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110080Type.Idata1110080Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1110080Type message, length delimited. Does not implicitly {@link game1110080Type.data1110080Type.verify|verify} messages.
             * @param message data1110080Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110080Type.Idata1110080Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1110080Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1110080Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110080Type.data1110080Type;

            /**
             * Decodes a data1110080Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1110080Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110080Type.data1110080Type;

            /**
             * Verifies a data1110080Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1110080Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1110080Type
             */
            public static fromObject(object: { [k: string]: any }): game1110080Type.data1110080Type;

            /**
             * Creates a plain object from a data1110080Type message. Also converts values to other types if specified.
             * @param message data1110080Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110080Type.data1110080Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1110080Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1110080Type. */
        interface Iupdate1110080Type {

            /** update1110080Type index */
            index: number;

            /** update1110080Type optElem */
            optElem: number;

            /** update1110080Type resultList */
            resultList?: (IspinResultType[] | null);

            /** update1110080Type blankPos */
            blankPos?: (number[] | null);

            /** update1110080Type repGrid */
            repGrid?: (game1110080Type.IgridType[] | null);
        }

        /** Represents an update1110080Type. */
        class update1110080Type implements Iupdate1110080Type {

            /**
             * Constructs a new update1110080Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110080Type.Iupdate1110080Type);

            /** update1110080Type index. */
            public index: number;

            /** update1110080Type optElem. */
            public optElem: number;

            /** update1110080Type resultList. */
            public resultList: IspinResultType[];

            /** update1110080Type blankPos. */
            public blankPos: number[];

            /** update1110080Type repGrid. */
            public repGrid: game1110080Type.IgridType[];

            /**
             * Creates a new update1110080Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1110080Type instance
             */
            public static create(properties?: game1110080Type.Iupdate1110080Type): game1110080Type.update1110080Type;

            /**
             * Encodes the specified update1110080Type message. Does not implicitly {@link game1110080Type.update1110080Type.verify|verify} messages.
             * @param message update1110080Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110080Type.Iupdate1110080Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1110080Type message, length delimited. Does not implicitly {@link game1110080Type.update1110080Type.verify|verify} messages.
             * @param message update1110080Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110080Type.Iupdate1110080Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1110080Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1110080Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110080Type.update1110080Type;

            /**
             * Decodes an update1110080Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1110080Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110080Type.update1110080Type;

            /**
             * Verifies an update1110080Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1110080Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1110080Type
             */
            public static fromObject(object: { [k: string]: any }): game1110080Type.update1110080Type;

            /**
             * Creates a plain object from an update1110080Type message. Also converts values to other types if specified.
             * @param message update1110080Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110080Type.update1110080Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1110080Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a gridType. */
        interface IgridType {

            /** gridType pos */
            pos: number;

            /** gridType elem */
            elem: number;
        }

        /** Represents a gridType. */
        class gridType implements IgridType {

            /**
             * Constructs a new gridType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110080Type.IgridType);

            /** gridType pos. */
            public pos: number;

            /** gridType elem. */
            public elem: number;

            /**
             * Creates a new gridType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns gridType instance
             */
            public static create(properties?: game1110080Type.IgridType): game1110080Type.gridType;

            /**
             * Encodes the specified gridType message. Does not implicitly {@link game1110080Type.gridType.verify|verify} messages.
             * @param message gridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110080Type.IgridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified gridType message, length delimited. Does not implicitly {@link game1110080Type.gridType.verify|verify} messages.
             * @param message gridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110080Type.IgridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a gridType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns gridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110080Type.gridType;

            /**
             * Decodes a gridType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns gridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110080Type.gridType;

            /**
             * Verifies a gridType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a gridType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns gridType
             */
            public static fromObject(object: { [k: string]: any }): game1110080Type.gridType;

            /**
             * Creates a plain object from a gridType message. Also converts values to other types if specified.
             * @param message gridType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110080Type.gridType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this gridType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1110135Type. */
    export class game1110135Type implements Igame1110135Type {

        /**
         * Constructs a new game1110135Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1110135Type);

        /** game1110135Type data. */
        public data?: (game1110135Type.Idata1110135Type | null);

        /** game1110135Type update. */
        public update: game1110135Type.Iupdate1110135Type[];

        /**
         * Creates a new game1110135Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1110135Type instance
         */
        public static create(properties?: Igame1110135Type): game1110135Type;

        /**
         * Encodes the specified game1110135Type message. Does not implicitly {@link game1110135Type.verify|verify} messages.
         * @param message game1110135Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1110135Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1110135Type message, length delimited. Does not implicitly {@link game1110135Type.verify|verify} messages.
         * @param message game1110135Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1110135Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1110135Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1110135Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110135Type;

        /**
         * Decodes a game1110135Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1110135Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110135Type;

        /**
         * Verifies a game1110135Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1110135Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1110135Type
         */
        public static fromObject(object: { [k: string]: any }): game1110135Type;

        /**
         * Creates a plain object from a game1110135Type message. Also converts values to other types if specified.
         * @param message game1110135Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1110135Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1110135Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1110135Type {

        /** Properties of a data1110135Type. */
        interface Idata1110135Type {

            /** data1110135Type rateLists */
            rateLists?: (number[] | null);
        }

        /** Represents a data1110135Type. */
        class data1110135Type implements Idata1110135Type {

            /**
             * Constructs a new data1110135Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110135Type.Idata1110135Type);

            /** data1110135Type rateLists. */
            public rateLists: number[];

            /**
             * Creates a new data1110135Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1110135Type instance
             */
            public static create(properties?: game1110135Type.Idata1110135Type): game1110135Type.data1110135Type;

            /**
             * Encodes the specified data1110135Type message. Does not implicitly {@link game1110135Type.data1110135Type.verify|verify} messages.
             * @param message data1110135Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110135Type.Idata1110135Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1110135Type message, length delimited. Does not implicitly {@link game1110135Type.data1110135Type.verify|verify} messages.
             * @param message data1110135Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110135Type.Idata1110135Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1110135Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1110135Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110135Type.data1110135Type;

            /**
             * Decodes a data1110135Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1110135Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110135Type.data1110135Type;

            /**
             * Verifies a data1110135Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1110135Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1110135Type
             */
            public static fromObject(object: { [k: string]: any }): game1110135Type.data1110135Type;

            /**
             * Creates a plain object from a data1110135Type message. Also converts values to other types if specified.
             * @param message data1110135Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110135Type.data1110135Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1110135Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1110135Type. */
        interface Iupdate1110135Type {

            /** update1110135Type index */
            index: number;

            /** update1110135Type rateLists */
            rateLists?: (number[] | null);
        }

        /** Represents an update1110135Type. */
        class update1110135Type implements Iupdate1110135Type {

            /**
             * Constructs a new update1110135Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1110135Type.Iupdate1110135Type);

            /** update1110135Type index. */
            public index: number;

            /** update1110135Type rateLists. */
            public rateLists: number[];

            /**
             * Creates a new update1110135Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1110135Type instance
             */
            public static create(properties?: game1110135Type.Iupdate1110135Type): game1110135Type.update1110135Type;

            /**
             * Encodes the specified update1110135Type message. Does not implicitly {@link game1110135Type.update1110135Type.verify|verify} messages.
             * @param message update1110135Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1110135Type.Iupdate1110135Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1110135Type message, length delimited. Does not implicitly {@link game1110135Type.update1110135Type.verify|verify} messages.
             * @param message update1110135Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1110135Type.Iupdate1110135Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1110135Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1110135Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1110135Type.update1110135Type;

            /**
             * Decodes an update1110135Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1110135Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1110135Type.update1110135Type;

            /**
             * Verifies an update1110135Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1110135Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1110135Type
             */
            public static fromObject(object: { [k: string]: any }): game1110135Type.update1110135Type;

            /**
             * Creates a plain object from an update1110135Type message. Also converts values to other types if specified.
             * @param message update1110135Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1110135Type.update1110135Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1110135Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1210001Type. */
    export class game1210001Type implements Igame1210001Type {

        /**
         * Constructs a new game1210001Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1210001Type);

        /** game1210001Type data. */
        public data?: (game1210001Type.Idata1210001Type | null);

        /** game1210001Type update. */
        public update: game1210001Type.Iupdate1210001Type[];

        /**
         * Creates a new game1210001Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1210001Type instance
         */
        public static create(properties?: Igame1210001Type): game1210001Type;

        /**
         * Encodes the specified game1210001Type message. Does not implicitly {@link game1210001Type.verify|verify} messages.
         * @param message game1210001Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1210001Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1210001Type message, length delimited. Does not implicitly {@link game1210001Type.verify|verify} messages.
         * @param message game1210001Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1210001Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1210001Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1210001Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210001Type;

        /**
         * Decodes a game1210001Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1210001Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210001Type;

        /**
         * Verifies a game1210001Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1210001Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1210001Type
         */
        public static fromObject(object: { [k: string]: any }): game1210001Type;

        /**
         * Creates a plain object from a game1210001Type message. Also converts values to other types if specified.
         * @param message game1210001Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1210001Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1210001Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1210001Type {

        /** Properties of a data1210001Type. */
        interface Idata1210001Type {

            /** data1210001Type specGrid */
            specGrid?: (game1210001Type.IgridType[] | null);

            /** data1210001Type wildGrid */
            wildGrid?: (game1210001Type.IgridType[] | null);

            /** data1210001Type addPosList */
            addPosList?: (number[] | null);

            /** data1210001Type p2p */
            p2p?: (game1210001Type.IposToPosType[] | null);

            /** data1210001Type taskList */
            taskList?: (game1210001Type.ItaskType[] | null);
        }

        /** Represents a data1210001Type. */
        class data1210001Type implements Idata1210001Type {

            /**
             * Constructs a new data1210001Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210001Type.Idata1210001Type);

            /** data1210001Type specGrid. */
            public specGrid: game1210001Type.IgridType[];

            /** data1210001Type wildGrid. */
            public wildGrid: game1210001Type.IgridType[];

            /** data1210001Type addPosList. */
            public addPosList: number[];

            /** data1210001Type p2p. */
            public p2p: game1210001Type.IposToPosType[];

            /** data1210001Type taskList. */
            public taskList: game1210001Type.ItaskType[];

            /**
             * Creates a new data1210001Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1210001Type instance
             */
            public static create(properties?: game1210001Type.Idata1210001Type): game1210001Type.data1210001Type;

            /**
             * Encodes the specified data1210001Type message. Does not implicitly {@link game1210001Type.data1210001Type.verify|verify} messages.
             * @param message data1210001Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210001Type.Idata1210001Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1210001Type message, length delimited. Does not implicitly {@link game1210001Type.data1210001Type.verify|verify} messages.
             * @param message data1210001Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210001Type.Idata1210001Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1210001Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1210001Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210001Type.data1210001Type;

            /**
             * Decodes a data1210001Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1210001Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210001Type.data1210001Type;

            /**
             * Verifies a data1210001Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1210001Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1210001Type
             */
            public static fromObject(object: { [k: string]: any }): game1210001Type.data1210001Type;

            /**
             * Creates a plain object from a data1210001Type message. Also converts values to other types if specified.
             * @param message data1210001Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210001Type.data1210001Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1210001Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1210001Type. */
        interface Iupdate1210001Type {

            /** update1210001Type index */
            index: number;

            /** update1210001Type specGrid */
            specGrid?: (game1210001Type.IgridType[] | null);

            /** update1210001Type wildGrid */
            wildGrid?: (game1210001Type.IgridType[] | null);

            /** update1210001Type addPosList */
            addPosList?: (number[] | null);

            /** update1210001Type p2p */
            p2p?: (game1210001Type.IposToPosType[] | null);

            /** update1210001Type taskList */
            taskList?: (game1210001Type.ItaskType[] | null);
        }

        /** Represents an update1210001Type. */
        class update1210001Type implements Iupdate1210001Type {

            /**
             * Constructs a new update1210001Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210001Type.Iupdate1210001Type);

            /** update1210001Type index. */
            public index: number;

            /** update1210001Type specGrid. */
            public specGrid: game1210001Type.IgridType[];

            /** update1210001Type wildGrid. */
            public wildGrid: game1210001Type.IgridType[];

            /** update1210001Type addPosList. */
            public addPosList: number[];

            /** update1210001Type p2p. */
            public p2p: game1210001Type.IposToPosType[];

            /** update1210001Type taskList. */
            public taskList: game1210001Type.ItaskType[];

            /**
             * Creates a new update1210001Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1210001Type instance
             */
            public static create(properties?: game1210001Type.Iupdate1210001Type): game1210001Type.update1210001Type;

            /**
             * Encodes the specified update1210001Type message. Does not implicitly {@link game1210001Type.update1210001Type.verify|verify} messages.
             * @param message update1210001Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210001Type.Iupdate1210001Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1210001Type message, length delimited. Does not implicitly {@link game1210001Type.update1210001Type.verify|verify} messages.
             * @param message update1210001Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210001Type.Iupdate1210001Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1210001Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1210001Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210001Type.update1210001Type;

            /**
             * Decodes an update1210001Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1210001Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210001Type.update1210001Type;

            /**
             * Verifies an update1210001Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1210001Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1210001Type
             */
            public static fromObject(object: { [k: string]: any }): game1210001Type.update1210001Type;

            /**
             * Creates a plain object from an update1210001Type message. Also converts values to other types if specified.
             * @param message update1210001Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210001Type.update1210001Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1210001Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a gridType. */
        interface IgridType {

            /** gridType pos */
            pos: number;

            /** gridType elem */
            elem: number;
        }

        /** Represents a gridType. */
        class gridType implements IgridType {

            /**
             * Constructs a new gridType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210001Type.IgridType);

            /** gridType pos. */
            public pos: number;

            /** gridType elem. */
            public elem: number;

            /**
             * Creates a new gridType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns gridType instance
             */
            public static create(properties?: game1210001Type.IgridType): game1210001Type.gridType;

            /**
             * Encodes the specified gridType message. Does not implicitly {@link game1210001Type.gridType.verify|verify} messages.
             * @param message gridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210001Type.IgridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified gridType message, length delimited. Does not implicitly {@link game1210001Type.gridType.verify|verify} messages.
             * @param message gridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210001Type.IgridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a gridType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns gridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210001Type.gridType;

            /**
             * Decodes a gridType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns gridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210001Type.gridType;

            /**
             * Verifies a gridType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a gridType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns gridType
             */
            public static fromObject(object: { [k: string]: any }): game1210001Type.gridType;

            /**
             * Creates a plain object from a gridType message. Also converts values to other types if specified.
             * @param message gridType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210001Type.gridType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this gridType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a posToPosType. */
        interface IposToPosType {

            /** posToPosType from */
            from: number;

            /** posToPosType to */
            to: number;
        }

        /** Represents a posToPosType. */
        class posToPosType implements IposToPosType {

            /**
             * Constructs a new posToPosType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210001Type.IposToPosType);

            /** posToPosType from. */
            public from: number;

            /** posToPosType to. */
            public to: number;

            /**
             * Creates a new posToPosType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns posToPosType instance
             */
            public static create(properties?: game1210001Type.IposToPosType): game1210001Type.posToPosType;

            /**
             * Encodes the specified posToPosType message. Does not implicitly {@link game1210001Type.posToPosType.verify|verify} messages.
             * @param message posToPosType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210001Type.IposToPosType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified posToPosType message, length delimited. Does not implicitly {@link game1210001Type.posToPosType.verify|verify} messages.
             * @param message posToPosType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210001Type.IposToPosType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a posToPosType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns posToPosType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210001Type.posToPosType;

            /**
             * Decodes a posToPosType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns posToPosType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210001Type.posToPosType;

            /**
             * Verifies a posToPosType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a posToPosType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns posToPosType
             */
            public static fromObject(object: { [k: string]: any }): game1210001Type.posToPosType;

            /**
             * Creates a plain object from a posToPosType message. Also converts values to other types if specified.
             * @param message posToPosType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210001Type.posToPosType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this posToPosType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a taskType. */
        interface ItaskType {

            /** taskType taskType */
            taskType?: (number | null);

            /** taskType elementId */
            elementId?: (number | null);

            /** taskType targetNum */
            targetNum?: (number | null);

            /** taskType num */
            num?: (number | null);
        }

        /** Represents a taskType. */
        class taskType implements ItaskType {

            /**
             * Constructs a new taskType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210001Type.ItaskType);

            /** taskType taskType. */
            public taskType: number;

            /** taskType elementId. */
            public elementId: number;

            /** taskType targetNum. */
            public targetNum: number;

            /** taskType num. */
            public num: number;

            /**
             * Creates a new taskType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns taskType instance
             */
            public static create(properties?: game1210001Type.ItaskType): game1210001Type.taskType;

            /**
             * Encodes the specified taskType message. Does not implicitly {@link game1210001Type.taskType.verify|verify} messages.
             * @param message taskType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210001Type.ItaskType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified taskType message, length delimited. Does not implicitly {@link game1210001Type.taskType.verify|verify} messages.
             * @param message taskType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210001Type.ItaskType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a taskType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns taskType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210001Type.taskType;

            /**
             * Decodes a taskType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns taskType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210001Type.taskType;

            /**
             * Verifies a taskType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a taskType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns taskType
             */
            public static fromObject(object: { [k: string]: any }): game1210001Type.taskType;

            /**
             * Creates a plain object from a taskType message. Also converts values to other types if specified.
             * @param message taskType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210001Type.taskType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this taskType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1210019Type. */
    export class game1210019Type implements Igame1210019Type {

        /**
         * Constructs a new game1210019Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1210019Type);

        /** game1210019Type data. */
        public data?: (game1210019Type.Idata1210019Type | null);

        /** game1210019Type update. */
        public update: game1210019Type.Iupdate1210019Type[];

        /**
         * Creates a new game1210019Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1210019Type instance
         */
        public static create(properties?: Igame1210019Type): game1210019Type;

        /**
         * Encodes the specified game1210019Type message. Does not implicitly {@link game1210019Type.verify|verify} messages.
         * @param message game1210019Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1210019Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1210019Type message, length delimited. Does not implicitly {@link game1210019Type.verify|verify} messages.
         * @param message game1210019Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1210019Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1210019Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1210019Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210019Type;

        /**
         * Decodes a game1210019Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1210019Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210019Type;

        /**
         * Verifies a game1210019Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1210019Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1210019Type
         */
        public static fromObject(object: { [k: string]: any }): game1210019Type;

        /**
         * Creates a plain object from a game1210019Type message. Also converts values to other types if specified.
         * @param message game1210019Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1210019Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1210019Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1210019Type {

        /** Properties of a data1210019Type. */
        interface Idata1210019Type {

            /** data1210019Type fixGrid */
            fixGrid?: (game1210019Type.IgridType[] | null);

            /** data1210019Type newAddPos */
            newAddPos?: (number[] | null);

            /** data1210019Type taskList */
            taskList?: (game1210019Type.ItaskType[] | null);

            /** data1210019Type plistToId */
            plistToId?: (game1210019Type.IpListToIdType[] | null);

            /** data1210019Type collectReward */
            collectReward: number;
        }

        /** Represents a data1210019Type. */
        class data1210019Type implements Idata1210019Type {

            /**
             * Constructs a new data1210019Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210019Type.Idata1210019Type);

            /** data1210019Type fixGrid. */
            public fixGrid: game1210019Type.IgridType[];

            /** data1210019Type newAddPos. */
            public newAddPos: number[];

            /** data1210019Type taskList. */
            public taskList: game1210019Type.ItaskType[];

            /** data1210019Type plistToId. */
            public plistToId: game1210019Type.IpListToIdType[];

            /** data1210019Type collectReward. */
            public collectReward: number;

            /**
             * Creates a new data1210019Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1210019Type instance
             */
            public static create(properties?: game1210019Type.Idata1210019Type): game1210019Type.data1210019Type;

            /**
             * Encodes the specified data1210019Type message. Does not implicitly {@link game1210019Type.data1210019Type.verify|verify} messages.
             * @param message data1210019Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210019Type.Idata1210019Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1210019Type message, length delimited. Does not implicitly {@link game1210019Type.data1210019Type.verify|verify} messages.
             * @param message data1210019Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210019Type.Idata1210019Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1210019Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1210019Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210019Type.data1210019Type;

            /**
             * Decodes a data1210019Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1210019Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210019Type.data1210019Type;

            /**
             * Verifies a data1210019Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1210019Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1210019Type
             */
            public static fromObject(object: { [k: string]: any }): game1210019Type.data1210019Type;

            /**
             * Creates a plain object from a data1210019Type message. Also converts values to other types if specified.
             * @param message data1210019Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210019Type.data1210019Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1210019Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1210019Type. */
        interface Iupdate1210019Type {

            /** update1210019Type index */
            index: number;

            /** update1210019Type fixGrid */
            fixGrid?: (game1210019Type.IgridType[] | null);

            /** update1210019Type newAddPos */
            newAddPos?: (number[] | null);

            /** update1210019Type taskList */
            taskList?: (game1210019Type.ItaskType[] | null);

            /** update1210019Type plistToId */
            plistToId?: (game1210019Type.IpListToIdType[] | null);

            /** update1210019Type collectReward */
            collectReward: number;
        }

        /** Represents an update1210019Type. */
        class update1210019Type implements Iupdate1210019Type {

            /**
             * Constructs a new update1210019Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210019Type.Iupdate1210019Type);

            /** update1210019Type index. */
            public index: number;

            /** update1210019Type fixGrid. */
            public fixGrid: game1210019Type.IgridType[];

            /** update1210019Type newAddPos. */
            public newAddPos: number[];

            /** update1210019Type taskList. */
            public taskList: game1210019Type.ItaskType[];

            /** update1210019Type plistToId. */
            public plistToId: game1210019Type.IpListToIdType[];

            /** update1210019Type collectReward. */
            public collectReward: number;

            /**
             * Creates a new update1210019Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1210019Type instance
             */
            public static create(properties?: game1210019Type.Iupdate1210019Type): game1210019Type.update1210019Type;

            /**
             * Encodes the specified update1210019Type message. Does not implicitly {@link game1210019Type.update1210019Type.verify|verify} messages.
             * @param message update1210019Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210019Type.Iupdate1210019Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1210019Type message, length delimited. Does not implicitly {@link game1210019Type.update1210019Type.verify|verify} messages.
             * @param message update1210019Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210019Type.Iupdate1210019Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1210019Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1210019Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210019Type.update1210019Type;

            /**
             * Decodes an update1210019Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1210019Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210019Type.update1210019Type;

            /**
             * Verifies an update1210019Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1210019Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1210019Type
             */
            public static fromObject(object: { [k: string]: any }): game1210019Type.update1210019Type;

            /**
             * Creates a plain object from an update1210019Type message. Also converts values to other types if specified.
             * @param message update1210019Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210019Type.update1210019Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1210019Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a gridType. */
        interface IgridType {

            /** gridType pos */
            pos: number;

            /** gridType elem */
            elem: number;
        }

        /** Represents a gridType. */
        class gridType implements IgridType {

            /**
             * Constructs a new gridType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210019Type.IgridType);

            /** gridType pos. */
            public pos: number;

            /** gridType elem. */
            public elem: number;

            /**
             * Creates a new gridType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns gridType instance
             */
            public static create(properties?: game1210019Type.IgridType): game1210019Type.gridType;

            /**
             * Encodes the specified gridType message. Does not implicitly {@link game1210019Type.gridType.verify|verify} messages.
             * @param message gridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210019Type.IgridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified gridType message, length delimited. Does not implicitly {@link game1210019Type.gridType.verify|verify} messages.
             * @param message gridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210019Type.IgridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a gridType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns gridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210019Type.gridType;

            /**
             * Decodes a gridType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns gridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210019Type.gridType;

            /**
             * Verifies a gridType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a gridType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns gridType
             */
            public static fromObject(object: { [k: string]: any }): game1210019Type.gridType;

            /**
             * Creates a plain object from a gridType message. Also converts values to other types if specified.
             * @param message gridType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210019Type.gridType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this gridType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a pListToIdType. */
        interface IpListToIdType {

            /** pListToIdType plist */
            plist?: (number[] | null);

            /** pListToIdType id */
            id: number;
        }

        /** Represents a pListToIdType. */
        class pListToIdType implements IpListToIdType {

            /**
             * Constructs a new pListToIdType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210019Type.IpListToIdType);

            /** pListToIdType plist. */
            public plist: number[];

            /** pListToIdType id. */
            public id: number;

            /**
             * Creates a new pListToIdType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns pListToIdType instance
             */
            public static create(properties?: game1210019Type.IpListToIdType): game1210019Type.pListToIdType;

            /**
             * Encodes the specified pListToIdType message. Does not implicitly {@link game1210019Type.pListToIdType.verify|verify} messages.
             * @param message pListToIdType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210019Type.IpListToIdType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified pListToIdType message, length delimited. Does not implicitly {@link game1210019Type.pListToIdType.verify|verify} messages.
             * @param message pListToIdType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210019Type.IpListToIdType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a pListToIdType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns pListToIdType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210019Type.pListToIdType;

            /**
             * Decodes a pListToIdType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns pListToIdType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210019Type.pListToIdType;

            /**
             * Verifies a pListToIdType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a pListToIdType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns pListToIdType
             */
            public static fromObject(object: { [k: string]: any }): game1210019Type.pListToIdType;

            /**
             * Creates a plain object from a pListToIdType message. Also converts values to other types if specified.
             * @param message pListToIdType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210019Type.pListToIdType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this pListToIdType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a taskType. */
        interface ItaskType {

            /** taskType id */
            id?: (number | null);

            /** taskType elem */
            elem?: (number | null);

            /** taskType num */
            num?: (number | null);

            /** taskType rate */
            rate?: (number | null);
        }

        /** Represents a taskType. */
        class taskType implements ItaskType {

            /**
             * Constructs a new taskType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210019Type.ItaskType);

            /** taskType id. */
            public id: number;

            /** taskType elem. */
            public elem: number;

            /** taskType num. */
            public num: number;

            /** taskType rate. */
            public rate: number;

            /**
             * Creates a new taskType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns taskType instance
             */
            public static create(properties?: game1210019Type.ItaskType): game1210019Type.taskType;

            /**
             * Encodes the specified taskType message. Does not implicitly {@link game1210019Type.taskType.verify|verify} messages.
             * @param message taskType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210019Type.ItaskType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified taskType message, length delimited. Does not implicitly {@link game1210019Type.taskType.verify|verify} messages.
             * @param message taskType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210019Type.ItaskType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a taskType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns taskType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210019Type.taskType;

            /**
             * Decodes a taskType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns taskType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210019Type.taskType;

            /**
             * Verifies a taskType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a taskType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns taskType
             */
            public static fromObject(object: { [k: string]: any }): game1210019Type.taskType;

            /**
             * Creates a plain object from a taskType message. Also converts values to other types if specified.
             * @param message taskType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210019Type.taskType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this taskType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1210026Type. */
    export class game1210026Type implements Igame1210026Type {

        /**
         * Constructs a new game1210026Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1210026Type);

        /** game1210026Type data. */
        public data?: (game1210026Type.Idata1210026Type | null);

        /** game1210026Type update. */
        public update: game1210026Type.Iupdate1210026Type[];

        /**
         * Creates a new game1210026Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1210026Type instance
         */
        public static create(properties?: Igame1210026Type): game1210026Type;

        /**
         * Encodes the specified game1210026Type message. Does not implicitly {@link game1210026Type.verify|verify} messages.
         * @param message game1210026Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1210026Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1210026Type message, length delimited. Does not implicitly {@link game1210026Type.verify|verify} messages.
         * @param message game1210026Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1210026Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1210026Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1210026Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210026Type;

        /**
         * Decodes a game1210026Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1210026Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210026Type;

        /**
         * Verifies a game1210026Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1210026Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1210026Type
         */
        public static fromObject(object: { [k: string]: any }): game1210026Type;

        /**
         * Creates a plain object from a game1210026Type message. Also converts values to other types if specified.
         * @param message game1210026Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1210026Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1210026Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1210026Type {

        /** Properties of a data1210026Type. */
        interface Idata1210026Type {

            /** data1210026Type columnList */
            columnList?: (number[] | null);

            /** data1210026Type copyColumnList */
            copyColumnList?: (number[] | null);
        }

        /** Represents a data1210026Type. */
        class data1210026Type implements Idata1210026Type {

            /**
             * Constructs a new data1210026Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210026Type.Idata1210026Type);

            /** data1210026Type columnList. */
            public columnList: number[];

            /** data1210026Type copyColumnList. */
            public copyColumnList: number[];

            /**
             * Creates a new data1210026Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1210026Type instance
             */
            public static create(properties?: game1210026Type.Idata1210026Type): game1210026Type.data1210026Type;

            /**
             * Encodes the specified data1210026Type message. Does not implicitly {@link game1210026Type.data1210026Type.verify|verify} messages.
             * @param message data1210026Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210026Type.Idata1210026Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1210026Type message, length delimited. Does not implicitly {@link game1210026Type.data1210026Type.verify|verify} messages.
             * @param message data1210026Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210026Type.Idata1210026Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1210026Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1210026Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210026Type.data1210026Type;

            /**
             * Decodes a data1210026Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1210026Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210026Type.data1210026Type;

            /**
             * Verifies a data1210026Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1210026Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1210026Type
             */
            public static fromObject(object: { [k: string]: any }): game1210026Type.data1210026Type;

            /**
             * Creates a plain object from a data1210026Type message. Also converts values to other types if specified.
             * @param message data1210026Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210026Type.data1210026Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1210026Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1210026Type. */
        interface Iupdate1210026Type {

            /** update1210026Type index */
            index: number;

            /** update1210026Type columnList */
            columnList?: (number[] | null);

            /** update1210026Type copyColumnList */
            copyColumnList?: (number[] | null);
        }

        /** Represents an update1210026Type. */
        class update1210026Type implements Iupdate1210026Type {

            /**
             * Constructs a new update1210026Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210026Type.Iupdate1210026Type);

            /** update1210026Type index. */
            public index: number;

            /** update1210026Type columnList. */
            public columnList: number[];

            /** update1210026Type copyColumnList. */
            public copyColumnList: number[];

            /**
             * Creates a new update1210026Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1210026Type instance
             */
            public static create(properties?: game1210026Type.Iupdate1210026Type): game1210026Type.update1210026Type;

            /**
             * Encodes the specified update1210026Type message. Does not implicitly {@link game1210026Type.update1210026Type.verify|verify} messages.
             * @param message update1210026Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210026Type.Iupdate1210026Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1210026Type message, length delimited. Does not implicitly {@link game1210026Type.update1210026Type.verify|verify} messages.
             * @param message update1210026Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210026Type.Iupdate1210026Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1210026Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1210026Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210026Type.update1210026Type;

            /**
             * Decodes an update1210026Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1210026Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210026Type.update1210026Type;

            /**
             * Verifies an update1210026Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1210026Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1210026Type
             */
            public static fromObject(object: { [k: string]: any }): game1210026Type.update1210026Type;

            /**
             * Creates a plain object from an update1210026Type message. Also converts values to other types if specified.
             * @param message update1210026Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210026Type.update1210026Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1210026Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1210027Type. */
    export class game1210027Type implements Igame1210027Type {

        /**
         * Constructs a new game1210027Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1210027Type);

        /** game1210027Type data. */
        public data?: (game1210027Type.Idata1210027Type | null);

        /** game1210027Type update. */
        public update: game1210027Type.Iupdate1210027Type[];

        /**
         * Creates a new game1210027Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1210027Type instance
         */
        public static create(properties?: Igame1210027Type): game1210027Type;

        /**
         * Encodes the specified game1210027Type message. Does not implicitly {@link game1210027Type.verify|verify} messages.
         * @param message game1210027Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1210027Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1210027Type message, length delimited. Does not implicitly {@link game1210027Type.verify|verify} messages.
         * @param message game1210027Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1210027Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1210027Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1210027Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210027Type;

        /**
         * Decodes a game1210027Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1210027Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210027Type;

        /**
         * Verifies a game1210027Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1210027Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1210027Type
         */
        public static fromObject(object: { [k: string]: any }): game1210027Type;

        /**
         * Creates a plain object from a game1210027Type message. Also converts values to other types if specified.
         * @param message game1210027Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1210027Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1210027Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1210027Type {

        /** Properties of a data1210027Type. */
        interface Idata1210027Type {

            /** data1210027Type rushElem */
            rushElem: number;

            /** data1210027Type replaceElem */
            replaceElem: number;

            /** data1210027Type times */
            times: number;

            /** data1210027Type nextRushElem */
            nextRushElem: number;

            /** data1210027Type nextReplaceElem */
            nextReplaceElem: number;
        }

        /** Represents a data1210027Type. */
        class data1210027Type implements Idata1210027Type {

            /**
             * Constructs a new data1210027Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210027Type.Idata1210027Type);

            /** data1210027Type rushElem. */
            public rushElem: number;

            /** data1210027Type replaceElem. */
            public replaceElem: number;

            /** data1210027Type times. */
            public times: number;

            /** data1210027Type nextRushElem. */
            public nextRushElem: number;

            /** data1210027Type nextReplaceElem. */
            public nextReplaceElem: number;

            /**
             * Creates a new data1210027Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1210027Type instance
             */
            public static create(properties?: game1210027Type.Idata1210027Type): game1210027Type.data1210027Type;

            /**
             * Encodes the specified data1210027Type message. Does not implicitly {@link game1210027Type.data1210027Type.verify|verify} messages.
             * @param message data1210027Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210027Type.Idata1210027Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1210027Type message, length delimited. Does not implicitly {@link game1210027Type.data1210027Type.verify|verify} messages.
             * @param message data1210027Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210027Type.Idata1210027Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1210027Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1210027Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210027Type.data1210027Type;

            /**
             * Decodes a data1210027Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1210027Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210027Type.data1210027Type;

            /**
             * Verifies a data1210027Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1210027Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1210027Type
             */
            public static fromObject(object: { [k: string]: any }): game1210027Type.data1210027Type;

            /**
             * Creates a plain object from a data1210027Type message. Also converts values to other types if specified.
             * @param message data1210027Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210027Type.data1210027Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1210027Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1210027Type. */
        interface Iupdate1210027Type {

            /** update1210027Type index */
            index: number;

            /** update1210027Type rushElem */
            rushElem: number;

            /** update1210027Type replaceElem */
            replaceElem: number;

            /** update1210027Type times */
            times: number;

            /** update1210027Type nextRushElem */
            nextRushElem: number;

            /** update1210027Type nextReplaceElem */
            nextReplaceElem: number;
        }

        /** Represents an update1210027Type. */
        class update1210027Type implements Iupdate1210027Type {

            /**
             * Constructs a new update1210027Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210027Type.Iupdate1210027Type);

            /** update1210027Type index. */
            public index: number;

            /** update1210027Type rushElem. */
            public rushElem: number;

            /** update1210027Type replaceElem. */
            public replaceElem: number;

            /** update1210027Type times. */
            public times: number;

            /** update1210027Type nextRushElem. */
            public nextRushElem: number;

            /** update1210027Type nextReplaceElem. */
            public nextReplaceElem: number;

            /**
             * Creates a new update1210027Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1210027Type instance
             */
            public static create(properties?: game1210027Type.Iupdate1210027Type): game1210027Type.update1210027Type;

            /**
             * Encodes the specified update1210027Type message. Does not implicitly {@link game1210027Type.update1210027Type.verify|verify} messages.
             * @param message update1210027Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210027Type.Iupdate1210027Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1210027Type message, length delimited. Does not implicitly {@link game1210027Type.update1210027Type.verify|verify} messages.
             * @param message update1210027Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210027Type.Iupdate1210027Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1210027Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1210027Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210027Type.update1210027Type;

            /**
             * Decodes an update1210027Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1210027Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210027Type.update1210027Type;

            /**
             * Verifies an update1210027Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1210027Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1210027Type
             */
            public static fromObject(object: { [k: string]: any }): game1210027Type.update1210027Type;

            /**
             * Creates a plain object from an update1210027Type message. Also converts values to other types if specified.
             * @param message update1210027Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210027Type.update1210027Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1210027Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1210035Type. */
    export class game1210035Type implements Igame1210035Type {

        /**
         * Constructs a new game1210035Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1210035Type);

        /** game1210035Type data. */
        public data?: (game1210035Type.Idata1210035Type | null);

        /** game1210035Type update. */
        public update: game1210035Type.Iupdate1210035Type[];

        /**
         * Creates a new game1210035Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1210035Type instance
         */
        public static create(properties?: Igame1210035Type): game1210035Type;

        /**
         * Encodes the specified game1210035Type message. Does not implicitly {@link game1210035Type.verify|verify} messages.
         * @param message game1210035Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1210035Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1210035Type message, length delimited. Does not implicitly {@link game1210035Type.verify|verify} messages.
         * @param message game1210035Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1210035Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1210035Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1210035Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210035Type;

        /**
         * Decodes a game1210035Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1210035Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210035Type;

        /**
         * Verifies a game1210035Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1210035Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1210035Type
         */
        public static fromObject(object: { [k: string]: any }): game1210035Type;

        /**
         * Creates a plain object from a game1210035Type message. Also converts values to other types if specified.
         * @param message game1210035Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1210035Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1210035Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1210035Type {

        /** Properties of a data1210035Type. */
        interface Idata1210035Type {

            /** data1210035Type num */
            num: number;

            /** data1210035Type numListMap_RateList */
            numListMap_RateList?: (game1210035Type.INumListMapRateType[] | null);

            /** data1210035Type collectPosList */
            collectPosList?: (number[] | null);
        }

        /** Represents a data1210035Type. */
        class data1210035Type implements Idata1210035Type {

            /**
             * Constructs a new data1210035Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210035Type.Idata1210035Type);

            /** data1210035Type num. */
            public num: number;

            /** data1210035Type numListMap_RateList. */
            public numListMap_RateList: game1210035Type.INumListMapRateType[];

            /** data1210035Type collectPosList. */
            public collectPosList: number[];

            /**
             * Creates a new data1210035Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1210035Type instance
             */
            public static create(properties?: game1210035Type.Idata1210035Type): game1210035Type.data1210035Type;

            /**
             * Encodes the specified data1210035Type message. Does not implicitly {@link game1210035Type.data1210035Type.verify|verify} messages.
             * @param message data1210035Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210035Type.Idata1210035Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1210035Type message, length delimited. Does not implicitly {@link game1210035Type.data1210035Type.verify|verify} messages.
             * @param message data1210035Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210035Type.Idata1210035Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1210035Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1210035Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210035Type.data1210035Type;

            /**
             * Decodes a data1210035Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1210035Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210035Type.data1210035Type;

            /**
             * Verifies a data1210035Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1210035Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1210035Type
             */
            public static fromObject(object: { [k: string]: any }): game1210035Type.data1210035Type;

            /**
             * Creates a plain object from a data1210035Type message. Also converts values to other types if specified.
             * @param message data1210035Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210035Type.data1210035Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1210035Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1210035Type. */
        interface Iupdate1210035Type {

            /** update1210035Type index */
            index: number;

            /** update1210035Type num */
            num: number;

            /** update1210035Type numListMap_RateList */
            numListMap_RateList?: (game1210035Type.INumListMapRateType[] | null);

            /** update1210035Type collectPosList */
            collectPosList?: (number[] | null);
        }

        /** Represents an update1210035Type. */
        class update1210035Type implements Iupdate1210035Type {

            /**
             * Constructs a new update1210035Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210035Type.Iupdate1210035Type);

            /** update1210035Type index. */
            public index: number;

            /** update1210035Type num. */
            public num: number;

            /** update1210035Type numListMap_RateList. */
            public numListMap_RateList: game1210035Type.INumListMapRateType[];

            /** update1210035Type collectPosList. */
            public collectPosList: number[];

            /**
             * Creates a new update1210035Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1210035Type instance
             */
            public static create(properties?: game1210035Type.Iupdate1210035Type): game1210035Type.update1210035Type;

            /**
             * Encodes the specified update1210035Type message. Does not implicitly {@link game1210035Type.update1210035Type.verify|verify} messages.
             * @param message update1210035Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210035Type.Iupdate1210035Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1210035Type message, length delimited. Does not implicitly {@link game1210035Type.update1210035Type.verify|verify} messages.
             * @param message update1210035Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210035Type.Iupdate1210035Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1210035Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1210035Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210035Type.update1210035Type;

            /**
             * Decodes an update1210035Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1210035Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210035Type.update1210035Type;

            /**
             * Verifies an update1210035Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1210035Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1210035Type
             */
            public static fromObject(object: { [k: string]: any }): game1210035Type.update1210035Type;

            /**
             * Creates a plain object from an update1210035Type message. Also converts values to other types if specified.
             * @param message update1210035Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210035Type.update1210035Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1210035Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a NumListMapRateType. */
        interface INumListMapRateType {

            /** NumListMapRateType numList */
            numList?: (number[] | null);

            /** NumListMapRateType rate */
            rate: number;
        }

        /** Represents a NumListMapRateType. */
        class NumListMapRateType implements INumListMapRateType {

            /**
             * Constructs a new NumListMapRateType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210035Type.INumListMapRateType);

            /** NumListMapRateType numList. */
            public numList: number[];

            /** NumListMapRateType rate. */
            public rate: number;

            /**
             * Creates a new NumListMapRateType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns NumListMapRateType instance
             */
            public static create(properties?: game1210035Type.INumListMapRateType): game1210035Type.NumListMapRateType;

            /**
             * Encodes the specified NumListMapRateType message. Does not implicitly {@link game1210035Type.NumListMapRateType.verify|verify} messages.
             * @param message NumListMapRateType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210035Type.INumListMapRateType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified NumListMapRateType message, length delimited. Does not implicitly {@link game1210035Type.NumListMapRateType.verify|verify} messages.
             * @param message NumListMapRateType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210035Type.INumListMapRateType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a NumListMapRateType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns NumListMapRateType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210035Type.NumListMapRateType;

            /**
             * Decodes a NumListMapRateType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns NumListMapRateType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210035Type.NumListMapRateType;

            /**
             * Verifies a NumListMapRateType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a NumListMapRateType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns NumListMapRateType
             */
            public static fromObject(object: { [k: string]: any }): game1210035Type.NumListMapRateType;

            /**
             * Creates a plain object from a NumListMapRateType message. Also converts values to other types if specified.
             * @param message NumListMapRateType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210035Type.NumListMapRateType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this NumListMapRateType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1210043Type. */
    export class game1210043Type implements Igame1210043Type {

        /**
         * Constructs a new game1210043Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1210043Type);

        /** game1210043Type data. */
        public data?: (game1210043Type.Idata1210043Type | null);

        /** game1210043Type update. */
        public update: game1210043Type.Iupdate1210043Type[];

        /**
         * Creates a new game1210043Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1210043Type instance
         */
        public static create(properties?: Igame1210043Type): game1210043Type;

        /**
         * Encodes the specified game1210043Type message. Does not implicitly {@link game1210043Type.verify|verify} messages.
         * @param message game1210043Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1210043Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1210043Type message, length delimited. Does not implicitly {@link game1210043Type.verify|verify} messages.
         * @param message game1210043Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1210043Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1210043Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1210043Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210043Type;

        /**
         * Decodes a game1210043Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1210043Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210043Type;

        /**
         * Verifies a game1210043Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1210043Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1210043Type
         */
        public static fromObject(object: { [k: string]: any }): game1210043Type;

        /**
         * Creates a plain object from a game1210043Type message. Also converts values to other types if specified.
         * @param message game1210043Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1210043Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1210043Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1210043Type {

        /** Properties of a data1210043Type. */
        interface Idata1210043Type {

            /** data1210043Type remainBubbleGrid */
            remainBubbleGrid?: (game1210043Type.IGridType[] | null);

            /** data1210043Type newBubbleGrid */
            newBubbleGrid?: (game1210043Type.IGridType[] | null);

            /** data1210043Type bottomBubbleGrid */
            bottomBubbleGrid?: (game1210043Type.IGridType[] | null);

            /** data1210043Type bubbleMove */
            bubbleMove?: (game1210043Type.IGridMoveType[] | null);

            /** data1210043Type boom */
            boom?: (game1210043Type.IP2PType[] | null);
        }

        /** Represents a data1210043Type. */
        class data1210043Type implements Idata1210043Type {

            /**
             * Constructs a new data1210043Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210043Type.Idata1210043Type);

            /** data1210043Type remainBubbleGrid. */
            public remainBubbleGrid: game1210043Type.IGridType[];

            /** data1210043Type newBubbleGrid. */
            public newBubbleGrid: game1210043Type.IGridType[];

            /** data1210043Type bottomBubbleGrid. */
            public bottomBubbleGrid: game1210043Type.IGridType[];

            /** data1210043Type bubbleMove. */
            public bubbleMove: game1210043Type.IGridMoveType[];

            /** data1210043Type boom. */
            public boom: game1210043Type.IP2PType[];

            /**
             * Creates a new data1210043Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1210043Type instance
             */
            public static create(properties?: game1210043Type.Idata1210043Type): game1210043Type.data1210043Type;

            /**
             * Encodes the specified data1210043Type message. Does not implicitly {@link game1210043Type.data1210043Type.verify|verify} messages.
             * @param message data1210043Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210043Type.Idata1210043Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1210043Type message, length delimited. Does not implicitly {@link game1210043Type.data1210043Type.verify|verify} messages.
             * @param message data1210043Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210043Type.Idata1210043Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1210043Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1210043Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210043Type.data1210043Type;

            /**
             * Decodes a data1210043Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1210043Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210043Type.data1210043Type;

            /**
             * Verifies a data1210043Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1210043Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1210043Type
             */
            public static fromObject(object: { [k: string]: any }): game1210043Type.data1210043Type;

            /**
             * Creates a plain object from a data1210043Type message. Also converts values to other types if specified.
             * @param message data1210043Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210043Type.data1210043Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1210043Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1210043Type. */
        interface Iupdate1210043Type {

            /** update1210043Type index */
            index: number;

            /** update1210043Type remainBubbleGrid */
            remainBubbleGrid?: (game1210043Type.IGridType[] | null);

            /** update1210043Type newBubbleGrid */
            newBubbleGrid?: (game1210043Type.IGridType[] | null);

            /** update1210043Type bottomBubbleGrid */
            bottomBubbleGrid?: (game1210043Type.IGridType[] | null);

            /** update1210043Type bubbleMove */
            bubbleMove?: (game1210043Type.IGridMoveType[] | null);

            /** update1210043Type boom */
            boom?: (game1210043Type.IP2PType[] | null);
        }

        /** Represents an update1210043Type. */
        class update1210043Type implements Iupdate1210043Type {

            /**
             * Constructs a new update1210043Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210043Type.Iupdate1210043Type);

            /** update1210043Type index. */
            public index: number;

            /** update1210043Type remainBubbleGrid. */
            public remainBubbleGrid: game1210043Type.IGridType[];

            /** update1210043Type newBubbleGrid. */
            public newBubbleGrid: game1210043Type.IGridType[];

            /** update1210043Type bottomBubbleGrid. */
            public bottomBubbleGrid: game1210043Type.IGridType[];

            /** update1210043Type bubbleMove. */
            public bubbleMove: game1210043Type.IGridMoveType[];

            /** update1210043Type boom. */
            public boom: game1210043Type.IP2PType[];

            /**
             * Creates a new update1210043Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1210043Type instance
             */
            public static create(properties?: game1210043Type.Iupdate1210043Type): game1210043Type.update1210043Type;

            /**
             * Encodes the specified update1210043Type message. Does not implicitly {@link game1210043Type.update1210043Type.verify|verify} messages.
             * @param message update1210043Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210043Type.Iupdate1210043Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1210043Type message, length delimited. Does not implicitly {@link game1210043Type.update1210043Type.verify|verify} messages.
             * @param message update1210043Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210043Type.Iupdate1210043Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1210043Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1210043Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210043Type.update1210043Type;

            /**
             * Decodes an update1210043Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1210043Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210043Type.update1210043Type;

            /**
             * Verifies an update1210043Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1210043Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1210043Type
             */
            public static fromObject(object: { [k: string]: any }): game1210043Type.update1210043Type;

            /**
             * Creates a plain object from an update1210043Type message. Also converts values to other types if specified.
             * @param message update1210043Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210043Type.update1210043Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1210043Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GridMoveType. */
        interface IGridMoveType {

            /** GridMoveType fromGrid */
            fromGrid: game1210043Type.IGridType;

            /** GridMoveType toGrid */
            toGrid: game1210043Type.IGridType;
        }

        /** Represents a GridMoveType. */
        class GridMoveType implements IGridMoveType {

            /**
             * Constructs a new GridMoveType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210043Type.IGridMoveType);

            /** GridMoveType fromGrid. */
            public fromGrid: game1210043Type.IGridType;

            /** GridMoveType toGrid. */
            public toGrid: game1210043Type.IGridType;

            /**
             * Creates a new GridMoveType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GridMoveType instance
             */
            public static create(properties?: game1210043Type.IGridMoveType): game1210043Type.GridMoveType;

            /**
             * Encodes the specified GridMoveType message. Does not implicitly {@link game1210043Type.GridMoveType.verify|verify} messages.
             * @param message GridMoveType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210043Type.IGridMoveType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GridMoveType message, length delimited. Does not implicitly {@link game1210043Type.GridMoveType.verify|verify} messages.
             * @param message GridMoveType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210043Type.IGridMoveType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GridMoveType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GridMoveType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210043Type.GridMoveType;

            /**
             * Decodes a GridMoveType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GridMoveType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210043Type.GridMoveType;

            /**
             * Verifies a GridMoveType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a GridMoveType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GridMoveType
             */
            public static fromObject(object: { [k: string]: any }): game1210043Type.GridMoveType;

            /**
             * Creates a plain object from a GridMoveType message. Also converts values to other types if specified.
             * @param message GridMoveType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210043Type.GridMoveType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GridMoveType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GridType. */
        interface IGridType {

            /** GridType pos */
            pos: number;

            /** GridType elem */
            elem: number;
        }

        /** Represents a GridType. */
        class GridType implements IGridType {

            /**
             * Constructs a new GridType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210043Type.IGridType);

            /** GridType pos. */
            public pos: number;

            /** GridType elem. */
            public elem: number;

            /**
             * Creates a new GridType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GridType instance
             */
            public static create(properties?: game1210043Type.IGridType): game1210043Type.GridType;

            /**
             * Encodes the specified GridType message. Does not implicitly {@link game1210043Type.GridType.verify|verify} messages.
             * @param message GridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210043Type.IGridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GridType message, length delimited. Does not implicitly {@link game1210043Type.GridType.verify|verify} messages.
             * @param message GridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210043Type.IGridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GridType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210043Type.GridType;

            /**
             * Decodes a GridType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210043Type.GridType;

            /**
             * Verifies a GridType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a GridType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GridType
             */
            public static fromObject(object: { [k: string]: any }): game1210043Type.GridType;

            /**
             * Creates a plain object from a GridType message. Also converts values to other types if specified.
             * @param message GridType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210043Type.GridType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GridType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a P2PType. */
        interface IP2PType {

            /** P2PType pos */
            pos: number;

            /** P2PType plist */
            plist?: (number[] | null);
        }

        /** Represents a P2PType. */
        class P2PType implements IP2PType {

            /**
             * Constructs a new P2PType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210043Type.IP2PType);

            /** P2PType pos. */
            public pos: number;

            /** P2PType plist. */
            public plist: number[];

            /**
             * Creates a new P2PType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns P2PType instance
             */
            public static create(properties?: game1210043Type.IP2PType): game1210043Type.P2PType;

            /**
             * Encodes the specified P2PType message. Does not implicitly {@link game1210043Type.P2PType.verify|verify} messages.
             * @param message P2PType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210043Type.IP2PType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified P2PType message, length delimited. Does not implicitly {@link game1210043Type.P2PType.verify|verify} messages.
             * @param message P2PType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210043Type.IP2PType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a P2PType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns P2PType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210043Type.P2PType;

            /**
             * Decodes a P2PType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns P2PType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210043Type.P2PType;

            /**
             * Verifies a P2PType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a P2PType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns P2PType
             */
            public static fromObject(object: { [k: string]: any }): game1210043Type.P2PType;

            /**
             * Creates a plain object from a P2PType message. Also converts values to other types if specified.
             * @param message P2PType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210043Type.P2PType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this P2PType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1210044Type. */
    export class game1210044Type implements Igame1210044Type {

        /**
         * Constructs a new game1210044Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1210044Type);

        /** game1210044Type data. */
        public data?: (game1210044Type.Idata1210044Type | null);

        /** game1210044Type update. */
        public update: game1210044Type.Iupdate1210044Type[];

        /**
         * Creates a new game1210044Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1210044Type instance
         */
        public static create(properties?: Igame1210044Type): game1210044Type;

        /**
         * Encodes the specified game1210044Type message. Does not implicitly {@link game1210044Type.verify|verify} messages.
         * @param message game1210044Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1210044Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1210044Type message, length delimited. Does not implicitly {@link game1210044Type.verify|verify} messages.
         * @param message game1210044Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1210044Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1210044Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1210044Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210044Type;

        /**
         * Decodes a game1210044Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1210044Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210044Type;

        /**
         * Verifies a game1210044Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1210044Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1210044Type
         */
        public static fromObject(object: { [k: string]: any }): game1210044Type;

        /**
         * Creates a plain object from a game1210044Type message. Also converts values to other types if specified.
         * @param message game1210044Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1210044Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1210044Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1210044Type {

        /** Properties of a data1210044Type. */
        interface Idata1210044Type {

            /** data1210044Type returnFixedGrid */
            returnFixedGrid?: (IgridType[] | null);
        }

        /** Represents a data1210044Type. */
        class data1210044Type implements Idata1210044Type {

            /**
             * Constructs a new data1210044Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210044Type.Idata1210044Type);

            /** data1210044Type returnFixedGrid. */
            public returnFixedGrid: IgridType[];

            /**
             * Creates a new data1210044Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1210044Type instance
             */
            public static create(properties?: game1210044Type.Idata1210044Type): game1210044Type.data1210044Type;

            /**
             * Encodes the specified data1210044Type message. Does not implicitly {@link game1210044Type.data1210044Type.verify|verify} messages.
             * @param message data1210044Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210044Type.Idata1210044Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1210044Type message, length delimited. Does not implicitly {@link game1210044Type.data1210044Type.verify|verify} messages.
             * @param message data1210044Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210044Type.Idata1210044Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1210044Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1210044Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210044Type.data1210044Type;

            /**
             * Decodes a data1210044Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1210044Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210044Type.data1210044Type;

            /**
             * Verifies a data1210044Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1210044Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1210044Type
             */
            public static fromObject(object: { [k: string]: any }): game1210044Type.data1210044Type;

            /**
             * Creates a plain object from a data1210044Type message. Also converts values to other types if specified.
             * @param message data1210044Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210044Type.data1210044Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1210044Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1210044Type. */
        interface Iupdate1210044Type {

            /** update1210044Type index */
            index: number;

            /** update1210044Type returnFixedGrid */
            returnFixedGrid?: (IgridType[] | null);
        }

        /** Represents an update1210044Type. */
        class update1210044Type implements Iupdate1210044Type {

            /**
             * Constructs a new update1210044Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210044Type.Iupdate1210044Type);

            /** update1210044Type index. */
            public index: number;

            /** update1210044Type returnFixedGrid. */
            public returnFixedGrid: IgridType[];

            /**
             * Creates a new update1210044Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1210044Type instance
             */
            public static create(properties?: game1210044Type.Iupdate1210044Type): game1210044Type.update1210044Type;

            /**
             * Encodes the specified update1210044Type message. Does not implicitly {@link game1210044Type.update1210044Type.verify|verify} messages.
             * @param message update1210044Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210044Type.Iupdate1210044Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1210044Type message, length delimited. Does not implicitly {@link game1210044Type.update1210044Type.verify|verify} messages.
             * @param message update1210044Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210044Type.Iupdate1210044Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1210044Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1210044Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210044Type.update1210044Type;

            /**
             * Decodes an update1210044Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1210044Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210044Type.update1210044Type;

            /**
             * Verifies an update1210044Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1210044Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1210044Type
             */
            public static fromObject(object: { [k: string]: any }): game1210044Type.update1210044Type;

            /**
             * Creates a plain object from an update1210044Type message. Also converts values to other types if specified.
             * @param message update1210044Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210044Type.update1210044Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1210044Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1210045Type. */
    export class game1210045Type implements Igame1210045Type {

        /**
         * Constructs a new game1210045Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1210045Type);

        /** game1210045Type data. */
        public data?: (game1210045Type.Idata1210045Type | null);

        /** game1210045Type update. */
        public update: game1210045Type.Iupdate1210045Type[];

        /**
         * Creates a new game1210045Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1210045Type instance
         */
        public static create(properties?: Igame1210045Type): game1210045Type;

        /**
         * Encodes the specified game1210045Type message. Does not implicitly {@link game1210045Type.verify|verify} messages.
         * @param message game1210045Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1210045Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1210045Type message, length delimited. Does not implicitly {@link game1210045Type.verify|verify} messages.
         * @param message game1210045Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1210045Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1210045Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1210045Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210045Type;

        /**
         * Decodes a game1210045Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1210045Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210045Type;

        /**
         * Verifies a game1210045Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1210045Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1210045Type
         */
        public static fromObject(object: { [k: string]: any }): game1210045Type;

        /**
         * Creates a plain object from a game1210045Type message. Also converts values to other types if specified.
         * @param message game1210045Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1210045Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1210045Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1210045Type {

        /** Properties of a data1210045Type. */
        interface Idata1210045Type {

            /** data1210045Type triggerFreeTimes */
            triggerFreeTimes: number;
        }

        /** Represents a data1210045Type. */
        class data1210045Type implements Idata1210045Type {

            /**
             * Constructs a new data1210045Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210045Type.Idata1210045Type);

            /** data1210045Type triggerFreeTimes. */
            public triggerFreeTimes: number;

            /**
             * Creates a new data1210045Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1210045Type instance
             */
            public static create(properties?: game1210045Type.Idata1210045Type): game1210045Type.data1210045Type;

            /**
             * Encodes the specified data1210045Type message. Does not implicitly {@link game1210045Type.data1210045Type.verify|verify} messages.
             * @param message data1210045Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210045Type.Idata1210045Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1210045Type message, length delimited. Does not implicitly {@link game1210045Type.data1210045Type.verify|verify} messages.
             * @param message data1210045Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210045Type.Idata1210045Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1210045Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1210045Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210045Type.data1210045Type;

            /**
             * Decodes a data1210045Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1210045Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210045Type.data1210045Type;

            /**
             * Verifies a data1210045Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1210045Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1210045Type
             */
            public static fromObject(object: { [k: string]: any }): game1210045Type.data1210045Type;

            /**
             * Creates a plain object from a data1210045Type message. Also converts values to other types if specified.
             * @param message data1210045Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210045Type.data1210045Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1210045Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1210045Type. */
        interface Iupdate1210045Type {

            /** update1210045Type index */
            index: number;

            /** update1210045Type triggerFreeTimes */
            triggerFreeTimes: number;
        }

        /** Represents an update1210045Type. */
        class update1210045Type implements Iupdate1210045Type {

            /**
             * Constructs a new update1210045Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210045Type.Iupdate1210045Type);

            /** update1210045Type index. */
            public index: number;

            /** update1210045Type triggerFreeTimes. */
            public triggerFreeTimes: number;

            /**
             * Creates a new update1210045Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1210045Type instance
             */
            public static create(properties?: game1210045Type.Iupdate1210045Type): game1210045Type.update1210045Type;

            /**
             * Encodes the specified update1210045Type message. Does not implicitly {@link game1210045Type.update1210045Type.verify|verify} messages.
             * @param message update1210045Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210045Type.Iupdate1210045Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1210045Type message, length delimited. Does not implicitly {@link game1210045Type.update1210045Type.verify|verify} messages.
             * @param message update1210045Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210045Type.Iupdate1210045Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1210045Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1210045Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210045Type.update1210045Type;

            /**
             * Decodes an update1210045Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1210045Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210045Type.update1210045Type;

            /**
             * Verifies an update1210045Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1210045Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1210045Type
             */
            public static fromObject(object: { [k: string]: any }): game1210045Type.update1210045Type;

            /**
             * Creates a plain object from an update1210045Type message. Also converts values to other types if specified.
             * @param message update1210045Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210045Type.update1210045Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1210045Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1210059Type. */
    export class game1210059Type implements Igame1210059Type {

        /**
         * Constructs a new game1210059Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1210059Type);

        /** game1210059Type data. */
        public data?: (game1210059Type.Idata1210059Type | null);

        /** game1210059Type update. */
        public update: game1210059Type.Iupdate1210059Type[];

        /**
         * Creates a new game1210059Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1210059Type instance
         */
        public static create(properties?: Igame1210059Type): game1210059Type;

        /**
         * Encodes the specified game1210059Type message. Does not implicitly {@link game1210059Type.verify|verify} messages.
         * @param message game1210059Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1210059Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1210059Type message, length delimited. Does not implicitly {@link game1210059Type.verify|verify} messages.
         * @param message game1210059Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1210059Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1210059Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1210059Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210059Type;

        /**
         * Decodes a game1210059Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1210059Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210059Type;

        /**
         * Verifies a game1210059Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1210059Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1210059Type
         */
        public static fromObject(object: { [k: string]: any }): game1210059Type;

        /**
         * Creates a plain object from a game1210059Type message. Also converts values to other types if specified.
         * @param message game1210059Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1210059Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1210059Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1210059Type {

        /** Properties of a data1210059Type. */
        interface Idata1210059Type {

            /** data1210059Type taskList */
            taskList?: (ITaskListType[] | null);

            /** data1210059Type turntableReward */
            turntableReward: number;
        }

        /** Represents a data1210059Type. */
        class data1210059Type implements Idata1210059Type {

            /**
             * Constructs a new data1210059Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210059Type.Idata1210059Type);

            /** data1210059Type taskList. */
            public taskList: ITaskListType[];

            /** data1210059Type turntableReward. */
            public turntableReward: number;

            /**
             * Creates a new data1210059Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1210059Type instance
             */
            public static create(properties?: game1210059Type.Idata1210059Type): game1210059Type.data1210059Type;

            /**
             * Encodes the specified data1210059Type message. Does not implicitly {@link game1210059Type.data1210059Type.verify|verify} messages.
             * @param message data1210059Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210059Type.Idata1210059Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1210059Type message, length delimited. Does not implicitly {@link game1210059Type.data1210059Type.verify|verify} messages.
             * @param message data1210059Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210059Type.Idata1210059Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1210059Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1210059Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210059Type.data1210059Type;

            /**
             * Decodes a data1210059Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1210059Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210059Type.data1210059Type;

            /**
             * Verifies a data1210059Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1210059Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1210059Type
             */
            public static fromObject(object: { [k: string]: any }): game1210059Type.data1210059Type;

            /**
             * Creates a plain object from a data1210059Type message. Also converts values to other types if specified.
             * @param message data1210059Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210059Type.data1210059Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1210059Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1210059Type. */
        interface Iupdate1210059Type {

            /** update1210059Type index */
            index: number;

            /** update1210059Type taskList */
            taskList?: (ITaskListType[] | null);

            /** update1210059Type turntableReward */
            turntableReward: number;
        }

        /** Represents an update1210059Type. */
        class update1210059Type implements Iupdate1210059Type {

            /**
             * Constructs a new update1210059Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210059Type.Iupdate1210059Type);

            /** update1210059Type index. */
            public index: number;

            /** update1210059Type taskList. */
            public taskList: ITaskListType[];

            /** update1210059Type turntableReward. */
            public turntableReward: number;

            /**
             * Creates a new update1210059Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1210059Type instance
             */
            public static create(properties?: game1210059Type.Iupdate1210059Type): game1210059Type.update1210059Type;

            /**
             * Encodes the specified update1210059Type message. Does not implicitly {@link game1210059Type.update1210059Type.verify|verify} messages.
             * @param message update1210059Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210059Type.Iupdate1210059Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1210059Type message, length delimited. Does not implicitly {@link game1210059Type.update1210059Type.verify|verify} messages.
             * @param message update1210059Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210059Type.Iupdate1210059Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1210059Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1210059Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210059Type.update1210059Type;

            /**
             * Decodes an update1210059Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1210059Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210059Type.update1210059Type;

            /**
             * Verifies an update1210059Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1210059Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1210059Type
             */
            public static fromObject(object: { [k: string]: any }): game1210059Type.update1210059Type;

            /**
             * Creates a plain object from an update1210059Type message. Also converts values to other types if specified.
             * @param message update1210059Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210059Type.update1210059Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1210059Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a TaskListType. */
    export class TaskListType implements ITaskListType {

        /**
         * Constructs a new TaskListType.
         * @param [properties] Properties to set
         */
        constructor(properties?: ITaskListType);

        /** TaskListType elementId. */
        public elementId: number;

        /** TaskListType num. */
        public num: number;

        /** TaskListType maxNum. */
        public maxNum: number;

        /** TaskListType numToRewardRate. */
        public numToRewardRate: InumMapRateType[];

        /**
         * Creates a new TaskListType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TaskListType instance
         */
        public static create(properties?: ITaskListType): TaskListType;

        /**
         * Encodes the specified TaskListType message. Does not implicitly {@link TaskListType.verify|verify} messages.
         * @param message TaskListType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ITaskListType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TaskListType message, length delimited. Does not implicitly {@link TaskListType.verify|verify} messages.
         * @param message TaskListType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ITaskListType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TaskListType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TaskListType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): TaskListType;

        /**
         * Decodes a TaskListType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TaskListType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): TaskListType;

        /**
         * Verifies a TaskListType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a TaskListType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TaskListType
         */
        public static fromObject(object: { [k: string]: any }): TaskListType;

        /**
         * Creates a plain object from a TaskListType message. Also converts values to other types if specified.
         * @param message TaskListType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: TaskListType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TaskListType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a numMapRateType. */
    export class numMapRateType implements InumMapRateType {

        /**
         * Constructs a new numMapRateType.
         * @param [properties] Properties to set
         */
        constructor(properties?: InumMapRateType);

        /** numMapRateType num. */
        public num: number;

        /** numMapRateType rate. */
        public rate: number;

        /**
         * Creates a new numMapRateType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns numMapRateType instance
         */
        public static create(properties?: InumMapRateType): numMapRateType;

        /**
         * Encodes the specified numMapRateType message. Does not implicitly {@link numMapRateType.verify|verify} messages.
         * @param message numMapRateType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: InumMapRateType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified numMapRateType message, length delimited. Does not implicitly {@link numMapRateType.verify|verify} messages.
         * @param message numMapRateType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: InumMapRateType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a numMapRateType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns numMapRateType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): numMapRateType;

        /**
         * Decodes a numMapRateType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns numMapRateType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): numMapRateType;

        /**
         * Verifies a numMapRateType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a numMapRateType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns numMapRateType
         */
        public static fromObject(object: { [k: string]: any }): numMapRateType;

        /**
         * Creates a plain object from a numMapRateType message. Also converts values to other types if specified.
         * @param message numMapRateType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: numMapRateType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this numMapRateType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a game1210082Type. */
    export class game1210082Type implements Igame1210082Type {

        /**
         * Constructs a new game1210082Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1210082Type);

        /** game1210082Type data. */
        public data?: (game1210082Type.Idata1210082Type | null);

        /** game1210082Type update. */
        public update: game1210082Type.Iupdate1210082Type[];

        /**
         * Creates a new game1210082Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1210082Type instance
         */
        public static create(properties?: Igame1210082Type): game1210082Type;

        /**
         * Encodes the specified game1210082Type message. Does not implicitly {@link game1210082Type.verify|verify} messages.
         * @param message game1210082Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1210082Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1210082Type message, length delimited. Does not implicitly {@link game1210082Type.verify|verify} messages.
         * @param message game1210082Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1210082Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1210082Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1210082Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210082Type;

        /**
         * Decodes a game1210082Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1210082Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210082Type;

        /**
         * Verifies a game1210082Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1210082Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1210082Type
         */
        public static fromObject(object: { [k: string]: any }): game1210082Type;

        /**
         * Creates a plain object from a game1210082Type message. Also converts values to other types if specified.
         * @param message game1210082Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1210082Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1210082Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1210082Type {

        /** Properties of a data1210082Type. */
        interface Idata1210082Type {

            /** data1210082Type taskList */
            taskList?: (game1210082Type.ITaskListType[] | null);

            /** data1210082Type columnDirection */
            columnDirection?: (game1210082Type.IcolumnDirectionType[] | null);
        }

        /** Represents a data1210082Type. */
        class data1210082Type implements Idata1210082Type {

            /**
             * Constructs a new data1210082Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210082Type.Idata1210082Type);

            /** data1210082Type taskList. */
            public taskList: game1210082Type.ITaskListType[];

            /** data1210082Type columnDirection. */
            public columnDirection: game1210082Type.IcolumnDirectionType[];

            /**
             * Creates a new data1210082Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1210082Type instance
             */
            public static create(properties?: game1210082Type.Idata1210082Type): game1210082Type.data1210082Type;

            /**
             * Encodes the specified data1210082Type message. Does not implicitly {@link game1210082Type.data1210082Type.verify|verify} messages.
             * @param message data1210082Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210082Type.Idata1210082Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1210082Type message, length delimited. Does not implicitly {@link game1210082Type.data1210082Type.verify|verify} messages.
             * @param message data1210082Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210082Type.Idata1210082Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1210082Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1210082Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210082Type.data1210082Type;

            /**
             * Decodes a data1210082Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1210082Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210082Type.data1210082Type;

            /**
             * Verifies a data1210082Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1210082Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1210082Type
             */
            public static fromObject(object: { [k: string]: any }): game1210082Type.data1210082Type;

            /**
             * Creates a plain object from a data1210082Type message. Also converts values to other types if specified.
             * @param message data1210082Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210082Type.data1210082Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1210082Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1210082Type. */
        interface Iupdate1210082Type {

            /** update1210082Type index */
            index: number;

            /** update1210082Type taskList */
            taskList?: (game1210082Type.ITaskListType[] | null);

            /** update1210082Type columnDirection */
            columnDirection?: (game1210082Type.IcolumnDirectionType[] | null);
        }

        /** Represents an update1210082Type. */
        class update1210082Type implements Iupdate1210082Type {

            /**
             * Constructs a new update1210082Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210082Type.Iupdate1210082Type);

            /** update1210082Type index. */
            public index: number;

            /** update1210082Type taskList. */
            public taskList: game1210082Type.ITaskListType[];

            /** update1210082Type columnDirection. */
            public columnDirection: game1210082Type.IcolumnDirectionType[];

            /**
             * Creates a new update1210082Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1210082Type instance
             */
            public static create(properties?: game1210082Type.Iupdate1210082Type): game1210082Type.update1210082Type;

            /**
             * Encodes the specified update1210082Type message. Does not implicitly {@link game1210082Type.update1210082Type.verify|verify} messages.
             * @param message update1210082Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210082Type.Iupdate1210082Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1210082Type message, length delimited. Does not implicitly {@link game1210082Type.update1210082Type.verify|verify} messages.
             * @param message update1210082Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210082Type.Iupdate1210082Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1210082Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1210082Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210082Type.update1210082Type;

            /**
             * Decodes an update1210082Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1210082Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210082Type.update1210082Type;

            /**
             * Verifies an update1210082Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1210082Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1210082Type
             */
            public static fromObject(object: { [k: string]: any }): game1210082Type.update1210082Type;

            /**
             * Creates a plain object from an update1210082Type message. Also converts values to other types if specified.
             * @param message update1210082Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210082Type.update1210082Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1210082Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a TaskListType. */
        interface ITaskListType {

            /** TaskListType column */
            column: number;

            /** TaskListType num */
            num: number;

            /** TaskListType targetNum */
            targetNum: number;

            /** TaskListType isTrigger */
            isTrigger: boolean;

            /** TaskListType collectGrid */
            collectGrid?: (game1210082Type.IcollectGridType[] | null);
        }

        /** Represents a TaskListType. */
        class TaskListType implements ITaskListType {

            /**
             * Constructs a new TaskListType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210082Type.ITaskListType);

            /** TaskListType column. */
            public column: number;

            /** TaskListType num. */
            public num: number;

            /** TaskListType targetNum. */
            public targetNum: number;

            /** TaskListType isTrigger. */
            public isTrigger: boolean;

            /** TaskListType collectGrid. */
            public collectGrid: game1210082Type.IcollectGridType[];

            /**
             * Creates a new TaskListType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TaskListType instance
             */
            public static create(properties?: game1210082Type.ITaskListType): game1210082Type.TaskListType;

            /**
             * Encodes the specified TaskListType message. Does not implicitly {@link game1210082Type.TaskListType.verify|verify} messages.
             * @param message TaskListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210082Type.ITaskListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified TaskListType message, length delimited. Does not implicitly {@link game1210082Type.TaskListType.verify|verify} messages.
             * @param message TaskListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210082Type.ITaskListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a TaskListType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TaskListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210082Type.TaskListType;

            /**
             * Decodes a TaskListType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TaskListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210082Type.TaskListType;

            /**
             * Verifies a TaskListType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a TaskListType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TaskListType
             */
            public static fromObject(object: { [k: string]: any }): game1210082Type.TaskListType;

            /**
             * Creates a plain object from a TaskListType message. Also converts values to other types if specified.
             * @param message TaskListType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210082Type.TaskListType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TaskListType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a collectGridType. */
        interface IcollectGridType {

            /** collectGridType pos */
            pos: number;

            /** collectGridType elem */
            elem: number;
        }

        /** Represents a collectGridType. */
        class collectGridType implements IcollectGridType {

            /**
             * Constructs a new collectGridType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210082Type.IcollectGridType);

            /** collectGridType pos. */
            public pos: number;

            /** collectGridType elem. */
            public elem: number;

            /**
             * Creates a new collectGridType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns collectGridType instance
             */
            public static create(properties?: game1210082Type.IcollectGridType): game1210082Type.collectGridType;

            /**
             * Encodes the specified collectGridType message. Does not implicitly {@link game1210082Type.collectGridType.verify|verify} messages.
             * @param message collectGridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210082Type.IcollectGridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified collectGridType message, length delimited. Does not implicitly {@link game1210082Type.collectGridType.verify|verify} messages.
             * @param message collectGridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210082Type.IcollectGridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a collectGridType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns collectGridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210082Type.collectGridType;

            /**
             * Decodes a collectGridType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns collectGridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210082Type.collectGridType;

            /**
             * Verifies a collectGridType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a collectGridType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns collectGridType
             */
            public static fromObject(object: { [k: string]: any }): game1210082Type.collectGridType;

            /**
             * Creates a plain object from a collectGridType message. Also converts values to other types if specified.
             * @param message collectGridType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210082Type.collectGridType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this collectGridType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a columnDirectionType. */
        interface IcolumnDirectionType {

            /** columnDirectionType column */
            column: number;

            /** columnDirectionType dir */
            dir: number;
        }

        /** Represents a columnDirectionType. */
        class columnDirectionType implements IcolumnDirectionType {

            /**
             * Constructs a new columnDirectionType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210082Type.IcolumnDirectionType);

            /** columnDirectionType column. */
            public column: number;

            /** columnDirectionType dir. */
            public dir: number;

            /**
             * Creates a new columnDirectionType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns columnDirectionType instance
             */
            public static create(properties?: game1210082Type.IcolumnDirectionType): game1210082Type.columnDirectionType;

            /**
             * Encodes the specified columnDirectionType message. Does not implicitly {@link game1210082Type.columnDirectionType.verify|verify} messages.
             * @param message columnDirectionType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210082Type.IcolumnDirectionType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified columnDirectionType message, length delimited. Does not implicitly {@link game1210082Type.columnDirectionType.verify|verify} messages.
             * @param message columnDirectionType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210082Type.IcolumnDirectionType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a columnDirectionType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns columnDirectionType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210082Type.columnDirectionType;

            /**
             * Decodes a columnDirectionType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns columnDirectionType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210082Type.columnDirectionType;

            /**
             * Verifies a columnDirectionType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a columnDirectionType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns columnDirectionType
             */
            public static fromObject(object: { [k: string]: any }): game1210082Type.columnDirectionType;

            /**
             * Creates a plain object from a columnDirectionType message. Also converts values to other types if specified.
             * @param message columnDirectionType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210082Type.columnDirectionType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this columnDirectionType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1210093Type. */
    export class game1210093Type implements Igame1210093Type {

        /**
         * Constructs a new game1210093Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1210093Type);

        /** game1210093Type data. */
        public data?: (game1210093Type.Idata1210093Type | null);

        /** game1210093Type update. */
        public update: game1210093Type.Iupdate1210093Type[];

        /**
         * Creates a new game1210093Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1210093Type instance
         */
        public static create(properties?: Igame1210093Type): game1210093Type;

        /**
         * Encodes the specified game1210093Type message. Does not implicitly {@link game1210093Type.verify|verify} messages.
         * @param message game1210093Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1210093Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1210093Type message, length delimited. Does not implicitly {@link game1210093Type.verify|verify} messages.
         * @param message game1210093Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1210093Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1210093Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1210093Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210093Type;

        /**
         * Decodes a game1210093Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1210093Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210093Type;

        /**
         * Verifies a game1210093Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1210093Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1210093Type
         */
        public static fromObject(object: { [k: string]: any }): game1210093Type;

        /**
         * Creates a plain object from a game1210093Type message. Also converts values to other types if specified.
         * @param message game1210093Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1210093Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1210093Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1210093Type {

        /** Properties of a data1210093Type. */
        interface Idata1210093Type {

            /** data1210093Type colLevelList */
            colLevelList?: (game1210093Type.IColLevelListType[] | null);

            /** data1210093Type beforeGird */
            beforeGird?: (game1210093Type.IGridType[] | null);

            /** data1210093Type afterGrid */
            afterGrid?: (game1210093Type.IGridType[] | null);

            /** data1210093Type posAbsorbList */
            posAbsorbList?: (game1210093Type.IPosAbsorbList[] | null);

            /** data1210093Type rewardTurntable */
            rewardTurntable?: (number[] | null);

            /** data1210093Type p2p */
            p2p?: (game1210093Type.IP2PType[] | null);
        }

        /** Represents a data1210093Type. */
        class data1210093Type implements Idata1210093Type {

            /**
             * Constructs a new data1210093Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210093Type.Idata1210093Type);

            /** data1210093Type colLevelList. */
            public colLevelList: game1210093Type.IColLevelListType[];

            /** data1210093Type beforeGird. */
            public beforeGird: game1210093Type.IGridType[];

            /** data1210093Type afterGrid. */
            public afterGrid: game1210093Type.IGridType[];

            /** data1210093Type posAbsorbList. */
            public posAbsorbList: game1210093Type.IPosAbsorbList[];

            /** data1210093Type rewardTurntable. */
            public rewardTurntable: number[];

            /** data1210093Type p2p. */
            public p2p: game1210093Type.IP2PType[];

            /**
             * Creates a new data1210093Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1210093Type instance
             */
            public static create(properties?: game1210093Type.Idata1210093Type): game1210093Type.data1210093Type;

            /**
             * Encodes the specified data1210093Type message. Does not implicitly {@link game1210093Type.data1210093Type.verify|verify} messages.
             * @param message data1210093Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210093Type.Idata1210093Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1210093Type message, length delimited. Does not implicitly {@link game1210093Type.data1210093Type.verify|verify} messages.
             * @param message data1210093Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210093Type.Idata1210093Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1210093Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1210093Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210093Type.data1210093Type;

            /**
             * Decodes a data1210093Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1210093Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210093Type.data1210093Type;

            /**
             * Verifies a data1210093Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1210093Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1210093Type
             */
            public static fromObject(object: { [k: string]: any }): game1210093Type.data1210093Type;

            /**
             * Creates a plain object from a data1210093Type message. Also converts values to other types if specified.
             * @param message data1210093Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210093Type.data1210093Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1210093Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1210093Type. */
        interface Iupdate1210093Type {

            /** update1210093Type index */
            index: number;

            /** update1210093Type colLevelList */
            colLevelList?: (game1210093Type.IColLevelListType[] | null);

            /** update1210093Type beforeGird */
            beforeGird?: (game1210093Type.IGridType[] | null);

            /** update1210093Type afterGrid */
            afterGrid?: (game1210093Type.IGridType[] | null);

            /** update1210093Type posAbsorbList */
            posAbsorbList?: (game1210093Type.IPosAbsorbList[] | null);

            /** update1210093Type rewardTurntable */
            rewardTurntable?: (number[] | null);

            /** update1210093Type p2p */
            p2p?: (game1210093Type.IP2PType[] | null);
        }

        /** Represents an update1210093Type. */
        class update1210093Type implements Iupdate1210093Type {

            /**
             * Constructs a new update1210093Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210093Type.Iupdate1210093Type);

            /** update1210093Type index. */
            public index: number;

            /** update1210093Type colLevelList. */
            public colLevelList: game1210093Type.IColLevelListType[];

            /** update1210093Type beforeGird. */
            public beforeGird: game1210093Type.IGridType[];

            /** update1210093Type afterGrid. */
            public afterGrid: game1210093Type.IGridType[];

            /** update1210093Type posAbsorbList. */
            public posAbsorbList: game1210093Type.IPosAbsorbList[];

            /** update1210093Type rewardTurntable. */
            public rewardTurntable: number[];

            /** update1210093Type p2p. */
            public p2p: game1210093Type.IP2PType[];

            /**
             * Creates a new update1210093Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1210093Type instance
             */
            public static create(properties?: game1210093Type.Iupdate1210093Type): game1210093Type.update1210093Type;

            /**
             * Encodes the specified update1210093Type message. Does not implicitly {@link game1210093Type.update1210093Type.verify|verify} messages.
             * @param message update1210093Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210093Type.Iupdate1210093Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1210093Type message, length delimited. Does not implicitly {@link game1210093Type.update1210093Type.verify|verify} messages.
             * @param message update1210093Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210093Type.Iupdate1210093Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1210093Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1210093Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210093Type.update1210093Type;

            /**
             * Decodes an update1210093Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1210093Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210093Type.update1210093Type;

            /**
             * Verifies an update1210093Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1210093Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1210093Type
             */
            public static fromObject(object: { [k: string]: any }): game1210093Type.update1210093Type;

            /**
             * Creates a plain object from an update1210093Type message. Also converts values to other types if specified.
             * @param message update1210093Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210093Type.update1210093Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1210093Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ColLevelListType. */
        interface IColLevelListType {

            /** ColLevelListType col */
            col: number;

            /** ColLevelListType lv */
            lv: number;
        }

        /** Represents a ColLevelListType. */
        class ColLevelListType implements IColLevelListType {

            /**
             * Constructs a new ColLevelListType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210093Type.IColLevelListType);

            /** ColLevelListType col. */
            public col: number;

            /** ColLevelListType lv. */
            public lv: number;

            /**
             * Creates a new ColLevelListType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ColLevelListType instance
             */
            public static create(properties?: game1210093Type.IColLevelListType): game1210093Type.ColLevelListType;

            /**
             * Encodes the specified ColLevelListType message. Does not implicitly {@link game1210093Type.ColLevelListType.verify|verify} messages.
             * @param message ColLevelListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210093Type.IColLevelListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ColLevelListType message, length delimited. Does not implicitly {@link game1210093Type.ColLevelListType.verify|verify} messages.
             * @param message ColLevelListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210093Type.IColLevelListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ColLevelListType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ColLevelListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210093Type.ColLevelListType;

            /**
             * Decodes a ColLevelListType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ColLevelListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210093Type.ColLevelListType;

            /**
             * Verifies a ColLevelListType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a ColLevelListType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ColLevelListType
             */
            public static fromObject(object: { [k: string]: any }): game1210093Type.ColLevelListType;

            /**
             * Creates a plain object from a ColLevelListType message. Also converts values to other types if specified.
             * @param message ColLevelListType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210093Type.ColLevelListType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ColLevelListType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GridType. */
        interface IGridType {

            /** GridType pos */
            pos: number;

            /** GridType elem */
            elem: number;
        }

        /** Represents a GridType. */
        class GridType implements IGridType {

            /**
             * Constructs a new GridType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210093Type.IGridType);

            /** GridType pos. */
            public pos: number;

            /** GridType elem. */
            public elem: number;

            /**
             * Creates a new GridType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GridType instance
             */
            public static create(properties?: game1210093Type.IGridType): game1210093Type.GridType;

            /**
             * Encodes the specified GridType message. Does not implicitly {@link game1210093Type.GridType.verify|verify} messages.
             * @param message GridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210093Type.IGridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GridType message, length delimited. Does not implicitly {@link game1210093Type.GridType.verify|verify} messages.
             * @param message GridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210093Type.IGridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GridType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210093Type.GridType;

            /**
             * Decodes a GridType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210093Type.GridType;

            /**
             * Verifies a GridType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a GridType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GridType
             */
            public static fromObject(object: { [k: string]: any }): game1210093Type.GridType;

            /**
             * Creates a plain object from a GridType message. Also converts values to other types if specified.
             * @param message GridType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210093Type.GridType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GridType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a PosAbsorbList. */
        interface IPosAbsorbList {

            /** PosAbsorbList pos */
            pos: number;

            /** PosAbsorbList abl */
            abl?: (number[] | null);
        }

        /** Represents a PosAbsorbList. */
        class PosAbsorbList implements IPosAbsorbList {

            /**
             * Constructs a new PosAbsorbList.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210093Type.IPosAbsorbList);

            /** PosAbsorbList pos. */
            public pos: number;

            /** PosAbsorbList abl. */
            public abl: number[];

            /**
             * Creates a new PosAbsorbList instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PosAbsorbList instance
             */
            public static create(properties?: game1210093Type.IPosAbsorbList): game1210093Type.PosAbsorbList;

            /**
             * Encodes the specified PosAbsorbList message. Does not implicitly {@link game1210093Type.PosAbsorbList.verify|verify} messages.
             * @param message PosAbsorbList message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210093Type.IPosAbsorbList, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PosAbsorbList message, length delimited. Does not implicitly {@link game1210093Type.PosAbsorbList.verify|verify} messages.
             * @param message PosAbsorbList message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210093Type.IPosAbsorbList, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PosAbsorbList message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PosAbsorbList
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210093Type.PosAbsorbList;

            /**
             * Decodes a PosAbsorbList message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PosAbsorbList
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210093Type.PosAbsorbList;

            /**
             * Verifies a PosAbsorbList message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a PosAbsorbList message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PosAbsorbList
             */
            public static fromObject(object: { [k: string]: any }): game1210093Type.PosAbsorbList;

            /**
             * Creates a plain object from a PosAbsorbList message. Also converts values to other types if specified.
             * @param message PosAbsorbList
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210093Type.PosAbsorbList, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PosAbsorbList to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a P2PType. */
        interface IP2PType {

            /** P2PType from */
            from: number;

            /** P2PType to */
            to: number;
        }

        /** Represents a P2PType. */
        class P2PType implements IP2PType {

            /**
             * Constructs a new P2PType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210093Type.IP2PType);

            /** P2PType from. */
            public from: number;

            /** P2PType to. */
            public to: number;

            /**
             * Creates a new P2PType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns P2PType instance
             */
            public static create(properties?: game1210093Type.IP2PType): game1210093Type.P2PType;

            /**
             * Encodes the specified P2PType message. Does not implicitly {@link game1210093Type.P2PType.verify|verify} messages.
             * @param message P2PType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210093Type.IP2PType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified P2PType message, length delimited. Does not implicitly {@link game1210093Type.P2PType.verify|verify} messages.
             * @param message P2PType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210093Type.IP2PType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a P2PType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns P2PType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210093Type.P2PType;

            /**
             * Decodes a P2PType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns P2PType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210093Type.P2PType;

            /**
             * Verifies a P2PType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a P2PType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns P2PType
             */
            public static fromObject(object: { [k: string]: any }): game1210093Type.P2PType;

            /**
             * Creates a plain object from a P2PType message. Also converts values to other types if specified.
             * @param message P2PType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210093Type.P2PType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this P2PType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1210094Type. */
    export class game1210094Type implements Igame1210094Type {

        /**
         * Constructs a new game1210094Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1210094Type);

        /** game1210094Type data. */
        public data?: (game1210094Type.Idata1210094Type | null);

        /** game1210094Type update. */
        public update: game1210094Type.Iupdate1210094Type[];

        /**
         * Creates a new game1210094Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1210094Type instance
         */
        public static create(properties?: Igame1210094Type): game1210094Type;

        /**
         * Encodes the specified game1210094Type message. Does not implicitly {@link game1210094Type.verify|verify} messages.
         * @param message game1210094Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1210094Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1210094Type message, length delimited. Does not implicitly {@link game1210094Type.verify|verify} messages.
         * @param message game1210094Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1210094Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1210094Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1210094Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210094Type;

        /**
         * Decodes a game1210094Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1210094Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210094Type;

        /**
         * Verifies a game1210094Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1210094Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1210094Type
         */
        public static fromObject(object: { [k: string]: any }): game1210094Type;

        /**
         * Creates a plain object from a game1210094Type message. Also converts values to other types if specified.
         * @param message game1210094Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1210094Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1210094Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1210094Type {

        /** Properties of a data1210094Type. */
        interface Idata1210094Type {

            /** data1210094Type taskList */
            taskList?: (game1210094Type.ITaskListType[] | null);

            /** data1210094Type rewardCoin */
            rewardCoin: (number | Long);

            /** data1210094Type elemFrame */
            elemFrame: number;
        }

        /** Represents a data1210094Type. */
        class data1210094Type implements Idata1210094Type {

            /**
             * Constructs a new data1210094Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210094Type.Idata1210094Type);

            /** data1210094Type taskList. */
            public taskList: game1210094Type.ITaskListType[];

            /** data1210094Type rewardCoin. */
            public rewardCoin: (number | Long);

            /** data1210094Type elemFrame. */
            public elemFrame: number;

            /**
             * Creates a new data1210094Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1210094Type instance
             */
            public static create(properties?: game1210094Type.Idata1210094Type): game1210094Type.data1210094Type;

            /**
             * Encodes the specified data1210094Type message. Does not implicitly {@link game1210094Type.data1210094Type.verify|verify} messages.
             * @param message data1210094Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210094Type.Idata1210094Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1210094Type message, length delimited. Does not implicitly {@link game1210094Type.data1210094Type.verify|verify} messages.
             * @param message data1210094Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210094Type.Idata1210094Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1210094Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1210094Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210094Type.data1210094Type;

            /**
             * Decodes a data1210094Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1210094Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210094Type.data1210094Type;

            /**
             * Verifies a data1210094Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1210094Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1210094Type
             */
            public static fromObject(object: { [k: string]: any }): game1210094Type.data1210094Type;

            /**
             * Creates a plain object from a data1210094Type message. Also converts values to other types if specified.
             * @param message data1210094Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210094Type.data1210094Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1210094Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1210094Type. */
        interface Iupdate1210094Type {

            /** update1210094Type index */
            index: number;

            /** update1210094Type taskList */
            taskList?: (game1210094Type.ITaskListType[] | null);

            /** update1210094Type rewardCoin */
            rewardCoin: (number | Long);

            /** update1210094Type elemFrame */
            elemFrame: number;
        }

        /** Represents an update1210094Type. */
        class update1210094Type implements Iupdate1210094Type {

            /**
             * Constructs a new update1210094Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210094Type.Iupdate1210094Type);

            /** update1210094Type index. */
            public index: number;

            /** update1210094Type taskList. */
            public taskList: game1210094Type.ITaskListType[];

            /** update1210094Type rewardCoin. */
            public rewardCoin: (number | Long);

            /** update1210094Type elemFrame. */
            public elemFrame: number;

            /**
             * Creates a new update1210094Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1210094Type instance
             */
            public static create(properties?: game1210094Type.Iupdate1210094Type): game1210094Type.update1210094Type;

            /**
             * Encodes the specified update1210094Type message. Does not implicitly {@link game1210094Type.update1210094Type.verify|verify} messages.
             * @param message update1210094Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210094Type.Iupdate1210094Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1210094Type message, length delimited. Does not implicitly {@link game1210094Type.update1210094Type.verify|verify} messages.
             * @param message update1210094Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210094Type.Iupdate1210094Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1210094Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1210094Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210094Type.update1210094Type;

            /**
             * Decodes an update1210094Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1210094Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210094Type.update1210094Type;

            /**
             * Verifies an update1210094Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1210094Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1210094Type
             */
            public static fromObject(object: { [k: string]: any }): game1210094Type.update1210094Type;

            /**
             * Creates a plain object from an update1210094Type message. Also converts values to other types if specified.
             * @param message update1210094Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210094Type.update1210094Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1210094Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a TaskListType. */
        interface ITaskListType {

            /** TaskListType rate */
            rate: (number | Long);

            /** TaskListType elementIdList */
            elementIdList?: (number[] | null);
        }

        /** Represents a TaskListType. */
        class TaskListType implements ITaskListType {

            /**
             * Constructs a new TaskListType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210094Type.ITaskListType);

            /** TaskListType rate. */
            public rate: (number | Long);

            /** TaskListType elementIdList. */
            public elementIdList: number[];

            /**
             * Creates a new TaskListType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TaskListType instance
             */
            public static create(properties?: game1210094Type.ITaskListType): game1210094Type.TaskListType;

            /**
             * Encodes the specified TaskListType message. Does not implicitly {@link game1210094Type.TaskListType.verify|verify} messages.
             * @param message TaskListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210094Type.ITaskListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified TaskListType message, length delimited. Does not implicitly {@link game1210094Type.TaskListType.verify|verify} messages.
             * @param message TaskListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210094Type.ITaskListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a TaskListType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TaskListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210094Type.TaskListType;

            /**
             * Decodes a TaskListType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TaskListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210094Type.TaskListType;

            /**
             * Verifies a TaskListType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a TaskListType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TaskListType
             */
            public static fromObject(object: { [k: string]: any }): game1210094Type.TaskListType;

            /**
             * Creates a plain object from a TaskListType message. Also converts values to other types if specified.
             * @param message TaskListType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210094Type.TaskListType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TaskListType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1210109Type. */
    export class game1210109Type implements Igame1210109Type {

        /**
         * Constructs a new game1210109Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1210109Type);

        /** game1210109Type data. */
        public data?: (game1210109Type.Idata1210109Type | null);

        /** game1210109Type update. */
        public update: game1210109Type.Iupdate1210109Type[];

        /**
         * Creates a new game1210109Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1210109Type instance
         */
        public static create(properties?: Igame1210109Type): game1210109Type;

        /**
         * Encodes the specified game1210109Type message. Does not implicitly {@link game1210109Type.verify|verify} messages.
         * @param message game1210109Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1210109Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1210109Type message, length delimited. Does not implicitly {@link game1210109Type.verify|verify} messages.
         * @param message game1210109Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1210109Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1210109Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1210109Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210109Type;

        /**
         * Decodes a game1210109Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1210109Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210109Type;

        /**
         * Verifies a game1210109Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1210109Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1210109Type
         */
        public static fromObject(object: { [k: string]: any }): game1210109Type;

        /**
         * Creates a plain object from a game1210109Type message. Also converts values to other types if specified.
         * @param message game1210109Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1210109Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1210109Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1210109Type {

        /** Properties of a data1210109Type. */
        interface Idata1210109Type {

            /** data1210109Type coverGrid */
            coverGrid?: (IgridType[] | null);

            /** data1210109Type boomPosList */
            boomPosList?: (number[] | null);

            /** data1210109Type randomPosList */
            randomPosList?: (number[] | null);
        }

        /** Represents a data1210109Type. */
        class data1210109Type implements Idata1210109Type {

            /**
             * Constructs a new data1210109Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210109Type.Idata1210109Type);

            /** data1210109Type coverGrid. */
            public coverGrid: IgridType[];

            /** data1210109Type boomPosList. */
            public boomPosList: number[];

            /** data1210109Type randomPosList. */
            public randomPosList: number[];

            /**
             * Creates a new data1210109Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1210109Type instance
             */
            public static create(properties?: game1210109Type.Idata1210109Type): game1210109Type.data1210109Type;

            /**
             * Encodes the specified data1210109Type message. Does not implicitly {@link game1210109Type.data1210109Type.verify|verify} messages.
             * @param message data1210109Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210109Type.Idata1210109Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1210109Type message, length delimited. Does not implicitly {@link game1210109Type.data1210109Type.verify|verify} messages.
             * @param message data1210109Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210109Type.Idata1210109Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1210109Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1210109Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210109Type.data1210109Type;

            /**
             * Decodes a data1210109Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1210109Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210109Type.data1210109Type;

            /**
             * Verifies a data1210109Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1210109Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1210109Type
             */
            public static fromObject(object: { [k: string]: any }): game1210109Type.data1210109Type;

            /**
             * Creates a plain object from a data1210109Type message. Also converts values to other types if specified.
             * @param message data1210109Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210109Type.data1210109Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1210109Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1210109Type. */
        interface Iupdate1210109Type {

            /** update1210109Type index */
            index: number;

            /** update1210109Type coverGrid */
            coverGrid?: (IgridType[] | null);

            /** update1210109Type boomPosList */
            boomPosList?: (number[] | null);

            /** update1210109Type randomPosList */
            randomPosList?: (number[] | null);
        }

        /** Represents an update1210109Type. */
        class update1210109Type implements Iupdate1210109Type {

            /**
             * Constructs a new update1210109Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210109Type.Iupdate1210109Type);

            /** update1210109Type index. */
            public index: number;

            /** update1210109Type coverGrid. */
            public coverGrid: IgridType[];

            /** update1210109Type boomPosList. */
            public boomPosList: number[];

            /** update1210109Type randomPosList. */
            public randomPosList: number[];

            /**
             * Creates a new update1210109Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1210109Type instance
             */
            public static create(properties?: game1210109Type.Iupdate1210109Type): game1210109Type.update1210109Type;

            /**
             * Encodes the specified update1210109Type message. Does not implicitly {@link game1210109Type.update1210109Type.verify|verify} messages.
             * @param message update1210109Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210109Type.Iupdate1210109Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1210109Type message, length delimited. Does not implicitly {@link game1210109Type.update1210109Type.verify|verify} messages.
             * @param message update1210109Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210109Type.Iupdate1210109Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1210109Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1210109Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210109Type.update1210109Type;

            /**
             * Decodes an update1210109Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1210109Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210109Type.update1210109Type;

            /**
             * Verifies an update1210109Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1210109Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1210109Type
             */
            public static fromObject(object: { [k: string]: any }): game1210109Type.update1210109Type;

            /**
             * Creates a plain object from an update1210109Type message. Also converts values to other types if specified.
             * @param message update1210109Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210109Type.update1210109Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1210109Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1210132Type. */
    export class game1210132Type implements Igame1210132Type {

        /**
         * Constructs a new game1210132Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1210132Type);

        /** game1210132Type data. */
        public data?: (game1210132Type.Idata1210132Type | null);

        /** game1210132Type update. */
        public update: game1210132Type.Iupdate1210132Type[];

        /**
         * Creates a new game1210132Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1210132Type instance
         */
        public static create(properties?: Igame1210132Type): game1210132Type;

        /**
         * Encodes the specified game1210132Type message. Does not implicitly {@link game1210132Type.verify|verify} messages.
         * @param message game1210132Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1210132Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1210132Type message, length delimited. Does not implicitly {@link game1210132Type.verify|verify} messages.
         * @param message game1210132Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1210132Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1210132Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1210132Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210132Type;

        /**
         * Decodes a game1210132Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1210132Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210132Type;

        /**
         * Verifies a game1210132Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1210132Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1210132Type
         */
        public static fromObject(object: { [k: string]: any }): game1210132Type;

        /**
         * Creates a plain object from a game1210132Type message. Also converts values to other types if specified.
         * @param message game1210132Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1210132Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1210132Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1210132Type {

        /** Properties of a data1210132Type. */
        interface Idata1210132Type {

            /** data1210132Type saBiSingleReward */
            saBiSingleReward: (number | Long);

            /** data1210132Type saBiSumReward */
            saBiSumReward: (number | Long);

            /** data1210132Type randomReward */
            randomReward: (number | Long);

            /** data1210132Type presentElemReward */
            presentElemReward?: (game1210132Type.IpresentElemRewardType[] | null);

            /** data1210132Type trailingFrom */
            trailingFrom?: (number[] | null);
        }

        /** Represents a data1210132Type. */
        class data1210132Type implements Idata1210132Type {

            /**
             * Constructs a new data1210132Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210132Type.Idata1210132Type);

            /** data1210132Type saBiSingleReward. */
            public saBiSingleReward: (number | Long);

            /** data1210132Type saBiSumReward. */
            public saBiSumReward: (number | Long);

            /** data1210132Type randomReward. */
            public randomReward: (number | Long);

            /** data1210132Type presentElemReward. */
            public presentElemReward: game1210132Type.IpresentElemRewardType[];

            /** data1210132Type trailingFrom. */
            public trailingFrom: number[];

            /**
             * Creates a new data1210132Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1210132Type instance
             */
            public static create(properties?: game1210132Type.Idata1210132Type): game1210132Type.data1210132Type;

            /**
             * Encodes the specified data1210132Type message. Does not implicitly {@link game1210132Type.data1210132Type.verify|verify} messages.
             * @param message data1210132Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210132Type.Idata1210132Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1210132Type message, length delimited. Does not implicitly {@link game1210132Type.data1210132Type.verify|verify} messages.
             * @param message data1210132Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210132Type.Idata1210132Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1210132Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1210132Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210132Type.data1210132Type;

            /**
             * Decodes a data1210132Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1210132Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210132Type.data1210132Type;

            /**
             * Verifies a data1210132Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1210132Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1210132Type
             */
            public static fromObject(object: { [k: string]: any }): game1210132Type.data1210132Type;

            /**
             * Creates a plain object from a data1210132Type message. Also converts values to other types if specified.
             * @param message data1210132Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210132Type.data1210132Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1210132Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1210132Type. */
        interface Iupdate1210132Type {

            /** update1210132Type index */
            index: number;

            /** update1210132Type saBiSingleReward */
            saBiSingleReward: (number | Long);

            /** update1210132Type saBiSumReward */
            saBiSumReward: (number | Long);

            /** update1210132Type randomReward */
            randomReward: (number | Long);

            /** update1210132Type presentElemReward */
            presentElemReward?: (game1210132Type.IpresentElemRewardType[] | null);

            /** update1210132Type trailingFrom */
            trailingFrom?: (number[] | null);
        }

        /** Represents an update1210132Type. */
        class update1210132Type implements Iupdate1210132Type {

            /**
             * Constructs a new update1210132Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210132Type.Iupdate1210132Type);

            /** update1210132Type index. */
            public index: number;

            /** update1210132Type saBiSingleReward. */
            public saBiSingleReward: (number | Long);

            /** update1210132Type saBiSumReward. */
            public saBiSumReward: (number | Long);

            /** update1210132Type randomReward. */
            public randomReward: (number | Long);

            /** update1210132Type presentElemReward. */
            public presentElemReward: game1210132Type.IpresentElemRewardType[];

            /** update1210132Type trailingFrom. */
            public trailingFrom: number[];

            /**
             * Creates a new update1210132Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1210132Type instance
             */
            public static create(properties?: game1210132Type.Iupdate1210132Type): game1210132Type.update1210132Type;

            /**
             * Encodes the specified update1210132Type message. Does not implicitly {@link game1210132Type.update1210132Type.verify|verify} messages.
             * @param message update1210132Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210132Type.Iupdate1210132Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1210132Type message, length delimited. Does not implicitly {@link game1210132Type.update1210132Type.verify|verify} messages.
             * @param message update1210132Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210132Type.Iupdate1210132Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1210132Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1210132Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210132Type.update1210132Type;

            /**
             * Decodes an update1210132Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1210132Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210132Type.update1210132Type;

            /**
             * Verifies an update1210132Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1210132Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1210132Type
             */
            public static fromObject(object: { [k: string]: any }): game1210132Type.update1210132Type;

            /**
             * Creates a plain object from an update1210132Type message. Also converts values to other types if specified.
             * @param message update1210132Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210132Type.update1210132Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1210132Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a presentElemRewardType. */
        interface IpresentElemRewardType {

            /** presentElemRewardType pos */
            pos: number;

            /** presentElemRewardType elem */
            elem: number;

            /** presentElemRewardType reward */
            reward: (number | Long);
        }

        /** Represents a presentElemRewardType. */
        class presentElemRewardType implements IpresentElemRewardType {

            /**
             * Constructs a new presentElemRewardType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210132Type.IpresentElemRewardType);

            /** presentElemRewardType pos. */
            public pos: number;

            /** presentElemRewardType elem. */
            public elem: number;

            /** presentElemRewardType reward. */
            public reward: (number | Long);

            /**
             * Creates a new presentElemRewardType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns presentElemRewardType instance
             */
            public static create(properties?: game1210132Type.IpresentElemRewardType): game1210132Type.presentElemRewardType;

            /**
             * Encodes the specified presentElemRewardType message. Does not implicitly {@link game1210132Type.presentElemRewardType.verify|verify} messages.
             * @param message presentElemRewardType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210132Type.IpresentElemRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified presentElemRewardType message, length delimited. Does not implicitly {@link game1210132Type.presentElemRewardType.verify|verify} messages.
             * @param message presentElemRewardType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210132Type.IpresentElemRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a presentElemRewardType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns presentElemRewardType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210132Type.presentElemRewardType;

            /**
             * Decodes a presentElemRewardType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns presentElemRewardType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210132Type.presentElemRewardType;

            /**
             * Verifies a presentElemRewardType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a presentElemRewardType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns presentElemRewardType
             */
            public static fromObject(object: { [k: string]: any }): game1210132Type.presentElemRewardType;

            /**
             * Creates a plain object from a presentElemRewardType message. Also converts values to other types if specified.
             * @param message presentElemRewardType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210132Type.presentElemRewardType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this presentElemRewardType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1210164Type. */
    export class game1210164Type implements Igame1210164Type {

        /**
         * Constructs a new game1210164Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1210164Type);

        /** game1210164Type data. */
        public data?: (game1210164Type.Idata1210164Type | null);

        /** game1210164Type update. */
        public update: game1210164Type.Iupdate1210164Type[];

        /**
         * Creates a new game1210164Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1210164Type instance
         */
        public static create(properties?: Igame1210164Type): game1210164Type;

        /**
         * Encodes the specified game1210164Type message. Does not implicitly {@link game1210164Type.verify|verify} messages.
         * @param message game1210164Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1210164Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1210164Type message, length delimited. Does not implicitly {@link game1210164Type.verify|verify} messages.
         * @param message game1210164Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1210164Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1210164Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1210164Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210164Type;

        /**
         * Decodes a game1210164Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1210164Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210164Type;

        /**
         * Verifies a game1210164Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1210164Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1210164Type
         */
        public static fromObject(object: { [k: string]: any }): game1210164Type;

        /**
         * Creates a plain object from a game1210164Type message. Also converts values to other types if specified.
         * @param message game1210164Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1210164Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1210164Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1210164Type {

        /** Properties of a data1210164Type. */
        interface Idata1210164Type {

            /** data1210164Type resultList */
            resultList?: (game1210164Type.IResultType[] | null);

            /** data1210164Type radRewardGrid */
            radRewardGrid?: (game1210164Type.IrewardGridType[] | null);

            /** data1210164Type zombieFist */
            zombieFist: (number | Long);

            /** data1210164Type taskList */
            taskList?: (game1210164Type.ITaskListType[] | null);

            /** data1210164Type allReward */
            allReward: (number | Long);
        }

        /** Represents a data1210164Type. */
        class data1210164Type implements Idata1210164Type {

            /**
             * Constructs a new data1210164Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210164Type.Idata1210164Type);

            /** data1210164Type resultList. */
            public resultList: game1210164Type.IResultType[];

            /** data1210164Type radRewardGrid. */
            public radRewardGrid: game1210164Type.IrewardGridType[];

            /** data1210164Type zombieFist. */
            public zombieFist: (number | Long);

            /** data1210164Type taskList. */
            public taskList: game1210164Type.ITaskListType[];

            /** data1210164Type allReward. */
            public allReward: (number | Long);

            /**
             * Creates a new data1210164Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1210164Type instance
             */
            public static create(properties?: game1210164Type.Idata1210164Type): game1210164Type.data1210164Type;

            /**
             * Encodes the specified data1210164Type message. Does not implicitly {@link game1210164Type.data1210164Type.verify|verify} messages.
             * @param message data1210164Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210164Type.Idata1210164Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1210164Type message, length delimited. Does not implicitly {@link game1210164Type.data1210164Type.verify|verify} messages.
             * @param message data1210164Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210164Type.Idata1210164Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1210164Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1210164Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210164Type.data1210164Type;

            /**
             * Decodes a data1210164Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1210164Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210164Type.data1210164Type;

            /**
             * Verifies a data1210164Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1210164Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1210164Type
             */
            public static fromObject(object: { [k: string]: any }): game1210164Type.data1210164Type;

            /**
             * Creates a plain object from a data1210164Type message. Also converts values to other types if specified.
             * @param message data1210164Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210164Type.data1210164Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1210164Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1210164Type. */
        interface Iupdate1210164Type {

            /** update1210164Type index */
            index: number;

            /** update1210164Type resultList */
            resultList?: (game1210164Type.IResultType[] | null);

            /** update1210164Type radRewardGrid */
            radRewardGrid?: (game1210164Type.IrewardGridType[] | null);

            /** update1210164Type zombieFist */
            zombieFist: (number | Long);

            /** update1210164Type taskList */
            taskList?: (game1210164Type.ITaskListType[] | null);

            /** update1210164Type allReward */
            allReward: (number | Long);
        }

        /** Represents an update1210164Type. */
        class update1210164Type implements Iupdate1210164Type {

            /**
             * Constructs a new update1210164Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210164Type.Iupdate1210164Type);

            /** update1210164Type index. */
            public index: number;

            /** update1210164Type resultList. */
            public resultList: game1210164Type.IResultType[];

            /** update1210164Type radRewardGrid. */
            public radRewardGrid: game1210164Type.IrewardGridType[];

            /** update1210164Type zombieFist. */
            public zombieFist: (number | Long);

            /** update1210164Type taskList. */
            public taskList: game1210164Type.ITaskListType[];

            /** update1210164Type allReward. */
            public allReward: (number | Long);

            /**
             * Creates a new update1210164Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1210164Type instance
             */
            public static create(properties?: game1210164Type.Iupdate1210164Type): game1210164Type.update1210164Type;

            /**
             * Encodes the specified update1210164Type message. Does not implicitly {@link game1210164Type.update1210164Type.verify|verify} messages.
             * @param message update1210164Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210164Type.Iupdate1210164Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1210164Type message, length delimited. Does not implicitly {@link game1210164Type.update1210164Type.verify|verify} messages.
             * @param message update1210164Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210164Type.Iupdate1210164Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1210164Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1210164Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210164Type.update1210164Type;

            /**
             * Decodes an update1210164Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1210164Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210164Type.update1210164Type;

            /**
             * Verifies an update1210164Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1210164Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1210164Type
             */
            public static fromObject(object: { [k: string]: any }): game1210164Type.update1210164Type;

            /**
             * Creates a plain object from an update1210164Type message. Also converts values to other types if specified.
             * @param message update1210164Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210164Type.update1210164Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1210164Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ResultType. */
        interface IResultType {

            /** ResultType spinResult */
            spinResult: IspinResultType;

            /** ResultType rewardGrid */
            rewardGrid?: (game1210164Type.IrewardGridType[] | null);

            /** ResultType times */
            times: number;
        }

        /** Represents a ResultType. */
        class ResultType implements IResultType {

            /**
             * Constructs a new ResultType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210164Type.IResultType);

            /** ResultType spinResult. */
            public spinResult: IspinResultType;

            /** ResultType rewardGrid. */
            public rewardGrid: game1210164Type.IrewardGridType[];

            /** ResultType times. */
            public times: number;

            /**
             * Creates a new ResultType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ResultType instance
             */
            public static create(properties?: game1210164Type.IResultType): game1210164Type.ResultType;

            /**
             * Encodes the specified ResultType message. Does not implicitly {@link game1210164Type.ResultType.verify|verify} messages.
             * @param message ResultType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210164Type.IResultType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ResultType message, length delimited. Does not implicitly {@link game1210164Type.ResultType.verify|verify} messages.
             * @param message ResultType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210164Type.IResultType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResultType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ResultType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210164Type.ResultType;

            /**
             * Decodes a ResultType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ResultType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210164Type.ResultType;

            /**
             * Verifies a ResultType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a ResultType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ResultType
             */
            public static fromObject(object: { [k: string]: any }): game1210164Type.ResultType;

            /**
             * Creates a plain object from a ResultType message. Also converts values to other types if specified.
             * @param message ResultType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210164Type.ResultType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ResultType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a rewardGridType. */
        interface IrewardGridType {

            /** rewardGridType pos */
            pos: number;

            /** rewardGridType reward */
            reward: (number | Long);
        }

        /** Represents a rewardGridType. */
        class rewardGridType implements IrewardGridType {

            /**
             * Constructs a new rewardGridType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210164Type.IrewardGridType);

            /** rewardGridType pos. */
            public pos: number;

            /** rewardGridType reward. */
            public reward: (number | Long);

            /**
             * Creates a new rewardGridType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns rewardGridType instance
             */
            public static create(properties?: game1210164Type.IrewardGridType): game1210164Type.rewardGridType;

            /**
             * Encodes the specified rewardGridType message. Does not implicitly {@link game1210164Type.rewardGridType.verify|verify} messages.
             * @param message rewardGridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210164Type.IrewardGridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified rewardGridType message, length delimited. Does not implicitly {@link game1210164Type.rewardGridType.verify|verify} messages.
             * @param message rewardGridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210164Type.IrewardGridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a rewardGridType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns rewardGridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210164Type.rewardGridType;

            /**
             * Decodes a rewardGridType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns rewardGridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210164Type.rewardGridType;

            /**
             * Verifies a rewardGridType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a rewardGridType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns rewardGridType
             */
            public static fromObject(object: { [k: string]: any }): game1210164Type.rewardGridType;

            /**
             * Creates a plain object from a rewardGridType message. Also converts values to other types if specified.
             * @param message rewardGridType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210164Type.rewardGridType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this rewardGridType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a TaskListType. */
        interface ITaskListType {

            /** TaskListType column */
            column: number;

            /** TaskListType num */
            num: number;

            /** TaskListType targetNum */
            targetNum: number;
        }

        /** Represents a TaskListType. */
        class TaskListType implements ITaskListType {

            /**
             * Constructs a new TaskListType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210164Type.ITaskListType);

            /** TaskListType column. */
            public column: number;

            /** TaskListType num. */
            public num: number;

            /** TaskListType targetNum. */
            public targetNum: number;

            /**
             * Creates a new TaskListType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TaskListType instance
             */
            public static create(properties?: game1210164Type.ITaskListType): game1210164Type.TaskListType;

            /**
             * Encodes the specified TaskListType message. Does not implicitly {@link game1210164Type.TaskListType.verify|verify} messages.
             * @param message TaskListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210164Type.ITaskListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified TaskListType message, length delimited. Does not implicitly {@link game1210164Type.TaskListType.verify|verify} messages.
             * @param message TaskListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210164Type.ITaskListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a TaskListType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TaskListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210164Type.TaskListType;

            /**
             * Decodes a TaskListType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TaskListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210164Type.TaskListType;

            /**
             * Verifies a TaskListType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a TaskListType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TaskListType
             */
            public static fromObject(object: { [k: string]: any }): game1210164Type.TaskListType;

            /**
             * Creates a plain object from a TaskListType message. Also converts values to other types if specified.
             * @param message TaskListType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210164Type.TaskListType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TaskListType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1210174Type. */
    export class game1210174Type implements Igame1210174Type {

        /**
         * Constructs a new game1210174Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1210174Type);

        /** game1210174Type data. */
        public data?: (game1210174Type.Idata1210174Type | null);

        /** game1210174Type update. */
        public update: game1210174Type.Iupdate1210174Type[];

        /**
         * Creates a new game1210174Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1210174Type instance
         */
        public static create(properties?: Igame1210174Type): game1210174Type;

        /**
         * Encodes the specified game1210174Type message. Does not implicitly {@link game1210174Type.verify|verify} messages.
         * @param message game1210174Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1210174Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1210174Type message, length delimited. Does not implicitly {@link game1210174Type.verify|verify} messages.
         * @param message game1210174Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1210174Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1210174Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1210174Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210174Type;

        /**
         * Decodes a game1210174Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1210174Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210174Type;

        /**
         * Verifies a game1210174Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1210174Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1210174Type
         */
        public static fromObject(object: { [k: string]: any }): game1210174Type;

        /**
         * Creates a plain object from a game1210174Type message. Also converts values to other types if specified.
         * @param message game1210174Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1210174Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1210174Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1210174Type {

        /** Properties of a data1210174Type. */
        interface Idata1210174Type {

            /** data1210174Type triggerColumnPosList */
            triggerColumnPosList?: (number[] | null);

            /** data1210174Type fixWildPos */
            fixWildPos?: (number[] | null);
        }

        /** Represents a data1210174Type. */
        class data1210174Type implements Idata1210174Type {

            /**
             * Constructs a new data1210174Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210174Type.Idata1210174Type);

            /** data1210174Type triggerColumnPosList. */
            public triggerColumnPosList: number[];

            /** data1210174Type fixWildPos. */
            public fixWildPos: number[];

            /**
             * Creates a new data1210174Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1210174Type instance
             */
            public static create(properties?: game1210174Type.Idata1210174Type): game1210174Type.data1210174Type;

            /**
             * Encodes the specified data1210174Type message. Does not implicitly {@link game1210174Type.data1210174Type.verify|verify} messages.
             * @param message data1210174Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210174Type.Idata1210174Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1210174Type message, length delimited. Does not implicitly {@link game1210174Type.data1210174Type.verify|verify} messages.
             * @param message data1210174Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210174Type.Idata1210174Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1210174Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1210174Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210174Type.data1210174Type;

            /**
             * Decodes a data1210174Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1210174Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210174Type.data1210174Type;

            /**
             * Verifies a data1210174Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1210174Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1210174Type
             */
            public static fromObject(object: { [k: string]: any }): game1210174Type.data1210174Type;

            /**
             * Creates a plain object from a data1210174Type message. Also converts values to other types if specified.
             * @param message data1210174Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210174Type.data1210174Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1210174Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1210174Type. */
        interface Iupdate1210174Type {

            /** update1210174Type index */
            index: number;

            /** update1210174Type triggerColumnPosList */
            triggerColumnPosList?: (number[] | null);

            /** update1210174Type fixWildPos */
            fixWildPos?: (number[] | null);
        }

        /** Represents an update1210174Type. */
        class update1210174Type implements Iupdate1210174Type {

            /**
             * Constructs a new update1210174Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210174Type.Iupdate1210174Type);

            /** update1210174Type index. */
            public index: number;

            /** update1210174Type triggerColumnPosList. */
            public triggerColumnPosList: number[];

            /** update1210174Type fixWildPos. */
            public fixWildPos: number[];

            /**
             * Creates a new update1210174Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1210174Type instance
             */
            public static create(properties?: game1210174Type.Iupdate1210174Type): game1210174Type.update1210174Type;

            /**
             * Encodes the specified update1210174Type message. Does not implicitly {@link game1210174Type.update1210174Type.verify|verify} messages.
             * @param message update1210174Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210174Type.Iupdate1210174Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1210174Type message, length delimited. Does not implicitly {@link game1210174Type.update1210174Type.verify|verify} messages.
             * @param message update1210174Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210174Type.Iupdate1210174Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1210174Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1210174Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210174Type.update1210174Type;

            /**
             * Decodes an update1210174Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1210174Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210174Type.update1210174Type;

            /**
             * Verifies an update1210174Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1210174Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1210174Type
             */
            public static fromObject(object: { [k: string]: any }): game1210174Type.update1210174Type;

            /**
             * Creates a plain object from an update1210174Type message. Also converts values to other types if specified.
             * @param message update1210174Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210174Type.update1210174Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1210174Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1210175Type. */
    export class game1210175Type implements Igame1210175Type {

        /**
         * Constructs a new game1210175Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1210175Type);

        /** game1210175Type data. */
        public data?: (game1210175Type.Idata1210175Type | null);

        /** game1210175Type update. */
        public update: game1210175Type.Iupdate1210175Type[];

        /**
         * Creates a new game1210175Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1210175Type instance
         */
        public static create(properties?: Igame1210175Type): game1210175Type;

        /**
         * Encodes the specified game1210175Type message. Does not implicitly {@link game1210175Type.verify|verify} messages.
         * @param message game1210175Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1210175Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1210175Type message, length delimited. Does not implicitly {@link game1210175Type.verify|verify} messages.
         * @param message game1210175Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1210175Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1210175Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1210175Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210175Type;

        /**
         * Decodes a game1210175Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1210175Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210175Type;

        /**
         * Verifies a game1210175Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1210175Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1210175Type
         */
        public static fromObject(object: { [k: string]: any }): game1210175Type;

        /**
         * Creates a plain object from a game1210175Type message. Also converts values to other types if specified.
         * @param message game1210175Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1210175Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1210175Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1210175Type {

        /** Properties of a data1210175Type. */
        interface Idata1210175Type {

            /** data1210175Type elem1 */
            elem1: number;

            /** data1210175Type elem2 */
            elem2: number;

            /** data1210175Type elem1Pos */
            elem1Pos: number;

            /** data1210175Type elem2Pos */
            elem2Pos: number;
        }

        /** Represents a data1210175Type. */
        class data1210175Type implements Idata1210175Type {

            /**
             * Constructs a new data1210175Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210175Type.Idata1210175Type);

            /** data1210175Type elem1. */
            public elem1: number;

            /** data1210175Type elem2. */
            public elem2: number;

            /** data1210175Type elem1Pos. */
            public elem1Pos: number;

            /** data1210175Type elem2Pos. */
            public elem2Pos: number;

            /**
             * Creates a new data1210175Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1210175Type instance
             */
            public static create(properties?: game1210175Type.Idata1210175Type): game1210175Type.data1210175Type;

            /**
             * Encodes the specified data1210175Type message. Does not implicitly {@link game1210175Type.data1210175Type.verify|verify} messages.
             * @param message data1210175Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210175Type.Idata1210175Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1210175Type message, length delimited. Does not implicitly {@link game1210175Type.data1210175Type.verify|verify} messages.
             * @param message data1210175Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210175Type.Idata1210175Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1210175Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1210175Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210175Type.data1210175Type;

            /**
             * Decodes a data1210175Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1210175Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210175Type.data1210175Type;

            /**
             * Verifies a data1210175Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1210175Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1210175Type
             */
            public static fromObject(object: { [k: string]: any }): game1210175Type.data1210175Type;

            /**
             * Creates a plain object from a data1210175Type message. Also converts values to other types if specified.
             * @param message data1210175Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210175Type.data1210175Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1210175Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1210175Type. */
        interface Iupdate1210175Type {

            /** update1210175Type index */
            index: number;

            /** update1210175Type elem1 */
            elem1: number;

            /** update1210175Type elem2 */
            elem2: number;

            /** update1210175Type elem1Pos */
            elem1Pos: number;

            /** update1210175Type elem2Pos */
            elem2Pos: number;
        }

        /** Represents an update1210175Type. */
        class update1210175Type implements Iupdate1210175Type {

            /**
             * Constructs a new update1210175Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210175Type.Iupdate1210175Type);

            /** update1210175Type index. */
            public index: number;

            /** update1210175Type elem1. */
            public elem1: number;

            /** update1210175Type elem2. */
            public elem2: number;

            /** update1210175Type elem1Pos. */
            public elem1Pos: number;

            /** update1210175Type elem2Pos. */
            public elem2Pos: number;

            /**
             * Creates a new update1210175Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1210175Type instance
             */
            public static create(properties?: game1210175Type.Iupdate1210175Type): game1210175Type.update1210175Type;

            /**
             * Encodes the specified update1210175Type message. Does not implicitly {@link game1210175Type.update1210175Type.verify|verify} messages.
             * @param message update1210175Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210175Type.Iupdate1210175Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1210175Type message, length delimited. Does not implicitly {@link game1210175Type.update1210175Type.verify|verify} messages.
             * @param message update1210175Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210175Type.Iupdate1210175Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1210175Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1210175Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210175Type.update1210175Type;

            /**
             * Decodes an update1210175Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1210175Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210175Type.update1210175Type;

            /**
             * Verifies an update1210175Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1210175Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1210175Type
             */
            public static fromObject(object: { [k: string]: any }): game1210175Type.update1210175Type;

            /**
             * Creates a plain object from an update1210175Type message. Also converts values to other types if specified.
             * @param message update1210175Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210175Type.update1210175Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1210175Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1210181Type. */
    export class game1210181Type implements Igame1210181Type {

        /**
         * Constructs a new game1210181Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1210181Type);

        /** game1210181Type data. */
        public data?: (game1210181Type.Idata1210181Type | null);

        /** game1210181Type update. */
        public update: game1210181Type.Iupdate1210181Type[];

        /**
         * Creates a new game1210181Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1210181Type instance
         */
        public static create(properties?: Igame1210181Type): game1210181Type;

        /**
         * Encodes the specified game1210181Type message. Does not implicitly {@link game1210181Type.verify|verify} messages.
         * @param message game1210181Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1210181Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1210181Type message, length delimited. Does not implicitly {@link game1210181Type.verify|verify} messages.
         * @param message game1210181Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1210181Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1210181Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1210181Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210181Type;

        /**
         * Decodes a game1210181Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1210181Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210181Type;

        /**
         * Verifies a game1210181Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1210181Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1210181Type
         */
        public static fromObject(object: { [k: string]: any }): game1210181Type;

        /**
         * Creates a plain object from a game1210181Type message. Also converts values to other types if specified.
         * @param message game1210181Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1210181Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1210181Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1210181Type {

        /** Properties of a data1210181Type. */
        interface Idata1210181Type {

            /** data1210181Type rate */
            rate: number;

            /** data1210181Type free1RateList */
            free1RateList?: (number[] | null);

            /** data1210181Type free1CurRateLevel */
            free1CurRateLevel: number;

            /** data1210181Type free2FixGrid */
            free2FixGrid?: (game1210181Type.IGridType[] | null);
        }

        /** Represents a data1210181Type. */
        class data1210181Type implements Idata1210181Type {

            /**
             * Constructs a new data1210181Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210181Type.Idata1210181Type);

            /** data1210181Type rate. */
            public rate: number;

            /** data1210181Type free1RateList. */
            public free1RateList: number[];

            /** data1210181Type free1CurRateLevel. */
            public free1CurRateLevel: number;

            /** data1210181Type free2FixGrid. */
            public free2FixGrid: game1210181Type.IGridType[];

            /**
             * Creates a new data1210181Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1210181Type instance
             */
            public static create(properties?: game1210181Type.Idata1210181Type): game1210181Type.data1210181Type;

            /**
             * Encodes the specified data1210181Type message. Does not implicitly {@link game1210181Type.data1210181Type.verify|verify} messages.
             * @param message data1210181Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210181Type.Idata1210181Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1210181Type message, length delimited. Does not implicitly {@link game1210181Type.data1210181Type.verify|verify} messages.
             * @param message data1210181Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210181Type.Idata1210181Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1210181Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1210181Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210181Type.data1210181Type;

            /**
             * Decodes a data1210181Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1210181Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210181Type.data1210181Type;

            /**
             * Verifies a data1210181Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1210181Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1210181Type
             */
            public static fromObject(object: { [k: string]: any }): game1210181Type.data1210181Type;

            /**
             * Creates a plain object from a data1210181Type message. Also converts values to other types if specified.
             * @param message data1210181Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210181Type.data1210181Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1210181Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1210181Type. */
        interface Iupdate1210181Type {

            /** update1210181Type index */
            index: number;

            /** update1210181Type rate */
            rate: number;

            /** update1210181Type free1RateList */
            free1RateList?: (number[] | null);

            /** update1210181Type free1CurRateLevel */
            free1CurRateLevel: number;

            /** update1210181Type free2FixGrid */
            free2FixGrid?: (game1210181Type.IGridType[] | null);
        }

        /** Represents an update1210181Type. */
        class update1210181Type implements Iupdate1210181Type {

            /**
             * Constructs a new update1210181Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210181Type.Iupdate1210181Type);

            /** update1210181Type index. */
            public index: number;

            /** update1210181Type rate. */
            public rate: number;

            /** update1210181Type free1RateList. */
            public free1RateList: number[];

            /** update1210181Type free1CurRateLevel. */
            public free1CurRateLevel: number;

            /** update1210181Type free2FixGrid. */
            public free2FixGrid: game1210181Type.IGridType[];

            /**
             * Creates a new update1210181Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1210181Type instance
             */
            public static create(properties?: game1210181Type.Iupdate1210181Type): game1210181Type.update1210181Type;

            /**
             * Encodes the specified update1210181Type message. Does not implicitly {@link game1210181Type.update1210181Type.verify|verify} messages.
             * @param message update1210181Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210181Type.Iupdate1210181Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1210181Type message, length delimited. Does not implicitly {@link game1210181Type.update1210181Type.verify|verify} messages.
             * @param message update1210181Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210181Type.Iupdate1210181Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1210181Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1210181Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210181Type.update1210181Type;

            /**
             * Decodes an update1210181Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1210181Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210181Type.update1210181Type;

            /**
             * Verifies an update1210181Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1210181Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1210181Type
             */
            public static fromObject(object: { [k: string]: any }): game1210181Type.update1210181Type;

            /**
             * Creates a plain object from an update1210181Type message. Also converts values to other types if specified.
             * @param message update1210181Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210181Type.update1210181Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1210181Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GridType. */
        interface IGridType {

            /** GridType pos */
            pos: number;

            /** GridType elem */
            elem: number;
        }

        /** Represents a GridType. */
        class GridType implements IGridType {

            /**
             * Constructs a new GridType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210181Type.IGridType);

            /** GridType pos. */
            public pos: number;

            /** GridType elem. */
            public elem: number;

            /**
             * Creates a new GridType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GridType instance
             */
            public static create(properties?: game1210181Type.IGridType): game1210181Type.GridType;

            /**
             * Encodes the specified GridType message. Does not implicitly {@link game1210181Type.GridType.verify|verify} messages.
             * @param message GridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210181Type.IGridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GridType message, length delimited. Does not implicitly {@link game1210181Type.GridType.verify|verify} messages.
             * @param message GridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210181Type.IGridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GridType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210181Type.GridType;

            /**
             * Decodes a GridType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210181Type.GridType;

            /**
             * Verifies a GridType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a GridType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GridType
             */
            public static fromObject(object: { [k: string]: any }): game1210181Type.GridType;

            /**
             * Creates a plain object from a GridType message. Also converts values to other types if specified.
             * @param message GridType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210181Type.GridType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GridType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1210186Type. */
    export class game1210186Type implements Igame1210186Type {

        /**
         * Constructs a new game1210186Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1210186Type);

        /** game1210186Type data. */
        public data?: (game1210186Type.Idata1210186Type | null);

        /** game1210186Type update. */
        public update: game1210186Type.Iupdate1210186Type[];

        /**
         * Creates a new game1210186Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1210186Type instance
         */
        public static create(properties?: Igame1210186Type): game1210186Type;

        /**
         * Encodes the specified game1210186Type message. Does not implicitly {@link game1210186Type.verify|verify} messages.
         * @param message game1210186Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1210186Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1210186Type message, length delimited. Does not implicitly {@link game1210186Type.verify|verify} messages.
         * @param message game1210186Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1210186Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1210186Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1210186Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210186Type;

        /**
         * Decodes a game1210186Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1210186Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210186Type;

        /**
         * Verifies a game1210186Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1210186Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1210186Type
         */
        public static fromObject(object: { [k: string]: any }): game1210186Type;

        /**
         * Creates a plain object from a game1210186Type message. Also converts values to other types if specified.
         * @param message game1210186Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1210186Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1210186Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1210186Type {

        /** Properties of a data1210186Type. */
        interface Idata1210186Type {

            /** data1210186Type giantRewardType */
            giantRewardType: number;

            /** data1210186Type giantReward */
            giantReward: (number | Long);
        }

        /** Represents a data1210186Type. */
        class data1210186Type implements Idata1210186Type {

            /**
             * Constructs a new data1210186Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210186Type.Idata1210186Type);

            /** data1210186Type giantRewardType. */
            public giantRewardType: number;

            /** data1210186Type giantReward. */
            public giantReward: (number | Long);

            /**
             * Creates a new data1210186Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1210186Type instance
             */
            public static create(properties?: game1210186Type.Idata1210186Type): game1210186Type.data1210186Type;

            /**
             * Encodes the specified data1210186Type message. Does not implicitly {@link game1210186Type.data1210186Type.verify|verify} messages.
             * @param message data1210186Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210186Type.Idata1210186Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1210186Type message, length delimited. Does not implicitly {@link game1210186Type.data1210186Type.verify|verify} messages.
             * @param message data1210186Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210186Type.Idata1210186Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1210186Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1210186Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210186Type.data1210186Type;

            /**
             * Decodes a data1210186Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1210186Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210186Type.data1210186Type;

            /**
             * Verifies a data1210186Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1210186Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1210186Type
             */
            public static fromObject(object: { [k: string]: any }): game1210186Type.data1210186Type;

            /**
             * Creates a plain object from a data1210186Type message. Also converts values to other types if specified.
             * @param message data1210186Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210186Type.data1210186Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1210186Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1210186Type. */
        interface Iupdate1210186Type {

            /** update1210186Type index */
            index: number;

            /** update1210186Type giantRewardType */
            giantRewardType: number;

            /** update1210186Type giantReward */
            giantReward: (number | Long);
        }

        /** Represents an update1210186Type. */
        class update1210186Type implements Iupdate1210186Type {

            /**
             * Constructs a new update1210186Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210186Type.Iupdate1210186Type);

            /** update1210186Type index. */
            public index: number;

            /** update1210186Type giantRewardType. */
            public giantRewardType: number;

            /** update1210186Type giantReward. */
            public giantReward: (number | Long);

            /**
             * Creates a new update1210186Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1210186Type instance
             */
            public static create(properties?: game1210186Type.Iupdate1210186Type): game1210186Type.update1210186Type;

            /**
             * Encodes the specified update1210186Type message. Does not implicitly {@link game1210186Type.update1210186Type.verify|verify} messages.
             * @param message update1210186Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210186Type.Iupdate1210186Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1210186Type message, length delimited. Does not implicitly {@link game1210186Type.update1210186Type.verify|verify} messages.
             * @param message update1210186Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210186Type.Iupdate1210186Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1210186Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1210186Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210186Type.update1210186Type;

            /**
             * Decodes an update1210186Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1210186Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210186Type.update1210186Type;

            /**
             * Verifies an update1210186Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1210186Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1210186Type
             */
            public static fromObject(object: { [k: string]: any }): game1210186Type.update1210186Type;

            /**
             * Creates a plain object from an update1210186Type message. Also converts values to other types if specified.
             * @param message update1210186Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210186Type.update1210186Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1210186Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1210187Type. */
    export class game1210187Type implements Igame1210187Type {

        /**
         * Constructs a new game1210187Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1210187Type);

        /** game1210187Type data. */
        public data?: (game1210187Type.Idata1210187Type | null);

        /** game1210187Type update. */
        public update: game1210187Type.Iupdate1210187Type[];

        /**
         * Creates a new game1210187Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1210187Type instance
         */
        public static create(properties?: Igame1210187Type): game1210187Type;

        /**
         * Encodes the specified game1210187Type message. Does not implicitly {@link game1210187Type.verify|verify} messages.
         * @param message game1210187Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1210187Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1210187Type message, length delimited. Does not implicitly {@link game1210187Type.verify|verify} messages.
         * @param message game1210187Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1210187Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1210187Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1210187Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210187Type;

        /**
         * Decodes a game1210187Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1210187Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210187Type;

        /**
         * Verifies a game1210187Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1210187Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1210187Type
         */
        public static fromObject(object: { [k: string]: any }): game1210187Type;

        /**
         * Creates a plain object from a game1210187Type message. Also converts values to other types if specified.
         * @param message game1210187Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1210187Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1210187Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1210187Type {

        /** Properties of a data1210187Type. */
        interface Idata1210187Type {

            /** data1210187Type expandWildPosList */
            expandWildPosList?: (number[] | null);
        }

        /** Represents a data1210187Type. */
        class data1210187Type implements Idata1210187Type {

            /**
             * Constructs a new data1210187Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210187Type.Idata1210187Type);

            /** data1210187Type expandWildPosList. */
            public expandWildPosList: number[];

            /**
             * Creates a new data1210187Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1210187Type instance
             */
            public static create(properties?: game1210187Type.Idata1210187Type): game1210187Type.data1210187Type;

            /**
             * Encodes the specified data1210187Type message. Does not implicitly {@link game1210187Type.data1210187Type.verify|verify} messages.
             * @param message data1210187Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210187Type.Idata1210187Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1210187Type message, length delimited. Does not implicitly {@link game1210187Type.data1210187Type.verify|verify} messages.
             * @param message data1210187Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210187Type.Idata1210187Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1210187Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1210187Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210187Type.data1210187Type;

            /**
             * Decodes a data1210187Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1210187Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210187Type.data1210187Type;

            /**
             * Verifies a data1210187Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1210187Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1210187Type
             */
            public static fromObject(object: { [k: string]: any }): game1210187Type.data1210187Type;

            /**
             * Creates a plain object from a data1210187Type message. Also converts values to other types if specified.
             * @param message data1210187Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210187Type.data1210187Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1210187Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1210187Type. */
        interface Iupdate1210187Type {

            /** update1210187Type index */
            index: number;

            /** update1210187Type expandWildPosList */
            expandWildPosList?: (number[] | null);
        }

        /** Represents an update1210187Type. */
        class update1210187Type implements Iupdate1210187Type {

            /**
             * Constructs a new update1210187Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210187Type.Iupdate1210187Type);

            /** update1210187Type index. */
            public index: number;

            /** update1210187Type expandWildPosList. */
            public expandWildPosList: number[];

            /**
             * Creates a new update1210187Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1210187Type instance
             */
            public static create(properties?: game1210187Type.Iupdate1210187Type): game1210187Type.update1210187Type;

            /**
             * Encodes the specified update1210187Type message. Does not implicitly {@link game1210187Type.update1210187Type.verify|verify} messages.
             * @param message update1210187Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210187Type.Iupdate1210187Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1210187Type message, length delimited. Does not implicitly {@link game1210187Type.update1210187Type.verify|verify} messages.
             * @param message update1210187Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210187Type.Iupdate1210187Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1210187Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1210187Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210187Type.update1210187Type;

            /**
             * Decodes an update1210187Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1210187Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210187Type.update1210187Type;

            /**
             * Verifies an update1210187Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1210187Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1210187Type
             */
            public static fromObject(object: { [k: string]: any }): game1210187Type.update1210187Type;

            /**
             * Creates a plain object from an update1210187Type message. Also converts values to other types if specified.
             * @param message update1210187Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210187Type.update1210187Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1210187Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1210188Type. */
    export class game1210188Type implements Igame1210188Type {

        /**
         * Constructs a new game1210188Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1210188Type);

        /** game1210188Type data. */
        public data?: (game1210188Type.Idata1210188Type | null);

        /** game1210188Type update. */
        public update: game1210188Type.Iupdate1210188Type[];

        /**
         * Creates a new game1210188Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1210188Type instance
         */
        public static create(properties?: Igame1210188Type): game1210188Type;

        /**
         * Encodes the specified game1210188Type message. Does not implicitly {@link game1210188Type.verify|verify} messages.
         * @param message game1210188Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1210188Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1210188Type message, length delimited. Does not implicitly {@link game1210188Type.verify|verify} messages.
         * @param message game1210188Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1210188Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1210188Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1210188Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210188Type;

        /**
         * Decodes a game1210188Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1210188Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210188Type;

        /**
         * Verifies a game1210188Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1210188Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1210188Type
         */
        public static fromObject(object: { [k: string]: any }): game1210188Type;

        /**
         * Creates a plain object from a game1210188Type message. Also converts values to other types if specified.
         * @param message game1210188Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1210188Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1210188Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1210188Type {

        /** Properties of a data1210188Type. */
        interface Idata1210188Type {

            /** data1210188Type mysteryReels */
            mysteryReels?: (number[] | null);
        }

        /** Represents a data1210188Type. */
        class data1210188Type implements Idata1210188Type {

            /**
             * Constructs a new data1210188Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210188Type.Idata1210188Type);

            /** data1210188Type mysteryReels. */
            public mysteryReels: number[];

            /**
             * Creates a new data1210188Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1210188Type instance
             */
            public static create(properties?: game1210188Type.Idata1210188Type): game1210188Type.data1210188Type;

            /**
             * Encodes the specified data1210188Type message. Does not implicitly {@link game1210188Type.data1210188Type.verify|verify} messages.
             * @param message data1210188Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210188Type.Idata1210188Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1210188Type message, length delimited. Does not implicitly {@link game1210188Type.data1210188Type.verify|verify} messages.
             * @param message data1210188Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210188Type.Idata1210188Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1210188Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1210188Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210188Type.data1210188Type;

            /**
             * Decodes a data1210188Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1210188Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210188Type.data1210188Type;

            /**
             * Verifies a data1210188Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1210188Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1210188Type
             */
            public static fromObject(object: { [k: string]: any }): game1210188Type.data1210188Type;

            /**
             * Creates a plain object from a data1210188Type message. Also converts values to other types if specified.
             * @param message data1210188Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210188Type.data1210188Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1210188Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1210188Type. */
        interface Iupdate1210188Type {

            /** update1210188Type index */
            index: number;

            /** update1210188Type mysteryReels */
            mysteryReels?: (number[] | null);
        }

        /** Represents an update1210188Type. */
        class update1210188Type implements Iupdate1210188Type {

            /**
             * Constructs a new update1210188Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210188Type.Iupdate1210188Type);

            /** update1210188Type index. */
            public index: number;

            /** update1210188Type mysteryReels. */
            public mysteryReels: number[];

            /**
             * Creates a new update1210188Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1210188Type instance
             */
            public static create(properties?: game1210188Type.Iupdate1210188Type): game1210188Type.update1210188Type;

            /**
             * Encodes the specified update1210188Type message. Does not implicitly {@link game1210188Type.update1210188Type.verify|verify} messages.
             * @param message update1210188Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210188Type.Iupdate1210188Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1210188Type message, length delimited. Does not implicitly {@link game1210188Type.update1210188Type.verify|verify} messages.
             * @param message update1210188Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210188Type.Iupdate1210188Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1210188Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1210188Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210188Type.update1210188Type;

            /**
             * Decodes an update1210188Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1210188Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210188Type.update1210188Type;

            /**
             * Verifies an update1210188Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1210188Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1210188Type
             */
            public static fromObject(object: { [k: string]: any }): game1210188Type.update1210188Type;

            /**
             * Creates a plain object from an update1210188Type message. Also converts values to other types if specified.
             * @param message update1210188Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210188Type.update1210188Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1210188Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1210189Type. */
    export class game1210189Type implements Igame1210189Type {

        /**
         * Constructs a new game1210189Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1210189Type);

        /** game1210189Type data. */
        public data?: (game1210189Type.Idata1210189Type | null);

        /** game1210189Type update. */
        public update: game1210189Type.Iupdate1210189Type[];

        /**
         * Creates a new game1210189Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1210189Type instance
         */
        public static create(properties?: Igame1210189Type): game1210189Type;

        /**
         * Encodes the specified game1210189Type message. Does not implicitly {@link game1210189Type.verify|verify} messages.
         * @param message game1210189Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1210189Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1210189Type message, length delimited. Does not implicitly {@link game1210189Type.verify|verify} messages.
         * @param message game1210189Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1210189Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1210189Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1210189Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210189Type;

        /**
         * Decodes a game1210189Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1210189Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210189Type;

        /**
         * Verifies a game1210189Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1210189Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1210189Type
         */
        public static fromObject(object: { [k: string]: any }): game1210189Type;

        /**
         * Creates a plain object from a game1210189Type message. Also converts values to other types if specified.
         * @param message game1210189Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1210189Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1210189Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1210189Type {

        /** Properties of a data1210189Type. */
        interface Idata1210189Type {

            /** data1210189Type wildExtendColumn */
            wildExtendColumn?: (number[] | null);
        }

        /** Represents a data1210189Type. */
        class data1210189Type implements Idata1210189Type {

            /**
             * Constructs a new data1210189Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210189Type.Idata1210189Type);

            /** data1210189Type wildExtendColumn. */
            public wildExtendColumn: number[];

            /**
             * Creates a new data1210189Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1210189Type instance
             */
            public static create(properties?: game1210189Type.Idata1210189Type): game1210189Type.data1210189Type;

            /**
             * Encodes the specified data1210189Type message. Does not implicitly {@link game1210189Type.data1210189Type.verify|verify} messages.
             * @param message data1210189Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210189Type.Idata1210189Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1210189Type message, length delimited. Does not implicitly {@link game1210189Type.data1210189Type.verify|verify} messages.
             * @param message data1210189Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210189Type.Idata1210189Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1210189Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1210189Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210189Type.data1210189Type;

            /**
             * Decodes a data1210189Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1210189Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210189Type.data1210189Type;

            /**
             * Verifies a data1210189Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1210189Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1210189Type
             */
            public static fromObject(object: { [k: string]: any }): game1210189Type.data1210189Type;

            /**
             * Creates a plain object from a data1210189Type message. Also converts values to other types if specified.
             * @param message data1210189Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210189Type.data1210189Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1210189Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1210189Type. */
        interface Iupdate1210189Type {

            /** update1210189Type index */
            index: number;

            /** update1210189Type wildExtendColumn */
            wildExtendColumn?: (number[] | null);
        }

        /** Represents an update1210189Type. */
        class update1210189Type implements Iupdate1210189Type {

            /**
             * Constructs a new update1210189Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210189Type.Iupdate1210189Type);

            /** update1210189Type index. */
            public index: number;

            /** update1210189Type wildExtendColumn. */
            public wildExtendColumn: number[];

            /**
             * Creates a new update1210189Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1210189Type instance
             */
            public static create(properties?: game1210189Type.Iupdate1210189Type): game1210189Type.update1210189Type;

            /**
             * Encodes the specified update1210189Type message. Does not implicitly {@link game1210189Type.update1210189Type.verify|verify} messages.
             * @param message update1210189Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210189Type.Iupdate1210189Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1210189Type message, length delimited. Does not implicitly {@link game1210189Type.update1210189Type.verify|verify} messages.
             * @param message update1210189Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210189Type.Iupdate1210189Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1210189Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1210189Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210189Type.update1210189Type;

            /**
             * Decodes an update1210189Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1210189Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210189Type.update1210189Type;

            /**
             * Verifies an update1210189Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1210189Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1210189Type
             */
            public static fromObject(object: { [k: string]: any }): game1210189Type.update1210189Type;

            /**
             * Creates a plain object from an update1210189Type message. Also converts values to other types if specified.
             * @param message update1210189Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210189Type.update1210189Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1210189Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1210203Type. */
    export class game1210203Type implements Igame1210203Type {

        /**
         * Constructs a new game1210203Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1210203Type);

        /** game1210203Type data. */
        public data?: (game1210203Type.Idata1210203Type | null);

        /** game1210203Type update. */
        public update: game1210203Type.Iupdate1210203Type[];

        /**
         * Creates a new game1210203Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1210203Type instance
         */
        public static create(properties?: Igame1210203Type): game1210203Type;

        /**
         * Encodes the specified game1210203Type message. Does not implicitly {@link game1210203Type.verify|verify} messages.
         * @param message game1210203Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1210203Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1210203Type message, length delimited. Does not implicitly {@link game1210203Type.verify|verify} messages.
         * @param message game1210203Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1210203Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1210203Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1210203Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210203Type;

        /**
         * Decodes a game1210203Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1210203Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210203Type;

        /**
         * Verifies a game1210203Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1210203Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1210203Type
         */
        public static fromObject(object: { [k: string]: any }): game1210203Type;

        /**
         * Creates a plain object from a game1210203Type message. Also converts values to other types if specified.
         * @param message game1210203Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1210203Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1210203Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1210203Type {

        /** Properties of a data1210203Type. */
        interface Idata1210203Type {

            /** data1210203Type taskList */
            taskList?: (game1210203Type.ITaskListType[] | null);

            /** data1210203Type pos_2Column */
            pos_2Column?: (game1210203Type.IPos2ColumnType[] | null);

            /** data1210203Type avgCost */
            avgCost: (number | Long);

            /** data1210203Type isNew */
            isNew: boolean;
        }

        /** Represents a data1210203Type. */
        class data1210203Type implements Idata1210203Type {

            /**
             * Constructs a new data1210203Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210203Type.Idata1210203Type);

            /** data1210203Type taskList. */
            public taskList: game1210203Type.ITaskListType[];

            /** data1210203Type pos_2Column. */
            public pos_2Column: game1210203Type.IPos2ColumnType[];

            /** data1210203Type avgCost. */
            public avgCost: (number | Long);

            /** data1210203Type isNew. */
            public isNew: boolean;

            /**
             * Creates a new data1210203Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1210203Type instance
             */
            public static create(properties?: game1210203Type.Idata1210203Type): game1210203Type.data1210203Type;

            /**
             * Encodes the specified data1210203Type message. Does not implicitly {@link game1210203Type.data1210203Type.verify|verify} messages.
             * @param message data1210203Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210203Type.Idata1210203Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1210203Type message, length delimited. Does not implicitly {@link game1210203Type.data1210203Type.verify|verify} messages.
             * @param message data1210203Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210203Type.Idata1210203Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1210203Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1210203Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210203Type.data1210203Type;

            /**
             * Decodes a data1210203Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1210203Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210203Type.data1210203Type;

            /**
             * Verifies a data1210203Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1210203Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1210203Type
             */
            public static fromObject(object: { [k: string]: any }): game1210203Type.data1210203Type;

            /**
             * Creates a plain object from a data1210203Type message. Also converts values to other types if specified.
             * @param message data1210203Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210203Type.data1210203Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1210203Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1210203Type. */
        interface Iupdate1210203Type {

            /** update1210203Type index */
            index: number;

            /** update1210203Type taskList */
            taskList?: (game1210203Type.ITaskListType[] | null);

            /** update1210203Type pos_2Column */
            pos_2Column?: (game1210203Type.IPos2ColumnType[] | null);

            /** update1210203Type avgCost */
            avgCost: (number | Long);

            /** update1210203Type isNew */
            isNew: boolean;
        }

        /** Represents an update1210203Type. */
        class update1210203Type implements Iupdate1210203Type {

            /**
             * Constructs a new update1210203Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210203Type.Iupdate1210203Type);

            /** update1210203Type index. */
            public index: number;

            /** update1210203Type taskList. */
            public taskList: game1210203Type.ITaskListType[];

            /** update1210203Type pos_2Column. */
            public pos_2Column: game1210203Type.IPos2ColumnType[];

            /** update1210203Type avgCost. */
            public avgCost: (number | Long);

            /** update1210203Type isNew. */
            public isNew: boolean;

            /**
             * Creates a new update1210203Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1210203Type instance
             */
            public static create(properties?: game1210203Type.Iupdate1210203Type): game1210203Type.update1210203Type;

            /**
             * Encodes the specified update1210203Type message. Does not implicitly {@link game1210203Type.update1210203Type.verify|verify} messages.
             * @param message update1210203Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210203Type.Iupdate1210203Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1210203Type message, length delimited. Does not implicitly {@link game1210203Type.update1210203Type.verify|verify} messages.
             * @param message update1210203Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210203Type.Iupdate1210203Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1210203Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1210203Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210203Type.update1210203Type;

            /**
             * Decodes an update1210203Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1210203Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210203Type.update1210203Type;

            /**
             * Verifies an update1210203Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1210203Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1210203Type
             */
            public static fromObject(object: { [k: string]: any }): game1210203Type.update1210203Type;

            /**
             * Creates a plain object from an update1210203Type message. Also converts values to other types if specified.
             * @param message update1210203Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210203Type.update1210203Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1210203Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a TaskListType. */
        interface ITaskListType {

            /** TaskListType column */
            column: number;

            /** TaskListType num */
            num: number;

            /** TaskListType targetNum */
            targetNum: number;
        }

        /** Represents a TaskListType. */
        class TaskListType implements ITaskListType {

            /**
             * Constructs a new TaskListType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210203Type.ITaskListType);

            /** TaskListType column. */
            public column: number;

            /** TaskListType num. */
            public num: number;

            /** TaskListType targetNum. */
            public targetNum: number;

            /**
             * Creates a new TaskListType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TaskListType instance
             */
            public static create(properties?: game1210203Type.ITaskListType): game1210203Type.TaskListType;

            /**
             * Encodes the specified TaskListType message. Does not implicitly {@link game1210203Type.TaskListType.verify|verify} messages.
             * @param message TaskListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210203Type.ITaskListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified TaskListType message, length delimited. Does not implicitly {@link game1210203Type.TaskListType.verify|verify} messages.
             * @param message TaskListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210203Type.ITaskListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a TaskListType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TaskListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210203Type.TaskListType;

            /**
             * Decodes a TaskListType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TaskListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210203Type.TaskListType;

            /**
             * Verifies a TaskListType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a TaskListType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TaskListType
             */
            public static fromObject(object: { [k: string]: any }): game1210203Type.TaskListType;

            /**
             * Creates a plain object from a TaskListType message. Also converts values to other types if specified.
             * @param message TaskListType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210203Type.TaskListType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TaskListType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Pos2ColumnType. */
        interface IPos2ColumnType {

            /** Pos2ColumnType pos */
            pos: number;

            /** Pos2ColumnType column */
            column: number;
        }

        /** Represents a Pos2ColumnType. */
        class Pos2ColumnType implements IPos2ColumnType {

            /**
             * Constructs a new Pos2ColumnType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210203Type.IPos2ColumnType);

            /** Pos2ColumnType pos. */
            public pos: number;

            /** Pos2ColumnType column. */
            public column: number;

            /**
             * Creates a new Pos2ColumnType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Pos2ColumnType instance
             */
            public static create(properties?: game1210203Type.IPos2ColumnType): game1210203Type.Pos2ColumnType;

            /**
             * Encodes the specified Pos2ColumnType message. Does not implicitly {@link game1210203Type.Pos2ColumnType.verify|verify} messages.
             * @param message Pos2ColumnType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210203Type.IPos2ColumnType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Pos2ColumnType message, length delimited. Does not implicitly {@link game1210203Type.Pos2ColumnType.verify|verify} messages.
             * @param message Pos2ColumnType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210203Type.IPos2ColumnType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Pos2ColumnType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Pos2ColumnType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210203Type.Pos2ColumnType;

            /**
             * Decodes a Pos2ColumnType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Pos2ColumnType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210203Type.Pos2ColumnType;

            /**
             * Verifies a Pos2ColumnType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a Pos2ColumnType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Pos2ColumnType
             */
            public static fromObject(object: { [k: string]: any }): game1210203Type.Pos2ColumnType;

            /**
             * Creates a plain object from a Pos2ColumnType message. Also converts values to other types if specified.
             * @param message Pos2ColumnType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210203Type.Pos2ColumnType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Pos2ColumnType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1210205Type. */
    export class game1210205Type implements Igame1210205Type {

        /**
         * Constructs a new game1210205Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1210205Type);

        /** game1210205Type data. */
        public data?: (game1210205Type.Idata1210205Type | null);

        /** game1210205Type update. */
        public update: game1210205Type.Iupdate1210205Type[];

        /**
         * Creates a new game1210205Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1210205Type instance
         */
        public static create(properties?: Igame1210205Type): game1210205Type;

        /**
         * Encodes the specified game1210205Type message. Does not implicitly {@link game1210205Type.verify|verify} messages.
         * @param message game1210205Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1210205Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1210205Type message, length delimited. Does not implicitly {@link game1210205Type.verify|verify} messages.
         * @param message game1210205Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1210205Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1210205Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1210205Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210205Type;

        /**
         * Decodes a game1210205Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1210205Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210205Type;

        /**
         * Verifies a game1210205Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1210205Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1210205Type
         */
        public static fromObject(object: { [k: string]: any }): game1210205Type;

        /**
         * Creates a plain object from a game1210205Type message. Also converts values to other types if specified.
         * @param message game1210205Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1210205Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1210205Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1210205Type {

        /** Properties of a data1210205Type. */
        interface Idata1210205Type {

            /** data1210205Type evolutionPosList */
            evolutionPosList?: (number[] | null);

            /** data1210205Type wayPosList */
            wayPosList?: (number[] | null);

            /** data1210205Type stackPosList */
            stackPosList?: (number[] | null);

            /** data1210205Type fixGrid */
            fixGrid?: (game1210205Type.IGridType[] | null);
        }

        /** Represents a data1210205Type. */
        class data1210205Type implements Idata1210205Type {

            /**
             * Constructs a new data1210205Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210205Type.Idata1210205Type);

            /** data1210205Type evolutionPosList. */
            public evolutionPosList: number[];

            /** data1210205Type wayPosList. */
            public wayPosList: number[];

            /** data1210205Type stackPosList. */
            public stackPosList: number[];

            /** data1210205Type fixGrid. */
            public fixGrid: game1210205Type.IGridType[];

            /**
             * Creates a new data1210205Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1210205Type instance
             */
            public static create(properties?: game1210205Type.Idata1210205Type): game1210205Type.data1210205Type;

            /**
             * Encodes the specified data1210205Type message. Does not implicitly {@link game1210205Type.data1210205Type.verify|verify} messages.
             * @param message data1210205Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210205Type.Idata1210205Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1210205Type message, length delimited. Does not implicitly {@link game1210205Type.data1210205Type.verify|verify} messages.
             * @param message data1210205Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210205Type.Idata1210205Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1210205Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1210205Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210205Type.data1210205Type;

            /**
             * Decodes a data1210205Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1210205Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210205Type.data1210205Type;

            /**
             * Verifies a data1210205Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1210205Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1210205Type
             */
            public static fromObject(object: { [k: string]: any }): game1210205Type.data1210205Type;

            /**
             * Creates a plain object from a data1210205Type message. Also converts values to other types if specified.
             * @param message data1210205Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210205Type.data1210205Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1210205Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1210205Type. */
        interface Iupdate1210205Type {

            /** update1210205Type index */
            index: number;

            /** update1210205Type evolutionPosList */
            evolutionPosList?: (number[] | null);

            /** update1210205Type wayPosList */
            wayPosList?: (number[] | null);

            /** update1210205Type stackPosList */
            stackPosList?: (number[] | null);

            /** update1210205Type fixGrid */
            fixGrid?: (number[] | null);
        }

        /** Represents an update1210205Type. */
        class update1210205Type implements Iupdate1210205Type {

            /**
             * Constructs a new update1210205Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210205Type.Iupdate1210205Type);

            /** update1210205Type index. */
            public index: number;

            /** update1210205Type evolutionPosList. */
            public evolutionPosList: number[];

            /** update1210205Type wayPosList. */
            public wayPosList: number[];

            /** update1210205Type stackPosList. */
            public stackPosList: number[];

            /** update1210205Type fixGrid. */
            public fixGrid: number[];

            /**
             * Creates a new update1210205Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1210205Type instance
             */
            public static create(properties?: game1210205Type.Iupdate1210205Type): game1210205Type.update1210205Type;

            /**
             * Encodes the specified update1210205Type message. Does not implicitly {@link game1210205Type.update1210205Type.verify|verify} messages.
             * @param message update1210205Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210205Type.Iupdate1210205Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1210205Type message, length delimited. Does not implicitly {@link game1210205Type.update1210205Type.verify|verify} messages.
             * @param message update1210205Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210205Type.Iupdate1210205Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1210205Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1210205Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210205Type.update1210205Type;

            /**
             * Decodes an update1210205Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1210205Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210205Type.update1210205Type;

            /**
             * Verifies an update1210205Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1210205Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1210205Type
             */
            public static fromObject(object: { [k: string]: any }): game1210205Type.update1210205Type;

            /**
             * Creates a plain object from an update1210205Type message. Also converts values to other types if specified.
             * @param message update1210205Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210205Type.update1210205Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1210205Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GridType. */
        interface IGridType {

            /** GridType pos */
            pos: number;

            /** GridType elem */
            elem: number;
        }

        /** Represents a GridType. */
        class GridType implements IGridType {

            /**
             * Constructs a new GridType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210205Type.IGridType);

            /** GridType pos. */
            public pos: number;

            /** GridType elem. */
            public elem: number;

            /**
             * Creates a new GridType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GridType instance
             */
            public static create(properties?: game1210205Type.IGridType): game1210205Type.GridType;

            /**
             * Encodes the specified GridType message. Does not implicitly {@link game1210205Type.GridType.verify|verify} messages.
             * @param message GridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210205Type.IGridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GridType message, length delimited. Does not implicitly {@link game1210205Type.GridType.verify|verify} messages.
             * @param message GridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210205Type.IGridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GridType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210205Type.GridType;

            /**
             * Decodes a GridType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210205Type.GridType;

            /**
             * Verifies a GridType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a GridType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GridType
             */
            public static fromObject(object: { [k: string]: any }): game1210205Type.GridType;

            /**
             * Creates a plain object from a GridType message. Also converts values to other types if specified.
             * @param message GridType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210205Type.GridType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GridType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1210213Type. */
    export class game1210213Type implements Igame1210213Type {

        /**
         * Constructs a new game1210213Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1210213Type);

        /** game1210213Type data. */
        public data?: (game1210213Type.Idata1210213Type | null);

        /** game1210213Type update. */
        public update: game1210213Type.Iupdate1210213Type[];

        /**
         * Creates a new game1210213Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1210213Type instance
         */
        public static create(properties?: Igame1210213Type): game1210213Type;

        /**
         * Encodes the specified game1210213Type message. Does not implicitly {@link game1210213Type.verify|verify} messages.
         * @param message game1210213Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1210213Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1210213Type message, length delimited. Does not implicitly {@link game1210213Type.verify|verify} messages.
         * @param message game1210213Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1210213Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1210213Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1210213Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210213Type;

        /**
         * Decodes a game1210213Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1210213Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210213Type;

        /**
         * Verifies a game1210213Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1210213Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1210213Type
         */
        public static fromObject(object: { [k: string]: any }): game1210213Type;

        /**
         * Creates a plain object from a game1210213Type message. Also converts values to other types if specified.
         * @param message game1210213Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1210213Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1210213Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1210213Type {

        /** Properties of a data1210213Type. */
        interface Idata1210213Type {

            /** data1210213Type giantRewardType */
            giantRewardType: number;

            /** data1210213Type giantReward */
            giantReward: (number | Long);
        }

        /** Represents a data1210213Type. */
        class data1210213Type implements Idata1210213Type {

            /**
             * Constructs a new data1210213Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210213Type.Idata1210213Type);

            /** data1210213Type giantRewardType. */
            public giantRewardType: number;

            /** data1210213Type giantReward. */
            public giantReward: (number | Long);

            /**
             * Creates a new data1210213Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1210213Type instance
             */
            public static create(properties?: game1210213Type.Idata1210213Type): game1210213Type.data1210213Type;

            /**
             * Encodes the specified data1210213Type message. Does not implicitly {@link game1210213Type.data1210213Type.verify|verify} messages.
             * @param message data1210213Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210213Type.Idata1210213Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1210213Type message, length delimited. Does not implicitly {@link game1210213Type.data1210213Type.verify|verify} messages.
             * @param message data1210213Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210213Type.Idata1210213Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1210213Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1210213Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210213Type.data1210213Type;

            /**
             * Decodes a data1210213Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1210213Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210213Type.data1210213Type;

            /**
             * Verifies a data1210213Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1210213Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1210213Type
             */
            public static fromObject(object: { [k: string]: any }): game1210213Type.data1210213Type;

            /**
             * Creates a plain object from a data1210213Type message. Also converts values to other types if specified.
             * @param message data1210213Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210213Type.data1210213Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1210213Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1210213Type. */
        interface Iupdate1210213Type {

            /** update1210213Type index */
            index: number;

            /** update1210213Type giantRewardType */
            giantRewardType: number;

            /** update1210213Type giantReward */
            giantReward: (number | Long);
        }

        /** Represents an update1210213Type. */
        class update1210213Type implements Iupdate1210213Type {

            /**
             * Constructs a new update1210213Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1210213Type.Iupdate1210213Type);

            /** update1210213Type index. */
            public index: number;

            /** update1210213Type giantRewardType. */
            public giantRewardType: number;

            /** update1210213Type giantReward. */
            public giantReward: (number | Long);

            /**
             * Creates a new update1210213Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1210213Type instance
             */
            public static create(properties?: game1210213Type.Iupdate1210213Type): game1210213Type.update1210213Type;

            /**
             * Encodes the specified update1210213Type message. Does not implicitly {@link game1210213Type.update1210213Type.verify|verify} messages.
             * @param message update1210213Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1210213Type.Iupdate1210213Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1210213Type message, length delimited. Does not implicitly {@link game1210213Type.update1210213Type.verify|verify} messages.
             * @param message update1210213Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1210213Type.Iupdate1210213Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1210213Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1210213Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1210213Type.update1210213Type;

            /**
             * Decodes an update1210213Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1210213Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1210213Type.update1210213Type;

            /**
             * Verifies an update1210213Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1210213Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1210213Type
             */
            public static fromObject(object: { [k: string]: any }): game1210213Type.update1210213Type;

            /**
             * Creates a plain object from an update1210213Type message. Also converts values to other types if specified.
             * @param message update1210213Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1210213Type.update1210213Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1210213Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1310005Type. */
    export class game1310005Type implements Igame1310005Type {

        /**
         * Constructs a new game1310005Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1310005Type);

        /** game1310005Type data. */
        public data?: (game1310005Type.Idata1310005Type | null);

        /** game1310005Type update. */
        public update: game1310005Type.Iupdate1310005Type[];

        /**
         * Creates a new game1310005Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1310005Type instance
         */
        public static create(properties?: Igame1310005Type): game1310005Type;

        /**
         * Encodes the specified game1310005Type message. Does not implicitly {@link game1310005Type.verify|verify} messages.
         * @param message game1310005Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1310005Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1310005Type message, length delimited. Does not implicitly {@link game1310005Type.verify|verify} messages.
         * @param message game1310005Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1310005Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1310005Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1310005Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310005Type;

        /**
         * Decodes a game1310005Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1310005Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310005Type;

        /**
         * Verifies a game1310005Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1310005Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1310005Type
         */
        public static fromObject(object: { [k: string]: any }): game1310005Type;

        /**
         * Creates a plain object from a game1310005Type message. Also converts values to other types if specified.
         * @param message game1310005Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1310005Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1310005Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1310005Type {

        /** Properties of a data1310005Type. */
        interface Idata1310005Type {

            /** data1310005Type collectSchedule */
            collectSchedule?: (game1310005Type.IcsType[] | null);

            /** data1310005Type miniTurntable */
            miniTurntable: number;
        }

        /** Represents a data1310005Type. */
        class data1310005Type implements Idata1310005Type {

            /**
             * Constructs a new data1310005Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1310005Type.Idata1310005Type);

            /** data1310005Type collectSchedule. */
            public collectSchedule: game1310005Type.IcsType[];

            /** data1310005Type miniTurntable. */
            public miniTurntable: number;

            /**
             * Creates a new data1310005Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1310005Type instance
             */
            public static create(properties?: game1310005Type.Idata1310005Type): game1310005Type.data1310005Type;

            /**
             * Encodes the specified data1310005Type message. Does not implicitly {@link game1310005Type.data1310005Type.verify|verify} messages.
             * @param message data1310005Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1310005Type.Idata1310005Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1310005Type message, length delimited. Does not implicitly {@link game1310005Type.data1310005Type.verify|verify} messages.
             * @param message data1310005Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1310005Type.Idata1310005Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1310005Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1310005Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310005Type.data1310005Type;

            /**
             * Decodes a data1310005Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1310005Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310005Type.data1310005Type;

            /**
             * Verifies a data1310005Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1310005Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1310005Type
             */
            public static fromObject(object: { [k: string]: any }): game1310005Type.data1310005Type;

            /**
             * Creates a plain object from a data1310005Type message. Also converts values to other types if specified.
             * @param message data1310005Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1310005Type.data1310005Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1310005Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1310005Type. */
        interface Iupdate1310005Type {

            /** update1310005Type index */
            index: number;

            /** update1310005Type collectSchedule */
            collectSchedule?: (game1310005Type.IcsType[] | null);

            /** update1310005Type miniTurntable */
            miniTurntable: number;
        }

        /** Represents an update1310005Type. */
        class update1310005Type implements Iupdate1310005Type {

            /**
             * Constructs a new update1310005Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1310005Type.Iupdate1310005Type);

            /** update1310005Type index. */
            public index: number;

            /** update1310005Type collectSchedule. */
            public collectSchedule: game1310005Type.IcsType[];

            /** update1310005Type miniTurntable. */
            public miniTurntable: number;

            /**
             * Creates a new update1310005Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1310005Type instance
             */
            public static create(properties?: game1310005Type.Iupdate1310005Type): game1310005Type.update1310005Type;

            /**
             * Encodes the specified update1310005Type message. Does not implicitly {@link game1310005Type.update1310005Type.verify|verify} messages.
             * @param message update1310005Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1310005Type.Iupdate1310005Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1310005Type message, length delimited. Does not implicitly {@link game1310005Type.update1310005Type.verify|verify} messages.
             * @param message update1310005Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1310005Type.Iupdate1310005Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1310005Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1310005Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310005Type.update1310005Type;

            /**
             * Decodes an update1310005Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1310005Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310005Type.update1310005Type;

            /**
             * Verifies an update1310005Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1310005Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1310005Type
             */
            public static fromObject(object: { [k: string]: any }): game1310005Type.update1310005Type;

            /**
             * Creates a plain object from an update1310005Type message. Also converts values to other types if specified.
             * @param message update1310005Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1310005Type.update1310005Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1310005Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a csType. */
        interface IcsType {

            /** csType elem */
            elem: number;

            /** csType schedule */
            schedule: number;

            /** csType limit */
            limit: number;
        }

        /** Represents a csType. */
        class csType implements IcsType {

            /**
             * Constructs a new csType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1310005Type.IcsType);

            /** csType elem. */
            public elem: number;

            /** csType schedule. */
            public schedule: number;

            /** csType limit. */
            public limit: number;

            /**
             * Creates a new csType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns csType instance
             */
            public static create(properties?: game1310005Type.IcsType): game1310005Type.csType;

            /**
             * Encodes the specified csType message. Does not implicitly {@link game1310005Type.csType.verify|verify} messages.
             * @param message csType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1310005Type.IcsType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified csType message, length delimited. Does not implicitly {@link game1310005Type.csType.verify|verify} messages.
             * @param message csType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1310005Type.IcsType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a csType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns csType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310005Type.csType;

            /**
             * Decodes a csType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns csType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310005Type.csType;

            /**
             * Verifies a csType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a csType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns csType
             */
            public static fromObject(object: { [k: string]: any }): game1310005Type.csType;

            /**
             * Creates a plain object from a csType message. Also converts values to other types if specified.
             * @param message csType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1310005Type.csType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this csType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1310006Type. */
    export class game1310006Type implements Igame1310006Type {

        /**
         * Constructs a new game1310006Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1310006Type);

        /** game1310006Type data. */
        public data?: (game1310006Type.Idata1310006Type | null);

        /** game1310006Type update. */
        public update: game1310006Type.Iupdate1310006Type[];

        /**
         * Creates a new game1310006Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1310006Type instance
         */
        public static create(properties?: Igame1310006Type): game1310006Type;

        /**
         * Encodes the specified game1310006Type message. Does not implicitly {@link game1310006Type.verify|verify} messages.
         * @param message game1310006Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1310006Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1310006Type message, length delimited. Does not implicitly {@link game1310006Type.verify|verify} messages.
         * @param message game1310006Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1310006Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1310006Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1310006Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310006Type;

        /**
         * Decodes a game1310006Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1310006Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310006Type;

        /**
         * Verifies a game1310006Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1310006Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1310006Type
         */
        public static fromObject(object: { [k: string]: any }): game1310006Type;

        /**
         * Creates a plain object from a game1310006Type message. Also converts values to other types if specified.
         * @param message game1310006Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1310006Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1310006Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1310006Type {

        /** Properties of a data1310006Type. */
        interface Idata1310006Type {

            /** data1310006Type optColList */
            optColList?: (number[] | null);
        }

        /** Represents a data1310006Type. */
        class data1310006Type implements Idata1310006Type {

            /**
             * Constructs a new data1310006Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1310006Type.Idata1310006Type);

            /** data1310006Type optColList. */
            public optColList: number[];

            /**
             * Creates a new data1310006Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1310006Type instance
             */
            public static create(properties?: game1310006Type.Idata1310006Type): game1310006Type.data1310006Type;

            /**
             * Encodes the specified data1310006Type message. Does not implicitly {@link game1310006Type.data1310006Type.verify|verify} messages.
             * @param message data1310006Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1310006Type.Idata1310006Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1310006Type message, length delimited. Does not implicitly {@link game1310006Type.data1310006Type.verify|verify} messages.
             * @param message data1310006Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1310006Type.Idata1310006Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1310006Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1310006Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310006Type.data1310006Type;

            /**
             * Decodes a data1310006Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1310006Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310006Type.data1310006Type;

            /**
             * Verifies a data1310006Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1310006Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1310006Type
             */
            public static fromObject(object: { [k: string]: any }): game1310006Type.data1310006Type;

            /**
             * Creates a plain object from a data1310006Type message. Also converts values to other types if specified.
             * @param message data1310006Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1310006Type.data1310006Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1310006Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1310006Type. */
        interface Iupdate1310006Type {

            /** update1310006Type index */
            index: number;

            /** update1310006Type optColList */
            optColList?: (number[] | null);
        }

        /** Represents an update1310006Type. */
        class update1310006Type implements Iupdate1310006Type {

            /**
             * Constructs a new update1310006Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1310006Type.Iupdate1310006Type);

            /** update1310006Type index. */
            public index: number;

            /** update1310006Type optColList. */
            public optColList: number[];

            /**
             * Creates a new update1310006Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1310006Type instance
             */
            public static create(properties?: game1310006Type.Iupdate1310006Type): game1310006Type.update1310006Type;

            /**
             * Encodes the specified update1310006Type message. Does not implicitly {@link game1310006Type.update1310006Type.verify|verify} messages.
             * @param message update1310006Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1310006Type.Iupdate1310006Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1310006Type message, length delimited. Does not implicitly {@link game1310006Type.update1310006Type.verify|verify} messages.
             * @param message update1310006Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1310006Type.Iupdate1310006Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1310006Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1310006Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310006Type.update1310006Type;

            /**
             * Decodes an update1310006Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1310006Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310006Type.update1310006Type;

            /**
             * Verifies an update1310006Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1310006Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1310006Type
             */
            public static fromObject(object: { [k: string]: any }): game1310006Type.update1310006Type;

            /**
             * Creates a plain object from an update1310006Type message. Also converts values to other types if specified.
             * @param message update1310006Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1310006Type.update1310006Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1310006Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1310026Type. */
    export class game1310026Type implements Igame1310026Type {

        /**
         * Constructs a new game1310026Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1310026Type);

        /** game1310026Type data. */
        public data?: (game1310026Type.Idata1310026Type | null);

        /** game1310026Type update. */
        public update: game1310026Type.Iupdate1310026Type[];

        /**
         * Creates a new game1310026Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1310026Type instance
         */
        public static create(properties?: Igame1310026Type): game1310026Type;

        /**
         * Encodes the specified game1310026Type message. Does not implicitly {@link game1310026Type.verify|verify} messages.
         * @param message game1310026Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1310026Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1310026Type message, length delimited. Does not implicitly {@link game1310026Type.verify|verify} messages.
         * @param message game1310026Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1310026Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1310026Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1310026Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310026Type;

        /**
         * Decodes a game1310026Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1310026Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310026Type;

        /**
         * Verifies a game1310026Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1310026Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1310026Type
         */
        public static fromObject(object: { [k: string]: any }): game1310026Type;

        /**
         * Creates a plain object from a game1310026Type message. Also converts values to other types if specified.
         * @param message game1310026Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1310026Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1310026Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1310026Type {

        /** Properties of a data1310026Type. */
        interface Idata1310026Type {

            /** data1310026Type magicCol */
            magicCol?: (number[] | null);

            /** data1310026Type collect */
            collect?: (game1310026Type.IcollectType[] | null);
        }

        /** Represents a data1310026Type. */
        class data1310026Type implements Idata1310026Type {

            /**
             * Constructs a new data1310026Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1310026Type.Idata1310026Type);

            /** data1310026Type magicCol. */
            public magicCol: number[];

            /** data1310026Type collect. */
            public collect: game1310026Type.IcollectType[];

            /**
             * Creates a new data1310026Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1310026Type instance
             */
            public static create(properties?: game1310026Type.Idata1310026Type): game1310026Type.data1310026Type;

            /**
             * Encodes the specified data1310026Type message. Does not implicitly {@link game1310026Type.data1310026Type.verify|verify} messages.
             * @param message data1310026Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1310026Type.Idata1310026Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1310026Type message, length delimited. Does not implicitly {@link game1310026Type.data1310026Type.verify|verify} messages.
             * @param message data1310026Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1310026Type.Idata1310026Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1310026Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1310026Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310026Type.data1310026Type;

            /**
             * Decodes a data1310026Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1310026Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310026Type.data1310026Type;

            /**
             * Verifies a data1310026Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1310026Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1310026Type
             */
            public static fromObject(object: { [k: string]: any }): game1310026Type.data1310026Type;

            /**
             * Creates a plain object from a data1310026Type message. Also converts values to other types if specified.
             * @param message data1310026Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1310026Type.data1310026Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1310026Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1310026Type. */
        interface Iupdate1310026Type {

            /** update1310026Type index */
            index: number;

            /** update1310026Type magicCol */
            magicCol?: (number[] | null);

            /** update1310026Type collect */
            collect?: (game1310026Type.IcollectType[] | null);
        }

        /** Represents an update1310026Type. */
        class update1310026Type implements Iupdate1310026Type {

            /**
             * Constructs a new update1310026Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1310026Type.Iupdate1310026Type);

            /** update1310026Type index. */
            public index: number;

            /** update1310026Type magicCol. */
            public magicCol: number[];

            /** update1310026Type collect. */
            public collect: game1310026Type.IcollectType[];

            /**
             * Creates a new update1310026Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1310026Type instance
             */
            public static create(properties?: game1310026Type.Iupdate1310026Type): game1310026Type.update1310026Type;

            /**
             * Encodes the specified update1310026Type message. Does not implicitly {@link game1310026Type.update1310026Type.verify|verify} messages.
             * @param message update1310026Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1310026Type.Iupdate1310026Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1310026Type message, length delimited. Does not implicitly {@link game1310026Type.update1310026Type.verify|verify} messages.
             * @param message update1310026Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1310026Type.Iupdate1310026Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1310026Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1310026Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310026Type.update1310026Type;

            /**
             * Decodes an update1310026Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1310026Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310026Type.update1310026Type;

            /**
             * Verifies an update1310026Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1310026Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1310026Type
             */
            public static fromObject(object: { [k: string]: any }): game1310026Type.update1310026Type;

            /**
             * Creates a plain object from an update1310026Type message. Also converts values to other types if specified.
             * @param message update1310026Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1310026Type.update1310026Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1310026Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a collectType. */
        interface IcollectType {

            /** collectType id */
            id: number;

            /** collectType collectElem */
            collectElem?: (number[] | null);

            /** collectType num */
            num: number;
        }

        /** Represents a collectType. */
        class collectType implements IcollectType {

            /**
             * Constructs a new collectType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1310026Type.IcollectType);

            /** collectType id. */
            public id: number;

            /** collectType collectElem. */
            public collectElem: number[];

            /** collectType num. */
            public num: number;

            /**
             * Creates a new collectType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns collectType instance
             */
            public static create(properties?: game1310026Type.IcollectType): game1310026Type.collectType;

            /**
             * Encodes the specified collectType message. Does not implicitly {@link game1310026Type.collectType.verify|verify} messages.
             * @param message collectType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1310026Type.IcollectType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified collectType message, length delimited. Does not implicitly {@link game1310026Type.collectType.verify|verify} messages.
             * @param message collectType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1310026Type.IcollectType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a collectType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns collectType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310026Type.collectType;

            /**
             * Decodes a collectType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns collectType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310026Type.collectType;

            /**
             * Verifies a collectType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a collectType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns collectType
             */
            public static fromObject(object: { [k: string]: any }): game1310026Type.collectType;

            /**
             * Creates a plain object from a collectType message. Also converts values to other types if specified.
             * @param message collectType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1310026Type.collectType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this collectType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1310031Type. */
    export class game1310031Type implements Igame1310031Type {

        /**
         * Constructs a new game1310031Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1310031Type);

        /** game1310031Type data. */
        public data?: (game1310031Type.Idata1310031Type | null);

        /** game1310031Type update. */
        public update: game1310031Type.Iupdate1310031Type[];

        /**
         * Creates a new game1310031Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1310031Type instance
         */
        public static create(properties?: Igame1310031Type): game1310031Type;

        /**
         * Encodes the specified game1310031Type message. Does not implicitly {@link game1310031Type.verify|verify} messages.
         * @param message game1310031Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1310031Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1310031Type message, length delimited. Does not implicitly {@link game1310031Type.verify|verify} messages.
         * @param message game1310031Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1310031Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1310031Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1310031Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310031Type;

        /**
         * Decodes a game1310031Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1310031Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310031Type;

        /**
         * Verifies a game1310031Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1310031Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1310031Type
         */
        public static fromObject(object: { [k: string]: any }): game1310031Type;

        /**
         * Creates a plain object from a game1310031Type message. Also converts values to other types if specified.
         * @param message game1310031Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1310031Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1310031Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1310031Type {

        /** Properties of a data1310031Type. */
        interface Idata1310031Type {

            /** data1310031Type hammerReward */
            hammerReward?: (game1310031Type.IhammerRewardType[] | null);

            /** data1310031Type posReward */
            posReward?: (game1310031Type.IprType[] | null);
        }

        /** Represents a data1310031Type. */
        class data1310031Type implements Idata1310031Type {

            /**
             * Constructs a new data1310031Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1310031Type.Idata1310031Type);

            /** data1310031Type hammerReward. */
            public hammerReward: game1310031Type.IhammerRewardType[];

            /** data1310031Type posReward. */
            public posReward: game1310031Type.IprType[];

            /**
             * Creates a new data1310031Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1310031Type instance
             */
            public static create(properties?: game1310031Type.Idata1310031Type): game1310031Type.data1310031Type;

            /**
             * Encodes the specified data1310031Type message. Does not implicitly {@link game1310031Type.data1310031Type.verify|verify} messages.
             * @param message data1310031Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1310031Type.Idata1310031Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1310031Type message, length delimited. Does not implicitly {@link game1310031Type.data1310031Type.verify|verify} messages.
             * @param message data1310031Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1310031Type.Idata1310031Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1310031Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1310031Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310031Type.data1310031Type;

            /**
             * Decodes a data1310031Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1310031Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310031Type.data1310031Type;

            /**
             * Verifies a data1310031Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1310031Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1310031Type
             */
            public static fromObject(object: { [k: string]: any }): game1310031Type.data1310031Type;

            /**
             * Creates a plain object from a data1310031Type message. Also converts values to other types if specified.
             * @param message data1310031Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1310031Type.data1310031Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1310031Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1310031Type. */
        interface Iupdate1310031Type {

            /** update1310031Type index */
            index: number;

            /** update1310031Type hammerReward */
            hammerReward?: (game1310031Type.IhammerRewardType[] | null);

            /** update1310031Type posReward */
            posReward?: (game1310031Type.IprType[] | null);
        }

        /** Represents an update1310031Type. */
        class update1310031Type implements Iupdate1310031Type {

            /**
             * Constructs a new update1310031Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1310031Type.Iupdate1310031Type);

            /** update1310031Type index. */
            public index: number;

            /** update1310031Type hammerReward. */
            public hammerReward: game1310031Type.IhammerRewardType[];

            /** update1310031Type posReward. */
            public posReward: game1310031Type.IprType[];

            /**
             * Creates a new update1310031Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1310031Type instance
             */
            public static create(properties?: game1310031Type.Iupdate1310031Type): game1310031Type.update1310031Type;

            /**
             * Encodes the specified update1310031Type message. Does not implicitly {@link game1310031Type.update1310031Type.verify|verify} messages.
             * @param message update1310031Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1310031Type.Iupdate1310031Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1310031Type message, length delimited. Does not implicitly {@link game1310031Type.update1310031Type.verify|verify} messages.
             * @param message update1310031Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1310031Type.Iupdate1310031Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1310031Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1310031Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310031Type.update1310031Type;

            /**
             * Decodes an update1310031Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1310031Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310031Type.update1310031Type;

            /**
             * Verifies an update1310031Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1310031Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1310031Type
             */
            public static fromObject(object: { [k: string]: any }): game1310031Type.update1310031Type;

            /**
             * Creates a plain object from an update1310031Type message. Also converts values to other types if specified.
             * @param message update1310031Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1310031Type.update1310031Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1310031Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a hammerRewardType. */
        interface IhammerRewardType {

            /** hammerRewardType time */
            time: number;

            /** hammerRewardType hammerScore */
            hammerScore: (number | Long);
        }

        /** Represents a hammerRewardType. */
        class hammerRewardType implements IhammerRewardType {

            /**
             * Constructs a new hammerRewardType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1310031Type.IhammerRewardType);

            /** hammerRewardType time. */
            public time: number;

            /** hammerRewardType hammerScore. */
            public hammerScore: (number | Long);

            /**
             * Creates a new hammerRewardType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns hammerRewardType instance
             */
            public static create(properties?: game1310031Type.IhammerRewardType): game1310031Type.hammerRewardType;

            /**
             * Encodes the specified hammerRewardType message. Does not implicitly {@link game1310031Type.hammerRewardType.verify|verify} messages.
             * @param message hammerRewardType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1310031Type.IhammerRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified hammerRewardType message, length delimited. Does not implicitly {@link game1310031Type.hammerRewardType.verify|verify} messages.
             * @param message hammerRewardType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1310031Type.IhammerRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a hammerRewardType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns hammerRewardType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310031Type.hammerRewardType;

            /**
             * Decodes a hammerRewardType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns hammerRewardType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310031Type.hammerRewardType;

            /**
             * Verifies a hammerRewardType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a hammerRewardType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns hammerRewardType
             */
            public static fromObject(object: { [k: string]: any }): game1310031Type.hammerRewardType;

            /**
             * Creates a plain object from a hammerRewardType message. Also converts values to other types if specified.
             * @param message hammerRewardType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1310031Type.hammerRewardType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this hammerRewardType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a prType. */
        interface IprType {

            /** prType pos */
            pos: number;

            /** prType rewardScore */
            rewardScore: (number | Long);
        }

        /** Represents a prType. */
        class prType implements IprType {

            /**
             * Constructs a new prType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1310031Type.IprType);

            /** prType pos. */
            public pos: number;

            /** prType rewardScore. */
            public rewardScore: (number | Long);

            /**
             * Creates a new prType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns prType instance
             */
            public static create(properties?: game1310031Type.IprType): game1310031Type.prType;

            /**
             * Encodes the specified prType message. Does not implicitly {@link game1310031Type.prType.verify|verify} messages.
             * @param message prType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1310031Type.IprType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified prType message, length delimited. Does not implicitly {@link game1310031Type.prType.verify|verify} messages.
             * @param message prType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1310031Type.IprType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a prType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns prType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310031Type.prType;

            /**
             * Decodes a prType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns prType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310031Type.prType;

            /**
             * Verifies a prType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a prType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns prType
             */
            public static fromObject(object: { [k: string]: any }): game1310031Type.prType;

            /**
             * Creates a plain object from a prType message. Also converts values to other types if specified.
             * @param message prType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1310031Type.prType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this prType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1310040Type. */
    export class game1310040Type implements Igame1310040Type {

        /**
         * Constructs a new game1310040Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1310040Type);

        /** game1310040Type data. */
        public data?: (game1310040Type.Idata1310040Type | null);

        /** game1310040Type update. */
        public update: game1310040Type.Iupdate1310040Type[];

        /**
         * Creates a new game1310040Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1310040Type instance
         */
        public static create(properties?: Igame1310040Type): game1310040Type;

        /**
         * Encodes the specified game1310040Type message. Does not implicitly {@link game1310040Type.verify|verify} messages.
         * @param message game1310040Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1310040Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1310040Type message, length delimited. Does not implicitly {@link game1310040Type.verify|verify} messages.
         * @param message game1310040Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1310040Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1310040Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1310040Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310040Type;

        /**
         * Decodes a game1310040Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1310040Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310040Type;

        /**
         * Verifies a game1310040Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1310040Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1310040Type
         */
        public static fromObject(object: { [k: string]: any }): game1310040Type;

        /**
         * Creates a plain object from a game1310040Type message. Also converts values to other types if specified.
         * @param message game1310040Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1310040Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1310040Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1310040Type {

        /** Properties of a data1310040Type. */
        interface Idata1310040Type {

            /** data1310040Type resultList */
            resultList?: (game1310040Type.IswapSpinResType[] | null);
        }

        /** Represents a data1310040Type. */
        class data1310040Type implements Idata1310040Type {

            /**
             * Constructs a new data1310040Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1310040Type.Idata1310040Type);

            /** data1310040Type resultList. */
            public resultList: game1310040Type.IswapSpinResType[];

            /**
             * Creates a new data1310040Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1310040Type instance
             */
            public static create(properties?: game1310040Type.Idata1310040Type): game1310040Type.data1310040Type;

            /**
             * Encodes the specified data1310040Type message. Does not implicitly {@link game1310040Type.data1310040Type.verify|verify} messages.
             * @param message data1310040Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1310040Type.Idata1310040Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1310040Type message, length delimited. Does not implicitly {@link game1310040Type.data1310040Type.verify|verify} messages.
             * @param message data1310040Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1310040Type.Idata1310040Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1310040Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1310040Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310040Type.data1310040Type;

            /**
             * Decodes a data1310040Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1310040Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310040Type.data1310040Type;

            /**
             * Verifies a data1310040Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1310040Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1310040Type
             */
            public static fromObject(object: { [k: string]: any }): game1310040Type.data1310040Type;

            /**
             * Creates a plain object from a data1310040Type message. Also converts values to other types if specified.
             * @param message data1310040Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1310040Type.data1310040Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1310040Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1310040Type. */
        interface Iupdate1310040Type {

            /** update1310040Type index */
            index: number;

            /** update1310040Type resultList */
            resultList?: (game1310040Type.IswapSpinResType[] | null);
        }

        /** Represents an update1310040Type. */
        class update1310040Type implements Iupdate1310040Type {

            /**
             * Constructs a new update1310040Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1310040Type.Iupdate1310040Type);

            /** update1310040Type index. */
            public index: number;

            /** update1310040Type resultList. */
            public resultList: game1310040Type.IswapSpinResType[];

            /**
             * Creates a new update1310040Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1310040Type instance
             */
            public static create(properties?: game1310040Type.Iupdate1310040Type): game1310040Type.update1310040Type;

            /**
             * Encodes the specified update1310040Type message. Does not implicitly {@link game1310040Type.update1310040Type.verify|verify} messages.
             * @param message update1310040Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1310040Type.Iupdate1310040Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1310040Type message, length delimited. Does not implicitly {@link game1310040Type.update1310040Type.verify|verify} messages.
             * @param message update1310040Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1310040Type.Iupdate1310040Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1310040Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1310040Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310040Type.update1310040Type;

            /**
             * Decodes an update1310040Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1310040Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310040Type.update1310040Type;

            /**
             * Verifies an update1310040Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1310040Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1310040Type
             */
            public static fromObject(object: { [k: string]: any }): game1310040Type.update1310040Type;

            /**
             * Creates a plain object from an update1310040Type message. Also converts values to other types if specified.
             * @param message update1310040Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1310040Type.update1310040Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1310040Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a swapSpinResType. */
        interface IswapSpinResType {

            /** swapSpinResType spinResult */
            spinResult: IspinResultType;

            /** swapSpinResType swap */
            swap?: (number[] | null);
        }

        /** Represents a swapSpinResType. */
        class swapSpinResType implements IswapSpinResType {

            /**
             * Constructs a new swapSpinResType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1310040Type.IswapSpinResType);

            /** swapSpinResType spinResult. */
            public spinResult: IspinResultType;

            /** swapSpinResType swap. */
            public swap: number[];

            /**
             * Creates a new swapSpinResType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns swapSpinResType instance
             */
            public static create(properties?: game1310040Type.IswapSpinResType): game1310040Type.swapSpinResType;

            /**
             * Encodes the specified swapSpinResType message. Does not implicitly {@link game1310040Type.swapSpinResType.verify|verify} messages.
             * @param message swapSpinResType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1310040Type.IswapSpinResType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified swapSpinResType message, length delimited. Does not implicitly {@link game1310040Type.swapSpinResType.verify|verify} messages.
             * @param message swapSpinResType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1310040Type.IswapSpinResType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a swapSpinResType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns swapSpinResType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310040Type.swapSpinResType;

            /**
             * Decodes a swapSpinResType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns swapSpinResType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310040Type.swapSpinResType;

            /**
             * Verifies a swapSpinResType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a swapSpinResType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns swapSpinResType
             */
            public static fromObject(object: { [k: string]: any }): game1310040Type.swapSpinResType;

            /**
             * Creates a plain object from a swapSpinResType message. Also converts values to other types if specified.
             * @param message swapSpinResType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1310040Type.swapSpinResType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this swapSpinResType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1310044Type. */
    export class game1310044Type implements Igame1310044Type {

        /**
         * Constructs a new game1310044Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1310044Type);

        /** game1310044Type data. */
        public data?: (game1310044Type.Idata1310044Type | null);

        /** game1310044Type update. */
        public update: game1310044Type.Iupdate1310044Type[];

        /**
         * Creates a new game1310044Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1310044Type instance
         */
        public static create(properties?: Igame1310044Type): game1310044Type;

        /**
         * Encodes the specified game1310044Type message. Does not implicitly {@link game1310044Type.verify|verify} messages.
         * @param message game1310044Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1310044Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1310044Type message, length delimited. Does not implicitly {@link game1310044Type.verify|verify} messages.
         * @param message game1310044Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1310044Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1310044Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1310044Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310044Type;

        /**
         * Decodes a game1310044Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1310044Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310044Type;

        /**
         * Verifies a game1310044Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1310044Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1310044Type
         */
        public static fromObject(object: { [k: string]: any }): game1310044Type;

        /**
         * Creates a plain object from a game1310044Type message. Also converts values to other types if specified.
         * @param message game1310044Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1310044Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1310044Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1310044Type {

        /** Properties of a data1310044Type. */
        interface Idata1310044Type {

            /** data1310044Type posRateList */
            posRateList?: (game1310044Type.IposRateType[] | null);

            /** data1310044Type contextCount */
            contextCount: number;
        }

        /** Represents a data1310044Type. */
        class data1310044Type implements Idata1310044Type {

            /**
             * Constructs a new data1310044Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1310044Type.Idata1310044Type);

            /** data1310044Type posRateList. */
            public posRateList: game1310044Type.IposRateType[];

            /** data1310044Type contextCount. */
            public contextCount: number;

            /**
             * Creates a new data1310044Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1310044Type instance
             */
            public static create(properties?: game1310044Type.Idata1310044Type): game1310044Type.data1310044Type;

            /**
             * Encodes the specified data1310044Type message. Does not implicitly {@link game1310044Type.data1310044Type.verify|verify} messages.
             * @param message data1310044Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1310044Type.Idata1310044Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1310044Type message, length delimited. Does not implicitly {@link game1310044Type.data1310044Type.verify|verify} messages.
             * @param message data1310044Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1310044Type.Idata1310044Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1310044Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1310044Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310044Type.data1310044Type;

            /**
             * Decodes a data1310044Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1310044Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310044Type.data1310044Type;

            /**
             * Verifies a data1310044Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1310044Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1310044Type
             */
            public static fromObject(object: { [k: string]: any }): game1310044Type.data1310044Type;

            /**
             * Creates a plain object from a data1310044Type message. Also converts values to other types if specified.
             * @param message data1310044Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1310044Type.data1310044Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1310044Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1310044Type. */
        interface Iupdate1310044Type {

            /** update1310044Type index */
            index: number;

            /** update1310044Type posRateList */
            posRateList?: (game1310044Type.IposRateType[] | null);

            /** update1310044Type contextCount */
            contextCount: number;
        }

        /** Represents an update1310044Type. */
        class update1310044Type implements Iupdate1310044Type {

            /**
             * Constructs a new update1310044Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1310044Type.Iupdate1310044Type);

            /** update1310044Type index. */
            public index: number;

            /** update1310044Type posRateList. */
            public posRateList: game1310044Type.IposRateType[];

            /** update1310044Type contextCount. */
            public contextCount: number;

            /**
             * Creates a new update1310044Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1310044Type instance
             */
            public static create(properties?: game1310044Type.Iupdate1310044Type): game1310044Type.update1310044Type;

            /**
             * Encodes the specified update1310044Type message. Does not implicitly {@link game1310044Type.update1310044Type.verify|verify} messages.
             * @param message update1310044Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1310044Type.Iupdate1310044Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1310044Type message, length delimited. Does not implicitly {@link game1310044Type.update1310044Type.verify|verify} messages.
             * @param message update1310044Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1310044Type.Iupdate1310044Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1310044Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1310044Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310044Type.update1310044Type;

            /**
             * Decodes an update1310044Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1310044Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310044Type.update1310044Type;

            /**
             * Verifies an update1310044Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1310044Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1310044Type
             */
            public static fromObject(object: { [k: string]: any }): game1310044Type.update1310044Type;

            /**
             * Creates a plain object from an update1310044Type message. Also converts values to other types if specified.
             * @param message update1310044Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1310044Type.update1310044Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1310044Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a posRateType. */
        interface IposRateType {

            /** posRateType pos */
            pos: number;

            /** posRateType rate */
            rate: number;
        }

        /** Represents a posRateType. */
        class posRateType implements IposRateType {

            /**
             * Constructs a new posRateType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1310044Type.IposRateType);

            /** posRateType pos. */
            public pos: number;

            /** posRateType rate. */
            public rate: number;

            /**
             * Creates a new posRateType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns posRateType instance
             */
            public static create(properties?: game1310044Type.IposRateType): game1310044Type.posRateType;

            /**
             * Encodes the specified posRateType message. Does not implicitly {@link game1310044Type.posRateType.verify|verify} messages.
             * @param message posRateType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1310044Type.IposRateType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified posRateType message, length delimited. Does not implicitly {@link game1310044Type.posRateType.verify|verify} messages.
             * @param message posRateType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1310044Type.IposRateType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a posRateType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns posRateType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310044Type.posRateType;

            /**
             * Decodes a posRateType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns posRateType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310044Type.posRateType;

            /**
             * Verifies a posRateType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a posRateType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns posRateType
             */
            public static fromObject(object: { [k: string]: any }): game1310044Type.posRateType;

            /**
             * Creates a plain object from a posRateType message. Also converts values to other types if specified.
             * @param message posRateType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1310044Type.posRateType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this posRateType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1310047Type. */
    export class game1310047Type implements Igame1310047Type {

        /**
         * Constructs a new game1310047Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1310047Type);

        /** game1310047Type data. */
        public data?: (game1310047Type.Idata1310047Type | null);

        /** game1310047Type update. */
        public update: game1310047Type.Iupdate1310047Type[];

        /**
         * Creates a new game1310047Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1310047Type instance
         */
        public static create(properties?: Igame1310047Type): game1310047Type;

        /**
         * Encodes the specified game1310047Type message. Does not implicitly {@link game1310047Type.verify|verify} messages.
         * @param message game1310047Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1310047Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1310047Type message, length delimited. Does not implicitly {@link game1310047Type.verify|verify} messages.
         * @param message game1310047Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1310047Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1310047Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1310047Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310047Type;

        /**
         * Decodes a game1310047Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1310047Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310047Type;

        /**
         * Verifies a game1310047Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1310047Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1310047Type
         */
        public static fromObject(object: { [k: string]: any }): game1310047Type;

        /**
         * Creates a plain object from a game1310047Type message. Also converts values to other types if specified.
         * @param message game1310047Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1310047Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1310047Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1310047Type {

        /** Properties of a data1310047Type. */
        interface Idata1310047Type {

            /** data1310047Type resultList */
            resultList?: (IspinResultType[] | null);
        }

        /** Represents a data1310047Type. */
        class data1310047Type implements Idata1310047Type {

            /**
             * Constructs a new data1310047Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1310047Type.Idata1310047Type);

            /** data1310047Type resultList. */
            public resultList: IspinResultType[];

            /**
             * Creates a new data1310047Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1310047Type instance
             */
            public static create(properties?: game1310047Type.Idata1310047Type): game1310047Type.data1310047Type;

            /**
             * Encodes the specified data1310047Type message. Does not implicitly {@link game1310047Type.data1310047Type.verify|verify} messages.
             * @param message data1310047Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1310047Type.Idata1310047Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1310047Type message, length delimited. Does not implicitly {@link game1310047Type.data1310047Type.verify|verify} messages.
             * @param message data1310047Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1310047Type.Idata1310047Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1310047Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1310047Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310047Type.data1310047Type;

            /**
             * Decodes a data1310047Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1310047Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310047Type.data1310047Type;

            /**
             * Verifies a data1310047Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1310047Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1310047Type
             */
            public static fromObject(object: { [k: string]: any }): game1310047Type.data1310047Type;

            /**
             * Creates a plain object from a data1310047Type message. Also converts values to other types if specified.
             * @param message data1310047Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1310047Type.data1310047Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1310047Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1310047Type. */
        interface Iupdate1310047Type {

            /** update1310047Type index */
            index: number;

            /** update1310047Type resultList */
            resultList?: (IspinResultType[] | null);
        }

        /** Represents an update1310047Type. */
        class update1310047Type implements Iupdate1310047Type {

            /**
             * Constructs a new update1310047Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1310047Type.Iupdate1310047Type);

            /** update1310047Type index. */
            public index: number;

            /** update1310047Type resultList. */
            public resultList: IspinResultType[];

            /**
             * Creates a new update1310047Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1310047Type instance
             */
            public static create(properties?: game1310047Type.Iupdate1310047Type): game1310047Type.update1310047Type;

            /**
             * Encodes the specified update1310047Type message. Does not implicitly {@link game1310047Type.update1310047Type.verify|verify} messages.
             * @param message update1310047Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1310047Type.Iupdate1310047Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1310047Type message, length delimited. Does not implicitly {@link game1310047Type.update1310047Type.verify|verify} messages.
             * @param message update1310047Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1310047Type.Iupdate1310047Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1310047Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1310047Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310047Type.update1310047Type;

            /**
             * Decodes an update1310047Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1310047Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310047Type.update1310047Type;

            /**
             * Verifies an update1310047Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1310047Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1310047Type
             */
            public static fromObject(object: { [k: string]: any }): game1310047Type.update1310047Type;

            /**
             * Creates a plain object from an update1310047Type message. Also converts values to other types if specified.
             * @param message update1310047Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1310047Type.update1310047Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1310047Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1310049Type. */
    export class game1310049Type implements Igame1310049Type {

        /**
         * Constructs a new game1310049Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1310049Type);

        /** game1310049Type data. */
        public data?: (game1310049Type.Idata1310049Type | null);

        /** game1310049Type update. */
        public update: game1310049Type.Iupdate1310049Type[];

        /**
         * Creates a new game1310049Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1310049Type instance
         */
        public static create(properties?: Igame1310049Type): game1310049Type;

        /**
         * Encodes the specified game1310049Type message. Does not implicitly {@link game1310049Type.verify|verify} messages.
         * @param message game1310049Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1310049Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1310049Type message, length delimited. Does not implicitly {@link game1310049Type.verify|verify} messages.
         * @param message game1310049Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1310049Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1310049Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1310049Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310049Type;

        /**
         * Decodes a game1310049Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1310049Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310049Type;

        /**
         * Verifies a game1310049Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1310049Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1310049Type
         */
        public static fromObject(object: { [k: string]: any }): game1310049Type;

        /**
         * Creates a plain object from a game1310049Type message. Also converts values to other types if specified.
         * @param message game1310049Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1310049Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1310049Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1310049Type {

        /** Properties of a data1310049Type. */
        interface Idata1310049Type {

            /** data1310049Type markFrame */
            markFrame?: (number[] | null);

            /** data1310049Type repGrid */
            repGrid?: (IgridType[] | null);

            /** data1310049Type p2p */
            p2p?: (game1310049Type.Ip2pType[] | null);
        }

        /** Represents a data1310049Type. */
        class data1310049Type implements Idata1310049Type {

            /**
             * Constructs a new data1310049Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1310049Type.Idata1310049Type);

            /** data1310049Type markFrame. */
            public markFrame: number[];

            /** data1310049Type repGrid. */
            public repGrid: IgridType[];

            /** data1310049Type p2p. */
            public p2p: game1310049Type.Ip2pType[];

            /**
             * Creates a new data1310049Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1310049Type instance
             */
            public static create(properties?: game1310049Type.Idata1310049Type): game1310049Type.data1310049Type;

            /**
             * Encodes the specified data1310049Type message. Does not implicitly {@link game1310049Type.data1310049Type.verify|verify} messages.
             * @param message data1310049Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1310049Type.Idata1310049Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1310049Type message, length delimited. Does not implicitly {@link game1310049Type.data1310049Type.verify|verify} messages.
             * @param message data1310049Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1310049Type.Idata1310049Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1310049Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1310049Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310049Type.data1310049Type;

            /**
             * Decodes a data1310049Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1310049Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310049Type.data1310049Type;

            /**
             * Verifies a data1310049Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1310049Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1310049Type
             */
            public static fromObject(object: { [k: string]: any }): game1310049Type.data1310049Type;

            /**
             * Creates a plain object from a data1310049Type message. Also converts values to other types if specified.
             * @param message data1310049Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1310049Type.data1310049Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1310049Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1310049Type. */
        interface Iupdate1310049Type {

            /** update1310049Type index */
            index: number;

            /** update1310049Type markFrame */
            markFrame?: (number[] | null);

            /** update1310049Type repGrid */
            repGrid?: (IgridType[] | null);

            /** update1310049Type p2p */
            p2p?: (game1310049Type.Ip2pType[] | null);
        }

        /** Represents an update1310049Type. */
        class update1310049Type implements Iupdate1310049Type {

            /**
             * Constructs a new update1310049Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1310049Type.Iupdate1310049Type);

            /** update1310049Type index. */
            public index: number;

            /** update1310049Type markFrame. */
            public markFrame: number[];

            /** update1310049Type repGrid. */
            public repGrid: IgridType[];

            /** update1310049Type p2p. */
            public p2p: game1310049Type.Ip2pType[];

            /**
             * Creates a new update1310049Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1310049Type instance
             */
            public static create(properties?: game1310049Type.Iupdate1310049Type): game1310049Type.update1310049Type;

            /**
             * Encodes the specified update1310049Type message. Does not implicitly {@link game1310049Type.update1310049Type.verify|verify} messages.
             * @param message update1310049Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1310049Type.Iupdate1310049Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1310049Type message, length delimited. Does not implicitly {@link game1310049Type.update1310049Type.verify|verify} messages.
             * @param message update1310049Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1310049Type.Iupdate1310049Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1310049Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1310049Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310049Type.update1310049Type;

            /**
             * Decodes an update1310049Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1310049Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310049Type.update1310049Type;

            /**
             * Verifies an update1310049Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1310049Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1310049Type
             */
            public static fromObject(object: { [k: string]: any }): game1310049Type.update1310049Type;

            /**
             * Creates a plain object from an update1310049Type message. Also converts values to other types if specified.
             * @param message update1310049Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1310049Type.update1310049Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1310049Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a p2pType. */
        interface Ip2pType {

            /** p2pType from */
            from: number;

            /** p2pType to */
            to: number;
        }

        /** Represents a p2pType. */
        class p2pType implements Ip2pType {

            /**
             * Constructs a new p2pType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1310049Type.Ip2pType);

            /** p2pType from. */
            public from: number;

            /** p2pType to. */
            public to: number;

            /**
             * Creates a new p2pType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns p2pType instance
             */
            public static create(properties?: game1310049Type.Ip2pType): game1310049Type.p2pType;

            /**
             * Encodes the specified p2pType message. Does not implicitly {@link game1310049Type.p2pType.verify|verify} messages.
             * @param message p2pType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1310049Type.Ip2pType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified p2pType message, length delimited. Does not implicitly {@link game1310049Type.p2pType.verify|verify} messages.
             * @param message p2pType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1310049Type.Ip2pType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a p2pType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns p2pType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310049Type.p2pType;

            /**
             * Decodes a p2pType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns p2pType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310049Type.p2pType;

            /**
             * Verifies a p2pType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a p2pType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns p2pType
             */
            public static fromObject(object: { [k: string]: any }): game1310049Type.p2pType;

            /**
             * Creates a plain object from a p2pType message. Also converts values to other types if specified.
             * @param message p2pType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1310049Type.p2pType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this p2pType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1310057Type. */
    export class game1310057Type implements Igame1310057Type {

        /**
         * Constructs a new game1310057Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1310057Type);

        /** game1310057Type data. */
        public data?: (game1310057Type.Idata1310057Type | null);

        /** game1310057Type update. */
        public update: game1310057Type.Iupdate1310057Type[];

        /**
         * Creates a new game1310057Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1310057Type instance
         */
        public static create(properties?: Igame1310057Type): game1310057Type;

        /**
         * Encodes the specified game1310057Type message. Does not implicitly {@link game1310057Type.verify|verify} messages.
         * @param message game1310057Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1310057Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1310057Type message, length delimited. Does not implicitly {@link game1310057Type.verify|verify} messages.
         * @param message game1310057Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1310057Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1310057Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1310057Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310057Type;

        /**
         * Decodes a game1310057Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1310057Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310057Type;

        /**
         * Verifies a game1310057Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1310057Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1310057Type
         */
        public static fromObject(object: { [k: string]: any }): game1310057Type;

        /**
         * Creates a plain object from a game1310057Type message. Also converts values to other types if specified.
         * @param message game1310057Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1310057Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1310057Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1310057Type {

        /** Properties of a data1310057Type. */
        interface Idata1310057Type {

            /** data1310057Type posMulti */
            posMulti?: (game1310057Type.IposMultiType[] | null);

            /** data1310057Type spinCoin */
            spinCoin?: (number | Long | null);
        }

        /** Represents a data1310057Type. */
        class data1310057Type implements Idata1310057Type {

            /**
             * Constructs a new data1310057Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1310057Type.Idata1310057Type);

            /** data1310057Type posMulti. */
            public posMulti: game1310057Type.IposMultiType[];

            /** data1310057Type spinCoin. */
            public spinCoin: (number | Long);

            /**
             * Creates a new data1310057Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1310057Type instance
             */
            public static create(properties?: game1310057Type.Idata1310057Type): game1310057Type.data1310057Type;

            /**
             * Encodes the specified data1310057Type message. Does not implicitly {@link game1310057Type.data1310057Type.verify|verify} messages.
             * @param message data1310057Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1310057Type.Idata1310057Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1310057Type message, length delimited. Does not implicitly {@link game1310057Type.data1310057Type.verify|verify} messages.
             * @param message data1310057Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1310057Type.Idata1310057Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1310057Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1310057Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310057Type.data1310057Type;

            /**
             * Decodes a data1310057Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1310057Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310057Type.data1310057Type;

            /**
             * Verifies a data1310057Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1310057Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1310057Type
             */
            public static fromObject(object: { [k: string]: any }): game1310057Type.data1310057Type;

            /**
             * Creates a plain object from a data1310057Type message. Also converts values to other types if specified.
             * @param message data1310057Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1310057Type.data1310057Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1310057Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1310057Type. */
        interface Iupdate1310057Type {

            /** update1310057Type index */
            index: number;

            /** update1310057Type posMulti */
            posMulti?: (game1310057Type.IposMultiType[] | null);

            /** update1310057Type spinCoin */
            spinCoin?: (number | Long | null);
        }

        /** Represents an update1310057Type. */
        class update1310057Type implements Iupdate1310057Type {

            /**
             * Constructs a new update1310057Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1310057Type.Iupdate1310057Type);

            /** update1310057Type index. */
            public index: number;

            /** update1310057Type posMulti. */
            public posMulti: game1310057Type.IposMultiType[];

            /** update1310057Type spinCoin. */
            public spinCoin: (number | Long);

            /**
             * Creates a new update1310057Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1310057Type instance
             */
            public static create(properties?: game1310057Type.Iupdate1310057Type): game1310057Type.update1310057Type;

            /**
             * Encodes the specified update1310057Type message. Does not implicitly {@link game1310057Type.update1310057Type.verify|verify} messages.
             * @param message update1310057Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1310057Type.Iupdate1310057Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1310057Type message, length delimited. Does not implicitly {@link game1310057Type.update1310057Type.verify|verify} messages.
             * @param message update1310057Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1310057Type.Iupdate1310057Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1310057Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1310057Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310057Type.update1310057Type;

            /**
             * Decodes an update1310057Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1310057Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310057Type.update1310057Type;

            /**
             * Verifies an update1310057Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1310057Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1310057Type
             */
            public static fromObject(object: { [k: string]: any }): game1310057Type.update1310057Type;

            /**
             * Creates a plain object from an update1310057Type message. Also converts values to other types if specified.
             * @param message update1310057Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1310057Type.update1310057Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1310057Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a posMultiType. */
        interface IposMultiType {

            /** posMultiType pos */
            pos: number;

            /** posMultiType multi */
            multi: number;
        }

        /** Represents a posMultiType. */
        class posMultiType implements IposMultiType {

            /**
             * Constructs a new posMultiType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1310057Type.IposMultiType);

            /** posMultiType pos. */
            public pos: number;

            /** posMultiType multi. */
            public multi: number;

            /**
             * Creates a new posMultiType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns posMultiType instance
             */
            public static create(properties?: game1310057Type.IposMultiType): game1310057Type.posMultiType;

            /**
             * Encodes the specified posMultiType message. Does not implicitly {@link game1310057Type.posMultiType.verify|verify} messages.
             * @param message posMultiType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1310057Type.IposMultiType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified posMultiType message, length delimited. Does not implicitly {@link game1310057Type.posMultiType.verify|verify} messages.
             * @param message posMultiType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1310057Type.IposMultiType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a posMultiType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns posMultiType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310057Type.posMultiType;

            /**
             * Decodes a posMultiType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns posMultiType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310057Type.posMultiType;

            /**
             * Verifies a posMultiType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a posMultiType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns posMultiType
             */
            public static fromObject(object: { [k: string]: any }): game1310057Type.posMultiType;

            /**
             * Creates a plain object from a posMultiType message. Also converts values to other types if specified.
             * @param message posMultiType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1310057Type.posMultiType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this posMultiType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1310063Type. */
    export class game1310063Type implements Igame1310063Type {

        /**
         * Constructs a new game1310063Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1310063Type);

        /** game1310063Type data. */
        public data?: (game1310063Type.Idata1310063Type | null);

        /** game1310063Type update. */
        public update: game1310063Type.Iupdate1310063Type[];

        /**
         * Creates a new game1310063Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1310063Type instance
         */
        public static create(properties?: Igame1310063Type): game1310063Type;

        /**
         * Encodes the specified game1310063Type message. Does not implicitly {@link game1310063Type.verify|verify} messages.
         * @param message game1310063Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1310063Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1310063Type message, length delimited. Does not implicitly {@link game1310063Type.verify|verify} messages.
         * @param message game1310063Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1310063Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1310063Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1310063Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310063Type;

        /**
         * Decodes a game1310063Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1310063Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310063Type;

        /**
         * Verifies a game1310063Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1310063Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1310063Type
         */
        public static fromObject(object: { [k: string]: any }): game1310063Type;

        /**
         * Creates a plain object from a game1310063Type message. Also converts values to other types if specified.
         * @param message game1310063Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1310063Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1310063Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1310063Type {

        /** Properties of a data1310063Type. */
        interface Idata1310063Type {

            /** data1310063Type lv */
            lv: number;

            /** data1310063Type collectNum */
            collectNum: number;
        }

        /** Represents a data1310063Type. */
        class data1310063Type implements Idata1310063Type {

            /**
             * Constructs a new data1310063Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1310063Type.Idata1310063Type);

            /** data1310063Type lv. */
            public lv: number;

            /** data1310063Type collectNum. */
            public collectNum: number;

            /**
             * Creates a new data1310063Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1310063Type instance
             */
            public static create(properties?: game1310063Type.Idata1310063Type): game1310063Type.data1310063Type;

            /**
             * Encodes the specified data1310063Type message. Does not implicitly {@link game1310063Type.data1310063Type.verify|verify} messages.
             * @param message data1310063Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1310063Type.Idata1310063Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1310063Type message, length delimited. Does not implicitly {@link game1310063Type.data1310063Type.verify|verify} messages.
             * @param message data1310063Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1310063Type.Idata1310063Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1310063Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1310063Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310063Type.data1310063Type;

            /**
             * Decodes a data1310063Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1310063Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310063Type.data1310063Type;

            /**
             * Verifies a data1310063Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1310063Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1310063Type
             */
            public static fromObject(object: { [k: string]: any }): game1310063Type.data1310063Type;

            /**
             * Creates a plain object from a data1310063Type message. Also converts values to other types if specified.
             * @param message data1310063Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1310063Type.data1310063Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1310063Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1310063Type. */
        interface Iupdate1310063Type {

            /** update1310063Type index */
            index: number;

            /** update1310063Type lv */
            lv: number;

            /** update1310063Type collectNum */
            collectNum: number;
        }

        /** Represents an update1310063Type. */
        class update1310063Type implements Iupdate1310063Type {

            /**
             * Constructs a new update1310063Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1310063Type.Iupdate1310063Type);

            /** update1310063Type index. */
            public index: number;

            /** update1310063Type lv. */
            public lv: number;

            /** update1310063Type collectNum. */
            public collectNum: number;

            /**
             * Creates a new update1310063Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1310063Type instance
             */
            public static create(properties?: game1310063Type.Iupdate1310063Type): game1310063Type.update1310063Type;

            /**
             * Encodes the specified update1310063Type message. Does not implicitly {@link game1310063Type.update1310063Type.verify|verify} messages.
             * @param message update1310063Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1310063Type.Iupdate1310063Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1310063Type message, length delimited. Does not implicitly {@link game1310063Type.update1310063Type.verify|verify} messages.
             * @param message update1310063Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1310063Type.Iupdate1310063Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1310063Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1310063Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310063Type.update1310063Type;

            /**
             * Decodes an update1310063Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1310063Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310063Type.update1310063Type;

            /**
             * Verifies an update1310063Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1310063Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1310063Type
             */
            public static fromObject(object: { [k: string]: any }): game1310063Type.update1310063Type;

            /**
             * Creates a plain object from an update1310063Type message. Also converts values to other types if specified.
             * @param message update1310063Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1310063Type.update1310063Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1310063Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1310073Type. */
    export class game1310073Type implements Igame1310073Type {

        /**
         * Constructs a new game1310073Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1310073Type);

        /** game1310073Type data. */
        public data?: (game1310073Type.Idata1310073Type | null);

        /** game1310073Type update. */
        public update: game1310073Type.Iupdate1310073Type[];

        /**
         * Creates a new game1310073Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1310073Type instance
         */
        public static create(properties?: Igame1310073Type): game1310073Type;

        /**
         * Encodes the specified game1310073Type message. Does not implicitly {@link game1310073Type.verify|verify} messages.
         * @param message game1310073Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1310073Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1310073Type message, length delimited. Does not implicitly {@link game1310073Type.verify|verify} messages.
         * @param message game1310073Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1310073Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1310073Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1310073Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310073Type;

        /**
         * Decodes a game1310073Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1310073Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310073Type;

        /**
         * Verifies a game1310073Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1310073Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1310073Type
         */
        public static fromObject(object: { [k: string]: any }): game1310073Type;

        /**
         * Creates a plain object from a game1310073Type message. Also converts values to other types if specified.
         * @param message game1310073Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1310073Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1310073Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1310073Type {

        /** Properties of a data1310073Type. */
        interface Idata1310073Type {

            /** data1310073Type currentReward */
            currentReward: (number | Long);
        }

        /** Represents a data1310073Type. */
        class data1310073Type implements Idata1310073Type {

            /**
             * Constructs a new data1310073Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1310073Type.Idata1310073Type);

            /** data1310073Type currentReward. */
            public currentReward: (number | Long);

            /**
             * Creates a new data1310073Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1310073Type instance
             */
            public static create(properties?: game1310073Type.Idata1310073Type): game1310073Type.data1310073Type;

            /**
             * Encodes the specified data1310073Type message. Does not implicitly {@link game1310073Type.data1310073Type.verify|verify} messages.
             * @param message data1310073Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1310073Type.Idata1310073Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1310073Type message, length delimited. Does not implicitly {@link game1310073Type.data1310073Type.verify|verify} messages.
             * @param message data1310073Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1310073Type.Idata1310073Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1310073Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1310073Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310073Type.data1310073Type;

            /**
             * Decodes a data1310073Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1310073Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310073Type.data1310073Type;

            /**
             * Verifies a data1310073Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1310073Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1310073Type
             */
            public static fromObject(object: { [k: string]: any }): game1310073Type.data1310073Type;

            /**
             * Creates a plain object from a data1310073Type message. Also converts values to other types if specified.
             * @param message data1310073Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1310073Type.data1310073Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1310073Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1310073Type. */
        interface Iupdate1310073Type {

            /** update1310073Type currentReward */
            currentReward: (number | Long);
        }

        /** Represents an update1310073Type. */
        class update1310073Type implements Iupdate1310073Type {

            /**
             * Constructs a new update1310073Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1310073Type.Iupdate1310073Type);

            /** update1310073Type currentReward. */
            public currentReward: (number | Long);

            /**
             * Creates a new update1310073Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1310073Type instance
             */
            public static create(properties?: game1310073Type.Iupdate1310073Type): game1310073Type.update1310073Type;

            /**
             * Encodes the specified update1310073Type message. Does not implicitly {@link game1310073Type.update1310073Type.verify|verify} messages.
             * @param message update1310073Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1310073Type.Iupdate1310073Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1310073Type message, length delimited. Does not implicitly {@link game1310073Type.update1310073Type.verify|verify} messages.
             * @param message update1310073Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1310073Type.Iupdate1310073Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1310073Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1310073Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310073Type.update1310073Type;

            /**
             * Decodes an update1310073Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1310073Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310073Type.update1310073Type;

            /**
             * Verifies an update1310073Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1310073Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1310073Type
             */
            public static fromObject(object: { [k: string]: any }): game1310073Type.update1310073Type;

            /**
             * Creates a plain object from an update1310073Type message. Also converts values to other types if specified.
             * @param message update1310073Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1310073Type.update1310073Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1310073Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1310154Type. */
    export class game1310154Type implements Igame1310154Type {

        /**
         * Constructs a new game1310154Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1310154Type);

        /** game1310154Type data. */
        public data?: (game1310154Type.Idata1310154Type | null);

        /** game1310154Type update. */
        public update: game1310154Type.Iupdate1310154Type[];

        /**
         * Creates a new game1310154Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1310154Type instance
         */
        public static create(properties?: Igame1310154Type): game1310154Type;

        /**
         * Encodes the specified game1310154Type message. Does not implicitly {@link game1310154Type.verify|verify} messages.
         * @param message game1310154Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1310154Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1310154Type message, length delimited. Does not implicitly {@link game1310154Type.verify|verify} messages.
         * @param message game1310154Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1310154Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1310154Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1310154Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310154Type;

        /**
         * Decodes a game1310154Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1310154Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310154Type;

        /**
         * Verifies a game1310154Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1310154Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1310154Type
         */
        public static fromObject(object: { [k: string]: any }): game1310154Type;

        /**
         * Creates a plain object from a game1310154Type message. Also converts values to other types if specified.
         * @param message game1310154Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1310154Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1310154Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1310154Type {

        /** Properties of a data1310154Type. */
        interface Idata1310154Type {

            /** data1310154Type lvLgLists */
            lvLgLists?: (game1310154Type.IlvLgListsType[] | null);
        }

        /** Represents a data1310154Type. */
        class data1310154Type implements Idata1310154Type {

            /**
             * Constructs a new data1310154Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1310154Type.Idata1310154Type);

            /** data1310154Type lvLgLists. */
            public lvLgLists: game1310154Type.IlvLgListsType[];

            /**
             * Creates a new data1310154Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1310154Type instance
             */
            public static create(properties?: game1310154Type.Idata1310154Type): game1310154Type.data1310154Type;

            /**
             * Encodes the specified data1310154Type message. Does not implicitly {@link game1310154Type.data1310154Type.verify|verify} messages.
             * @param message data1310154Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1310154Type.Idata1310154Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1310154Type message, length delimited. Does not implicitly {@link game1310154Type.data1310154Type.verify|verify} messages.
             * @param message data1310154Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1310154Type.Idata1310154Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1310154Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1310154Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310154Type.data1310154Type;

            /**
             * Decodes a data1310154Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1310154Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310154Type.data1310154Type;

            /**
             * Verifies a data1310154Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1310154Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1310154Type
             */
            public static fromObject(object: { [k: string]: any }): game1310154Type.data1310154Type;

            /**
             * Creates a plain object from a data1310154Type message. Also converts values to other types if specified.
             * @param message data1310154Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1310154Type.data1310154Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1310154Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1310154Type. */
        interface Iupdate1310154Type {

            /** update1310154Type index */
            index: number;

            /** update1310154Type lvLgLists */
            lvLgLists: game1310154Type.IlvLgListsType;
        }

        /** Represents an update1310154Type. */
        class update1310154Type implements Iupdate1310154Type {

            /**
             * Constructs a new update1310154Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1310154Type.Iupdate1310154Type);

            /** update1310154Type index. */
            public index: number;

            /** update1310154Type lvLgLists. */
            public lvLgLists: game1310154Type.IlvLgListsType;

            /**
             * Creates a new update1310154Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1310154Type instance
             */
            public static create(properties?: game1310154Type.Iupdate1310154Type): game1310154Type.update1310154Type;

            /**
             * Encodes the specified update1310154Type message. Does not implicitly {@link game1310154Type.update1310154Type.verify|verify} messages.
             * @param message update1310154Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1310154Type.Iupdate1310154Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1310154Type message, length delimited. Does not implicitly {@link game1310154Type.update1310154Type.verify|verify} messages.
             * @param message update1310154Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1310154Type.Iupdate1310154Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1310154Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1310154Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310154Type.update1310154Type;

            /**
             * Decodes an update1310154Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1310154Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310154Type.update1310154Type;

            /**
             * Verifies an update1310154Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1310154Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1310154Type
             */
            public static fromObject(object: { [k: string]: any }): game1310154Type.update1310154Type;

            /**
             * Creates a plain object from an update1310154Type message. Also converts values to other types if specified.
             * @param message update1310154Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1310154Type.update1310154Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1310154Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a lvLgListsType. */
        interface IlvLgListsType {

            /** lvLgListsType lv */
            lv: number;

            /** lvLgListsType num */
            num: number;
        }

        /** Represents a lvLgListsType. */
        class lvLgListsType implements IlvLgListsType {

            /**
             * Constructs a new lvLgListsType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1310154Type.IlvLgListsType);

            /** lvLgListsType lv. */
            public lv: number;

            /** lvLgListsType num. */
            public num: number;

            /**
             * Creates a new lvLgListsType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns lvLgListsType instance
             */
            public static create(properties?: game1310154Type.IlvLgListsType): game1310154Type.lvLgListsType;

            /**
             * Encodes the specified lvLgListsType message. Does not implicitly {@link game1310154Type.lvLgListsType.verify|verify} messages.
             * @param message lvLgListsType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1310154Type.IlvLgListsType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified lvLgListsType message, length delimited. Does not implicitly {@link game1310154Type.lvLgListsType.verify|verify} messages.
             * @param message lvLgListsType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1310154Type.IlvLgListsType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a lvLgListsType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns lvLgListsType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1310154Type.lvLgListsType;

            /**
             * Decodes a lvLgListsType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns lvLgListsType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1310154Type.lvLgListsType;

            /**
             * Verifies a lvLgListsType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a lvLgListsType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns lvLgListsType
             */
            public static fromObject(object: { [k: string]: any }): game1310154Type.lvLgListsType;

            /**
             * Creates a plain object from a lvLgListsType message. Also converts values to other types if specified.
             * @param message lvLgListsType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1310154Type.lvLgListsType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this lvLgListsType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1410006Type. */
    export class game1410006Type implements Igame1410006Type {

        /**
         * Constructs a new game1410006Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1410006Type);

        /** game1410006Type data. */
        public data?: (game1410006Type.Idata1410006Type | null);

        /** game1410006Type update. */
        public update: game1410006Type.Iupdate1410006Type[];

        /**
         * Creates a new game1410006Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1410006Type instance
         */
        public static create(properties?: Igame1410006Type): game1410006Type;

        /**
         * Encodes the specified game1410006Type message. Does not implicitly {@link game1410006Type.verify|verify} messages.
         * @param message game1410006Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1410006Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1410006Type message, length delimited. Does not implicitly {@link game1410006Type.verify|verify} messages.
         * @param message game1410006Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1410006Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1410006Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1410006Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1410006Type;

        /**
         * Decodes a game1410006Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1410006Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1410006Type;

        /**
         * Verifies a game1410006Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1410006Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1410006Type
         */
        public static fromObject(object: { [k: string]: any }): game1410006Type;

        /**
         * Creates a plain object from a game1410006Type message. Also converts values to other types if specified.
         * @param message game1410006Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1410006Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1410006Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1410006Type {

        /** Properties of a data1410006Type. */
        interface Idata1410006Type {

            /** data1410006Type mediumGrid */
            mediumGrid?: (IgridType[] | null);

            /** data1410006Type pToPl */
            pToPl?: (game1410006Type.IptoplType[] | null);
        }

        /** Represents a data1410006Type. */
        class data1410006Type implements Idata1410006Type {

            /**
             * Constructs a new data1410006Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1410006Type.Idata1410006Type);

            /** data1410006Type mediumGrid. */
            public mediumGrid: IgridType[];

            /** data1410006Type pToPl. */
            public pToPl: game1410006Type.IptoplType[];

            /**
             * Creates a new data1410006Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1410006Type instance
             */
            public static create(properties?: game1410006Type.Idata1410006Type): game1410006Type.data1410006Type;

            /**
             * Encodes the specified data1410006Type message. Does not implicitly {@link game1410006Type.data1410006Type.verify|verify} messages.
             * @param message data1410006Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1410006Type.Idata1410006Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1410006Type message, length delimited. Does not implicitly {@link game1410006Type.data1410006Type.verify|verify} messages.
             * @param message data1410006Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1410006Type.Idata1410006Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1410006Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1410006Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1410006Type.data1410006Type;

            /**
             * Decodes a data1410006Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1410006Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1410006Type.data1410006Type;

            /**
             * Verifies a data1410006Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1410006Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1410006Type
             */
            public static fromObject(object: { [k: string]: any }): game1410006Type.data1410006Type;

            /**
             * Creates a plain object from a data1410006Type message. Also converts values to other types if specified.
             * @param message data1410006Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1410006Type.data1410006Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1410006Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1410006Type. */
        interface Iupdate1410006Type {

            /** update1410006Type index */
            index: number;

            /** update1410006Type mediumGrid */
            mediumGrid?: (IgridType[] | null);

            /** update1410006Type pToPl */
            pToPl?: (game1410006Type.IptoplType[] | null);
        }

        /** Represents an update1410006Type. */
        class update1410006Type implements Iupdate1410006Type {

            /**
             * Constructs a new update1410006Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1410006Type.Iupdate1410006Type);

            /** update1410006Type index. */
            public index: number;

            /** update1410006Type mediumGrid. */
            public mediumGrid: IgridType[];

            /** update1410006Type pToPl. */
            public pToPl: game1410006Type.IptoplType[];

            /**
             * Creates a new update1410006Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1410006Type instance
             */
            public static create(properties?: game1410006Type.Iupdate1410006Type): game1410006Type.update1410006Type;

            /**
             * Encodes the specified update1410006Type message. Does not implicitly {@link game1410006Type.update1410006Type.verify|verify} messages.
             * @param message update1410006Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1410006Type.Iupdate1410006Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1410006Type message, length delimited. Does not implicitly {@link game1410006Type.update1410006Type.verify|verify} messages.
             * @param message update1410006Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1410006Type.Iupdate1410006Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1410006Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1410006Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1410006Type.update1410006Type;

            /**
             * Decodes an update1410006Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1410006Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1410006Type.update1410006Type;

            /**
             * Verifies an update1410006Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1410006Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1410006Type
             */
            public static fromObject(object: { [k: string]: any }): game1410006Type.update1410006Type;

            /**
             * Creates a plain object from an update1410006Type message. Also converts values to other types if specified.
             * @param message update1410006Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1410006Type.update1410006Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1410006Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ptoplType. */
        interface IptoplType {

            /** ptoplType from */
            from: number;

            /** ptoplType toList */
            toList?: (number[] | null);
        }

        /** Represents a ptoplType. */
        class ptoplType implements IptoplType {

            /**
             * Constructs a new ptoplType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1410006Type.IptoplType);

            /** ptoplType from. */
            public from: number;

            /** ptoplType toList. */
            public toList: number[];

            /**
             * Creates a new ptoplType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ptoplType instance
             */
            public static create(properties?: game1410006Type.IptoplType): game1410006Type.ptoplType;

            /**
             * Encodes the specified ptoplType message. Does not implicitly {@link game1410006Type.ptoplType.verify|verify} messages.
             * @param message ptoplType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1410006Type.IptoplType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ptoplType message, length delimited. Does not implicitly {@link game1410006Type.ptoplType.verify|verify} messages.
             * @param message ptoplType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1410006Type.IptoplType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ptoplType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ptoplType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1410006Type.ptoplType;

            /**
             * Decodes a ptoplType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ptoplType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1410006Type.ptoplType;

            /**
             * Verifies a ptoplType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a ptoplType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ptoplType
             */
            public static fromObject(object: { [k: string]: any }): game1410006Type.ptoplType;

            /**
             * Creates a plain object from a ptoplType message. Also converts values to other types if specified.
             * @param message ptoplType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1410006Type.ptoplType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ptoplType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1410009Type. */
    export class game1410009Type implements Igame1410009Type {

        /**
         * Constructs a new game1410009Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1410009Type);

        /** game1410009Type data. */
        public data?: (game1410009Type.Idata1410009Type | null);

        /** game1410009Type update. */
        public update: game1410009Type.Iupdate1410009Type[];

        /**
         * Creates a new game1410009Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1410009Type instance
         */
        public static create(properties?: Igame1410009Type): game1410009Type;

        /**
         * Encodes the specified game1410009Type message. Does not implicitly {@link game1410009Type.verify|verify} messages.
         * @param message game1410009Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1410009Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1410009Type message, length delimited. Does not implicitly {@link game1410009Type.verify|verify} messages.
         * @param message game1410009Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1410009Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1410009Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1410009Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1410009Type;

        /**
         * Decodes a game1410009Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1410009Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1410009Type;

        /**
         * Verifies a game1410009Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1410009Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1410009Type
         */
        public static fromObject(object: { [k: string]: any }): game1410009Type;

        /**
         * Creates a plain object from a game1410009Type message. Also converts values to other types if specified.
         * @param message game1410009Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1410009Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1410009Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1410009Type {

        /** Properties of a data1410009Type. */
        interface Idata1410009Type {

            /** data1410009Type lanternShow */
            lanternShow?: (game1410009Type.IlanternType[] | null);

            /** data1410009Type posRewardList */
            posRewardList?: (game1410009Type.IposRewardType[] | null);
        }

        /** Represents a data1410009Type. */
        class data1410009Type implements Idata1410009Type {

            /**
             * Constructs a new data1410009Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1410009Type.Idata1410009Type);

            /** data1410009Type lanternShow. */
            public lanternShow: game1410009Type.IlanternType[];

            /** data1410009Type posRewardList. */
            public posRewardList: game1410009Type.IposRewardType[];

            /**
             * Creates a new data1410009Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1410009Type instance
             */
            public static create(properties?: game1410009Type.Idata1410009Type): game1410009Type.data1410009Type;

            /**
             * Encodes the specified data1410009Type message. Does not implicitly {@link game1410009Type.data1410009Type.verify|verify} messages.
             * @param message data1410009Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1410009Type.Idata1410009Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1410009Type message, length delimited. Does not implicitly {@link game1410009Type.data1410009Type.verify|verify} messages.
             * @param message data1410009Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1410009Type.Idata1410009Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1410009Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1410009Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1410009Type.data1410009Type;

            /**
             * Decodes a data1410009Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1410009Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1410009Type.data1410009Type;

            /**
             * Verifies a data1410009Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1410009Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1410009Type
             */
            public static fromObject(object: { [k: string]: any }): game1410009Type.data1410009Type;

            /**
             * Creates a plain object from a data1410009Type message. Also converts values to other types if specified.
             * @param message data1410009Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1410009Type.data1410009Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1410009Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1410009Type. */
        interface Iupdate1410009Type {

            /** update1410009Type index */
            index: number;

            /** update1410009Type lanternShow */
            lanternShow?: (game1410009Type.IlanternType[] | null);

            /** update1410009Type posRewardList */
            posRewardList?: (game1410009Type.IposRewardType[] | null);
        }

        /** Represents an update1410009Type. */
        class update1410009Type implements Iupdate1410009Type {

            /**
             * Constructs a new update1410009Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1410009Type.Iupdate1410009Type);

            /** update1410009Type index. */
            public index: number;

            /** update1410009Type lanternShow. */
            public lanternShow: game1410009Type.IlanternType[];

            /** update1410009Type posRewardList. */
            public posRewardList: game1410009Type.IposRewardType[];

            /**
             * Creates a new update1410009Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1410009Type instance
             */
            public static create(properties?: game1410009Type.Iupdate1410009Type): game1410009Type.update1410009Type;

            /**
             * Encodes the specified update1410009Type message. Does not implicitly {@link game1410009Type.update1410009Type.verify|verify} messages.
             * @param message update1410009Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1410009Type.Iupdate1410009Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1410009Type message, length delimited. Does not implicitly {@link game1410009Type.update1410009Type.verify|verify} messages.
             * @param message update1410009Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1410009Type.Iupdate1410009Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1410009Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1410009Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1410009Type.update1410009Type;

            /**
             * Decodes an update1410009Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1410009Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1410009Type.update1410009Type;

            /**
             * Verifies an update1410009Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1410009Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1410009Type
             */
            public static fromObject(object: { [k: string]: any }): game1410009Type.update1410009Type;

            /**
             * Creates a plain object from an update1410009Type message. Also converts values to other types if specified.
             * @param message update1410009Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1410009Type.update1410009Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1410009Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a lanternType. */
        interface IlanternType {

            /** lanternType pos */
            pos: number;

            /** lanternType elem */
            elem: number;

            /** lanternType rate */
            rate: number;
        }

        /** Represents a lanternType. */
        class lanternType implements IlanternType {

            /**
             * Constructs a new lanternType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1410009Type.IlanternType);

            /** lanternType pos. */
            public pos: number;

            /** lanternType elem. */
            public elem: number;

            /** lanternType rate. */
            public rate: number;

            /**
             * Creates a new lanternType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns lanternType instance
             */
            public static create(properties?: game1410009Type.IlanternType): game1410009Type.lanternType;

            /**
             * Encodes the specified lanternType message. Does not implicitly {@link game1410009Type.lanternType.verify|verify} messages.
             * @param message lanternType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1410009Type.IlanternType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified lanternType message, length delimited. Does not implicitly {@link game1410009Type.lanternType.verify|verify} messages.
             * @param message lanternType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1410009Type.IlanternType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a lanternType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns lanternType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1410009Type.lanternType;

            /**
             * Decodes a lanternType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns lanternType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1410009Type.lanternType;

            /**
             * Verifies a lanternType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a lanternType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns lanternType
             */
            public static fromObject(object: { [k: string]: any }): game1410009Type.lanternType;

            /**
             * Creates a plain object from a lanternType message. Also converts values to other types if specified.
             * @param message lanternType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1410009Type.lanternType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this lanternType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a posRewardType. */
        interface IposRewardType {

            /** posRewardType pos */
            pos: number;

            /** posRewardType reward */
            reward: (number | Long);
        }

        /** Represents a posRewardType. */
        class posRewardType implements IposRewardType {

            /**
             * Constructs a new posRewardType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1410009Type.IposRewardType);

            /** posRewardType pos. */
            public pos: number;

            /** posRewardType reward. */
            public reward: (number | Long);

            /**
             * Creates a new posRewardType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns posRewardType instance
             */
            public static create(properties?: game1410009Type.IposRewardType): game1410009Type.posRewardType;

            /**
             * Encodes the specified posRewardType message. Does not implicitly {@link game1410009Type.posRewardType.verify|verify} messages.
             * @param message posRewardType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1410009Type.IposRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified posRewardType message, length delimited. Does not implicitly {@link game1410009Type.posRewardType.verify|verify} messages.
             * @param message posRewardType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1410009Type.IposRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a posRewardType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns posRewardType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1410009Type.posRewardType;

            /**
             * Decodes a posRewardType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns posRewardType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1410009Type.posRewardType;

            /**
             * Verifies a posRewardType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a posRewardType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns posRewardType
             */
            public static fromObject(object: { [k: string]: any }): game1410009Type.posRewardType;

            /**
             * Creates a plain object from a posRewardType message. Also converts values to other types if specified.
             * @param message posRewardType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1410009Type.posRewardType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this posRewardType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1410031Type. */
    export class game1410031Type implements Igame1410031Type {

        /**
         * Constructs a new game1410031Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1410031Type);

        /** game1410031Type data. */
        public data?: (game1410031Type.Idata1410031Type | null);

        /** game1410031Type update. */
        public update: game1410031Type.Iupdate1410031Type[];

        /**
         * Creates a new game1410031Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1410031Type instance
         */
        public static create(properties?: Igame1410031Type): game1410031Type;

        /**
         * Encodes the specified game1410031Type message. Does not implicitly {@link game1410031Type.verify|verify} messages.
         * @param message game1410031Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1410031Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1410031Type message, length delimited. Does not implicitly {@link game1410031Type.verify|verify} messages.
         * @param message game1410031Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1410031Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1410031Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1410031Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1410031Type;

        /**
         * Decodes a game1410031Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1410031Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1410031Type;

        /**
         * Verifies a game1410031Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1410031Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1410031Type
         */
        public static fromObject(object: { [k: string]: any }): game1410031Type;

        /**
         * Creates a plain object from a game1410031Type message. Also converts values to other types if specified.
         * @param message game1410031Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1410031Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1410031Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1410031Type {

        /** Properties of a data1410031Type. */
        interface Idata1410031Type {

            /** data1410031Type resultList */
            resultList?: (game1410031Type.IResultListType[] | null);
        }

        /** Represents a data1410031Type. */
        class data1410031Type implements Idata1410031Type {

            /**
             * Constructs a new data1410031Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1410031Type.Idata1410031Type);

            /** data1410031Type resultList. */
            public resultList: game1410031Type.IResultListType[];

            /**
             * Creates a new data1410031Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1410031Type instance
             */
            public static create(properties?: game1410031Type.Idata1410031Type): game1410031Type.data1410031Type;

            /**
             * Encodes the specified data1410031Type message. Does not implicitly {@link game1410031Type.data1410031Type.verify|verify} messages.
             * @param message data1410031Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1410031Type.Idata1410031Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1410031Type message, length delimited. Does not implicitly {@link game1410031Type.data1410031Type.verify|verify} messages.
             * @param message data1410031Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1410031Type.Idata1410031Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1410031Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1410031Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1410031Type.data1410031Type;

            /**
             * Decodes a data1410031Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1410031Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1410031Type.data1410031Type;

            /**
             * Verifies a data1410031Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1410031Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1410031Type
             */
            public static fromObject(object: { [k: string]: any }): game1410031Type.data1410031Type;

            /**
             * Creates a plain object from a data1410031Type message. Also converts values to other types if specified.
             * @param message data1410031Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1410031Type.data1410031Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1410031Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1410031Type. */
        interface Iupdate1410031Type {

            /** update1410031Type index */
            index: number;

            /** update1410031Type resultList */
            resultList?: (game1410031Type.IResultListType[] | null);
        }

        /** Represents an update1410031Type. */
        class update1410031Type implements Iupdate1410031Type {

            /**
             * Constructs a new update1410031Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1410031Type.Iupdate1410031Type);

            /** update1410031Type index. */
            public index: number;

            /** update1410031Type resultList. */
            public resultList: game1410031Type.IResultListType[];

            /**
             * Creates a new update1410031Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1410031Type instance
             */
            public static create(properties?: game1410031Type.Iupdate1410031Type): game1410031Type.update1410031Type;

            /**
             * Encodes the specified update1410031Type message. Does not implicitly {@link game1410031Type.update1410031Type.verify|verify} messages.
             * @param message update1410031Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1410031Type.Iupdate1410031Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1410031Type message, length delimited. Does not implicitly {@link game1410031Type.update1410031Type.verify|verify} messages.
             * @param message update1410031Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1410031Type.Iupdate1410031Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1410031Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1410031Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1410031Type.update1410031Type;

            /**
             * Decodes an update1410031Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1410031Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1410031Type.update1410031Type;

            /**
             * Verifies an update1410031Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1410031Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1410031Type
             */
            public static fromObject(object: { [k: string]: any }): game1410031Type.update1410031Type;

            /**
             * Creates a plain object from an update1410031Type message. Also converts values to other types if specified.
             * @param message update1410031Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1410031Type.update1410031Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1410031Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ResultListType. */
        interface IResultListType {

            /** ResultListType spinResult */
            spinResult: IspinResultType;

            /** ResultListType changedElem */
            changedElem: number;

            /** ResultListType posList */
            posList?: (number[] | null);
        }

        /** Represents a ResultListType. */
        class ResultListType implements IResultListType {

            /**
             * Constructs a new ResultListType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1410031Type.IResultListType);

            /** ResultListType spinResult. */
            public spinResult: IspinResultType;

            /** ResultListType changedElem. */
            public changedElem: number;

            /** ResultListType posList. */
            public posList: number[];

            /**
             * Creates a new ResultListType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ResultListType instance
             */
            public static create(properties?: game1410031Type.IResultListType): game1410031Type.ResultListType;

            /**
             * Encodes the specified ResultListType message. Does not implicitly {@link game1410031Type.ResultListType.verify|verify} messages.
             * @param message ResultListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1410031Type.IResultListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ResultListType message, length delimited. Does not implicitly {@link game1410031Type.ResultListType.verify|verify} messages.
             * @param message ResultListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1410031Type.IResultListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResultListType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ResultListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1410031Type.ResultListType;

            /**
             * Decodes a ResultListType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ResultListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1410031Type.ResultListType;

            /**
             * Verifies a ResultListType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a ResultListType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ResultListType
             */
            public static fromObject(object: { [k: string]: any }): game1410031Type.ResultListType;

            /**
             * Creates a plain object from a ResultListType message. Also converts values to other types if specified.
             * @param message ResultListType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1410031Type.ResultListType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ResultListType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1410117Type. */
    export class game1410117Type implements Igame1410117Type {

        /**
         * Constructs a new game1410117Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1410117Type);

        /** game1410117Type data. */
        public data?: (game1410117Type.Idata1410117Type | null);

        /** game1410117Type update. */
        public update: game1410117Type.Iupdate1410117Type[];

        /**
         * Creates a new game1410117Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1410117Type instance
         */
        public static create(properties?: Igame1410117Type): game1410117Type;

        /**
         * Encodes the specified game1410117Type message. Does not implicitly {@link game1410117Type.verify|verify} messages.
         * @param message game1410117Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1410117Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1410117Type message, length delimited. Does not implicitly {@link game1410117Type.verify|verify} messages.
         * @param message game1410117Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1410117Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1410117Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1410117Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1410117Type;

        /**
         * Decodes a game1410117Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1410117Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1410117Type;

        /**
         * Verifies a game1410117Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1410117Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1410117Type
         */
        public static fromObject(object: { [k: string]: any }): game1410117Type;

        /**
         * Creates a plain object from a game1410117Type message. Also converts values to other types if specified.
         * @param message game1410117Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1410117Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1410117Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1410117Type {

        /** Properties of a data1410117Type. */
        interface Idata1410117Type {

            /** data1410117Type returnPos */
            returnPos?: (number[] | null);

            /** data1410117Type returnCost */
            returnCost: (number | Long);
        }

        /** Represents a data1410117Type. */
        class data1410117Type implements Idata1410117Type {

            /**
             * Constructs a new data1410117Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1410117Type.Idata1410117Type);

            /** data1410117Type returnPos. */
            public returnPos: number[];

            /** data1410117Type returnCost. */
            public returnCost: (number | Long);

            /**
             * Creates a new data1410117Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1410117Type instance
             */
            public static create(properties?: game1410117Type.Idata1410117Type): game1410117Type.data1410117Type;

            /**
             * Encodes the specified data1410117Type message. Does not implicitly {@link game1410117Type.data1410117Type.verify|verify} messages.
             * @param message data1410117Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1410117Type.Idata1410117Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1410117Type message, length delimited. Does not implicitly {@link game1410117Type.data1410117Type.verify|verify} messages.
             * @param message data1410117Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1410117Type.Idata1410117Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1410117Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1410117Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1410117Type.data1410117Type;

            /**
             * Decodes a data1410117Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1410117Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1410117Type.data1410117Type;

            /**
             * Verifies a data1410117Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1410117Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1410117Type
             */
            public static fromObject(object: { [k: string]: any }): game1410117Type.data1410117Type;

            /**
             * Creates a plain object from a data1410117Type message. Also converts values to other types if specified.
             * @param message data1410117Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1410117Type.data1410117Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1410117Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1410117Type. */
        interface Iupdate1410117Type {

            /** update1410117Type index */
            index: number;

            /** update1410117Type returnPos */
            returnPos?: (number[] | null);

            /** update1410117Type returnCost */
            returnCost: (number | Long);
        }

        /** Represents an update1410117Type. */
        class update1410117Type implements Iupdate1410117Type {

            /**
             * Constructs a new update1410117Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1410117Type.Iupdate1410117Type);

            /** update1410117Type index. */
            public index: number;

            /** update1410117Type returnPos. */
            public returnPos: number[];

            /** update1410117Type returnCost. */
            public returnCost: (number | Long);

            /**
             * Creates a new update1410117Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1410117Type instance
             */
            public static create(properties?: game1410117Type.Iupdate1410117Type): game1410117Type.update1410117Type;

            /**
             * Encodes the specified update1410117Type message. Does not implicitly {@link game1410117Type.update1410117Type.verify|verify} messages.
             * @param message update1410117Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1410117Type.Iupdate1410117Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1410117Type message, length delimited. Does not implicitly {@link game1410117Type.update1410117Type.verify|verify} messages.
             * @param message update1410117Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1410117Type.Iupdate1410117Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1410117Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1410117Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1410117Type.update1410117Type;

            /**
             * Decodes an update1410117Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1410117Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1410117Type.update1410117Type;

            /**
             * Verifies an update1410117Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1410117Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1410117Type
             */
            public static fromObject(object: { [k: string]: any }): game1410117Type.update1410117Type;

            /**
             * Creates a plain object from an update1410117Type message. Also converts values to other types if specified.
             * @param message update1410117Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1410117Type.update1410117Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1410117Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1610002Type. */
    export class game1610002Type implements Igame1610002Type {

        /**
         * Constructs a new game1610002Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1610002Type);

        /** game1610002Type data. */
        public data?: (game1610002Type.Idata1610002Type | null);

        /** game1610002Type update. */
        public update: game1610002Type.Iupdate1610002Type[];

        /**
         * Creates a new game1610002Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1610002Type instance
         */
        public static create(properties?: Igame1610002Type): game1610002Type;

        /**
         * Encodes the specified game1610002Type message. Does not implicitly {@link game1610002Type.verify|verify} messages.
         * @param message game1610002Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1610002Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1610002Type message, length delimited. Does not implicitly {@link game1610002Type.verify|verify} messages.
         * @param message game1610002Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1610002Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1610002Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1610002Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610002Type;

        /**
         * Decodes a game1610002Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1610002Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610002Type;

        /**
         * Verifies a game1610002Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1610002Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1610002Type
         */
        public static fromObject(object: { [k: string]: any }): game1610002Type;

        /**
         * Creates a plain object from a game1610002Type message. Also converts values to other types if specified.
         * @param message game1610002Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1610002Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1610002Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1610002Type {

        /** Properties of a data1610002Type. */
        interface Idata1610002Type {

            /** data1610002Type expandColumn */
            expandColumn?: (number[] | null);
        }

        /** Represents a data1610002Type. */
        class data1610002Type implements Idata1610002Type {

            /**
             * Constructs a new data1610002Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610002Type.Idata1610002Type);

            /** data1610002Type expandColumn. */
            public expandColumn: number[];

            /**
             * Creates a new data1610002Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1610002Type instance
             */
            public static create(properties?: game1610002Type.Idata1610002Type): game1610002Type.data1610002Type;

            /**
             * Encodes the specified data1610002Type message. Does not implicitly {@link game1610002Type.data1610002Type.verify|verify} messages.
             * @param message data1610002Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610002Type.Idata1610002Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1610002Type message, length delimited. Does not implicitly {@link game1610002Type.data1610002Type.verify|verify} messages.
             * @param message data1610002Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610002Type.Idata1610002Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1610002Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1610002Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610002Type.data1610002Type;

            /**
             * Decodes a data1610002Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1610002Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610002Type.data1610002Type;

            /**
             * Verifies a data1610002Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1610002Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1610002Type
             */
            public static fromObject(object: { [k: string]: any }): game1610002Type.data1610002Type;

            /**
             * Creates a plain object from a data1610002Type message. Also converts values to other types if specified.
             * @param message data1610002Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610002Type.data1610002Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1610002Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1610002Type. */
        interface Iupdate1610002Type {

            /** update1610002Type index */
            index: number;

            /** update1610002Type expandColumn */
            expandColumn?: (number[] | null);
        }

        /** Represents an update1610002Type. */
        class update1610002Type implements Iupdate1610002Type {

            /**
             * Constructs a new update1610002Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610002Type.Iupdate1610002Type);

            /** update1610002Type index. */
            public index: number;

            /** update1610002Type expandColumn. */
            public expandColumn: number[];

            /**
             * Creates a new update1610002Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1610002Type instance
             */
            public static create(properties?: game1610002Type.Iupdate1610002Type): game1610002Type.update1610002Type;

            /**
             * Encodes the specified update1610002Type message. Does not implicitly {@link game1610002Type.update1610002Type.verify|verify} messages.
             * @param message update1610002Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610002Type.Iupdate1610002Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1610002Type message, length delimited. Does not implicitly {@link game1610002Type.update1610002Type.verify|verify} messages.
             * @param message update1610002Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610002Type.Iupdate1610002Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1610002Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1610002Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610002Type.update1610002Type;

            /**
             * Decodes an update1610002Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1610002Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610002Type.update1610002Type;

            /**
             * Verifies an update1610002Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1610002Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1610002Type
             */
            public static fromObject(object: { [k: string]: any }): game1610002Type.update1610002Type;

            /**
             * Creates a plain object from an update1610002Type message. Also converts values to other types if specified.
             * @param message update1610002Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610002Type.update1610002Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1610002Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1610015Type. */
    export class game1610015Type implements Igame1610015Type {

        /**
         * Constructs a new game1610015Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1610015Type);

        /** game1610015Type data. */
        public data?: (game1610015Type.Idata1610015Type | null);

        /** game1610015Type update. */
        public update: game1610015Type.Iupdate1610015Type[];

        /**
         * Creates a new game1610015Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1610015Type instance
         */
        public static create(properties?: Igame1610015Type): game1610015Type;

        /**
         * Encodes the specified game1610015Type message. Does not implicitly {@link game1610015Type.verify|verify} messages.
         * @param message game1610015Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1610015Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1610015Type message, length delimited. Does not implicitly {@link game1610015Type.verify|verify} messages.
         * @param message game1610015Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1610015Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1610015Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1610015Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610015Type;

        /**
         * Decodes a game1610015Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1610015Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610015Type;

        /**
         * Verifies a game1610015Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1610015Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1610015Type
         */
        public static fromObject(object: { [k: string]: any }): game1610015Type;

        /**
         * Creates a plain object from a game1610015Type message. Also converts values to other types if specified.
         * @param message game1610015Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1610015Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1610015Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1610015Type {

        /** Properties of a data1610015Type. */
        interface Idata1610015Type {

            /** data1610015Type adjacentPosList */
            adjacentPosList?: (game1610015Type.IadjacentPosListType[] | null);
        }

        /** Represents a data1610015Type. */
        class data1610015Type implements Idata1610015Type {

            /**
             * Constructs a new data1610015Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610015Type.Idata1610015Type);

            /** data1610015Type adjacentPosList. */
            public adjacentPosList: game1610015Type.IadjacentPosListType[];

            /**
             * Creates a new data1610015Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1610015Type instance
             */
            public static create(properties?: game1610015Type.Idata1610015Type): game1610015Type.data1610015Type;

            /**
             * Encodes the specified data1610015Type message. Does not implicitly {@link game1610015Type.data1610015Type.verify|verify} messages.
             * @param message data1610015Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610015Type.Idata1610015Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1610015Type message, length delimited. Does not implicitly {@link game1610015Type.data1610015Type.verify|verify} messages.
             * @param message data1610015Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610015Type.Idata1610015Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1610015Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1610015Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610015Type.data1610015Type;

            /**
             * Decodes a data1610015Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1610015Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610015Type.data1610015Type;

            /**
             * Verifies a data1610015Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1610015Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1610015Type
             */
            public static fromObject(object: { [k: string]: any }): game1610015Type.data1610015Type;

            /**
             * Creates a plain object from a data1610015Type message. Also converts values to other types if specified.
             * @param message data1610015Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610015Type.data1610015Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1610015Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1610015Type. */
        interface Iupdate1610015Type {

            /** update1610015Type index */
            index: number;

            /** update1610015Type adjacentPosList */
            adjacentPosList?: (game1610015Type.IadjacentPosListType[] | null);
        }

        /** Represents an update1610015Type. */
        class update1610015Type implements Iupdate1610015Type {

            /**
             * Constructs a new update1610015Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610015Type.Iupdate1610015Type);

            /** update1610015Type index. */
            public index: number;

            /** update1610015Type adjacentPosList. */
            public adjacentPosList: game1610015Type.IadjacentPosListType[];

            /**
             * Creates a new update1610015Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1610015Type instance
             */
            public static create(properties?: game1610015Type.Iupdate1610015Type): game1610015Type.update1610015Type;

            /**
             * Encodes the specified update1610015Type message. Does not implicitly {@link game1610015Type.update1610015Type.verify|verify} messages.
             * @param message update1610015Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610015Type.Iupdate1610015Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1610015Type message, length delimited. Does not implicitly {@link game1610015Type.update1610015Type.verify|verify} messages.
             * @param message update1610015Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610015Type.Iupdate1610015Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1610015Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1610015Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610015Type.update1610015Type;

            /**
             * Decodes an update1610015Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1610015Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610015Type.update1610015Type;

            /**
             * Verifies an update1610015Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1610015Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1610015Type
             */
            public static fromObject(object: { [k: string]: any }): game1610015Type.update1610015Type;

            /**
             * Creates a plain object from an update1610015Type message. Also converts values to other types if specified.
             * @param message update1610015Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610015Type.update1610015Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1610015Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an adjacentPosListType. */
        interface IadjacentPosListType {

            /** adjacentPosListType pos */
            pos: number;

            /** adjacentPosListType pos2 */
            pos2: number;
        }

        /** Represents an adjacentPosListType. */
        class adjacentPosListType implements IadjacentPosListType {

            /**
             * Constructs a new adjacentPosListType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610015Type.IadjacentPosListType);

            /** adjacentPosListType pos. */
            public pos: number;

            /** adjacentPosListType pos2. */
            public pos2: number;

            /**
             * Creates a new adjacentPosListType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns adjacentPosListType instance
             */
            public static create(properties?: game1610015Type.IadjacentPosListType): game1610015Type.adjacentPosListType;

            /**
             * Encodes the specified adjacentPosListType message. Does not implicitly {@link game1610015Type.adjacentPosListType.verify|verify} messages.
             * @param message adjacentPosListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610015Type.IadjacentPosListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified adjacentPosListType message, length delimited. Does not implicitly {@link game1610015Type.adjacentPosListType.verify|verify} messages.
             * @param message adjacentPosListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610015Type.IadjacentPosListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an adjacentPosListType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns adjacentPosListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610015Type.adjacentPosListType;

            /**
             * Decodes an adjacentPosListType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns adjacentPosListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610015Type.adjacentPosListType;

            /**
             * Verifies an adjacentPosListType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an adjacentPosListType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns adjacentPosListType
             */
            public static fromObject(object: { [k: string]: any }): game1610015Type.adjacentPosListType;

            /**
             * Creates a plain object from an adjacentPosListType message. Also converts values to other types if specified.
             * @param message adjacentPosListType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610015Type.adjacentPosListType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this adjacentPosListType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1610017Type. */
    export class game1610017Type implements Igame1610017Type {

        /**
         * Constructs a new game1610017Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1610017Type);

        /** game1610017Type data. */
        public data?: (game1610017Type.Idata1610017Type | null);

        /** game1610017Type update. */
        public update: game1610017Type.Iupdate1610017Type[];

        /**
         * Creates a new game1610017Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1610017Type instance
         */
        public static create(properties?: Igame1610017Type): game1610017Type;

        /**
         * Encodes the specified game1610017Type message. Does not implicitly {@link game1610017Type.verify|verify} messages.
         * @param message game1610017Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1610017Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1610017Type message, length delimited. Does not implicitly {@link game1610017Type.verify|verify} messages.
         * @param message game1610017Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1610017Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1610017Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1610017Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610017Type;

        /**
         * Decodes a game1610017Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1610017Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610017Type;

        /**
         * Verifies a game1610017Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1610017Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1610017Type
         */
        public static fromObject(object: { [k: string]: any }): game1610017Type;

        /**
         * Creates a plain object from a game1610017Type message. Also converts values to other types if specified.
         * @param message game1610017Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1610017Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1610017Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1610017Type {

        /** Properties of a data1610017Type. */
        interface Idata1610017Type {

            /** data1610017Type taskList */
            taskList?: (game1610017Type.ITaskListType[] | null);

            /** data1610017Type remainGrid */
            remainGrid?: (game1610017Type.IGridType[] | null);
        }

        /** Represents a data1610017Type. */
        class data1610017Type implements Idata1610017Type {

            /**
             * Constructs a new data1610017Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610017Type.Idata1610017Type);

            /** data1610017Type taskList. */
            public taskList: game1610017Type.ITaskListType[];

            /** data1610017Type remainGrid. */
            public remainGrid: game1610017Type.IGridType[];

            /**
             * Creates a new data1610017Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1610017Type instance
             */
            public static create(properties?: game1610017Type.Idata1610017Type): game1610017Type.data1610017Type;

            /**
             * Encodes the specified data1610017Type message. Does not implicitly {@link game1610017Type.data1610017Type.verify|verify} messages.
             * @param message data1610017Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610017Type.Idata1610017Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1610017Type message, length delimited. Does not implicitly {@link game1610017Type.data1610017Type.verify|verify} messages.
             * @param message data1610017Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610017Type.Idata1610017Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1610017Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1610017Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610017Type.data1610017Type;

            /**
             * Decodes a data1610017Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1610017Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610017Type.data1610017Type;

            /**
             * Verifies a data1610017Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1610017Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1610017Type
             */
            public static fromObject(object: { [k: string]: any }): game1610017Type.data1610017Type;

            /**
             * Creates a plain object from a data1610017Type message. Also converts values to other types if specified.
             * @param message data1610017Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610017Type.data1610017Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1610017Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1610017Type. */
        interface Iupdate1610017Type {

            /** update1610017Type index */
            index: number;

            /** update1610017Type taskList */
            taskList?: (game1610017Type.ITaskListType[] | null);

            /** update1610017Type remainGrid */
            remainGrid?: (game1610017Type.IGridType[] | null);
        }

        /** Represents an update1610017Type. */
        class update1610017Type implements Iupdate1610017Type {

            /**
             * Constructs a new update1610017Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610017Type.Iupdate1610017Type);

            /** update1610017Type index. */
            public index: number;

            /** update1610017Type taskList. */
            public taskList: game1610017Type.ITaskListType[];

            /** update1610017Type remainGrid. */
            public remainGrid: game1610017Type.IGridType[];

            /**
             * Creates a new update1610017Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1610017Type instance
             */
            public static create(properties?: game1610017Type.Iupdate1610017Type): game1610017Type.update1610017Type;

            /**
             * Encodes the specified update1610017Type message. Does not implicitly {@link game1610017Type.update1610017Type.verify|verify} messages.
             * @param message update1610017Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610017Type.Iupdate1610017Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1610017Type message, length delimited. Does not implicitly {@link game1610017Type.update1610017Type.verify|verify} messages.
             * @param message update1610017Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610017Type.Iupdate1610017Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1610017Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1610017Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610017Type.update1610017Type;

            /**
             * Decodes an update1610017Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1610017Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610017Type.update1610017Type;

            /**
             * Verifies an update1610017Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1610017Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1610017Type
             */
            public static fromObject(object: { [k: string]: any }): game1610017Type.update1610017Type;

            /**
             * Creates a plain object from an update1610017Type message. Also converts values to other types if specified.
             * @param message update1610017Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610017Type.update1610017Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1610017Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a TaskListType. */
        interface ITaskListType {

            /** TaskListType num */
            num: number;

            /** TaskListType reward */
            reward: (number | Long);

            /** TaskListType targetNum */
            targetNum: number;
        }

        /** Represents a TaskListType. */
        class TaskListType implements ITaskListType {

            /**
             * Constructs a new TaskListType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610017Type.ITaskListType);

            /** TaskListType num. */
            public num: number;

            /** TaskListType reward. */
            public reward: (number | Long);

            /** TaskListType targetNum. */
            public targetNum: number;

            /**
             * Creates a new TaskListType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TaskListType instance
             */
            public static create(properties?: game1610017Type.ITaskListType): game1610017Type.TaskListType;

            /**
             * Encodes the specified TaskListType message. Does not implicitly {@link game1610017Type.TaskListType.verify|verify} messages.
             * @param message TaskListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610017Type.ITaskListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified TaskListType message, length delimited. Does not implicitly {@link game1610017Type.TaskListType.verify|verify} messages.
             * @param message TaskListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610017Type.ITaskListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a TaskListType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TaskListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610017Type.TaskListType;

            /**
             * Decodes a TaskListType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TaskListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610017Type.TaskListType;

            /**
             * Verifies a TaskListType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a TaskListType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TaskListType
             */
            public static fromObject(object: { [k: string]: any }): game1610017Type.TaskListType;

            /**
             * Creates a plain object from a TaskListType message. Also converts values to other types if specified.
             * @param message TaskListType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610017Type.TaskListType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TaskListType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GridType. */
        interface IGridType {

            /** GridType pos */
            pos: number;

            /** GridType elem */
            elem: number;
        }

        /** Represents a GridType. */
        class GridType implements IGridType {

            /**
             * Constructs a new GridType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610017Type.IGridType);

            /** GridType pos. */
            public pos: number;

            /** GridType elem. */
            public elem: number;

            /**
             * Creates a new GridType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GridType instance
             */
            public static create(properties?: game1610017Type.IGridType): game1610017Type.GridType;

            /**
             * Encodes the specified GridType message. Does not implicitly {@link game1610017Type.GridType.verify|verify} messages.
             * @param message GridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610017Type.IGridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GridType message, length delimited. Does not implicitly {@link game1610017Type.GridType.verify|verify} messages.
             * @param message GridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610017Type.IGridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GridType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610017Type.GridType;

            /**
             * Decodes a GridType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610017Type.GridType;

            /**
             * Verifies a GridType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a GridType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GridType
             */
            public static fromObject(object: { [k: string]: any }): game1610017Type.GridType;

            /**
             * Creates a plain object from a GridType message. Also converts values to other types if specified.
             * @param message GridType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610017Type.GridType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GridType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1610022Type. */
    export class game1610022Type implements Igame1610022Type {

        /**
         * Constructs a new game1610022Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1610022Type);

        /** game1610022Type data. */
        public data?: (game1610022Type.Idata1610022Type | null);

        /** game1610022Type update. */
        public update: game1610022Type.Iupdate1610022Type[];

        /**
         * Creates a new game1610022Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1610022Type instance
         */
        public static create(properties?: Igame1610022Type): game1610022Type;

        /**
         * Encodes the specified game1610022Type message. Does not implicitly {@link game1610022Type.verify|verify} messages.
         * @param message game1610022Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1610022Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1610022Type message, length delimited. Does not implicitly {@link game1610022Type.verify|verify} messages.
         * @param message game1610022Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1610022Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1610022Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1610022Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610022Type;

        /**
         * Decodes a game1610022Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1610022Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610022Type;

        /**
         * Verifies a game1610022Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1610022Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1610022Type
         */
        public static fromObject(object: { [k: string]: any }): game1610022Type;

        /**
         * Creates a plain object from a game1610022Type message. Also converts values to other types if specified.
         * @param message game1610022Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1610022Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1610022Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1610022Type {

        /** Properties of a data1610022Type. */
        interface Idata1610022Type {

            /** data1610022Type fixGrid */
            fixGrid?: (IgridType[] | null);

            /** data1610022Type colDirectList */
            colDirectList?: (game1610022Type.IcolDirectType[] | null);
        }

        /** Represents a data1610022Type. */
        class data1610022Type implements Idata1610022Type {

            /**
             * Constructs a new data1610022Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610022Type.Idata1610022Type);

            /** data1610022Type fixGrid. */
            public fixGrid: IgridType[];

            /** data1610022Type colDirectList. */
            public colDirectList: game1610022Type.IcolDirectType[];

            /**
             * Creates a new data1610022Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1610022Type instance
             */
            public static create(properties?: game1610022Type.Idata1610022Type): game1610022Type.data1610022Type;

            /**
             * Encodes the specified data1610022Type message. Does not implicitly {@link game1610022Type.data1610022Type.verify|verify} messages.
             * @param message data1610022Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610022Type.Idata1610022Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1610022Type message, length delimited. Does not implicitly {@link game1610022Type.data1610022Type.verify|verify} messages.
             * @param message data1610022Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610022Type.Idata1610022Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1610022Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1610022Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610022Type.data1610022Type;

            /**
             * Decodes a data1610022Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1610022Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610022Type.data1610022Type;

            /**
             * Verifies a data1610022Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1610022Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1610022Type
             */
            public static fromObject(object: { [k: string]: any }): game1610022Type.data1610022Type;

            /**
             * Creates a plain object from a data1610022Type message. Also converts values to other types if specified.
             * @param message data1610022Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610022Type.data1610022Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1610022Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1610022Type. */
        interface Iupdate1610022Type {

            /** update1610022Type index */
            index: number;

            /** update1610022Type fixGrid */
            fixGrid?: (IgridType[] | null);

            /** update1610022Type colDirectList */
            colDirectList?: (game1610022Type.IcolDirectType[] | null);
        }

        /** Represents an update1610022Type. */
        class update1610022Type implements Iupdate1610022Type {

            /**
             * Constructs a new update1610022Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610022Type.Iupdate1610022Type);

            /** update1610022Type index. */
            public index: number;

            /** update1610022Type fixGrid. */
            public fixGrid: IgridType[];

            /** update1610022Type colDirectList. */
            public colDirectList: game1610022Type.IcolDirectType[];

            /**
             * Creates a new update1610022Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1610022Type instance
             */
            public static create(properties?: game1610022Type.Iupdate1610022Type): game1610022Type.update1610022Type;

            /**
             * Encodes the specified update1610022Type message. Does not implicitly {@link game1610022Type.update1610022Type.verify|verify} messages.
             * @param message update1610022Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610022Type.Iupdate1610022Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1610022Type message, length delimited. Does not implicitly {@link game1610022Type.update1610022Type.verify|verify} messages.
             * @param message update1610022Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610022Type.Iupdate1610022Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1610022Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1610022Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610022Type.update1610022Type;

            /**
             * Decodes an update1610022Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1610022Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610022Type.update1610022Type;

            /**
             * Verifies an update1610022Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1610022Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1610022Type
             */
            public static fromObject(object: { [k: string]: any }): game1610022Type.update1610022Type;

            /**
             * Creates a plain object from an update1610022Type message. Also converts values to other types if specified.
             * @param message update1610022Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610022Type.update1610022Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1610022Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a colDirectType. */
        interface IcolDirectType {

            /** colDirectType col */
            col: number;

            /** colDirectType direct */
            direct: number;
        }

        /** Represents a colDirectType. */
        class colDirectType implements IcolDirectType {

            /**
             * Constructs a new colDirectType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610022Type.IcolDirectType);

            /** colDirectType col. */
            public col: number;

            /** colDirectType direct. */
            public direct: number;

            /**
             * Creates a new colDirectType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns colDirectType instance
             */
            public static create(properties?: game1610022Type.IcolDirectType): game1610022Type.colDirectType;

            /**
             * Encodes the specified colDirectType message. Does not implicitly {@link game1610022Type.colDirectType.verify|verify} messages.
             * @param message colDirectType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610022Type.IcolDirectType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified colDirectType message, length delimited. Does not implicitly {@link game1610022Type.colDirectType.verify|verify} messages.
             * @param message colDirectType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610022Type.IcolDirectType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a colDirectType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns colDirectType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610022Type.colDirectType;

            /**
             * Decodes a colDirectType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns colDirectType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610022Type.colDirectType;

            /**
             * Verifies a colDirectType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a colDirectType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns colDirectType
             */
            public static fromObject(object: { [k: string]: any }): game1610022Type.colDirectType;

            /**
             * Creates a plain object from a colDirectType message. Also converts values to other types if specified.
             * @param message colDirectType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610022Type.colDirectType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this colDirectType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1610030Type. */
    export class game1610030Type implements Igame1610030Type {

        /**
         * Constructs a new game1610030Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1610030Type);

        /** game1610030Type data. */
        public data?: (game1610030Type.Idata1610030Type | null);

        /** game1610030Type update. */
        public update: game1610030Type.Iupdate1610030Type[];

        /**
         * Creates a new game1610030Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1610030Type instance
         */
        public static create(properties?: Igame1610030Type): game1610030Type;

        /**
         * Encodes the specified game1610030Type message. Does not implicitly {@link game1610030Type.verify|verify} messages.
         * @param message game1610030Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1610030Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1610030Type message, length delimited. Does not implicitly {@link game1610030Type.verify|verify} messages.
         * @param message game1610030Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1610030Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1610030Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1610030Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610030Type;

        /**
         * Decodes a game1610030Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1610030Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610030Type;

        /**
         * Verifies a game1610030Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1610030Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1610030Type
         */
        public static fromObject(object: { [k: string]: any }): game1610030Type;

        /**
         * Creates a plain object from a game1610030Type message. Also converts values to other types if specified.
         * @param message game1610030Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1610030Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1610030Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1610030Type {

        /** Properties of a data1610030Type. */
        interface Idata1610030Type {

            /** data1610030Type remainElemColList */
            remainElemColList?: (game1610030Type.IRECLType[] | null);
        }

        /** Represents a data1610030Type. */
        class data1610030Type implements Idata1610030Type {

            /**
             * Constructs a new data1610030Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610030Type.Idata1610030Type);

            /** data1610030Type remainElemColList. */
            public remainElemColList: game1610030Type.IRECLType[];

            /**
             * Creates a new data1610030Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1610030Type instance
             */
            public static create(properties?: game1610030Type.Idata1610030Type): game1610030Type.data1610030Type;

            /**
             * Encodes the specified data1610030Type message. Does not implicitly {@link game1610030Type.data1610030Type.verify|verify} messages.
             * @param message data1610030Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610030Type.Idata1610030Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1610030Type message, length delimited. Does not implicitly {@link game1610030Type.data1610030Type.verify|verify} messages.
             * @param message data1610030Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610030Type.Idata1610030Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1610030Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1610030Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610030Type.data1610030Type;

            /**
             * Decodes a data1610030Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1610030Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610030Type.data1610030Type;

            /**
             * Verifies a data1610030Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1610030Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1610030Type
             */
            public static fromObject(object: { [k: string]: any }): game1610030Type.data1610030Type;

            /**
             * Creates a plain object from a data1610030Type message. Also converts values to other types if specified.
             * @param message data1610030Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610030Type.data1610030Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1610030Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1610030Type. */
        interface Iupdate1610030Type {

            /** update1610030Type index */
            index: number;

            /** update1610030Type snake */
            snake?: (game1610030Type.IRECLType[] | null);
        }

        /** Represents an update1610030Type. */
        class update1610030Type implements Iupdate1610030Type {

            /**
             * Constructs a new update1610030Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610030Type.Iupdate1610030Type);

            /** update1610030Type index. */
            public index: number;

            /** update1610030Type snake. */
            public snake: game1610030Type.IRECLType[];

            /**
             * Creates a new update1610030Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1610030Type instance
             */
            public static create(properties?: game1610030Type.Iupdate1610030Type): game1610030Type.update1610030Type;

            /**
             * Encodes the specified update1610030Type message. Does not implicitly {@link game1610030Type.update1610030Type.verify|verify} messages.
             * @param message update1610030Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610030Type.Iupdate1610030Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1610030Type message, length delimited. Does not implicitly {@link game1610030Type.update1610030Type.verify|verify} messages.
             * @param message update1610030Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610030Type.Iupdate1610030Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1610030Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1610030Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610030Type.update1610030Type;

            /**
             * Decodes an update1610030Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1610030Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610030Type.update1610030Type;

            /**
             * Verifies an update1610030Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1610030Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1610030Type
             */
            public static fromObject(object: { [k: string]: any }): game1610030Type.update1610030Type;

            /**
             * Creates a plain object from an update1610030Type message. Also converts values to other types if specified.
             * @param message update1610030Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610030Type.update1610030Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1610030Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a RECLType. */
        interface IRECLType {

            /** RECLType elem */
            elem: number;

            /** RECLType col */
            col: number;
        }

        /** Represents a RECLType. */
        class RECLType implements IRECLType {

            /**
             * Constructs a new RECLType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610030Type.IRECLType);

            /** RECLType elem. */
            public elem: number;

            /** RECLType col. */
            public col: number;

            /**
             * Creates a new RECLType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RECLType instance
             */
            public static create(properties?: game1610030Type.IRECLType): game1610030Type.RECLType;

            /**
             * Encodes the specified RECLType message. Does not implicitly {@link game1610030Type.RECLType.verify|verify} messages.
             * @param message RECLType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610030Type.IRECLType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RECLType message, length delimited. Does not implicitly {@link game1610030Type.RECLType.verify|verify} messages.
             * @param message RECLType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610030Type.IRECLType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RECLType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RECLType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610030Type.RECLType;

            /**
             * Decodes a RECLType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RECLType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610030Type.RECLType;

            /**
             * Verifies a RECLType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a RECLType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RECLType
             */
            public static fromObject(object: { [k: string]: any }): game1610030Type.RECLType;

            /**
             * Creates a plain object from a RECLType message. Also converts values to other types if specified.
             * @param message RECLType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610030Type.RECLType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RECLType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1610044Type. */
    export class game1610044Type implements Igame1610044Type {

        /**
         * Constructs a new game1610044Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1610044Type);

        /** game1610044Type data. */
        public data?: (game1610044Type.Idata1610044Type | null);

        /** game1610044Type update. */
        public update: game1610044Type.Iupdate1610044Type[];

        /**
         * Creates a new game1610044Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1610044Type instance
         */
        public static create(properties?: Igame1610044Type): game1610044Type;

        /**
         * Encodes the specified game1610044Type message. Does not implicitly {@link game1610044Type.verify|verify} messages.
         * @param message game1610044Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1610044Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1610044Type message, length delimited. Does not implicitly {@link game1610044Type.verify|verify} messages.
         * @param message game1610044Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1610044Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1610044Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1610044Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610044Type;

        /**
         * Decodes a game1610044Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1610044Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610044Type;

        /**
         * Verifies a game1610044Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1610044Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1610044Type
         */
        public static fromObject(object: { [k: string]: any }): game1610044Type;

        /**
         * Creates a plain object from a game1610044Type message. Also converts values to other types if specified.
         * @param message game1610044Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1610044Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1610044Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1610044Type {

        /** Properties of a data1610044Type. */
        interface Idata1610044Type {

            /** data1610044Type snake */
            snake?: (game1610044Type.IsnakeType[] | null);
        }

        /** Represents a data1610044Type. */
        class data1610044Type implements Idata1610044Type {

            /**
             * Constructs a new data1610044Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610044Type.Idata1610044Type);

            /** data1610044Type snake. */
            public snake: game1610044Type.IsnakeType[];

            /**
             * Creates a new data1610044Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1610044Type instance
             */
            public static create(properties?: game1610044Type.Idata1610044Type): game1610044Type.data1610044Type;

            /**
             * Encodes the specified data1610044Type message. Does not implicitly {@link game1610044Type.data1610044Type.verify|verify} messages.
             * @param message data1610044Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610044Type.Idata1610044Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1610044Type message, length delimited. Does not implicitly {@link game1610044Type.data1610044Type.verify|verify} messages.
             * @param message data1610044Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610044Type.Idata1610044Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1610044Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1610044Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610044Type.data1610044Type;

            /**
             * Decodes a data1610044Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1610044Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610044Type.data1610044Type;

            /**
             * Verifies a data1610044Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1610044Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1610044Type
             */
            public static fromObject(object: { [k: string]: any }): game1610044Type.data1610044Type;

            /**
             * Creates a plain object from a data1610044Type message. Also converts values to other types if specified.
             * @param message data1610044Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610044Type.data1610044Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1610044Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1610044Type. */
        interface Iupdate1610044Type {

            /** update1610044Type index */
            index: number;

            /** update1610044Type snake */
            snake?: (game1610044Type.IsnakeType[] | null);
        }

        /** Represents an update1610044Type. */
        class update1610044Type implements Iupdate1610044Type {

            /**
             * Constructs a new update1610044Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610044Type.Iupdate1610044Type);

            /** update1610044Type index. */
            public index: number;

            /** update1610044Type snake. */
            public snake: game1610044Type.IsnakeType[];

            /**
             * Creates a new update1610044Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1610044Type instance
             */
            public static create(properties?: game1610044Type.Iupdate1610044Type): game1610044Type.update1610044Type;

            /**
             * Encodes the specified update1610044Type message. Does not implicitly {@link game1610044Type.update1610044Type.verify|verify} messages.
             * @param message update1610044Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610044Type.Iupdate1610044Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1610044Type message, length delimited. Does not implicitly {@link game1610044Type.update1610044Type.verify|verify} messages.
             * @param message update1610044Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610044Type.Iupdate1610044Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1610044Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1610044Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610044Type.update1610044Type;

            /**
             * Decodes an update1610044Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1610044Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610044Type.update1610044Type;

            /**
             * Verifies an update1610044Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1610044Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1610044Type
             */
            public static fromObject(object: { [k: string]: any }): game1610044Type.update1610044Type;

            /**
             * Creates a plain object from an update1610044Type message. Also converts values to other types if specified.
             * @param message update1610044Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610044Type.update1610044Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1610044Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a snakeType. */
        interface IsnakeType {

            /** snakeType startPos */
            startPos: number;

            /** snakeType path */
            path?: (number[] | null);

            /** snakeType passPath */
            passPath: number;
        }

        /** Represents a snakeType. */
        class snakeType implements IsnakeType {

            /**
             * Constructs a new snakeType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610044Type.IsnakeType);

            /** snakeType startPos. */
            public startPos: number;

            /** snakeType path. */
            public path: number[];

            /** snakeType passPath. */
            public passPath: number;

            /**
             * Creates a new snakeType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns snakeType instance
             */
            public static create(properties?: game1610044Type.IsnakeType): game1610044Type.snakeType;

            /**
             * Encodes the specified snakeType message. Does not implicitly {@link game1610044Type.snakeType.verify|verify} messages.
             * @param message snakeType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610044Type.IsnakeType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified snakeType message, length delimited. Does not implicitly {@link game1610044Type.snakeType.verify|verify} messages.
             * @param message snakeType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610044Type.IsnakeType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a snakeType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns snakeType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610044Type.snakeType;

            /**
             * Decodes a snakeType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns snakeType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610044Type.snakeType;

            /**
             * Verifies a snakeType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a snakeType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns snakeType
             */
            public static fromObject(object: { [k: string]: any }): game1610044Type.snakeType;

            /**
             * Creates a plain object from a snakeType message. Also converts values to other types if specified.
             * @param message snakeType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610044Type.snakeType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this snakeType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1610054Type. */
    export class game1610054Type implements Igame1610054Type {

        /**
         * Constructs a new game1610054Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1610054Type);

        /** game1610054Type data. */
        public data?: (game1610054Type.Idata1610054Type | null);

        /** game1610054Type update. */
        public update: game1610054Type.Iupdate1610054Type[];

        /**
         * Creates a new game1610054Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1610054Type instance
         */
        public static create(properties?: Igame1610054Type): game1610054Type;

        /**
         * Encodes the specified game1610054Type message. Does not implicitly {@link game1610054Type.verify|verify} messages.
         * @param message game1610054Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1610054Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1610054Type message, length delimited. Does not implicitly {@link game1610054Type.verify|verify} messages.
         * @param message game1610054Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1610054Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1610054Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1610054Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610054Type;

        /**
         * Decodes a game1610054Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1610054Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610054Type;

        /**
         * Verifies a game1610054Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1610054Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1610054Type
         */
        public static fromObject(object: { [k: string]: any }): game1610054Type;

        /**
         * Creates a plain object from a game1610054Type message. Also converts values to other types if specified.
         * @param message game1610054Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1610054Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1610054Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1610054Type {

        /** Properties of a data1610054Type. */
        interface Idata1610054Type {

            /** data1610054Type fixGrid */
            fixGrid?: (game1610054Type.IGridType[] | null);
        }

        /** Represents a data1610054Type. */
        class data1610054Type implements Idata1610054Type {

            /**
             * Constructs a new data1610054Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610054Type.Idata1610054Type);

            /** data1610054Type fixGrid. */
            public fixGrid: game1610054Type.IGridType[];

            /**
             * Creates a new data1610054Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1610054Type instance
             */
            public static create(properties?: game1610054Type.Idata1610054Type): game1610054Type.data1610054Type;

            /**
             * Encodes the specified data1610054Type message. Does not implicitly {@link game1610054Type.data1610054Type.verify|verify} messages.
             * @param message data1610054Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610054Type.Idata1610054Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1610054Type message, length delimited. Does not implicitly {@link game1610054Type.data1610054Type.verify|verify} messages.
             * @param message data1610054Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610054Type.Idata1610054Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1610054Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1610054Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610054Type.data1610054Type;

            /**
             * Decodes a data1610054Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1610054Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610054Type.data1610054Type;

            /**
             * Verifies a data1610054Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1610054Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1610054Type
             */
            public static fromObject(object: { [k: string]: any }): game1610054Type.data1610054Type;

            /**
             * Creates a plain object from a data1610054Type message. Also converts values to other types if specified.
             * @param message data1610054Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610054Type.data1610054Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1610054Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1610054Type. */
        interface Iupdate1610054Type {

            /** update1610054Type index */
            index: number;

            /** update1610054Type fixGrid */
            fixGrid?: (game1610054Type.IGridType[] | null);
        }

        /** Represents an update1610054Type. */
        class update1610054Type implements Iupdate1610054Type {

            /**
             * Constructs a new update1610054Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610054Type.Iupdate1610054Type);

            /** update1610054Type index. */
            public index: number;

            /** update1610054Type fixGrid. */
            public fixGrid: game1610054Type.IGridType[];

            /**
             * Creates a new update1610054Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1610054Type instance
             */
            public static create(properties?: game1610054Type.Iupdate1610054Type): game1610054Type.update1610054Type;

            /**
             * Encodes the specified update1610054Type message. Does not implicitly {@link game1610054Type.update1610054Type.verify|verify} messages.
             * @param message update1610054Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610054Type.Iupdate1610054Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1610054Type message, length delimited. Does not implicitly {@link game1610054Type.update1610054Type.verify|verify} messages.
             * @param message update1610054Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610054Type.Iupdate1610054Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1610054Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1610054Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610054Type.update1610054Type;

            /**
             * Decodes an update1610054Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1610054Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610054Type.update1610054Type;

            /**
             * Verifies an update1610054Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1610054Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1610054Type
             */
            public static fromObject(object: { [k: string]: any }): game1610054Type.update1610054Type;

            /**
             * Creates a plain object from an update1610054Type message. Also converts values to other types if specified.
             * @param message update1610054Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610054Type.update1610054Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1610054Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GridType. */
        interface IGridType {

            /** GridType pos */
            pos: number;

            /** GridType elem */
            elem: number;
        }

        /** Represents a GridType. */
        class GridType implements IGridType {

            /**
             * Constructs a new GridType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610054Type.IGridType);

            /** GridType pos. */
            public pos: number;

            /** GridType elem. */
            public elem: number;

            /**
             * Creates a new GridType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GridType instance
             */
            public static create(properties?: game1610054Type.IGridType): game1610054Type.GridType;

            /**
             * Encodes the specified GridType message. Does not implicitly {@link game1610054Type.GridType.verify|verify} messages.
             * @param message GridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610054Type.IGridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GridType message, length delimited. Does not implicitly {@link game1610054Type.GridType.verify|verify} messages.
             * @param message GridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610054Type.IGridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GridType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610054Type.GridType;

            /**
             * Decodes a GridType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610054Type.GridType;

            /**
             * Verifies a GridType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a GridType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GridType
             */
            public static fromObject(object: { [k: string]: any }): game1610054Type.GridType;

            /**
             * Creates a plain object from a GridType message. Also converts values to other types if specified.
             * @param message GridType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610054Type.GridType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GridType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1610057Type. */
    export class game1610057Type implements Igame1610057Type {

        /**
         * Constructs a new game1610057Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1610057Type);

        /** game1610057Type data. */
        public data?: (game1610057Type.Idata1610057Type | null);

        /** game1610057Type update. */
        public update: game1610057Type.Iupdate1610057Type[];

        /**
         * Creates a new game1610057Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1610057Type instance
         */
        public static create(properties?: Igame1610057Type): game1610057Type;

        /**
         * Encodes the specified game1610057Type message. Does not implicitly {@link game1610057Type.verify|verify} messages.
         * @param message game1610057Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1610057Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1610057Type message, length delimited. Does not implicitly {@link game1610057Type.verify|verify} messages.
         * @param message game1610057Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1610057Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1610057Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1610057Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610057Type;

        /**
         * Decodes a game1610057Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1610057Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610057Type;

        /**
         * Verifies a game1610057Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1610057Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1610057Type
         */
        public static fromObject(object: { [k: string]: any }): game1610057Type;

        /**
         * Creates a plain object from a game1610057Type message. Also converts values to other types if specified.
         * @param message game1610057Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1610057Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1610057Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1610057Type {

        /** Properties of a data1610057Type. */
        interface Idata1610057Type {

            /** data1610057Type collectTimes */
            collectTimes: number;
        }

        /** Represents a data1610057Type. */
        class data1610057Type implements Idata1610057Type {

            /**
             * Constructs a new data1610057Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610057Type.Idata1610057Type);

            /** data1610057Type collectTimes. */
            public collectTimes: number;

            /**
             * Creates a new data1610057Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1610057Type instance
             */
            public static create(properties?: game1610057Type.Idata1610057Type): game1610057Type.data1610057Type;

            /**
             * Encodes the specified data1610057Type message. Does not implicitly {@link game1610057Type.data1610057Type.verify|verify} messages.
             * @param message data1610057Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610057Type.Idata1610057Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1610057Type message, length delimited. Does not implicitly {@link game1610057Type.data1610057Type.verify|verify} messages.
             * @param message data1610057Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610057Type.Idata1610057Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1610057Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1610057Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610057Type.data1610057Type;

            /**
             * Decodes a data1610057Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1610057Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610057Type.data1610057Type;

            /**
             * Verifies a data1610057Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1610057Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1610057Type
             */
            public static fromObject(object: { [k: string]: any }): game1610057Type.data1610057Type;

            /**
             * Creates a plain object from a data1610057Type message. Also converts values to other types if specified.
             * @param message data1610057Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610057Type.data1610057Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1610057Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1610057Type. */
        interface Iupdate1610057Type {

            /** update1610057Type index */
            index: number;

            /** update1610057Type collectTimes */
            collectTimes: number;
        }

        /** Represents an update1610057Type. */
        class update1610057Type implements Iupdate1610057Type {

            /**
             * Constructs a new update1610057Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610057Type.Iupdate1610057Type);

            /** update1610057Type index. */
            public index: number;

            /** update1610057Type collectTimes. */
            public collectTimes: number;

            /**
             * Creates a new update1610057Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1610057Type instance
             */
            public static create(properties?: game1610057Type.Iupdate1610057Type): game1610057Type.update1610057Type;

            /**
             * Encodes the specified update1610057Type message. Does not implicitly {@link game1610057Type.update1610057Type.verify|verify} messages.
             * @param message update1610057Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610057Type.Iupdate1610057Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1610057Type message, length delimited. Does not implicitly {@link game1610057Type.update1610057Type.verify|verify} messages.
             * @param message update1610057Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610057Type.Iupdate1610057Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1610057Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1610057Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610057Type.update1610057Type;

            /**
             * Decodes an update1610057Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1610057Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610057Type.update1610057Type;

            /**
             * Verifies an update1610057Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1610057Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1610057Type
             */
            public static fromObject(object: { [k: string]: any }): game1610057Type.update1610057Type;

            /**
             * Creates a plain object from an update1610057Type message. Also converts values to other types if specified.
             * @param message update1610057Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610057Type.update1610057Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1610057Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1610082Type. */
    export class game1610082Type implements Igame1610082Type {

        /**
         * Constructs a new game1610082Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1610082Type);

        /** game1610082Type data. */
        public data?: (game1610082Type.Idata1610082Type | null);

        /** game1610082Type update. */
        public update: game1610082Type.Iupdate1610082Type[];

        /**
         * Creates a new game1610082Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1610082Type instance
         */
        public static create(properties?: Igame1610082Type): game1610082Type;

        /**
         * Encodes the specified game1610082Type message. Does not implicitly {@link game1610082Type.verify|verify} messages.
         * @param message game1610082Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1610082Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1610082Type message, length delimited. Does not implicitly {@link game1610082Type.verify|verify} messages.
         * @param message game1610082Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1610082Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1610082Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1610082Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610082Type;

        /**
         * Decodes a game1610082Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1610082Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610082Type;

        /**
         * Verifies a game1610082Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1610082Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1610082Type
         */
        public static fromObject(object: { [k: string]: any }): game1610082Type;

        /**
         * Creates a plain object from a game1610082Type message. Also converts values to other types if specified.
         * @param message game1610082Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1610082Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1610082Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1610082Type {

        /** Properties of a data1610082Type. */
        interface Idata1610082Type {

            /** data1610082Type changedElem */
            changedElem?: (number[] | null);
        }

        /** Represents a data1610082Type. */
        class data1610082Type implements Idata1610082Type {

            /**
             * Constructs a new data1610082Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610082Type.Idata1610082Type);

            /** data1610082Type changedElem. */
            public changedElem: number[];

            /**
             * Creates a new data1610082Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1610082Type instance
             */
            public static create(properties?: game1610082Type.Idata1610082Type): game1610082Type.data1610082Type;

            /**
             * Encodes the specified data1610082Type message. Does not implicitly {@link game1610082Type.data1610082Type.verify|verify} messages.
             * @param message data1610082Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610082Type.Idata1610082Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1610082Type message, length delimited. Does not implicitly {@link game1610082Type.data1610082Type.verify|verify} messages.
             * @param message data1610082Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610082Type.Idata1610082Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1610082Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1610082Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610082Type.data1610082Type;

            /**
             * Decodes a data1610082Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1610082Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610082Type.data1610082Type;

            /**
             * Verifies a data1610082Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1610082Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1610082Type
             */
            public static fromObject(object: { [k: string]: any }): game1610082Type.data1610082Type;

            /**
             * Creates a plain object from a data1610082Type message. Also converts values to other types if specified.
             * @param message data1610082Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610082Type.data1610082Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1610082Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1610082Type. */
        interface Iupdate1610082Type {

            /** update1610082Type index */
            index: number;

            /** update1610082Type changedElem */
            changedElem?: (number[] | null);
        }

        /** Represents an update1610082Type. */
        class update1610082Type implements Iupdate1610082Type {

            /**
             * Constructs a new update1610082Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610082Type.Iupdate1610082Type);

            /** update1610082Type index. */
            public index: number;

            /** update1610082Type changedElem. */
            public changedElem: number[];

            /**
             * Creates a new update1610082Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1610082Type instance
             */
            public static create(properties?: game1610082Type.Iupdate1610082Type): game1610082Type.update1610082Type;

            /**
             * Encodes the specified update1610082Type message. Does not implicitly {@link game1610082Type.update1610082Type.verify|verify} messages.
             * @param message update1610082Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610082Type.Iupdate1610082Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1610082Type message, length delimited. Does not implicitly {@link game1610082Type.update1610082Type.verify|verify} messages.
             * @param message update1610082Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610082Type.Iupdate1610082Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1610082Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1610082Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610082Type.update1610082Type;

            /**
             * Decodes an update1610082Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1610082Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610082Type.update1610082Type;

            /**
             * Verifies an update1610082Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1610082Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1610082Type
             */
            public static fromObject(object: { [k: string]: any }): game1610082Type.update1610082Type;

            /**
             * Creates a plain object from an update1610082Type message. Also converts values to other types if specified.
             * @param message update1610082Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610082Type.update1610082Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1610082Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1610086Type. */
    export class game1610086Type implements Igame1610086Type {

        /**
         * Constructs a new game1610086Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1610086Type);

        /** game1610086Type data. */
        public data?: (game1610086Type.Idata1610086Type | null);

        /** game1610086Type update. */
        public update: game1610086Type.Iupdate1610086Type[];

        /**
         * Creates a new game1610086Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1610086Type instance
         */
        public static create(properties?: Igame1610086Type): game1610086Type;

        /**
         * Encodes the specified game1610086Type message. Does not implicitly {@link game1610086Type.verify|verify} messages.
         * @param message game1610086Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1610086Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1610086Type message, length delimited. Does not implicitly {@link game1610086Type.verify|verify} messages.
         * @param message game1610086Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1610086Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1610086Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1610086Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610086Type;

        /**
         * Decodes a game1610086Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1610086Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610086Type;

        /**
         * Verifies a game1610086Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1610086Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1610086Type
         */
        public static fromObject(object: { [k: string]: any }): game1610086Type;

        /**
         * Creates a plain object from a game1610086Type message. Also converts values to other types if specified.
         * @param message game1610086Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1610086Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1610086Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1610086Type {

        /** Properties of a data1610086Type. */
        interface Idata1610086Type {

            /** data1610086Type remainGrid1 */
            remainGrid1?: (game1610086Type.IGridType[] | null);

            /** data1610086Type remainGrid2 */
            remainGrid2?: (game1610086Type.IGridType[] | null);

            /** data1610086Type drawGrid */
            drawGrid?: (game1610086Type.IGridType[] | null);

            /** data1610086Type posToPlist */
            posToPlist?: (game1610086Type.IPToPListType[] | null);
        }

        /** Represents a data1610086Type. */
        class data1610086Type implements Idata1610086Type {

            /**
             * Constructs a new data1610086Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610086Type.Idata1610086Type);

            /** data1610086Type remainGrid1. */
            public remainGrid1: game1610086Type.IGridType[];

            /** data1610086Type remainGrid2. */
            public remainGrid2: game1610086Type.IGridType[];

            /** data1610086Type drawGrid. */
            public drawGrid: game1610086Type.IGridType[];

            /** data1610086Type posToPlist. */
            public posToPlist: game1610086Type.IPToPListType[];

            /**
             * Creates a new data1610086Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1610086Type instance
             */
            public static create(properties?: game1610086Type.Idata1610086Type): game1610086Type.data1610086Type;

            /**
             * Encodes the specified data1610086Type message. Does not implicitly {@link game1610086Type.data1610086Type.verify|verify} messages.
             * @param message data1610086Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610086Type.Idata1610086Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1610086Type message, length delimited. Does not implicitly {@link game1610086Type.data1610086Type.verify|verify} messages.
             * @param message data1610086Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610086Type.Idata1610086Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1610086Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1610086Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610086Type.data1610086Type;

            /**
             * Decodes a data1610086Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1610086Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610086Type.data1610086Type;

            /**
             * Verifies a data1610086Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1610086Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1610086Type
             */
            public static fromObject(object: { [k: string]: any }): game1610086Type.data1610086Type;

            /**
             * Creates a plain object from a data1610086Type message. Also converts values to other types if specified.
             * @param message data1610086Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610086Type.data1610086Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1610086Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1610086Type. */
        interface Iupdate1610086Type {

            /** update1610086Type index */
            index: number;

            /** update1610086Type remainGrid1 */
            remainGrid1?: (game1610086Type.IGridType[] | null);

            /** update1610086Type remainGrid2 */
            remainGrid2?: (game1610086Type.IGridType[] | null);

            /** update1610086Type drawGrid */
            drawGrid?: (game1610086Type.IGridType[] | null);

            /** update1610086Type posToPlist */
            posToPlist?: (game1610086Type.IPToPListType[] | null);
        }

        /** Represents an update1610086Type. */
        class update1610086Type implements Iupdate1610086Type {

            /**
             * Constructs a new update1610086Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610086Type.Iupdate1610086Type);

            /** update1610086Type index. */
            public index: number;

            /** update1610086Type remainGrid1. */
            public remainGrid1: game1610086Type.IGridType[];

            /** update1610086Type remainGrid2. */
            public remainGrid2: game1610086Type.IGridType[];

            /** update1610086Type drawGrid. */
            public drawGrid: game1610086Type.IGridType[];

            /** update1610086Type posToPlist. */
            public posToPlist: game1610086Type.IPToPListType[];

            /**
             * Creates a new update1610086Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1610086Type instance
             */
            public static create(properties?: game1610086Type.Iupdate1610086Type): game1610086Type.update1610086Type;

            /**
             * Encodes the specified update1610086Type message. Does not implicitly {@link game1610086Type.update1610086Type.verify|verify} messages.
             * @param message update1610086Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610086Type.Iupdate1610086Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1610086Type message, length delimited. Does not implicitly {@link game1610086Type.update1610086Type.verify|verify} messages.
             * @param message update1610086Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610086Type.Iupdate1610086Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1610086Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1610086Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610086Type.update1610086Type;

            /**
             * Decodes an update1610086Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1610086Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610086Type.update1610086Type;

            /**
             * Verifies an update1610086Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1610086Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1610086Type
             */
            public static fromObject(object: { [k: string]: any }): game1610086Type.update1610086Type;

            /**
             * Creates a plain object from an update1610086Type message. Also converts values to other types if specified.
             * @param message update1610086Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610086Type.update1610086Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1610086Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GridType. */
        interface IGridType {

            /** GridType pos */
            pos: number;

            /** GridType elem */
            elem: number;
        }

        /** Represents a GridType. */
        class GridType implements IGridType {

            /**
             * Constructs a new GridType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610086Type.IGridType);

            /** GridType pos. */
            public pos: number;

            /** GridType elem. */
            public elem: number;

            /**
             * Creates a new GridType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GridType instance
             */
            public static create(properties?: game1610086Type.IGridType): game1610086Type.GridType;

            /**
             * Encodes the specified GridType message. Does not implicitly {@link game1610086Type.GridType.verify|verify} messages.
             * @param message GridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610086Type.IGridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GridType message, length delimited. Does not implicitly {@link game1610086Type.GridType.verify|verify} messages.
             * @param message GridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610086Type.IGridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GridType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610086Type.GridType;

            /**
             * Decodes a GridType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610086Type.GridType;

            /**
             * Verifies a GridType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a GridType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GridType
             */
            public static fromObject(object: { [k: string]: any }): game1610086Type.GridType;

            /**
             * Creates a plain object from a GridType message. Also converts values to other types if specified.
             * @param message GridType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610086Type.GridType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GridType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a PToPListType. */
        interface IPToPListType {

            /** PToPListType pos */
            pos: number;

            /** PToPListType plist */
            plist?: (number[] | null);
        }

        /** Represents a PToPListType. */
        class PToPListType implements IPToPListType {

            /**
             * Constructs a new PToPListType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610086Type.IPToPListType);

            /** PToPListType pos. */
            public pos: number;

            /** PToPListType plist. */
            public plist: number[];

            /**
             * Creates a new PToPListType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PToPListType instance
             */
            public static create(properties?: game1610086Type.IPToPListType): game1610086Type.PToPListType;

            /**
             * Encodes the specified PToPListType message. Does not implicitly {@link game1610086Type.PToPListType.verify|verify} messages.
             * @param message PToPListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610086Type.IPToPListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PToPListType message, length delimited. Does not implicitly {@link game1610086Type.PToPListType.verify|verify} messages.
             * @param message PToPListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610086Type.IPToPListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PToPListType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PToPListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610086Type.PToPListType;

            /**
             * Decodes a PToPListType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PToPListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610086Type.PToPListType;

            /**
             * Verifies a PToPListType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a PToPListType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PToPListType
             */
            public static fromObject(object: { [k: string]: any }): game1610086Type.PToPListType;

            /**
             * Creates a plain object from a PToPListType message. Also converts values to other types if specified.
             * @param message PToPListType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610086Type.PToPListType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PToPListType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1610093Type. */
    export class game1610093Type implements Igame1610093Type {

        /**
         * Constructs a new game1610093Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1610093Type);

        /** game1610093Type data. */
        public data?: (game1610093Type.Idata1610093Type | null);

        /** game1610093Type update. */
        public update: game1610093Type.Iupdate1610093Type[];

        /**
         * Creates a new game1610093Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1610093Type instance
         */
        public static create(properties?: Igame1610093Type): game1610093Type;

        /**
         * Encodes the specified game1610093Type message. Does not implicitly {@link game1610093Type.verify|verify} messages.
         * @param message game1610093Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1610093Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1610093Type message, length delimited. Does not implicitly {@link game1610093Type.verify|verify} messages.
         * @param message game1610093Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1610093Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1610093Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1610093Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610093Type;

        /**
         * Decodes a game1610093Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1610093Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610093Type;

        /**
         * Verifies a game1610093Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1610093Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1610093Type
         */
        public static fromObject(object: { [k: string]: any }): game1610093Type;

        /**
         * Creates a plain object from a game1610093Type message. Also converts values to other types if specified.
         * @param message game1610093Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1610093Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1610093Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1610093Type {

        /** Properties of a data1610093Type. */
        interface Idata1610093Type {

            /** data1610093Type collectTask */
            collectTask?: (game1610093Type.ItaskType[] | null);
        }

        /** Represents a data1610093Type. */
        class data1610093Type implements Idata1610093Type {

            /**
             * Constructs a new data1610093Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610093Type.Idata1610093Type);

            /** data1610093Type collectTask. */
            public collectTask: game1610093Type.ItaskType[];

            /**
             * Creates a new data1610093Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1610093Type instance
             */
            public static create(properties?: game1610093Type.Idata1610093Type): game1610093Type.data1610093Type;

            /**
             * Encodes the specified data1610093Type message. Does not implicitly {@link game1610093Type.data1610093Type.verify|verify} messages.
             * @param message data1610093Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610093Type.Idata1610093Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1610093Type message, length delimited. Does not implicitly {@link game1610093Type.data1610093Type.verify|verify} messages.
             * @param message data1610093Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610093Type.Idata1610093Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1610093Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1610093Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610093Type.data1610093Type;

            /**
             * Decodes a data1610093Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1610093Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610093Type.data1610093Type;

            /**
             * Verifies a data1610093Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1610093Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1610093Type
             */
            public static fromObject(object: { [k: string]: any }): game1610093Type.data1610093Type;

            /**
             * Creates a plain object from a data1610093Type message. Also converts values to other types if specified.
             * @param message data1610093Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610093Type.data1610093Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1610093Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1610093Type. */
        interface Iupdate1610093Type {

            /** update1610093Type index */
            index: number;

            /** update1610093Type collectTask */
            collectTask?: (game1610093Type.ItaskType[] | null);
        }

        /** Represents an update1610093Type. */
        class update1610093Type implements Iupdate1610093Type {

            /**
             * Constructs a new update1610093Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610093Type.Iupdate1610093Type);

            /** update1610093Type index. */
            public index: number;

            /** update1610093Type collectTask. */
            public collectTask: game1610093Type.ItaskType[];

            /**
             * Creates a new update1610093Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1610093Type instance
             */
            public static create(properties?: game1610093Type.Iupdate1610093Type): game1610093Type.update1610093Type;

            /**
             * Encodes the specified update1610093Type message. Does not implicitly {@link game1610093Type.update1610093Type.verify|verify} messages.
             * @param message update1610093Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610093Type.Iupdate1610093Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1610093Type message, length delimited. Does not implicitly {@link game1610093Type.update1610093Type.verify|verify} messages.
             * @param message update1610093Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610093Type.Iupdate1610093Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1610093Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1610093Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610093Type.update1610093Type;

            /**
             * Decodes an update1610093Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1610093Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610093Type.update1610093Type;

            /**
             * Verifies an update1610093Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1610093Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1610093Type
             */
            public static fromObject(object: { [k: string]: any }): game1610093Type.update1610093Type;

            /**
             * Creates a plain object from an update1610093Type message. Also converts values to other types if specified.
             * @param message update1610093Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610093Type.update1610093Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1610093Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a taskType. */
        interface ItaskType {

            /** taskType id */
            id: number;

            /** taskType elem */
            elem: number;

            /** taskType num */
            num: number;

            /** taskType targetNum */
            targetNum: number;

            /** taskType isComplete */
            isComplete: boolean;
        }

        /** Represents a taskType. */
        class taskType implements ItaskType {

            /**
             * Constructs a new taskType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610093Type.ItaskType);

            /** taskType id. */
            public id: number;

            /** taskType elem. */
            public elem: number;

            /** taskType num. */
            public num: number;

            /** taskType targetNum. */
            public targetNum: number;

            /** taskType isComplete. */
            public isComplete: boolean;

            /**
             * Creates a new taskType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns taskType instance
             */
            public static create(properties?: game1610093Type.ItaskType): game1610093Type.taskType;

            /**
             * Encodes the specified taskType message. Does not implicitly {@link game1610093Type.taskType.verify|verify} messages.
             * @param message taskType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610093Type.ItaskType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified taskType message, length delimited. Does not implicitly {@link game1610093Type.taskType.verify|verify} messages.
             * @param message taskType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610093Type.ItaskType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a taskType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns taskType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610093Type.taskType;

            /**
             * Decodes a taskType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns taskType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610093Type.taskType;

            /**
             * Verifies a taskType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a taskType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns taskType
             */
            public static fromObject(object: { [k: string]: any }): game1610093Type.taskType;

            /**
             * Creates a plain object from a taskType message. Also converts values to other types if specified.
             * @param message taskType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610093Type.taskType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this taskType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1610094Type. */
    export class game1610094Type implements Igame1610094Type {

        /**
         * Constructs a new game1610094Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1610094Type);

        /** game1610094Type data. */
        public data?: (game1610094Type.Idata1610094Type | null);

        /** game1610094Type update. */
        public update: game1610094Type.Iupdate1610094Type[];

        /**
         * Creates a new game1610094Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1610094Type instance
         */
        public static create(properties?: Igame1610094Type): game1610094Type;

        /**
         * Encodes the specified game1610094Type message. Does not implicitly {@link game1610094Type.verify|verify} messages.
         * @param message game1610094Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1610094Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1610094Type message, length delimited. Does not implicitly {@link game1610094Type.verify|verify} messages.
         * @param message game1610094Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1610094Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1610094Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1610094Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610094Type;

        /**
         * Decodes a game1610094Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1610094Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610094Type;

        /**
         * Verifies a game1610094Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1610094Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1610094Type
         */
        public static fromObject(object: { [k: string]: any }): game1610094Type;

        /**
         * Creates a plain object from a game1610094Type message. Also converts values to other types if specified.
         * @param message game1610094Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1610094Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1610094Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1610094Type {

        /** Properties of a data1610094Type. */
        interface Idata1610094Type {

            /** data1610094Type task */
            task?: (game1610094Type.ItaskType[] | null);
        }

        /** Represents a data1610094Type. */
        class data1610094Type implements Idata1610094Type {

            /**
             * Constructs a new data1610094Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610094Type.Idata1610094Type);

            /** data1610094Type task. */
            public task: game1610094Type.ItaskType[];

            /**
             * Creates a new data1610094Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1610094Type instance
             */
            public static create(properties?: game1610094Type.Idata1610094Type): game1610094Type.data1610094Type;

            /**
             * Encodes the specified data1610094Type message. Does not implicitly {@link game1610094Type.data1610094Type.verify|verify} messages.
             * @param message data1610094Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610094Type.Idata1610094Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1610094Type message, length delimited. Does not implicitly {@link game1610094Type.data1610094Type.verify|verify} messages.
             * @param message data1610094Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610094Type.Idata1610094Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1610094Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1610094Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610094Type.data1610094Type;

            /**
             * Decodes a data1610094Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1610094Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610094Type.data1610094Type;

            /**
             * Verifies a data1610094Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1610094Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1610094Type
             */
            public static fromObject(object: { [k: string]: any }): game1610094Type.data1610094Type;

            /**
             * Creates a plain object from a data1610094Type message. Also converts values to other types if specified.
             * @param message data1610094Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610094Type.data1610094Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1610094Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1610094Type. */
        interface Iupdate1610094Type {

            /** update1610094Type index */
            index: number;

            /** update1610094Type task */
            task?: (game1610094Type.ItaskType[] | null);
        }

        /** Represents an update1610094Type. */
        class update1610094Type implements Iupdate1610094Type {

            /**
             * Constructs a new update1610094Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610094Type.Iupdate1610094Type);

            /** update1610094Type index. */
            public index: number;

            /** update1610094Type task. */
            public task: game1610094Type.ItaskType[];

            /**
             * Creates a new update1610094Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1610094Type instance
             */
            public static create(properties?: game1610094Type.Iupdate1610094Type): game1610094Type.update1610094Type;

            /**
             * Encodes the specified update1610094Type message. Does not implicitly {@link game1610094Type.update1610094Type.verify|verify} messages.
             * @param message update1610094Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610094Type.Iupdate1610094Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1610094Type message, length delimited. Does not implicitly {@link game1610094Type.update1610094Type.verify|verify} messages.
             * @param message update1610094Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610094Type.Iupdate1610094Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1610094Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1610094Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610094Type.update1610094Type;

            /**
             * Decodes an update1610094Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1610094Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610094Type.update1610094Type;

            /**
             * Verifies an update1610094Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1610094Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1610094Type
             */
            public static fromObject(object: { [k: string]: any }): game1610094Type.update1610094Type;

            /**
             * Creates a plain object from an update1610094Type message. Also converts values to other types if specified.
             * @param message update1610094Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610094Type.update1610094Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1610094Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a taskType. */
        interface ItaskType {

            /** taskType type */
            type: number;

            /** taskType data */
            data?: (number[] | null);
        }

        /** Represents a taskType. */
        class taskType implements ItaskType {

            /**
             * Constructs a new taskType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610094Type.ItaskType);

            /** taskType type. */
            public type: number;

            /** taskType data. */
            public data: number[];

            /**
             * Creates a new taskType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns taskType instance
             */
            public static create(properties?: game1610094Type.ItaskType): game1610094Type.taskType;

            /**
             * Encodes the specified taskType message. Does not implicitly {@link game1610094Type.taskType.verify|verify} messages.
             * @param message taskType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610094Type.ItaskType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified taskType message, length delimited. Does not implicitly {@link game1610094Type.taskType.verify|verify} messages.
             * @param message taskType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610094Type.ItaskType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a taskType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns taskType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610094Type.taskType;

            /**
             * Decodes a taskType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns taskType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610094Type.taskType;

            /**
             * Verifies a taskType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a taskType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns taskType
             */
            public static fromObject(object: { [k: string]: any }): game1610094Type.taskType;

            /**
             * Creates a plain object from a taskType message. Also converts values to other types if specified.
             * @param message taskType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610094Type.taskType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this taskType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1610101Type. */
    export class game1610101Type implements Igame1610101Type {

        /**
         * Constructs a new game1610101Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1610101Type);

        /** game1610101Type data. */
        public data?: (game1610101Type.Idata1610101Type | null);

        /** game1610101Type update. */
        public update: game1610101Type.Iupdate1610101Type[];

        /**
         * Creates a new game1610101Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1610101Type instance
         */
        public static create(properties?: Igame1610101Type): game1610101Type;

        /**
         * Encodes the specified game1610101Type message. Does not implicitly {@link game1610101Type.verify|verify} messages.
         * @param message game1610101Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1610101Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1610101Type message, length delimited. Does not implicitly {@link game1610101Type.verify|verify} messages.
         * @param message game1610101Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1610101Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1610101Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1610101Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610101Type;

        /**
         * Decodes a game1610101Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1610101Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610101Type;

        /**
         * Verifies a game1610101Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1610101Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1610101Type
         */
        public static fromObject(object: { [k: string]: any }): game1610101Type;

        /**
         * Creates a plain object from a game1610101Type message. Also converts values to other types if specified.
         * @param message game1610101Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1610101Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1610101Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1610101Type {

        /** Properties of a data1610101Type. */
        interface Idata1610101Type {

            /** data1610101Type colLevelList */
            colLevelList?: (game1610101Type.IclType[] | null);

            /** data1610101Type dingGrid */
            dingGrid?: (IgridType[] | null);

            /** data1610101Type nudgingGrid */
            nudgingGrid?: (IgridType[] | null);
        }

        /** Represents a data1610101Type. */
        class data1610101Type implements Idata1610101Type {

            /**
             * Constructs a new data1610101Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610101Type.Idata1610101Type);

            /** data1610101Type colLevelList. */
            public colLevelList: game1610101Type.IclType[];

            /** data1610101Type dingGrid. */
            public dingGrid: IgridType[];

            /** data1610101Type nudgingGrid. */
            public nudgingGrid: IgridType[];

            /**
             * Creates a new data1610101Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1610101Type instance
             */
            public static create(properties?: game1610101Type.Idata1610101Type): game1610101Type.data1610101Type;

            /**
             * Encodes the specified data1610101Type message. Does not implicitly {@link game1610101Type.data1610101Type.verify|verify} messages.
             * @param message data1610101Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610101Type.Idata1610101Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1610101Type message, length delimited. Does not implicitly {@link game1610101Type.data1610101Type.verify|verify} messages.
             * @param message data1610101Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610101Type.Idata1610101Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1610101Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1610101Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610101Type.data1610101Type;

            /**
             * Decodes a data1610101Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1610101Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610101Type.data1610101Type;

            /**
             * Verifies a data1610101Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1610101Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1610101Type
             */
            public static fromObject(object: { [k: string]: any }): game1610101Type.data1610101Type;

            /**
             * Creates a plain object from a data1610101Type message. Also converts values to other types if specified.
             * @param message data1610101Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610101Type.data1610101Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1610101Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1610101Type. */
        interface Iupdate1610101Type {

            /** update1610101Type index */
            index: number;

            /** update1610101Type colLevelList */
            colLevelList?: (game1610101Type.IclType[] | null);

            /** update1610101Type dingGrid */
            dingGrid?: (IgridType[] | null);

            /** update1610101Type nudgingGrid */
            nudgingGrid?: (IgridType[] | null);
        }

        /** Represents an update1610101Type. */
        class update1610101Type implements Iupdate1610101Type {

            /**
             * Constructs a new update1610101Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610101Type.Iupdate1610101Type);

            /** update1610101Type index. */
            public index: number;

            /** update1610101Type colLevelList. */
            public colLevelList: game1610101Type.IclType[];

            /** update1610101Type dingGrid. */
            public dingGrid: IgridType[];

            /** update1610101Type nudgingGrid. */
            public nudgingGrid: IgridType[];

            /**
             * Creates a new update1610101Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1610101Type instance
             */
            public static create(properties?: game1610101Type.Iupdate1610101Type): game1610101Type.update1610101Type;

            /**
             * Encodes the specified update1610101Type message. Does not implicitly {@link game1610101Type.update1610101Type.verify|verify} messages.
             * @param message update1610101Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610101Type.Iupdate1610101Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1610101Type message, length delimited. Does not implicitly {@link game1610101Type.update1610101Type.verify|verify} messages.
             * @param message update1610101Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610101Type.Iupdate1610101Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1610101Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1610101Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610101Type.update1610101Type;

            /**
             * Decodes an update1610101Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1610101Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610101Type.update1610101Type;

            /**
             * Verifies an update1610101Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1610101Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1610101Type
             */
            public static fromObject(object: { [k: string]: any }): game1610101Type.update1610101Type;

            /**
             * Creates a plain object from an update1610101Type message. Also converts values to other types if specified.
             * @param message update1610101Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610101Type.update1610101Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1610101Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a clType. */
        interface IclType {

            /** clType id */
            id: number;

            /** clType count */
            count: number;
        }

        /** Represents a clType. */
        class clType implements IclType {

            /**
             * Constructs a new clType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610101Type.IclType);

            /** clType id. */
            public id: number;

            /** clType count. */
            public count: number;

            /**
             * Creates a new clType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns clType instance
             */
            public static create(properties?: game1610101Type.IclType): game1610101Type.clType;

            /**
             * Encodes the specified clType message. Does not implicitly {@link game1610101Type.clType.verify|verify} messages.
             * @param message clType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610101Type.IclType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified clType message, length delimited. Does not implicitly {@link game1610101Type.clType.verify|verify} messages.
             * @param message clType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610101Type.IclType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a clType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns clType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610101Type.clType;

            /**
             * Decodes a clType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns clType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610101Type.clType;

            /**
             * Verifies a clType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a clType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns clType
             */
            public static fromObject(object: { [k: string]: any }): game1610101Type.clType;

            /**
             * Creates a plain object from a clType message. Also converts values to other types if specified.
             * @param message clType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610101Type.clType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this clType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1610121Type. */
    export class game1610121Type implements Igame1610121Type {

        /**
         * Constructs a new game1610121Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1610121Type);

        /** game1610121Type data. */
        public data?: (game1610121Type.Idata1610121Type | null);

        /** game1610121Type update. */
        public update: game1610121Type.Iupdate1610121Type[];

        /**
         * Creates a new game1610121Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1610121Type instance
         */
        public static create(properties?: Igame1610121Type): game1610121Type;

        /**
         * Encodes the specified game1610121Type message. Does not implicitly {@link game1610121Type.verify|verify} messages.
         * @param message game1610121Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1610121Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1610121Type message, length delimited. Does not implicitly {@link game1610121Type.verify|verify} messages.
         * @param message game1610121Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1610121Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1610121Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1610121Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610121Type;

        /**
         * Decodes a game1610121Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1610121Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610121Type;

        /**
         * Verifies a game1610121Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1610121Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1610121Type
         */
        public static fromObject(object: { [k: string]: any }): game1610121Type;

        /**
         * Creates a plain object from a game1610121Type message. Also converts values to other types if specified.
         * @param message game1610121Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1610121Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1610121Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1610121Type {

        /** Properties of a data1610121Type. */
        interface Idata1610121Type {

            /** data1610121Type colColorList */
            colColorList?: (game1610121Type.IColColorListType[] | null);
        }

        /** Represents a data1610121Type. */
        class data1610121Type implements Idata1610121Type {

            /**
             * Constructs a new data1610121Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610121Type.Idata1610121Type);

            /** data1610121Type colColorList. */
            public colColorList: game1610121Type.IColColorListType[];

            /**
             * Creates a new data1610121Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1610121Type instance
             */
            public static create(properties?: game1610121Type.Idata1610121Type): game1610121Type.data1610121Type;

            /**
             * Encodes the specified data1610121Type message. Does not implicitly {@link game1610121Type.data1610121Type.verify|verify} messages.
             * @param message data1610121Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610121Type.Idata1610121Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1610121Type message, length delimited. Does not implicitly {@link game1610121Type.data1610121Type.verify|verify} messages.
             * @param message data1610121Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610121Type.Idata1610121Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1610121Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1610121Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610121Type.data1610121Type;

            /**
             * Decodes a data1610121Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1610121Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610121Type.data1610121Type;

            /**
             * Verifies a data1610121Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1610121Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1610121Type
             */
            public static fromObject(object: { [k: string]: any }): game1610121Type.data1610121Type;

            /**
             * Creates a plain object from a data1610121Type message. Also converts values to other types if specified.
             * @param message data1610121Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610121Type.data1610121Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1610121Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1610121Type. */
        interface Iupdate1610121Type {

            /** update1610121Type index */
            index: number;

            /** update1610121Type colColorList */
            colColorList?: (game1610121Type.IColColorListType[] | null);
        }

        /** Represents an update1610121Type. */
        class update1610121Type implements Iupdate1610121Type {

            /**
             * Constructs a new update1610121Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610121Type.Iupdate1610121Type);

            /** update1610121Type index. */
            public index: number;

            /** update1610121Type colColorList. */
            public colColorList: game1610121Type.IColColorListType[];

            /**
             * Creates a new update1610121Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1610121Type instance
             */
            public static create(properties?: game1610121Type.Iupdate1610121Type): game1610121Type.update1610121Type;

            /**
             * Encodes the specified update1610121Type message. Does not implicitly {@link game1610121Type.update1610121Type.verify|verify} messages.
             * @param message update1610121Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610121Type.Iupdate1610121Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1610121Type message, length delimited. Does not implicitly {@link game1610121Type.update1610121Type.verify|verify} messages.
             * @param message update1610121Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610121Type.Iupdate1610121Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1610121Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1610121Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610121Type.update1610121Type;

            /**
             * Decodes an update1610121Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1610121Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610121Type.update1610121Type;

            /**
             * Verifies an update1610121Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1610121Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1610121Type
             */
            public static fromObject(object: { [k: string]: any }): game1610121Type.update1610121Type;

            /**
             * Creates a plain object from an update1610121Type message. Also converts values to other types if specified.
             * @param message update1610121Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610121Type.update1610121Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1610121Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ColColorListType. */
        interface IColColorListType {

            /** ColColorListType col */
            col: number;

            /** ColColorListType color */
            color: number;
        }

        /** Represents a ColColorListType. */
        class ColColorListType implements IColColorListType {

            /**
             * Constructs a new ColColorListType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610121Type.IColColorListType);

            /** ColColorListType col. */
            public col: number;

            /** ColColorListType color. */
            public color: number;

            /**
             * Creates a new ColColorListType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ColColorListType instance
             */
            public static create(properties?: game1610121Type.IColColorListType): game1610121Type.ColColorListType;

            /**
             * Encodes the specified ColColorListType message. Does not implicitly {@link game1610121Type.ColColorListType.verify|verify} messages.
             * @param message ColColorListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610121Type.IColColorListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ColColorListType message, length delimited. Does not implicitly {@link game1610121Type.ColColorListType.verify|verify} messages.
             * @param message ColColorListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610121Type.IColColorListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ColColorListType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ColColorListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610121Type.ColColorListType;

            /**
             * Decodes a ColColorListType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ColColorListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610121Type.ColColorListType;

            /**
             * Verifies a ColColorListType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a ColColorListType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ColColorListType
             */
            public static fromObject(object: { [k: string]: any }): game1610121Type.ColColorListType;

            /**
             * Creates a plain object from a ColColorListType message. Also converts values to other types if specified.
             * @param message ColColorListType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610121Type.ColColorListType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ColColorListType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1610130Type. */
    export class game1610130Type implements Igame1610130Type {

        /**
         * Constructs a new game1610130Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1610130Type);

        /** game1610130Type data. */
        public data?: (game1610130Type.Idata1610130Type | null);

        /** game1610130Type update. */
        public update: game1610130Type.Iupdate1610130Type[];

        /**
         * Creates a new game1610130Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1610130Type instance
         */
        public static create(properties?: Igame1610130Type): game1610130Type;

        /**
         * Encodes the specified game1610130Type message. Does not implicitly {@link game1610130Type.verify|verify} messages.
         * @param message game1610130Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1610130Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1610130Type message, length delimited. Does not implicitly {@link game1610130Type.verify|verify} messages.
         * @param message game1610130Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1610130Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1610130Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1610130Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610130Type;

        /**
         * Decodes a game1610130Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1610130Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610130Type;

        /**
         * Verifies a game1610130Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1610130Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1610130Type
         */
        public static fromObject(object: { [k: string]: any }): game1610130Type;

        /**
         * Creates a plain object from a game1610130Type message. Also converts values to other types if specified.
         * @param message game1610130Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1610130Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1610130Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1610130Type {

        /** Properties of a data1610130Type. */
        interface Idata1610130Type {

            /** data1610130Type toTriggerLg */
            toTriggerLg?: (game1610130Type.ItoTriggerLgType[] | null);
        }

        /** Represents a data1610130Type. */
        class data1610130Type implements Idata1610130Type {

            /**
             * Constructs a new data1610130Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610130Type.Idata1610130Type);

            /** data1610130Type toTriggerLg. */
            public toTriggerLg: game1610130Type.ItoTriggerLgType[];

            /**
             * Creates a new data1610130Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1610130Type instance
             */
            public static create(properties?: game1610130Type.Idata1610130Type): game1610130Type.data1610130Type;

            /**
             * Encodes the specified data1610130Type message. Does not implicitly {@link game1610130Type.data1610130Type.verify|verify} messages.
             * @param message data1610130Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610130Type.Idata1610130Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1610130Type message, length delimited. Does not implicitly {@link game1610130Type.data1610130Type.verify|verify} messages.
             * @param message data1610130Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610130Type.Idata1610130Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1610130Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1610130Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610130Type.data1610130Type;

            /**
             * Decodes a data1610130Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1610130Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610130Type.data1610130Type;

            /**
             * Verifies a data1610130Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1610130Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1610130Type
             */
            public static fromObject(object: { [k: string]: any }): game1610130Type.data1610130Type;

            /**
             * Creates a plain object from a data1610130Type message. Also converts values to other types if specified.
             * @param message data1610130Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610130Type.data1610130Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1610130Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1610130Type. */
        interface Iupdate1610130Type {

            /** update1610130Type index */
            index: number;

            /** update1610130Type toTriggerLg */
            toTriggerLg?: (game1610130Type.ItoTriggerLgType[] | null);
        }

        /** Represents an update1610130Type. */
        class update1610130Type implements Iupdate1610130Type {

            /**
             * Constructs a new update1610130Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610130Type.Iupdate1610130Type);

            /** update1610130Type index. */
            public index: number;

            /** update1610130Type toTriggerLg. */
            public toTriggerLg: game1610130Type.ItoTriggerLgType[];

            /**
             * Creates a new update1610130Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1610130Type instance
             */
            public static create(properties?: game1610130Type.Iupdate1610130Type): game1610130Type.update1610130Type;

            /**
             * Encodes the specified update1610130Type message. Does not implicitly {@link game1610130Type.update1610130Type.verify|verify} messages.
             * @param message update1610130Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610130Type.Iupdate1610130Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1610130Type message, length delimited. Does not implicitly {@link game1610130Type.update1610130Type.verify|verify} messages.
             * @param message update1610130Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610130Type.Iupdate1610130Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1610130Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1610130Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610130Type.update1610130Type;

            /**
             * Decodes an update1610130Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1610130Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610130Type.update1610130Type;

            /**
             * Verifies an update1610130Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1610130Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1610130Type
             */
            public static fromObject(object: { [k: string]: any }): game1610130Type.update1610130Type;

            /**
             * Creates a plain object from an update1610130Type message. Also converts values to other types if specified.
             * @param message update1610130Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610130Type.update1610130Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1610130Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a toTriggerLgType. */
        interface ItoTriggerLgType {

            /** toTriggerLgType lgId */
            lgId: (number | Long);

            /** toTriggerLgType triggerTimes */
            triggerTimes: number;
        }

        /** Represents a toTriggerLgType. */
        class toTriggerLgType implements ItoTriggerLgType {

            /**
             * Constructs a new toTriggerLgType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610130Type.ItoTriggerLgType);

            /** toTriggerLgType lgId. */
            public lgId: (number | Long);

            /** toTriggerLgType triggerTimes. */
            public triggerTimes: number;

            /**
             * Creates a new toTriggerLgType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns toTriggerLgType instance
             */
            public static create(properties?: game1610130Type.ItoTriggerLgType): game1610130Type.toTriggerLgType;

            /**
             * Encodes the specified toTriggerLgType message. Does not implicitly {@link game1610130Type.toTriggerLgType.verify|verify} messages.
             * @param message toTriggerLgType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610130Type.ItoTriggerLgType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified toTriggerLgType message, length delimited. Does not implicitly {@link game1610130Type.toTriggerLgType.verify|verify} messages.
             * @param message toTriggerLgType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610130Type.ItoTriggerLgType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a toTriggerLgType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns toTriggerLgType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610130Type.toTriggerLgType;

            /**
             * Decodes a toTriggerLgType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns toTriggerLgType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610130Type.toTriggerLgType;

            /**
             * Verifies a toTriggerLgType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a toTriggerLgType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns toTriggerLgType
             */
            public static fromObject(object: { [k: string]: any }): game1610130Type.toTriggerLgType;

            /**
             * Creates a plain object from a toTriggerLgType message. Also converts values to other types if specified.
             * @param message toTriggerLgType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610130Type.toTriggerLgType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this toTriggerLgType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1610131Type. */
    export class game1610131Type implements Igame1610131Type {

        /**
         * Constructs a new game1610131Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1610131Type);

        /** game1610131Type data. */
        public data?: (game1610131Type.Idata1610131Type | null);

        /** game1610131Type update. */
        public update: game1610131Type.Iupdate1610131Type[];

        /**
         * Creates a new game1610131Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1610131Type instance
         */
        public static create(properties?: Igame1610131Type): game1610131Type;

        /**
         * Encodes the specified game1610131Type message. Does not implicitly {@link game1610131Type.verify|verify} messages.
         * @param message game1610131Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1610131Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1610131Type message, length delimited. Does not implicitly {@link game1610131Type.verify|verify} messages.
         * @param message game1610131Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1610131Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1610131Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1610131Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610131Type;

        /**
         * Decodes a game1610131Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1610131Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610131Type;

        /**
         * Verifies a game1610131Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1610131Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1610131Type
         */
        public static fromObject(object: { [k: string]: any }): game1610131Type;

        /**
         * Creates a plain object from a game1610131Type message. Also converts values to other types if specified.
         * @param message game1610131Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1610131Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1610131Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1610131Type {

        /** Properties of a data1610131Type. */
        interface Idata1610131Type {

            /** data1610131Type winCollectElem */
            winCollectElem?: (number[] | null);
        }

        /** Represents a data1610131Type. */
        class data1610131Type implements Idata1610131Type {

            /**
             * Constructs a new data1610131Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610131Type.Idata1610131Type);

            /** data1610131Type winCollectElem. */
            public winCollectElem: number[];

            /**
             * Creates a new data1610131Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1610131Type instance
             */
            public static create(properties?: game1610131Type.Idata1610131Type): game1610131Type.data1610131Type;

            /**
             * Encodes the specified data1610131Type message. Does not implicitly {@link game1610131Type.data1610131Type.verify|verify} messages.
             * @param message data1610131Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610131Type.Idata1610131Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1610131Type message, length delimited. Does not implicitly {@link game1610131Type.data1610131Type.verify|verify} messages.
             * @param message data1610131Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610131Type.Idata1610131Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1610131Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1610131Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610131Type.data1610131Type;

            /**
             * Decodes a data1610131Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1610131Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610131Type.data1610131Type;

            /**
             * Verifies a data1610131Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1610131Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1610131Type
             */
            public static fromObject(object: { [k: string]: any }): game1610131Type.data1610131Type;

            /**
             * Creates a plain object from a data1610131Type message. Also converts values to other types if specified.
             * @param message data1610131Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610131Type.data1610131Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1610131Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1610131Type. */
        interface Iupdate1610131Type {

            /** update1610131Type index */
            index: number;

            /** update1610131Type winCollectElem */
            winCollectElem?: (number[] | null);
        }

        /** Represents an update1610131Type. */
        class update1610131Type implements Iupdate1610131Type {

            /**
             * Constructs a new update1610131Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610131Type.Iupdate1610131Type);

            /** update1610131Type index. */
            public index: number;

            /** update1610131Type winCollectElem. */
            public winCollectElem: number[];

            /**
             * Creates a new update1610131Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1610131Type instance
             */
            public static create(properties?: game1610131Type.Iupdate1610131Type): game1610131Type.update1610131Type;

            /**
             * Encodes the specified update1610131Type message. Does not implicitly {@link game1610131Type.update1610131Type.verify|verify} messages.
             * @param message update1610131Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610131Type.Iupdate1610131Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1610131Type message, length delimited. Does not implicitly {@link game1610131Type.update1610131Type.verify|verify} messages.
             * @param message update1610131Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610131Type.Iupdate1610131Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1610131Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1610131Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610131Type.update1610131Type;

            /**
             * Decodes an update1610131Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1610131Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610131Type.update1610131Type;

            /**
             * Verifies an update1610131Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1610131Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1610131Type
             */
            public static fromObject(object: { [k: string]: any }): game1610131Type.update1610131Type;

            /**
             * Creates a plain object from an update1610131Type message. Also converts values to other types if specified.
             * @param message update1610131Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610131Type.update1610131Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1610131Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1610147Type. */
    export class game1610147Type implements Igame1610147Type {

        /**
         * Constructs a new game1610147Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1610147Type);

        /** game1610147Type data. */
        public data?: (game1610147Type.Idata1610147Type | null);

        /** game1610147Type update. */
        public update: game1610147Type.Iupdate1610147Type[];

        /**
         * Creates a new game1610147Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1610147Type instance
         */
        public static create(properties?: Igame1610147Type): game1610147Type;

        /**
         * Encodes the specified game1610147Type message. Does not implicitly {@link game1610147Type.verify|verify} messages.
         * @param message game1610147Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1610147Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1610147Type message, length delimited. Does not implicitly {@link game1610147Type.verify|verify} messages.
         * @param message game1610147Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1610147Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1610147Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1610147Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610147Type;

        /**
         * Decodes a game1610147Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1610147Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610147Type;

        /**
         * Verifies a game1610147Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1610147Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1610147Type
         */
        public static fromObject(object: { [k: string]: any }): game1610147Type;

        /**
         * Creates a plain object from a game1610147Type message. Also converts values to other types if specified.
         * @param message game1610147Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1610147Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1610147Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1610147Type {

        /** Properties of a data1610147Type. */
        interface Idata1610147Type {

            /** data1610147Type fixedGrid */
            fixedGrid?: (game1610147Type.IGridType[] | null);

            /** data1610147Type newFixedGrid */
            newFixedGrid?: (game1610147Type.IGridType[] | null);
        }

        /** Represents a data1610147Type. */
        class data1610147Type implements Idata1610147Type {

            /**
             * Constructs a new data1610147Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610147Type.Idata1610147Type);

            /** data1610147Type fixedGrid. */
            public fixedGrid: game1610147Type.IGridType[];

            /** data1610147Type newFixedGrid. */
            public newFixedGrid: game1610147Type.IGridType[];

            /**
             * Creates a new data1610147Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1610147Type instance
             */
            public static create(properties?: game1610147Type.Idata1610147Type): game1610147Type.data1610147Type;

            /**
             * Encodes the specified data1610147Type message. Does not implicitly {@link game1610147Type.data1610147Type.verify|verify} messages.
             * @param message data1610147Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610147Type.Idata1610147Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1610147Type message, length delimited. Does not implicitly {@link game1610147Type.data1610147Type.verify|verify} messages.
             * @param message data1610147Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610147Type.Idata1610147Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1610147Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1610147Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610147Type.data1610147Type;

            /**
             * Decodes a data1610147Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1610147Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610147Type.data1610147Type;

            /**
             * Verifies a data1610147Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1610147Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1610147Type
             */
            public static fromObject(object: { [k: string]: any }): game1610147Type.data1610147Type;

            /**
             * Creates a plain object from a data1610147Type message. Also converts values to other types if specified.
             * @param message data1610147Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610147Type.data1610147Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1610147Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1610147Type. */
        interface Iupdate1610147Type {

            /** update1610147Type index */
            index: number;

            /** update1610147Type fixedGrid */
            fixedGrid?: (game1610147Type.IGridType[] | null);

            /** update1610147Type newFixedGrid */
            newFixedGrid?: (game1610147Type.IGridType[] | null);
        }

        /** Represents an update1610147Type. */
        class update1610147Type implements Iupdate1610147Type {

            /**
             * Constructs a new update1610147Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610147Type.Iupdate1610147Type);

            /** update1610147Type index. */
            public index: number;

            /** update1610147Type fixedGrid. */
            public fixedGrid: game1610147Type.IGridType[];

            /** update1610147Type newFixedGrid. */
            public newFixedGrid: game1610147Type.IGridType[];

            /**
             * Creates a new update1610147Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1610147Type instance
             */
            public static create(properties?: game1610147Type.Iupdate1610147Type): game1610147Type.update1610147Type;

            /**
             * Encodes the specified update1610147Type message. Does not implicitly {@link game1610147Type.update1610147Type.verify|verify} messages.
             * @param message update1610147Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610147Type.Iupdate1610147Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1610147Type message, length delimited. Does not implicitly {@link game1610147Type.update1610147Type.verify|verify} messages.
             * @param message update1610147Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610147Type.Iupdate1610147Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1610147Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1610147Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610147Type.update1610147Type;

            /**
             * Decodes an update1610147Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1610147Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610147Type.update1610147Type;

            /**
             * Verifies an update1610147Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1610147Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1610147Type
             */
            public static fromObject(object: { [k: string]: any }): game1610147Type.update1610147Type;

            /**
             * Creates a plain object from an update1610147Type message. Also converts values to other types if specified.
             * @param message update1610147Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610147Type.update1610147Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1610147Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GridType. */
        interface IGridType {

            /** GridType pos */
            pos: number;

            /** GridType elem */
            elem: number;
        }

        /** Represents a GridType. */
        class GridType implements IGridType {

            /**
             * Constructs a new GridType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610147Type.IGridType);

            /** GridType pos. */
            public pos: number;

            /** GridType elem. */
            public elem: number;

            /**
             * Creates a new GridType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GridType instance
             */
            public static create(properties?: game1610147Type.IGridType): game1610147Type.GridType;

            /**
             * Encodes the specified GridType message. Does not implicitly {@link game1610147Type.GridType.verify|verify} messages.
             * @param message GridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610147Type.IGridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GridType message, length delimited. Does not implicitly {@link game1610147Type.GridType.verify|verify} messages.
             * @param message GridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610147Type.IGridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GridType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610147Type.GridType;

            /**
             * Decodes a GridType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610147Type.GridType;

            /**
             * Verifies a GridType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a GridType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GridType
             */
            public static fromObject(object: { [k: string]: any }): game1610147Type.GridType;

            /**
             * Creates a plain object from a GridType message. Also converts values to other types if specified.
             * @param message GridType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610147Type.GridType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GridType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1610159Type. */
    export class game1610159Type implements Igame1610159Type {

        /**
         * Constructs a new game1610159Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1610159Type);

        /** game1610159Type data. */
        public data?: (game1610159Type.Idata1610159Type | null);

        /** game1610159Type update. */
        public update: game1610159Type.Iupdate1610159Type[];

        /**
         * Creates a new game1610159Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1610159Type instance
         */
        public static create(properties?: Igame1610159Type): game1610159Type;

        /**
         * Encodes the specified game1610159Type message. Does not implicitly {@link game1610159Type.verify|verify} messages.
         * @param message game1610159Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1610159Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1610159Type message, length delimited. Does not implicitly {@link game1610159Type.verify|verify} messages.
         * @param message game1610159Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1610159Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1610159Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1610159Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610159Type;

        /**
         * Decodes a game1610159Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1610159Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610159Type;

        /**
         * Verifies a game1610159Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1610159Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1610159Type
         */
        public static fromObject(object: { [k: string]: any }): game1610159Type;

        /**
         * Creates a plain object from a game1610159Type message. Also converts values to other types if specified.
         * @param message game1610159Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1610159Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1610159Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1610159Type {

        /** Properties of a data1610159Type. */
        interface Idata1610159Type {

            /** data1610159Type accNum */
            accNum: number;
        }

        /** Represents a data1610159Type. */
        class data1610159Type implements Idata1610159Type {

            /**
             * Constructs a new data1610159Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610159Type.Idata1610159Type);

            /** data1610159Type accNum. */
            public accNum: number;

            /**
             * Creates a new data1610159Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1610159Type instance
             */
            public static create(properties?: game1610159Type.Idata1610159Type): game1610159Type.data1610159Type;

            /**
             * Encodes the specified data1610159Type message. Does not implicitly {@link game1610159Type.data1610159Type.verify|verify} messages.
             * @param message data1610159Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610159Type.Idata1610159Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1610159Type message, length delimited. Does not implicitly {@link game1610159Type.data1610159Type.verify|verify} messages.
             * @param message data1610159Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610159Type.Idata1610159Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1610159Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1610159Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610159Type.data1610159Type;

            /**
             * Decodes a data1610159Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1610159Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610159Type.data1610159Type;

            /**
             * Verifies a data1610159Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1610159Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1610159Type
             */
            public static fromObject(object: { [k: string]: any }): game1610159Type.data1610159Type;

            /**
             * Creates a plain object from a data1610159Type message. Also converts values to other types if specified.
             * @param message data1610159Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610159Type.data1610159Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1610159Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1610159Type. */
        interface Iupdate1610159Type {

            /** update1610159Type index */
            index: number;

            /** update1610159Type accNum */
            accNum: number;
        }

        /** Represents an update1610159Type. */
        class update1610159Type implements Iupdate1610159Type {

            /**
             * Constructs a new update1610159Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610159Type.Iupdate1610159Type);

            /** update1610159Type index. */
            public index: number;

            /** update1610159Type accNum. */
            public accNum: number;

            /**
             * Creates a new update1610159Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1610159Type instance
             */
            public static create(properties?: game1610159Type.Iupdate1610159Type): game1610159Type.update1610159Type;

            /**
             * Encodes the specified update1610159Type message. Does not implicitly {@link game1610159Type.update1610159Type.verify|verify} messages.
             * @param message update1610159Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610159Type.Iupdate1610159Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1610159Type message, length delimited. Does not implicitly {@link game1610159Type.update1610159Type.verify|verify} messages.
             * @param message update1610159Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610159Type.Iupdate1610159Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1610159Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1610159Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610159Type.update1610159Type;

            /**
             * Decodes an update1610159Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1610159Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610159Type.update1610159Type;

            /**
             * Verifies an update1610159Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1610159Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1610159Type
             */
            public static fromObject(object: { [k: string]: any }): game1610159Type.update1610159Type;

            /**
             * Creates a plain object from an update1610159Type message. Also converts values to other types if specified.
             * @param message update1610159Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610159Type.update1610159Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1610159Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1610166Type. */
    export class game1610166Type implements Igame1610166Type {

        /**
         * Constructs a new game1610166Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1610166Type);

        /** game1610166Type data. */
        public data?: (game1610166Type.Idata1610166Type | null);

        /** game1610166Type update. */
        public update: game1610166Type.Iupdate1610166Type[];

        /**
         * Creates a new game1610166Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1610166Type instance
         */
        public static create(properties?: Igame1610166Type): game1610166Type;

        /**
         * Encodes the specified game1610166Type message. Does not implicitly {@link game1610166Type.verify|verify} messages.
         * @param message game1610166Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1610166Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1610166Type message, length delimited. Does not implicitly {@link game1610166Type.verify|verify} messages.
         * @param message game1610166Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1610166Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1610166Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1610166Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610166Type;

        /**
         * Decodes a game1610166Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1610166Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610166Type;

        /**
         * Verifies a game1610166Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1610166Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1610166Type
         */
        public static fromObject(object: { [k: string]: any }): game1610166Type;

        /**
         * Creates a plain object from a game1610166Type message. Also converts values to other types if specified.
         * @param message game1610166Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1610166Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1610166Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1610166Type {

        /** Properties of a data1610166Type. */
        interface Idata1610166Type {

            /** data1610166Type collectList */
            collectList?: (game1610166Type.IcollectTaskType[] | null);

            /** data1610166Type modifyList */
            modifyList?: (game1610166Type.IcollectTaskType[] | null);
        }

        /** Represents a data1610166Type. */
        class data1610166Type implements Idata1610166Type {

            /**
             * Constructs a new data1610166Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610166Type.Idata1610166Type);

            /** data1610166Type collectList. */
            public collectList: game1610166Type.IcollectTaskType[];

            /** data1610166Type modifyList. */
            public modifyList: game1610166Type.IcollectTaskType[];

            /**
             * Creates a new data1610166Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1610166Type instance
             */
            public static create(properties?: game1610166Type.Idata1610166Type): game1610166Type.data1610166Type;

            /**
             * Encodes the specified data1610166Type message. Does not implicitly {@link game1610166Type.data1610166Type.verify|verify} messages.
             * @param message data1610166Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610166Type.Idata1610166Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1610166Type message, length delimited. Does not implicitly {@link game1610166Type.data1610166Type.verify|verify} messages.
             * @param message data1610166Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610166Type.Idata1610166Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1610166Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1610166Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610166Type.data1610166Type;

            /**
             * Decodes a data1610166Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1610166Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610166Type.data1610166Type;

            /**
             * Verifies a data1610166Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1610166Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1610166Type
             */
            public static fromObject(object: { [k: string]: any }): game1610166Type.data1610166Type;

            /**
             * Creates a plain object from a data1610166Type message. Also converts values to other types if specified.
             * @param message data1610166Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610166Type.data1610166Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1610166Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1610166Type. */
        interface Iupdate1610166Type {

            /** update1610166Type index */
            index: number;

            /** update1610166Type collectList */
            collectList?: (game1610166Type.IcollectTaskType[] | null);

            /** update1610166Type modifyList */
            modifyList?: (game1610166Type.IcollectTaskType[] | null);
        }

        /** Represents an update1610166Type. */
        class update1610166Type implements Iupdate1610166Type {

            /**
             * Constructs a new update1610166Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610166Type.Iupdate1610166Type);

            /** update1610166Type index. */
            public index: number;

            /** update1610166Type collectList. */
            public collectList: game1610166Type.IcollectTaskType[];

            /** update1610166Type modifyList. */
            public modifyList: game1610166Type.IcollectTaskType[];

            /**
             * Creates a new update1610166Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1610166Type instance
             */
            public static create(properties?: game1610166Type.Iupdate1610166Type): game1610166Type.update1610166Type;

            /**
             * Encodes the specified update1610166Type message. Does not implicitly {@link game1610166Type.update1610166Type.verify|verify} messages.
             * @param message update1610166Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610166Type.Iupdate1610166Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1610166Type message, length delimited. Does not implicitly {@link game1610166Type.update1610166Type.verify|verify} messages.
             * @param message update1610166Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610166Type.Iupdate1610166Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1610166Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1610166Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610166Type.update1610166Type;

            /**
             * Decodes an update1610166Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1610166Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610166Type.update1610166Type;

            /**
             * Verifies an update1610166Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1610166Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1610166Type
             */
            public static fromObject(object: { [k: string]: any }): game1610166Type.update1610166Type;

            /**
             * Creates a plain object from an update1610166Type message. Also converts values to other types if specified.
             * @param message update1610166Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610166Type.update1610166Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1610166Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a collectTaskType. */
        interface IcollectTaskType {

            /** collectTaskType elem */
            elem: number;

            /** collectTaskType num */
            num: number;
        }

        /** Represents a collectTaskType. */
        class collectTaskType implements IcollectTaskType {

            /**
             * Constructs a new collectTaskType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610166Type.IcollectTaskType);

            /** collectTaskType elem. */
            public elem: number;

            /** collectTaskType num. */
            public num: number;

            /**
             * Creates a new collectTaskType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns collectTaskType instance
             */
            public static create(properties?: game1610166Type.IcollectTaskType): game1610166Type.collectTaskType;

            /**
             * Encodes the specified collectTaskType message. Does not implicitly {@link game1610166Type.collectTaskType.verify|verify} messages.
             * @param message collectTaskType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610166Type.IcollectTaskType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified collectTaskType message, length delimited. Does not implicitly {@link game1610166Type.collectTaskType.verify|verify} messages.
             * @param message collectTaskType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610166Type.IcollectTaskType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a collectTaskType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns collectTaskType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610166Type.collectTaskType;

            /**
             * Decodes a collectTaskType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns collectTaskType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610166Type.collectTaskType;

            /**
             * Verifies a collectTaskType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a collectTaskType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns collectTaskType
             */
            public static fromObject(object: { [k: string]: any }): game1610166Type.collectTaskType;

            /**
             * Creates a plain object from a collectTaskType message. Also converts values to other types if specified.
             * @param message collectTaskType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610166Type.collectTaskType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this collectTaskType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1610170Type. */
    export class game1610170Type implements Igame1610170Type {

        /**
         * Constructs a new game1610170Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1610170Type);

        /** game1610170Type data. */
        public data?: (game1610170Type.Idata1610170Type | null);

        /** game1610170Type update. */
        public update: game1610170Type.Iupdate1610170Type[];

        /**
         * Creates a new game1610170Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1610170Type instance
         */
        public static create(properties?: Igame1610170Type): game1610170Type;

        /**
         * Encodes the specified game1610170Type message. Does not implicitly {@link game1610170Type.verify|verify} messages.
         * @param message game1610170Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1610170Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1610170Type message, length delimited. Does not implicitly {@link game1610170Type.verify|verify} messages.
         * @param message game1610170Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1610170Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1610170Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1610170Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610170Type;

        /**
         * Decodes a game1610170Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1610170Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610170Type;

        /**
         * Verifies a game1610170Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1610170Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1610170Type
         */
        public static fromObject(object: { [k: string]: any }): game1610170Type;

        /**
         * Creates a plain object from a game1610170Type message. Also converts values to other types if specified.
         * @param message game1610170Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1610170Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1610170Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1610170Type {

        /** Properties of a data1610170Type. */
        interface Idata1610170Type {

            /** data1610170Type remainGrid */
            remainGrid?: (game1610170Type.IGridType[] | null);

            /** data1610170Type flight */
            flight?: (game1610170Type.IflightType[] | null);
        }

        /** Represents a data1610170Type. */
        class data1610170Type implements Idata1610170Type {

            /**
             * Constructs a new data1610170Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610170Type.Idata1610170Type);

            /** data1610170Type remainGrid. */
            public remainGrid: game1610170Type.IGridType[];

            /** data1610170Type flight. */
            public flight: game1610170Type.IflightType[];

            /**
             * Creates a new data1610170Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1610170Type instance
             */
            public static create(properties?: game1610170Type.Idata1610170Type): game1610170Type.data1610170Type;

            /**
             * Encodes the specified data1610170Type message. Does not implicitly {@link game1610170Type.data1610170Type.verify|verify} messages.
             * @param message data1610170Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610170Type.Idata1610170Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1610170Type message, length delimited. Does not implicitly {@link game1610170Type.data1610170Type.verify|verify} messages.
             * @param message data1610170Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610170Type.Idata1610170Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1610170Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1610170Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610170Type.data1610170Type;

            /**
             * Decodes a data1610170Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1610170Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610170Type.data1610170Type;

            /**
             * Verifies a data1610170Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1610170Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1610170Type
             */
            public static fromObject(object: { [k: string]: any }): game1610170Type.data1610170Type;

            /**
             * Creates a plain object from a data1610170Type message. Also converts values to other types if specified.
             * @param message data1610170Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610170Type.data1610170Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1610170Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1610170Type. */
        interface Iupdate1610170Type {

            /** update1610170Type index */
            index: number;

            /** update1610170Type remainGrid */
            remainGrid?: (game1610170Type.IGridType[] | null);

            /** update1610170Type flight */
            flight?: (game1610170Type.IflightType[] | null);
        }

        /** Represents an update1610170Type. */
        class update1610170Type implements Iupdate1610170Type {

            /**
             * Constructs a new update1610170Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610170Type.Iupdate1610170Type);

            /** update1610170Type index. */
            public index: number;

            /** update1610170Type remainGrid. */
            public remainGrid: game1610170Type.IGridType[];

            /** update1610170Type flight. */
            public flight: game1610170Type.IflightType[];

            /**
             * Creates a new update1610170Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1610170Type instance
             */
            public static create(properties?: game1610170Type.Iupdate1610170Type): game1610170Type.update1610170Type;

            /**
             * Encodes the specified update1610170Type message. Does not implicitly {@link game1610170Type.update1610170Type.verify|verify} messages.
             * @param message update1610170Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610170Type.Iupdate1610170Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1610170Type message, length delimited. Does not implicitly {@link game1610170Type.update1610170Type.verify|verify} messages.
             * @param message update1610170Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610170Type.Iupdate1610170Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1610170Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1610170Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610170Type.update1610170Type;

            /**
             * Decodes an update1610170Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1610170Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610170Type.update1610170Type;

            /**
             * Verifies an update1610170Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1610170Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1610170Type
             */
            public static fromObject(object: { [k: string]: any }): game1610170Type.update1610170Type;

            /**
             * Creates a plain object from an update1610170Type message. Also converts values to other types if specified.
             * @param message update1610170Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610170Type.update1610170Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1610170Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GridType. */
        interface IGridType {

            /** GridType pos */
            pos: number;

            /** GridType elem */
            elem: number;
        }

        /** Represents a GridType. */
        class GridType implements IGridType {

            /**
             * Constructs a new GridType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610170Type.IGridType);

            /** GridType pos. */
            public pos: number;

            /** GridType elem. */
            public elem: number;

            /**
             * Creates a new GridType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GridType instance
             */
            public static create(properties?: game1610170Type.IGridType): game1610170Type.GridType;

            /**
             * Encodes the specified GridType message. Does not implicitly {@link game1610170Type.GridType.verify|verify} messages.
             * @param message GridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610170Type.IGridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GridType message, length delimited. Does not implicitly {@link game1610170Type.GridType.verify|verify} messages.
             * @param message GridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610170Type.IGridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GridType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610170Type.GridType;

            /**
             * Decodes a GridType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610170Type.GridType;

            /**
             * Verifies a GridType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a GridType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GridType
             */
            public static fromObject(object: { [k: string]: any }): game1610170Type.GridType;

            /**
             * Creates a plain object from a GridType message. Also converts values to other types if specified.
             * @param message GridType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610170Type.GridType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GridType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a flightType. */
        interface IflightType {

            /** flightType attackPos */
            attackPos: number;

            /** flightType defendPos */
            defendPos: number;

            /** flightType repel */
            repel?: (number[] | null);
        }

        /** Represents a flightType. */
        class flightType implements IflightType {

            /**
             * Constructs a new flightType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610170Type.IflightType);

            /** flightType attackPos. */
            public attackPos: number;

            /** flightType defendPos. */
            public defendPos: number;

            /** flightType repel. */
            public repel: number[];

            /**
             * Creates a new flightType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns flightType instance
             */
            public static create(properties?: game1610170Type.IflightType): game1610170Type.flightType;

            /**
             * Encodes the specified flightType message. Does not implicitly {@link game1610170Type.flightType.verify|verify} messages.
             * @param message flightType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610170Type.IflightType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified flightType message, length delimited. Does not implicitly {@link game1610170Type.flightType.verify|verify} messages.
             * @param message flightType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610170Type.IflightType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a flightType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns flightType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610170Type.flightType;

            /**
             * Decodes a flightType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns flightType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610170Type.flightType;

            /**
             * Verifies a flightType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a flightType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns flightType
             */
            public static fromObject(object: { [k: string]: any }): game1610170Type.flightType;

            /**
             * Creates a plain object from a flightType message. Also converts values to other types if specified.
             * @param message flightType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610170Type.flightType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this flightType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1610173Type. */
    export class game1610173Type implements Igame1610173Type {

        /**
         * Constructs a new game1610173Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1610173Type);

        /** game1610173Type data. */
        public data?: (game1610173Type.Idata1610173Type | null);

        /** game1610173Type update. */
        public update: game1610173Type.Iupdate1610173Type[];

        /**
         * Creates a new game1610173Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1610173Type instance
         */
        public static create(properties?: Igame1610173Type): game1610173Type;

        /**
         * Encodes the specified game1610173Type message. Does not implicitly {@link game1610173Type.verify|verify} messages.
         * @param message game1610173Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1610173Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1610173Type message, length delimited. Does not implicitly {@link game1610173Type.verify|verify} messages.
         * @param message game1610173Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1610173Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1610173Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1610173Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610173Type;

        /**
         * Decodes a game1610173Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1610173Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610173Type;

        /**
         * Verifies a game1610173Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1610173Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1610173Type
         */
        public static fromObject(object: { [k: string]: any }): game1610173Type;

        /**
         * Creates a plain object from a game1610173Type message. Also converts values to other types if specified.
         * @param message game1610173Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1610173Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1610173Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1610173Type {

        /** Properties of a data1610173Type. */
        interface Idata1610173Type {

            /** data1610173Type fixedGrid */
            fixedGrid?: (game1610173Type.IGridType[] | null);
        }

        /** Represents a data1610173Type. */
        class data1610173Type implements Idata1610173Type {

            /**
             * Constructs a new data1610173Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610173Type.Idata1610173Type);

            /** data1610173Type fixedGrid. */
            public fixedGrid: game1610173Type.IGridType[];

            /**
             * Creates a new data1610173Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1610173Type instance
             */
            public static create(properties?: game1610173Type.Idata1610173Type): game1610173Type.data1610173Type;

            /**
             * Encodes the specified data1610173Type message. Does not implicitly {@link game1610173Type.data1610173Type.verify|verify} messages.
             * @param message data1610173Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610173Type.Idata1610173Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1610173Type message, length delimited. Does not implicitly {@link game1610173Type.data1610173Type.verify|verify} messages.
             * @param message data1610173Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610173Type.Idata1610173Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1610173Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1610173Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610173Type.data1610173Type;

            /**
             * Decodes a data1610173Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1610173Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610173Type.data1610173Type;

            /**
             * Verifies a data1610173Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1610173Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1610173Type
             */
            public static fromObject(object: { [k: string]: any }): game1610173Type.data1610173Type;

            /**
             * Creates a plain object from a data1610173Type message. Also converts values to other types if specified.
             * @param message data1610173Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610173Type.data1610173Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1610173Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1610173Type. */
        interface Iupdate1610173Type {

            /** update1610173Type index */
            index: number;

            /** update1610173Type fixedGrid */
            fixedGrid?: (game1610173Type.IGridType[] | null);
        }

        /** Represents an update1610173Type. */
        class update1610173Type implements Iupdate1610173Type {

            /**
             * Constructs a new update1610173Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610173Type.Iupdate1610173Type);

            /** update1610173Type index. */
            public index: number;

            /** update1610173Type fixedGrid. */
            public fixedGrid: game1610173Type.IGridType[];

            /**
             * Creates a new update1610173Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1610173Type instance
             */
            public static create(properties?: game1610173Type.Iupdate1610173Type): game1610173Type.update1610173Type;

            /**
             * Encodes the specified update1610173Type message. Does not implicitly {@link game1610173Type.update1610173Type.verify|verify} messages.
             * @param message update1610173Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610173Type.Iupdate1610173Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1610173Type message, length delimited. Does not implicitly {@link game1610173Type.update1610173Type.verify|verify} messages.
             * @param message update1610173Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610173Type.Iupdate1610173Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1610173Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1610173Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610173Type.update1610173Type;

            /**
             * Decodes an update1610173Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1610173Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610173Type.update1610173Type;

            /**
             * Verifies an update1610173Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1610173Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1610173Type
             */
            public static fromObject(object: { [k: string]: any }): game1610173Type.update1610173Type;

            /**
             * Creates a plain object from an update1610173Type message. Also converts values to other types if specified.
             * @param message update1610173Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610173Type.update1610173Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1610173Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GridType. */
        interface IGridType {

            /** GridType pos */
            pos: number;

            /** GridType elem */
            elem: number;
        }

        /** Represents a GridType. */
        class GridType implements IGridType {

            /**
             * Constructs a new GridType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1610173Type.IGridType);

            /** GridType pos. */
            public pos: number;

            /** GridType elem. */
            public elem: number;

            /**
             * Creates a new GridType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GridType instance
             */
            public static create(properties?: game1610173Type.IGridType): game1610173Type.GridType;

            /**
             * Encodes the specified GridType message. Does not implicitly {@link game1610173Type.GridType.verify|verify} messages.
             * @param message GridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1610173Type.IGridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GridType message, length delimited. Does not implicitly {@link game1610173Type.GridType.verify|verify} messages.
             * @param message GridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1610173Type.IGridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GridType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1610173Type.GridType;

            /**
             * Decodes a GridType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1610173Type.GridType;

            /**
             * Verifies a GridType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a GridType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GridType
             */
            public static fromObject(object: { [k: string]: any }): game1610173Type.GridType;

            /**
             * Creates a plain object from a GridType message. Also converts values to other types if specified.
             * @param message GridType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1610173Type.GridType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GridType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1710003Type. */
    export class game1710003Type implements Igame1710003Type {

        /**
         * Constructs a new game1710003Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1710003Type);

        /** game1710003Type data. */
        public data?: (game1710003Type.Idata1710003Type | null);

        /** game1710003Type update. */
        public update: game1710003Type.Iupdate1710003Type[];

        /**
         * Creates a new game1710003Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1710003Type instance
         */
        public static create(properties?: Igame1710003Type): game1710003Type;

        /**
         * Encodes the specified game1710003Type message. Does not implicitly {@link game1710003Type.verify|verify} messages.
         * @param message game1710003Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1710003Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1710003Type message, length delimited. Does not implicitly {@link game1710003Type.verify|verify} messages.
         * @param message game1710003Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1710003Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1710003Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1710003Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1710003Type;

        /**
         * Decodes a game1710003Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1710003Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1710003Type;

        /**
         * Verifies a game1710003Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1710003Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1710003Type
         */
        public static fromObject(object: { [k: string]: any }): game1710003Type;

        /**
         * Creates a plain object from a game1710003Type message. Also converts values to other types if specified.
         * @param message game1710003Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1710003Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1710003Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1710003Type {

        /** Properties of a data1710003Type. */
        interface Idata1710003Type {

            /** data1710003Type columnList */
            columnList?: (number[] | null);
        }

        /** Represents a data1710003Type. */
        class data1710003Type implements Idata1710003Type {

            /**
             * Constructs a new data1710003Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1710003Type.Idata1710003Type);

            /** data1710003Type columnList. */
            public columnList: number[];

            /**
             * Creates a new data1710003Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1710003Type instance
             */
            public static create(properties?: game1710003Type.Idata1710003Type): game1710003Type.data1710003Type;

            /**
             * Encodes the specified data1710003Type message. Does not implicitly {@link game1710003Type.data1710003Type.verify|verify} messages.
             * @param message data1710003Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1710003Type.Idata1710003Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1710003Type message, length delimited. Does not implicitly {@link game1710003Type.data1710003Type.verify|verify} messages.
             * @param message data1710003Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1710003Type.Idata1710003Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1710003Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1710003Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1710003Type.data1710003Type;

            /**
             * Decodes a data1710003Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1710003Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1710003Type.data1710003Type;

            /**
             * Verifies a data1710003Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1710003Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1710003Type
             */
            public static fromObject(object: { [k: string]: any }): game1710003Type.data1710003Type;

            /**
             * Creates a plain object from a data1710003Type message. Also converts values to other types if specified.
             * @param message data1710003Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1710003Type.data1710003Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1710003Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1710003Type. */
        interface Iupdate1710003Type {

            /** update1710003Type index */
            index: number;

            /** update1710003Type columnList */
            columnList?: (number[] | null);
        }

        /** Represents an update1710003Type. */
        class update1710003Type implements Iupdate1710003Type {

            /**
             * Constructs a new update1710003Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1710003Type.Iupdate1710003Type);

            /** update1710003Type index. */
            public index: number;

            /** update1710003Type columnList. */
            public columnList: number[];

            /**
             * Creates a new update1710003Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1710003Type instance
             */
            public static create(properties?: game1710003Type.Iupdate1710003Type): game1710003Type.update1710003Type;

            /**
             * Encodes the specified update1710003Type message. Does not implicitly {@link game1710003Type.update1710003Type.verify|verify} messages.
             * @param message update1710003Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1710003Type.Iupdate1710003Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1710003Type message, length delimited. Does not implicitly {@link game1710003Type.update1710003Type.verify|verify} messages.
             * @param message update1710003Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1710003Type.Iupdate1710003Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1710003Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1710003Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1710003Type.update1710003Type;

            /**
             * Decodes an update1710003Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1710003Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1710003Type.update1710003Type;

            /**
             * Verifies an update1710003Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1710003Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1710003Type
             */
            public static fromObject(object: { [k: string]: any }): game1710003Type.update1710003Type;

            /**
             * Creates a plain object from an update1710003Type message. Also converts values to other types if specified.
             * @param message update1710003Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1710003Type.update1710003Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1710003Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1710020Type. */
    export class game1710020Type implements Igame1710020Type {

        /**
         * Constructs a new game1710020Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1710020Type);

        /** game1710020Type data. */
        public data?: (game1710020Type.Idata1710020Type | null);

        /** game1710020Type update. */
        public update: game1710020Type.Iupdate1710020Type[];

        /**
         * Creates a new game1710020Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1710020Type instance
         */
        public static create(properties?: Igame1710020Type): game1710020Type;

        /**
         * Encodes the specified game1710020Type message. Does not implicitly {@link game1710020Type.verify|verify} messages.
         * @param message game1710020Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1710020Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1710020Type message, length delimited. Does not implicitly {@link game1710020Type.verify|verify} messages.
         * @param message game1710020Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1710020Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1710020Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1710020Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1710020Type;

        /**
         * Decodes a game1710020Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1710020Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1710020Type;

        /**
         * Verifies a game1710020Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1710020Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1710020Type
         */
        public static fromObject(object: { [k: string]: any }): game1710020Type;

        /**
         * Creates a plain object from a game1710020Type message. Also converts values to other types if specified.
         * @param message game1710020Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1710020Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1710020Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1710020Type {

        /** Properties of a data1710020Type. */
        interface Idata1710020Type {

            /** data1710020Type goldTurnGrade */
            goldTurnGrade: (number | Long);

            /** data1710020Type posRewardList */
            posRewardList?: (game1710020Type.IposRewardType[] | null);
        }

        /** Represents a data1710020Type. */
        class data1710020Type implements Idata1710020Type {

            /**
             * Constructs a new data1710020Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1710020Type.Idata1710020Type);

            /** data1710020Type goldTurnGrade. */
            public goldTurnGrade: (number | Long);

            /** data1710020Type posRewardList. */
            public posRewardList: game1710020Type.IposRewardType[];

            /**
             * Creates a new data1710020Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1710020Type instance
             */
            public static create(properties?: game1710020Type.Idata1710020Type): game1710020Type.data1710020Type;

            /**
             * Encodes the specified data1710020Type message. Does not implicitly {@link game1710020Type.data1710020Type.verify|verify} messages.
             * @param message data1710020Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1710020Type.Idata1710020Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1710020Type message, length delimited. Does not implicitly {@link game1710020Type.data1710020Type.verify|verify} messages.
             * @param message data1710020Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1710020Type.Idata1710020Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1710020Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1710020Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1710020Type.data1710020Type;

            /**
             * Decodes a data1710020Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1710020Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1710020Type.data1710020Type;

            /**
             * Verifies a data1710020Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1710020Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1710020Type
             */
            public static fromObject(object: { [k: string]: any }): game1710020Type.data1710020Type;

            /**
             * Creates a plain object from a data1710020Type message. Also converts values to other types if specified.
             * @param message data1710020Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1710020Type.data1710020Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1710020Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1710020Type. */
        interface Iupdate1710020Type {

            /** update1710020Type index */
            index: number;

            /** update1710020Type goldTurnGrade */
            goldTurnGrade: (number | Long);

            /** update1710020Type posRewardList */
            posRewardList?: (game1710020Type.IposRewardType[] | null);
        }

        /** Represents an update1710020Type. */
        class update1710020Type implements Iupdate1710020Type {

            /**
             * Constructs a new update1710020Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1710020Type.Iupdate1710020Type);

            /** update1710020Type index. */
            public index: number;

            /** update1710020Type goldTurnGrade. */
            public goldTurnGrade: (number | Long);

            /** update1710020Type posRewardList. */
            public posRewardList: game1710020Type.IposRewardType[];

            /**
             * Creates a new update1710020Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1710020Type instance
             */
            public static create(properties?: game1710020Type.Iupdate1710020Type): game1710020Type.update1710020Type;

            /**
             * Encodes the specified update1710020Type message. Does not implicitly {@link game1710020Type.update1710020Type.verify|verify} messages.
             * @param message update1710020Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1710020Type.Iupdate1710020Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1710020Type message, length delimited. Does not implicitly {@link game1710020Type.update1710020Type.verify|verify} messages.
             * @param message update1710020Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1710020Type.Iupdate1710020Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1710020Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1710020Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1710020Type.update1710020Type;

            /**
             * Decodes an update1710020Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1710020Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1710020Type.update1710020Type;

            /**
             * Verifies an update1710020Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1710020Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1710020Type
             */
            public static fromObject(object: { [k: string]: any }): game1710020Type.update1710020Type;

            /**
             * Creates a plain object from an update1710020Type message. Also converts values to other types if specified.
             * @param message update1710020Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1710020Type.update1710020Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1710020Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a posRewardType. */
        interface IposRewardType {

            /** posRewardType pos */
            pos: number;

            /** posRewardType reward */
            reward: (number | Long);
        }

        /** Represents a posRewardType. */
        class posRewardType implements IposRewardType {

            /**
             * Constructs a new posRewardType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1710020Type.IposRewardType);

            /** posRewardType pos. */
            public pos: number;

            /** posRewardType reward. */
            public reward: (number | Long);

            /**
             * Creates a new posRewardType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns posRewardType instance
             */
            public static create(properties?: game1710020Type.IposRewardType): game1710020Type.posRewardType;

            /**
             * Encodes the specified posRewardType message. Does not implicitly {@link game1710020Type.posRewardType.verify|verify} messages.
             * @param message posRewardType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1710020Type.IposRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified posRewardType message, length delimited. Does not implicitly {@link game1710020Type.posRewardType.verify|verify} messages.
             * @param message posRewardType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1710020Type.IposRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a posRewardType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns posRewardType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1710020Type.posRewardType;

            /**
             * Decodes a posRewardType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns posRewardType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1710020Type.posRewardType;

            /**
             * Verifies a posRewardType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a posRewardType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns posRewardType
             */
            public static fromObject(object: { [k: string]: any }): game1710020Type.posRewardType;

            /**
             * Creates a plain object from a posRewardType message. Also converts values to other types if specified.
             * @param message posRewardType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1710020Type.posRewardType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this posRewardType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1710021Type. */
    export class game1710021Type implements Igame1710021Type {

        /**
         * Constructs a new game1710021Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1710021Type);

        /** game1710021Type data. */
        public data?: (game1710021Type.Idata1710021Type | null);

        /** game1710021Type update. */
        public update: game1710021Type.Iupdate1710021Type[];

        /**
         * Creates a new game1710021Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1710021Type instance
         */
        public static create(properties?: Igame1710021Type): game1710021Type;

        /**
         * Encodes the specified game1710021Type message. Does not implicitly {@link game1710021Type.verify|verify} messages.
         * @param message game1710021Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1710021Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1710021Type message, length delimited. Does not implicitly {@link game1710021Type.verify|verify} messages.
         * @param message game1710021Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1710021Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1710021Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1710021Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1710021Type;

        /**
         * Decodes a game1710021Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1710021Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1710021Type;

        /**
         * Verifies a game1710021Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1710021Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1710021Type
         */
        public static fromObject(object: { [k: string]: any }): game1710021Type;

        /**
         * Creates a plain object from a game1710021Type message. Also converts values to other types if specified.
         * @param message game1710021Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1710021Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1710021Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1710021Type {

        /** Properties of a data1710021Type. */
        interface Idata1710021Type {

            /** data1710021Type posRateList */
            posRateList?: (game1710021Type.IposRateListType[] | null);

            /** data1710021Type pToPList */
            pToPList?: (game1710021Type.IpToPListType[] | null);
        }

        /** Represents a data1710021Type. */
        class data1710021Type implements Idata1710021Type {

            /**
             * Constructs a new data1710021Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1710021Type.Idata1710021Type);

            /** data1710021Type posRateList. */
            public posRateList: game1710021Type.IposRateListType[];

            /** data1710021Type pToPList. */
            public pToPList: game1710021Type.IpToPListType[];

            /**
             * Creates a new data1710021Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1710021Type instance
             */
            public static create(properties?: game1710021Type.Idata1710021Type): game1710021Type.data1710021Type;

            /**
             * Encodes the specified data1710021Type message. Does not implicitly {@link game1710021Type.data1710021Type.verify|verify} messages.
             * @param message data1710021Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1710021Type.Idata1710021Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1710021Type message, length delimited. Does not implicitly {@link game1710021Type.data1710021Type.verify|verify} messages.
             * @param message data1710021Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1710021Type.Idata1710021Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1710021Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1710021Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1710021Type.data1710021Type;

            /**
             * Decodes a data1710021Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1710021Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1710021Type.data1710021Type;

            /**
             * Verifies a data1710021Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1710021Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1710021Type
             */
            public static fromObject(object: { [k: string]: any }): game1710021Type.data1710021Type;

            /**
             * Creates a plain object from a data1710021Type message. Also converts values to other types if specified.
             * @param message data1710021Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1710021Type.data1710021Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1710021Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1710021Type. */
        interface Iupdate1710021Type {

            /** update1710021Type index */
            index: number;

            /** update1710021Type posRateList */
            posRateList?: (game1710021Type.IposRateListType[] | null);

            /** update1710021Type pToPList */
            pToPList?: (game1710021Type.IpToPListType[] | null);
        }

        /** Represents an update1710021Type. */
        class update1710021Type implements Iupdate1710021Type {

            /**
             * Constructs a new update1710021Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1710021Type.Iupdate1710021Type);

            /** update1710021Type index. */
            public index: number;

            /** update1710021Type posRateList. */
            public posRateList: game1710021Type.IposRateListType[];

            /** update1710021Type pToPList. */
            public pToPList: game1710021Type.IpToPListType[];

            /**
             * Creates a new update1710021Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1710021Type instance
             */
            public static create(properties?: game1710021Type.Iupdate1710021Type): game1710021Type.update1710021Type;

            /**
             * Encodes the specified update1710021Type message. Does not implicitly {@link game1710021Type.update1710021Type.verify|verify} messages.
             * @param message update1710021Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1710021Type.Iupdate1710021Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1710021Type message, length delimited. Does not implicitly {@link game1710021Type.update1710021Type.verify|verify} messages.
             * @param message update1710021Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1710021Type.Iupdate1710021Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1710021Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1710021Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1710021Type.update1710021Type;

            /**
             * Decodes an update1710021Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1710021Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1710021Type.update1710021Type;

            /**
             * Verifies an update1710021Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1710021Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1710021Type
             */
            public static fromObject(object: { [k: string]: any }): game1710021Type.update1710021Type;

            /**
             * Creates a plain object from an update1710021Type message. Also converts values to other types if specified.
             * @param message update1710021Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1710021Type.update1710021Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1710021Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a posRateListType. */
        interface IposRateListType {

            /** posRateListType pos */
            pos: number;

            /** posRateListType rate */
            rate: number;
        }

        /** Represents a posRateListType. */
        class posRateListType implements IposRateListType {

            /**
             * Constructs a new posRateListType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1710021Type.IposRateListType);

            /** posRateListType pos. */
            public pos: number;

            /** posRateListType rate. */
            public rate: number;

            /**
             * Creates a new posRateListType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns posRateListType instance
             */
            public static create(properties?: game1710021Type.IposRateListType): game1710021Type.posRateListType;

            /**
             * Encodes the specified posRateListType message. Does not implicitly {@link game1710021Type.posRateListType.verify|verify} messages.
             * @param message posRateListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1710021Type.IposRateListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified posRateListType message, length delimited. Does not implicitly {@link game1710021Type.posRateListType.verify|verify} messages.
             * @param message posRateListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1710021Type.IposRateListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a posRateListType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns posRateListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1710021Type.posRateListType;

            /**
             * Decodes a posRateListType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns posRateListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1710021Type.posRateListType;

            /**
             * Verifies a posRateListType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a posRateListType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns posRateListType
             */
            public static fromObject(object: { [k: string]: any }): game1710021Type.posRateListType;

            /**
             * Creates a plain object from a posRateListType message. Also converts values to other types if specified.
             * @param message posRateListType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1710021Type.posRateListType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this posRateListType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a pToPListType. */
        interface IpToPListType {

            /** pToPListType from */
            from: number;

            /** pToPListType to */
            to: number;
        }

        /** Represents a pToPListType. */
        class pToPListType implements IpToPListType {

            /**
             * Constructs a new pToPListType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1710021Type.IpToPListType);

            /** pToPListType from. */
            public from: number;

            /** pToPListType to. */
            public to: number;

            /**
             * Creates a new pToPListType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns pToPListType instance
             */
            public static create(properties?: game1710021Type.IpToPListType): game1710021Type.pToPListType;

            /**
             * Encodes the specified pToPListType message. Does not implicitly {@link game1710021Type.pToPListType.verify|verify} messages.
             * @param message pToPListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1710021Type.IpToPListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified pToPListType message, length delimited. Does not implicitly {@link game1710021Type.pToPListType.verify|verify} messages.
             * @param message pToPListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1710021Type.IpToPListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a pToPListType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns pToPListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1710021Type.pToPListType;

            /**
             * Decodes a pToPListType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns pToPListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1710021Type.pToPListType;

            /**
             * Verifies a pToPListType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a pToPListType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns pToPListType
             */
            public static fromObject(object: { [k: string]: any }): game1710021Type.pToPListType;

            /**
             * Creates a plain object from a pToPListType message. Also converts values to other types if specified.
             * @param message pToPListType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1710021Type.pToPListType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this pToPListType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1710022Type. */
    export class game1710022Type implements Igame1710022Type {

        /**
         * Constructs a new game1710022Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1710022Type);

        /** game1710022Type data. */
        public data?: (game1710022Type.Idata1710022Type | null);

        /** game1710022Type update. */
        public update: game1710022Type.Iupdate1710022Type[];

        /**
         * Creates a new game1710022Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1710022Type instance
         */
        public static create(properties?: Igame1710022Type): game1710022Type;

        /**
         * Encodes the specified game1710022Type message. Does not implicitly {@link game1710022Type.verify|verify} messages.
         * @param message game1710022Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1710022Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1710022Type message, length delimited. Does not implicitly {@link game1710022Type.verify|verify} messages.
         * @param message game1710022Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1710022Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1710022Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1710022Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1710022Type;

        /**
         * Decodes a game1710022Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1710022Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1710022Type;

        /**
         * Verifies a game1710022Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1710022Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1710022Type
         */
        public static fromObject(object: { [k: string]: any }): game1710022Type;

        /**
         * Creates a plain object from a game1710022Type message. Also converts values to other types if specified.
         * @param message game1710022Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1710022Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1710022Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1710022Type {

        /** Properties of a data1710022Type. */
        interface Idata1710022Type {

            /** data1710022Type colRateReward */
            colRateReward?: (game1710022Type.IcolRateRewardType[] | null);

            /** data1710022Type posAbsorbColRate */
            posAbsorbColRate?: (game1710022Type.IposAbsorbColRateType[] | null);
        }

        /** Represents a data1710022Type. */
        class data1710022Type implements Idata1710022Type {

            /**
             * Constructs a new data1710022Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1710022Type.Idata1710022Type);

            /** data1710022Type colRateReward. */
            public colRateReward: game1710022Type.IcolRateRewardType[];

            /** data1710022Type posAbsorbColRate. */
            public posAbsorbColRate: game1710022Type.IposAbsorbColRateType[];

            /**
             * Creates a new data1710022Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1710022Type instance
             */
            public static create(properties?: game1710022Type.Idata1710022Type): game1710022Type.data1710022Type;

            /**
             * Encodes the specified data1710022Type message. Does not implicitly {@link game1710022Type.data1710022Type.verify|verify} messages.
             * @param message data1710022Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1710022Type.Idata1710022Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1710022Type message, length delimited. Does not implicitly {@link game1710022Type.data1710022Type.verify|verify} messages.
             * @param message data1710022Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1710022Type.Idata1710022Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1710022Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1710022Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1710022Type.data1710022Type;

            /**
             * Decodes a data1710022Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1710022Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1710022Type.data1710022Type;

            /**
             * Verifies a data1710022Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1710022Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1710022Type
             */
            public static fromObject(object: { [k: string]: any }): game1710022Type.data1710022Type;

            /**
             * Creates a plain object from a data1710022Type message. Also converts values to other types if specified.
             * @param message data1710022Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1710022Type.data1710022Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1710022Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1710022Type. */
        interface Iupdate1710022Type {

            /** update1710022Type index */
            index: number;

            /** update1710022Type colRateReward */
            colRateReward?: (game1710022Type.IcolRateRewardType[] | null);

            /** update1710022Type posAbsorbColRate */
            posAbsorbColRate?: (game1710022Type.IposAbsorbColRateType[] | null);
        }

        /** Represents an update1710022Type. */
        class update1710022Type implements Iupdate1710022Type {

            /**
             * Constructs a new update1710022Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1710022Type.Iupdate1710022Type);

            /** update1710022Type index. */
            public index: number;

            /** update1710022Type colRateReward. */
            public colRateReward: game1710022Type.IcolRateRewardType[];

            /** update1710022Type posAbsorbColRate. */
            public posAbsorbColRate: game1710022Type.IposAbsorbColRateType[];

            /**
             * Creates a new update1710022Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1710022Type instance
             */
            public static create(properties?: game1710022Type.Iupdate1710022Type): game1710022Type.update1710022Type;

            /**
             * Encodes the specified update1710022Type message. Does not implicitly {@link game1710022Type.update1710022Type.verify|verify} messages.
             * @param message update1710022Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1710022Type.Iupdate1710022Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1710022Type message, length delimited. Does not implicitly {@link game1710022Type.update1710022Type.verify|verify} messages.
             * @param message update1710022Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1710022Type.Iupdate1710022Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1710022Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1710022Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1710022Type.update1710022Type;

            /**
             * Decodes an update1710022Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1710022Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1710022Type.update1710022Type;

            /**
             * Verifies an update1710022Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1710022Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1710022Type
             */
            public static fromObject(object: { [k: string]: any }): game1710022Type.update1710022Type;

            /**
             * Creates a plain object from an update1710022Type message. Also converts values to other types if specified.
             * @param message update1710022Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1710022Type.update1710022Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1710022Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a colRateRewardType. */
        interface IcolRateRewardType {

            /** colRateRewardType id */
            id: number;

            /** colRateRewardType rateList */
            rateList?: (number[] | null);
        }

        /** Represents a colRateRewardType. */
        class colRateRewardType implements IcolRateRewardType {

            /**
             * Constructs a new colRateRewardType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1710022Type.IcolRateRewardType);

            /** colRateRewardType id. */
            public id: number;

            /** colRateRewardType rateList. */
            public rateList: number[];

            /**
             * Creates a new colRateRewardType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns colRateRewardType instance
             */
            public static create(properties?: game1710022Type.IcolRateRewardType): game1710022Type.colRateRewardType;

            /**
             * Encodes the specified colRateRewardType message. Does not implicitly {@link game1710022Type.colRateRewardType.verify|verify} messages.
             * @param message colRateRewardType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1710022Type.IcolRateRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified colRateRewardType message, length delimited. Does not implicitly {@link game1710022Type.colRateRewardType.verify|verify} messages.
             * @param message colRateRewardType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1710022Type.IcolRateRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a colRateRewardType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns colRateRewardType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1710022Type.colRateRewardType;

            /**
             * Decodes a colRateRewardType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns colRateRewardType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1710022Type.colRateRewardType;

            /**
             * Verifies a colRateRewardType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a colRateRewardType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns colRateRewardType
             */
            public static fromObject(object: { [k: string]: any }): game1710022Type.colRateRewardType;

            /**
             * Creates a plain object from a colRateRewardType message. Also converts values to other types if specified.
             * @param message colRateRewardType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1710022Type.colRateRewardType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this colRateRewardType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a posAbsorbColRateType. */
        interface IposAbsorbColRateType {

            /** posAbsorbColRateType pos */
            pos: number;

            /** posAbsorbColRateType col */
            col: number;

            /** posAbsorbColRateType rewardRate */
            rewardRate: number;
        }

        /** Represents a posAbsorbColRateType. */
        class posAbsorbColRateType implements IposAbsorbColRateType {

            /**
             * Constructs a new posAbsorbColRateType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1710022Type.IposAbsorbColRateType);

            /** posAbsorbColRateType pos. */
            public pos: number;

            /** posAbsorbColRateType col. */
            public col: number;

            /** posAbsorbColRateType rewardRate. */
            public rewardRate: number;

            /**
             * Creates a new posAbsorbColRateType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns posAbsorbColRateType instance
             */
            public static create(properties?: game1710022Type.IposAbsorbColRateType): game1710022Type.posAbsorbColRateType;

            /**
             * Encodes the specified posAbsorbColRateType message. Does not implicitly {@link game1710022Type.posAbsorbColRateType.verify|verify} messages.
             * @param message posAbsorbColRateType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1710022Type.IposAbsorbColRateType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified posAbsorbColRateType message, length delimited. Does not implicitly {@link game1710022Type.posAbsorbColRateType.verify|verify} messages.
             * @param message posAbsorbColRateType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1710022Type.IposAbsorbColRateType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a posAbsorbColRateType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns posAbsorbColRateType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1710022Type.posAbsorbColRateType;

            /**
             * Decodes a posAbsorbColRateType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns posAbsorbColRateType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1710022Type.posAbsorbColRateType;

            /**
             * Verifies a posAbsorbColRateType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a posAbsorbColRateType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns posAbsorbColRateType
             */
            public static fromObject(object: { [k: string]: any }): game1710022Type.posAbsorbColRateType;

            /**
             * Creates a plain object from a posAbsorbColRateType message. Also converts values to other types if specified.
             * @param message posAbsorbColRateType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1710022Type.posAbsorbColRateType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this posAbsorbColRateType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1710029Type. */
    export class game1710029Type implements Igame1710029Type {

        /**
         * Constructs a new game1710029Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1710029Type);

        /** game1710029Type data. */
        public data?: (game1710029Type.Idata1710029Type | null);

        /** game1710029Type update. */
        public update: game1710029Type.Iupdate1710029Type[];

        /**
         * Creates a new game1710029Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1710029Type instance
         */
        public static create(properties?: Igame1710029Type): game1710029Type;

        /**
         * Encodes the specified game1710029Type message. Does not implicitly {@link game1710029Type.verify|verify} messages.
         * @param message game1710029Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1710029Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1710029Type message, length delimited. Does not implicitly {@link game1710029Type.verify|verify} messages.
         * @param message game1710029Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1710029Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1710029Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1710029Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1710029Type;

        /**
         * Decodes a game1710029Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1710029Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1710029Type;

        /**
         * Verifies a game1710029Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1710029Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1710029Type
         */
        public static fromObject(object: { [k: string]: any }): game1710029Type;

        /**
         * Creates a plain object from a game1710029Type message. Also converts values to other types if specified.
         * @param message game1710029Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1710029Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1710029Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1710029Type {

        /** Properties of a data1710029Type. */
        interface Idata1710029Type {

            /** data1710029Type colAttachElem */
            colAttachElem?: (game1710029Type.IcolAttachGridType[] | null);
        }

        /** Represents a data1710029Type. */
        class data1710029Type implements Idata1710029Type {

            /**
             * Constructs a new data1710029Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1710029Type.Idata1710029Type);

            /** data1710029Type colAttachElem. */
            public colAttachElem: game1710029Type.IcolAttachGridType[];

            /**
             * Creates a new data1710029Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1710029Type instance
             */
            public static create(properties?: game1710029Type.Idata1710029Type): game1710029Type.data1710029Type;

            /**
             * Encodes the specified data1710029Type message. Does not implicitly {@link game1710029Type.data1710029Type.verify|verify} messages.
             * @param message data1710029Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1710029Type.Idata1710029Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1710029Type message, length delimited. Does not implicitly {@link game1710029Type.data1710029Type.verify|verify} messages.
             * @param message data1710029Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1710029Type.Idata1710029Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1710029Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1710029Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1710029Type.data1710029Type;

            /**
             * Decodes a data1710029Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1710029Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1710029Type.data1710029Type;

            /**
             * Verifies a data1710029Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1710029Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1710029Type
             */
            public static fromObject(object: { [k: string]: any }): game1710029Type.data1710029Type;

            /**
             * Creates a plain object from a data1710029Type message. Also converts values to other types if specified.
             * @param message data1710029Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1710029Type.data1710029Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1710029Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1710029Type. */
        interface Iupdate1710029Type {

            /** update1710029Type index */
            index: number;

            /** update1710029Type colAttachElem */
            colAttachElem?: (game1710029Type.IcolAttachGridType[] | null);
        }

        /** Represents an update1710029Type. */
        class update1710029Type implements Iupdate1710029Type {

            /**
             * Constructs a new update1710029Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1710029Type.Iupdate1710029Type);

            /** update1710029Type index. */
            public index: number;

            /** update1710029Type colAttachElem. */
            public colAttachElem: game1710029Type.IcolAttachGridType[];

            /**
             * Creates a new update1710029Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1710029Type instance
             */
            public static create(properties?: game1710029Type.Iupdate1710029Type): game1710029Type.update1710029Type;

            /**
             * Encodes the specified update1710029Type message. Does not implicitly {@link game1710029Type.update1710029Type.verify|verify} messages.
             * @param message update1710029Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1710029Type.Iupdate1710029Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1710029Type message, length delimited. Does not implicitly {@link game1710029Type.update1710029Type.verify|verify} messages.
             * @param message update1710029Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1710029Type.Iupdate1710029Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1710029Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1710029Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1710029Type.update1710029Type;

            /**
             * Decodes an update1710029Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1710029Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1710029Type.update1710029Type;

            /**
             * Verifies an update1710029Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1710029Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1710029Type
             */
            public static fromObject(object: { [k: string]: any }): game1710029Type.update1710029Type;

            /**
             * Creates a plain object from an update1710029Type message. Also converts values to other types if specified.
             * @param message update1710029Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1710029Type.update1710029Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1710029Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a colAttachGridType. */
        interface IcolAttachGridType {

            /** colAttachGridType col */
            col: number;

            /** colAttachGridType elem */
            elem: number;
        }

        /** Represents a colAttachGridType. */
        class colAttachGridType implements IcolAttachGridType {

            /**
             * Constructs a new colAttachGridType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1710029Type.IcolAttachGridType);

            /** colAttachGridType col. */
            public col: number;

            /** colAttachGridType elem. */
            public elem: number;

            /**
             * Creates a new colAttachGridType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns colAttachGridType instance
             */
            public static create(properties?: game1710029Type.IcolAttachGridType): game1710029Type.colAttachGridType;

            /**
             * Encodes the specified colAttachGridType message. Does not implicitly {@link game1710029Type.colAttachGridType.verify|verify} messages.
             * @param message colAttachGridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1710029Type.IcolAttachGridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified colAttachGridType message, length delimited. Does not implicitly {@link game1710029Type.colAttachGridType.verify|verify} messages.
             * @param message colAttachGridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1710029Type.IcolAttachGridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a colAttachGridType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns colAttachGridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1710029Type.colAttachGridType;

            /**
             * Decodes a colAttachGridType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns colAttachGridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1710029Type.colAttachGridType;

            /**
             * Verifies a colAttachGridType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a colAttachGridType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns colAttachGridType
             */
            public static fromObject(object: { [k: string]: any }): game1710029Type.colAttachGridType;

            /**
             * Creates a plain object from a colAttachGridType message. Also converts values to other types if specified.
             * @param message colAttachGridType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1710029Type.colAttachGridType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this colAttachGridType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1710035Type. */
    export class game1710035Type implements Igame1710035Type {

        /**
         * Constructs a new game1710035Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1710035Type);

        /** game1710035Type data. */
        public data?: (game1710035Type.Idata1710035Type | null);

        /** game1710035Type update. */
        public update: game1710035Type.Iupdate1710035Type[];

        /**
         * Creates a new game1710035Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1710035Type instance
         */
        public static create(properties?: Igame1710035Type): game1710035Type;

        /**
         * Encodes the specified game1710035Type message. Does not implicitly {@link game1710035Type.verify|verify} messages.
         * @param message game1710035Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1710035Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1710035Type message, length delimited. Does not implicitly {@link game1710035Type.verify|verify} messages.
         * @param message game1710035Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1710035Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1710035Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1710035Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1710035Type;

        /**
         * Decodes a game1710035Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1710035Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1710035Type;

        /**
         * Verifies a game1710035Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1710035Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1710035Type
         */
        public static fromObject(object: { [k: string]: any }): game1710035Type;

        /**
         * Creates a plain object from a game1710035Type message. Also converts values to other types if specified.
         * @param message game1710035Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1710035Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1710035Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1710035Type {

        /** Properties of a data1710035Type. */
        interface Idata1710035Type {

            /** data1710035Type giantGridRewardList */
            giantGridRewardList?: (game1710035Type.IgiantGridRewardListType[] | null);
        }

        /** Represents a data1710035Type. */
        class data1710035Type implements Idata1710035Type {

            /**
             * Constructs a new data1710035Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1710035Type.Idata1710035Type);

            /** data1710035Type giantGridRewardList. */
            public giantGridRewardList: game1710035Type.IgiantGridRewardListType[];

            /**
             * Creates a new data1710035Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1710035Type instance
             */
            public static create(properties?: game1710035Type.Idata1710035Type): game1710035Type.data1710035Type;

            /**
             * Encodes the specified data1710035Type message. Does not implicitly {@link game1710035Type.data1710035Type.verify|verify} messages.
             * @param message data1710035Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1710035Type.Idata1710035Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1710035Type message, length delimited. Does not implicitly {@link game1710035Type.data1710035Type.verify|verify} messages.
             * @param message data1710035Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1710035Type.Idata1710035Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1710035Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1710035Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1710035Type.data1710035Type;

            /**
             * Decodes a data1710035Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1710035Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1710035Type.data1710035Type;

            /**
             * Verifies a data1710035Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1710035Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1710035Type
             */
            public static fromObject(object: { [k: string]: any }): game1710035Type.data1710035Type;

            /**
             * Creates a plain object from a data1710035Type message. Also converts values to other types if specified.
             * @param message data1710035Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1710035Type.data1710035Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1710035Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1710035Type. */
        interface Iupdate1710035Type {

            /** update1710035Type index */
            index: number;

            /** update1710035Type giantGridRewardList */
            giantGridRewardList?: (game1710035Type.IgiantGridRewardListType[] | null);
        }

        /** Represents an update1710035Type. */
        class update1710035Type implements Iupdate1710035Type {

            /**
             * Constructs a new update1710035Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1710035Type.Iupdate1710035Type);

            /** update1710035Type index. */
            public index: number;

            /** update1710035Type giantGridRewardList. */
            public giantGridRewardList: game1710035Type.IgiantGridRewardListType[];

            /**
             * Creates a new update1710035Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1710035Type instance
             */
            public static create(properties?: game1710035Type.Iupdate1710035Type): game1710035Type.update1710035Type;

            /**
             * Encodes the specified update1710035Type message. Does not implicitly {@link game1710035Type.update1710035Type.verify|verify} messages.
             * @param message update1710035Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1710035Type.Iupdate1710035Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1710035Type message, length delimited. Does not implicitly {@link game1710035Type.update1710035Type.verify|verify} messages.
             * @param message update1710035Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1710035Type.Iupdate1710035Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1710035Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1710035Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1710035Type.update1710035Type;

            /**
             * Decodes an update1710035Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1710035Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1710035Type.update1710035Type;

            /**
             * Verifies an update1710035Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1710035Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1710035Type
             */
            public static fromObject(object: { [k: string]: any }): game1710035Type.update1710035Type;

            /**
             * Creates a plain object from an update1710035Type message. Also converts values to other types if specified.
             * @param message update1710035Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1710035Type.update1710035Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1710035Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a giantGridRewardListType. */
        interface IgiantGridRewardListType {

            /** giantGridRewardListType giantGrid */
            giantGrid?: (IgridType[] | null);

            /** giantGridRewardListType rewardCoin */
            rewardCoin: (number | Long);
        }

        /** Represents a giantGridRewardListType. */
        class giantGridRewardListType implements IgiantGridRewardListType {

            /**
             * Constructs a new giantGridRewardListType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1710035Type.IgiantGridRewardListType);

            /** giantGridRewardListType giantGrid. */
            public giantGrid: IgridType[];

            /** giantGridRewardListType rewardCoin. */
            public rewardCoin: (number | Long);

            /**
             * Creates a new giantGridRewardListType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns giantGridRewardListType instance
             */
            public static create(properties?: game1710035Type.IgiantGridRewardListType): game1710035Type.giantGridRewardListType;

            /**
             * Encodes the specified giantGridRewardListType message. Does not implicitly {@link game1710035Type.giantGridRewardListType.verify|verify} messages.
             * @param message giantGridRewardListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1710035Type.IgiantGridRewardListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified giantGridRewardListType message, length delimited. Does not implicitly {@link game1710035Type.giantGridRewardListType.verify|verify} messages.
             * @param message giantGridRewardListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1710035Type.IgiantGridRewardListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a giantGridRewardListType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns giantGridRewardListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1710035Type.giantGridRewardListType;

            /**
             * Decodes a giantGridRewardListType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns giantGridRewardListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1710035Type.giantGridRewardListType;

            /**
             * Verifies a giantGridRewardListType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a giantGridRewardListType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns giantGridRewardListType
             */
            public static fromObject(object: { [k: string]: any }): game1710035Type.giantGridRewardListType;

            /**
             * Creates a plain object from a giantGridRewardListType message. Also converts values to other types if specified.
             * @param message giantGridRewardListType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1710035Type.giantGridRewardListType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this giantGridRewardListType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1710041Type. */
    export class game1710041Type implements Igame1710041Type {

        /**
         * Constructs a new game1710041Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1710041Type);

        /** game1710041Type data. */
        public data?: (game1710041Type.Idata1710041Type | null);

        /** game1710041Type update. */
        public update: game1710041Type.Iupdate1710041Type[];

        /**
         * Creates a new game1710041Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1710041Type instance
         */
        public static create(properties?: Igame1710041Type): game1710041Type;

        /**
         * Encodes the specified game1710041Type message. Does not implicitly {@link game1710041Type.verify|verify} messages.
         * @param message game1710041Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1710041Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1710041Type message, length delimited. Does not implicitly {@link game1710041Type.verify|verify} messages.
         * @param message game1710041Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1710041Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1710041Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1710041Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1710041Type;

        /**
         * Decodes a game1710041Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1710041Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1710041Type;

        /**
         * Verifies a game1710041Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1710041Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1710041Type
         */
        public static fromObject(object: { [k: string]: any }): game1710041Type;

        /**
         * Creates a plain object from a game1710041Type message. Also converts values to other types if specified.
         * @param message game1710041Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1710041Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1710041Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1710041Type {

        /** Properties of a data1710041Type. */
        interface Idata1710041Type {

            /** data1710041Type bubbleList */
            bubbleList?: (game1710041Type.IgiantBubbleType[] | null);

            /** data1710041Type addBubbleList */
            addBubbleList?: (game1710041Type.IgiantBubbleType[] | null);

            /** data1710041Type bubbleReward */
            bubbleReward?: (game1710041Type.IgiantRewardType[] | null);
        }

        /** Represents a data1710041Type. */
        class data1710041Type implements Idata1710041Type {

            /**
             * Constructs a new data1710041Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1710041Type.Idata1710041Type);

            /** data1710041Type bubbleList. */
            public bubbleList: game1710041Type.IgiantBubbleType[];

            /** data1710041Type addBubbleList. */
            public addBubbleList: game1710041Type.IgiantBubbleType[];

            /** data1710041Type bubbleReward. */
            public bubbleReward: game1710041Type.IgiantRewardType[];

            /**
             * Creates a new data1710041Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1710041Type instance
             */
            public static create(properties?: game1710041Type.Idata1710041Type): game1710041Type.data1710041Type;

            /**
             * Encodes the specified data1710041Type message. Does not implicitly {@link game1710041Type.data1710041Type.verify|verify} messages.
             * @param message data1710041Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1710041Type.Idata1710041Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1710041Type message, length delimited. Does not implicitly {@link game1710041Type.data1710041Type.verify|verify} messages.
             * @param message data1710041Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1710041Type.Idata1710041Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1710041Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1710041Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1710041Type.data1710041Type;

            /**
             * Decodes a data1710041Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1710041Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1710041Type.data1710041Type;

            /**
             * Verifies a data1710041Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1710041Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1710041Type
             */
            public static fromObject(object: { [k: string]: any }): game1710041Type.data1710041Type;

            /**
             * Creates a plain object from a data1710041Type message. Also converts values to other types if specified.
             * @param message data1710041Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1710041Type.data1710041Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1710041Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1710041Type. */
        interface Iupdate1710041Type {

            /** update1710041Type index */
            index: number;

            /** update1710041Type bubbleList */
            bubbleList?: (game1710041Type.IgiantBubbleType[] | null);

            /** update1710041Type addBubbleList */
            addBubbleList?: (game1710041Type.IgiantBubbleType[] | null);

            /** update1710041Type bubbleReward */
            bubbleReward?: (game1710041Type.IgiantRewardType[] | null);
        }

        /** Represents an update1710041Type. */
        class update1710041Type implements Iupdate1710041Type {

            /**
             * Constructs a new update1710041Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1710041Type.Iupdate1710041Type);

            /** update1710041Type index. */
            public index: number;

            /** update1710041Type bubbleList. */
            public bubbleList: game1710041Type.IgiantBubbleType[];

            /** update1710041Type addBubbleList. */
            public addBubbleList: game1710041Type.IgiantBubbleType[];

            /** update1710041Type bubbleReward. */
            public bubbleReward: game1710041Type.IgiantRewardType[];

            /**
             * Creates a new update1710041Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1710041Type instance
             */
            public static create(properties?: game1710041Type.Iupdate1710041Type): game1710041Type.update1710041Type;

            /**
             * Encodes the specified update1710041Type message. Does not implicitly {@link game1710041Type.update1710041Type.verify|verify} messages.
             * @param message update1710041Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1710041Type.Iupdate1710041Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1710041Type message, length delimited. Does not implicitly {@link game1710041Type.update1710041Type.verify|verify} messages.
             * @param message update1710041Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1710041Type.Iupdate1710041Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1710041Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1710041Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1710041Type.update1710041Type;

            /**
             * Decodes an update1710041Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1710041Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1710041Type.update1710041Type;

            /**
             * Verifies an update1710041Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1710041Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1710041Type
             */
            public static fromObject(object: { [k: string]: any }): game1710041Type.update1710041Type;

            /**
             * Creates a plain object from an update1710041Type message. Also converts values to other types if specified.
             * @param message update1710041Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1710041Type.update1710041Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1710041Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a giantBubbleType. */
        interface IgiantBubbleType {

            /** giantBubbleType elemId */
            elemId: number;

            /** giantBubbleType giantOccupy */
            giantOccupy?: (number[] | null);

            /** giantBubbleType rewardCoin */
            rewardCoin: (number | Long);
        }

        /** Represents a giantBubbleType. */
        class giantBubbleType implements IgiantBubbleType {

            /**
             * Constructs a new giantBubbleType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1710041Type.IgiantBubbleType);

            /** giantBubbleType elemId. */
            public elemId: number;

            /** giantBubbleType giantOccupy. */
            public giantOccupy: number[];

            /** giantBubbleType rewardCoin. */
            public rewardCoin: (number | Long);

            /**
             * Creates a new giantBubbleType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns giantBubbleType instance
             */
            public static create(properties?: game1710041Type.IgiantBubbleType): game1710041Type.giantBubbleType;

            /**
             * Encodes the specified giantBubbleType message. Does not implicitly {@link game1710041Type.giantBubbleType.verify|verify} messages.
             * @param message giantBubbleType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1710041Type.IgiantBubbleType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified giantBubbleType message, length delimited. Does not implicitly {@link game1710041Type.giantBubbleType.verify|verify} messages.
             * @param message giantBubbleType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1710041Type.IgiantBubbleType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a giantBubbleType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns giantBubbleType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1710041Type.giantBubbleType;

            /**
             * Decodes a giantBubbleType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns giantBubbleType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1710041Type.giantBubbleType;

            /**
             * Verifies a giantBubbleType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a giantBubbleType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns giantBubbleType
             */
            public static fromObject(object: { [k: string]: any }): game1710041Type.giantBubbleType;

            /**
             * Creates a plain object from a giantBubbleType message. Also converts values to other types if specified.
             * @param message giantBubbleType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1710041Type.giantBubbleType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this giantBubbleType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a giantRewardType. */
        interface IgiantRewardType {

            /** giantRewardType giantOccupy */
            giantOccupy?: (number[] | null);

            /** giantRewardType rewardCoin */
            rewardCoin: (number | Long);
        }

        /** Represents a giantRewardType. */
        class giantRewardType implements IgiantRewardType {

            /**
             * Constructs a new giantRewardType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1710041Type.IgiantRewardType);

            /** giantRewardType giantOccupy. */
            public giantOccupy: number[];

            /** giantRewardType rewardCoin. */
            public rewardCoin: (number | Long);

            /**
             * Creates a new giantRewardType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns giantRewardType instance
             */
            public static create(properties?: game1710041Type.IgiantRewardType): game1710041Type.giantRewardType;

            /**
             * Encodes the specified giantRewardType message. Does not implicitly {@link game1710041Type.giantRewardType.verify|verify} messages.
             * @param message giantRewardType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1710041Type.IgiantRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified giantRewardType message, length delimited. Does not implicitly {@link game1710041Type.giantRewardType.verify|verify} messages.
             * @param message giantRewardType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1710041Type.IgiantRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a giantRewardType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns giantRewardType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1710041Type.giantRewardType;

            /**
             * Decodes a giantRewardType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns giantRewardType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1710041Type.giantRewardType;

            /**
             * Verifies a giantRewardType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a giantRewardType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns giantRewardType
             */
            public static fromObject(object: { [k: string]: any }): game1710041Type.giantRewardType;

            /**
             * Creates a plain object from a giantRewardType message. Also converts values to other types if specified.
             * @param message giantRewardType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1710041Type.giantRewardType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this giantRewardType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1710051Type. */
    export class game1710051Type implements Igame1710051Type {

        /**
         * Constructs a new game1710051Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1710051Type);

        /** game1710051Type data. */
        public data?: (game1710051Type.Idata1710051Type | null);

        /** game1710051Type update. */
        public update: game1710051Type.Iupdate1710051Type[];

        /**
         * Creates a new game1710051Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1710051Type instance
         */
        public static create(properties?: Igame1710051Type): game1710051Type;

        /**
         * Encodes the specified game1710051Type message. Does not implicitly {@link game1710051Type.verify|verify} messages.
         * @param message game1710051Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1710051Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1710051Type message, length delimited. Does not implicitly {@link game1710051Type.verify|verify} messages.
         * @param message game1710051Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1710051Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1710051Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1710051Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1710051Type;

        /**
         * Decodes a game1710051Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1710051Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1710051Type;

        /**
         * Verifies a game1710051Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1710051Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1710051Type
         */
        public static fromObject(object: { [k: string]: any }): game1710051Type;

        /**
         * Creates a plain object from a game1710051Type message. Also converts values to other types if specified.
         * @param message game1710051Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1710051Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1710051Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1710051Type {

        /** Properties of a data1710051Type. */
        interface Idata1710051Type {

            /** data1710051Type markPos */
            markPos?: (game1710051Type.ImarkPosType[] | null);
        }

        /** Represents a data1710051Type. */
        class data1710051Type implements Idata1710051Type {

            /**
             * Constructs a new data1710051Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1710051Type.Idata1710051Type);

            /** data1710051Type markPos. */
            public markPos: game1710051Type.ImarkPosType[];

            /**
             * Creates a new data1710051Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1710051Type instance
             */
            public static create(properties?: game1710051Type.Idata1710051Type): game1710051Type.data1710051Type;

            /**
             * Encodes the specified data1710051Type message. Does not implicitly {@link game1710051Type.data1710051Type.verify|verify} messages.
             * @param message data1710051Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1710051Type.Idata1710051Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1710051Type message, length delimited. Does not implicitly {@link game1710051Type.data1710051Type.verify|verify} messages.
             * @param message data1710051Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1710051Type.Idata1710051Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1710051Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1710051Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1710051Type.data1710051Type;

            /**
             * Decodes a data1710051Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1710051Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1710051Type.data1710051Type;

            /**
             * Verifies a data1710051Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1710051Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1710051Type
             */
            public static fromObject(object: { [k: string]: any }): game1710051Type.data1710051Type;

            /**
             * Creates a plain object from a data1710051Type message. Also converts values to other types if specified.
             * @param message data1710051Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1710051Type.data1710051Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1710051Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1710051Type. */
        interface Iupdate1710051Type {

            /** update1710051Type index */
            index: number;

            /** update1710051Type markPosList */
            markPosList?: (game1710051Type.ImarkPosType[] | null);
        }

        /** Represents an update1710051Type. */
        class update1710051Type implements Iupdate1710051Type {

            /**
             * Constructs a new update1710051Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1710051Type.Iupdate1710051Type);

            /** update1710051Type index. */
            public index: number;

            /** update1710051Type markPosList. */
            public markPosList: game1710051Type.ImarkPosType[];

            /**
             * Creates a new update1710051Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1710051Type instance
             */
            public static create(properties?: game1710051Type.Iupdate1710051Type): game1710051Type.update1710051Type;

            /**
             * Encodes the specified update1710051Type message. Does not implicitly {@link game1710051Type.update1710051Type.verify|verify} messages.
             * @param message update1710051Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1710051Type.Iupdate1710051Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1710051Type message, length delimited. Does not implicitly {@link game1710051Type.update1710051Type.verify|verify} messages.
             * @param message update1710051Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1710051Type.Iupdate1710051Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1710051Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1710051Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1710051Type.update1710051Type;

            /**
             * Decodes an update1710051Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1710051Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1710051Type.update1710051Type;

            /**
             * Verifies an update1710051Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1710051Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1710051Type
             */
            public static fromObject(object: { [k: string]: any }): game1710051Type.update1710051Type;

            /**
             * Creates a plain object from an update1710051Type message. Also converts values to other types if specified.
             * @param message update1710051Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1710051Type.update1710051Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1710051Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a markPosType. */
        interface ImarkPosType {

            /** markPosType pos */
            pos: number;

            /** markPosType multi */
            multi: number;
        }

        /** Represents a markPosType. */
        class markPosType implements ImarkPosType {

            /**
             * Constructs a new markPosType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1710051Type.ImarkPosType);

            /** markPosType pos. */
            public pos: number;

            /** markPosType multi. */
            public multi: number;

            /**
             * Creates a new markPosType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns markPosType instance
             */
            public static create(properties?: game1710051Type.ImarkPosType): game1710051Type.markPosType;

            /**
             * Encodes the specified markPosType message. Does not implicitly {@link game1710051Type.markPosType.verify|verify} messages.
             * @param message markPosType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1710051Type.ImarkPosType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified markPosType message, length delimited. Does not implicitly {@link game1710051Type.markPosType.verify|verify} messages.
             * @param message markPosType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1710051Type.ImarkPosType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a markPosType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns markPosType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1710051Type.markPosType;

            /**
             * Decodes a markPosType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns markPosType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1710051Type.markPosType;

            /**
             * Verifies a markPosType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a markPosType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns markPosType
             */
            public static fromObject(object: { [k: string]: any }): game1710051Type.markPosType;

            /**
             * Creates a plain object from a markPosType message. Also converts values to other types if specified.
             * @param message markPosType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1710051Type.markPosType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this markPosType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1810034Type. */
    export class game1810034Type implements Igame1810034Type {

        /**
         * Constructs a new game1810034Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1810034Type);

        /** game1810034Type data. */
        public data?: (game1810034Type.Idata1810034Type | null);

        /** game1810034Type update. */
        public update: game1810034Type.Iupdate1810034Type[];

        /**
         * Creates a new game1810034Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1810034Type instance
         */
        public static create(properties?: Igame1810034Type): game1810034Type;

        /**
         * Encodes the specified game1810034Type message. Does not implicitly {@link game1810034Type.verify|verify} messages.
         * @param message game1810034Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1810034Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1810034Type message, length delimited. Does not implicitly {@link game1810034Type.verify|verify} messages.
         * @param message game1810034Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1810034Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1810034Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1810034Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1810034Type;

        /**
         * Decodes a game1810034Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1810034Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1810034Type;

        /**
         * Verifies a game1810034Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1810034Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1810034Type
         */
        public static fromObject(object: { [k: string]: any }): game1810034Type;

        /**
         * Creates a plain object from a game1810034Type message. Also converts values to other types if specified.
         * @param message game1810034Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1810034Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1810034Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1810034Type {

        /** Properties of a data1810034Type. */
        interface Idata1810034Type {

            /** data1810034Type elemTranList */
            elemTranList?: (game1810034Type.IelemTranType[] | null);

            /** data1810034Type resultList */
            resultList?: (IspinResultType[] | null);
        }

        /** Represents a data1810034Type. */
        class data1810034Type implements Idata1810034Type {

            /**
             * Constructs a new data1810034Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1810034Type.Idata1810034Type);

            /** data1810034Type elemTranList. */
            public elemTranList: game1810034Type.IelemTranType[];

            /** data1810034Type resultList. */
            public resultList: IspinResultType[];

            /**
             * Creates a new data1810034Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1810034Type instance
             */
            public static create(properties?: game1810034Type.Idata1810034Type): game1810034Type.data1810034Type;

            /**
             * Encodes the specified data1810034Type message. Does not implicitly {@link game1810034Type.data1810034Type.verify|verify} messages.
             * @param message data1810034Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1810034Type.Idata1810034Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1810034Type message, length delimited. Does not implicitly {@link game1810034Type.data1810034Type.verify|verify} messages.
             * @param message data1810034Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1810034Type.Idata1810034Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1810034Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1810034Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1810034Type.data1810034Type;

            /**
             * Decodes a data1810034Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1810034Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1810034Type.data1810034Type;

            /**
             * Verifies a data1810034Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1810034Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1810034Type
             */
            public static fromObject(object: { [k: string]: any }): game1810034Type.data1810034Type;

            /**
             * Creates a plain object from a data1810034Type message. Also converts values to other types if specified.
             * @param message data1810034Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1810034Type.data1810034Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1810034Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1810034Type. */
        interface Iupdate1810034Type {

            /** update1810034Type index */
            index: number;

            /** update1810034Type elemTranList */
            elemTranList?: (game1810034Type.IelemTranType[] | null);

            /** update1810034Type resultList */
            resultList?: (IspinResultType[] | null);
        }

        /** Represents an update1810034Type. */
        class update1810034Type implements Iupdate1810034Type {

            /**
             * Constructs a new update1810034Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1810034Type.Iupdate1810034Type);

            /** update1810034Type index. */
            public index: number;

            /** update1810034Type elemTranList. */
            public elemTranList: game1810034Type.IelemTranType[];

            /** update1810034Type resultList. */
            public resultList: IspinResultType[];

            /**
             * Creates a new update1810034Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1810034Type instance
             */
            public static create(properties?: game1810034Type.Iupdate1810034Type): game1810034Type.update1810034Type;

            /**
             * Encodes the specified update1810034Type message. Does not implicitly {@link game1810034Type.update1810034Type.verify|verify} messages.
             * @param message update1810034Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1810034Type.Iupdate1810034Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1810034Type message, length delimited. Does not implicitly {@link game1810034Type.update1810034Type.verify|verify} messages.
             * @param message update1810034Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1810034Type.Iupdate1810034Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1810034Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1810034Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1810034Type.update1810034Type;

            /**
             * Decodes an update1810034Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1810034Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1810034Type.update1810034Type;

            /**
             * Verifies an update1810034Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1810034Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1810034Type
             */
            public static fromObject(object: { [k: string]: any }): game1810034Type.update1810034Type;

            /**
             * Creates a plain object from an update1810034Type message. Also converts values to other types if specified.
             * @param message update1810034Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1810034Type.update1810034Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1810034Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an elemTranType. */
        interface IelemTranType {

            /** elemTranType from */
            from: number;

            /** elemTranType to */
            to: number;
        }

        /** Represents an elemTranType. */
        class elemTranType implements IelemTranType {

            /**
             * Constructs a new elemTranType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1810034Type.IelemTranType);

            /** elemTranType from. */
            public from: number;

            /** elemTranType to. */
            public to: number;

            /**
             * Creates a new elemTranType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns elemTranType instance
             */
            public static create(properties?: game1810034Type.IelemTranType): game1810034Type.elemTranType;

            /**
             * Encodes the specified elemTranType message. Does not implicitly {@link game1810034Type.elemTranType.verify|verify} messages.
             * @param message elemTranType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1810034Type.IelemTranType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified elemTranType message, length delimited. Does not implicitly {@link game1810034Type.elemTranType.verify|verify} messages.
             * @param message elemTranType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1810034Type.IelemTranType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an elemTranType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns elemTranType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1810034Type.elemTranType;

            /**
             * Decodes an elemTranType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns elemTranType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1810034Type.elemTranType;

            /**
             * Verifies an elemTranType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an elemTranType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns elemTranType
             */
            public static fromObject(object: { [k: string]: any }): game1810034Type.elemTranType;

            /**
             * Creates a plain object from an elemTranType message. Also converts values to other types if specified.
             * @param message elemTranType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1810034Type.elemTranType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this elemTranType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1810039Type. */
    export class game1810039Type implements Igame1810039Type {

        /**
         * Constructs a new game1810039Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1810039Type);

        /** game1810039Type data. */
        public data?: (game1810039Type.Idata1810039Type | null);

        /** game1810039Type update. */
        public update: game1810039Type.Iupdate1810039Type[];

        /**
         * Creates a new game1810039Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1810039Type instance
         */
        public static create(properties?: Igame1810039Type): game1810039Type;

        /**
         * Encodes the specified game1810039Type message. Does not implicitly {@link game1810039Type.verify|verify} messages.
         * @param message game1810039Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1810039Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1810039Type message, length delimited. Does not implicitly {@link game1810039Type.verify|verify} messages.
         * @param message game1810039Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1810039Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1810039Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1810039Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1810039Type;

        /**
         * Decodes a game1810039Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1810039Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1810039Type;

        /**
         * Verifies a game1810039Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1810039Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1810039Type
         */
        public static fromObject(object: { [k: string]: any }): game1810039Type;

        /**
         * Creates a plain object from a game1810039Type message. Also converts values to other types if specified.
         * @param message game1810039Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1810039Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1810039Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1810039Type {

        /** Properties of a data1810039Type. */
        interface Idata1810039Type {

            /** data1810039Type posRateList */
            posRateList?: (game1810039Type.IposRateTypeListType[] | null);

            /** data1810039Type dingPosList */
            dingPosList?: (number[] | null);

            /** data1810039Type currentTime */
            currentTime: number;
        }

        /** Represents a data1810039Type. */
        class data1810039Type implements Idata1810039Type {

            /**
             * Constructs a new data1810039Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1810039Type.Idata1810039Type);

            /** data1810039Type posRateList. */
            public posRateList: game1810039Type.IposRateTypeListType[];

            /** data1810039Type dingPosList. */
            public dingPosList: number[];

            /** data1810039Type currentTime. */
            public currentTime: number;

            /**
             * Creates a new data1810039Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1810039Type instance
             */
            public static create(properties?: game1810039Type.Idata1810039Type): game1810039Type.data1810039Type;

            /**
             * Encodes the specified data1810039Type message. Does not implicitly {@link game1810039Type.data1810039Type.verify|verify} messages.
             * @param message data1810039Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1810039Type.Idata1810039Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1810039Type message, length delimited. Does not implicitly {@link game1810039Type.data1810039Type.verify|verify} messages.
             * @param message data1810039Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1810039Type.Idata1810039Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1810039Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1810039Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1810039Type.data1810039Type;

            /**
             * Decodes a data1810039Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1810039Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1810039Type.data1810039Type;

            /**
             * Verifies a data1810039Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1810039Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1810039Type
             */
            public static fromObject(object: { [k: string]: any }): game1810039Type.data1810039Type;

            /**
             * Creates a plain object from a data1810039Type message. Also converts values to other types if specified.
             * @param message data1810039Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1810039Type.data1810039Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1810039Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1810039Type. */
        interface Iupdate1810039Type {

            /** update1810039Type index */
            index: number;

            /** update1810039Type posRateList */
            posRateList?: (game1810039Type.IposRateTypeListType[] | null);

            /** update1810039Type dingPosList */
            dingPosList?: (number[] | null);

            /** update1810039Type currentTime */
            currentTime: number;
        }

        /** Represents an update1810039Type. */
        class update1810039Type implements Iupdate1810039Type {

            /**
             * Constructs a new update1810039Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1810039Type.Iupdate1810039Type);

            /** update1810039Type index. */
            public index: number;

            /** update1810039Type posRateList. */
            public posRateList: game1810039Type.IposRateTypeListType[];

            /** update1810039Type dingPosList. */
            public dingPosList: number[];

            /** update1810039Type currentTime. */
            public currentTime: number;

            /**
             * Creates a new update1810039Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1810039Type instance
             */
            public static create(properties?: game1810039Type.Iupdate1810039Type): game1810039Type.update1810039Type;

            /**
             * Encodes the specified update1810039Type message. Does not implicitly {@link game1810039Type.update1810039Type.verify|verify} messages.
             * @param message update1810039Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1810039Type.Iupdate1810039Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1810039Type message, length delimited. Does not implicitly {@link game1810039Type.update1810039Type.verify|verify} messages.
             * @param message update1810039Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1810039Type.Iupdate1810039Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1810039Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1810039Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1810039Type.update1810039Type;

            /**
             * Decodes an update1810039Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1810039Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1810039Type.update1810039Type;

            /**
             * Verifies an update1810039Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1810039Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1810039Type
             */
            public static fromObject(object: { [k: string]: any }): game1810039Type.update1810039Type;

            /**
             * Creates a plain object from an update1810039Type message. Also converts values to other types if specified.
             * @param message update1810039Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1810039Type.update1810039Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1810039Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a posRateTypeListType. */
        interface IposRateTypeListType {

            /** posRateTypeListType pos */
            pos: number;

            /** posRateTypeListType rate */
            rate: number;
        }

        /** Represents a posRateTypeListType. */
        class posRateTypeListType implements IposRateTypeListType {

            /**
             * Constructs a new posRateTypeListType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1810039Type.IposRateTypeListType);

            /** posRateTypeListType pos. */
            public pos: number;

            /** posRateTypeListType rate. */
            public rate: number;

            /**
             * Creates a new posRateTypeListType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns posRateTypeListType instance
             */
            public static create(properties?: game1810039Type.IposRateTypeListType): game1810039Type.posRateTypeListType;

            /**
             * Encodes the specified posRateTypeListType message. Does not implicitly {@link game1810039Type.posRateTypeListType.verify|verify} messages.
             * @param message posRateTypeListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1810039Type.IposRateTypeListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified posRateTypeListType message, length delimited. Does not implicitly {@link game1810039Type.posRateTypeListType.verify|verify} messages.
             * @param message posRateTypeListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1810039Type.IposRateTypeListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a posRateTypeListType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns posRateTypeListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1810039Type.posRateTypeListType;

            /**
             * Decodes a posRateTypeListType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns posRateTypeListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1810039Type.posRateTypeListType;

            /**
             * Verifies a posRateTypeListType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a posRateTypeListType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns posRateTypeListType
             */
            public static fromObject(object: { [k: string]: any }): game1810039Type.posRateTypeListType;

            /**
             * Creates a plain object from a posRateTypeListType message. Also converts values to other types if specified.
             * @param message posRateTypeListType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1810039Type.posRateTypeListType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this posRateTypeListType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1810040Type. */
    export class game1810040Type implements Igame1810040Type {

        /**
         * Constructs a new game1810040Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1810040Type);

        /** game1810040Type data. */
        public data?: (game1810040Type.Idata1810040Type | null);

        /** game1810040Type update. */
        public update: game1810040Type.Iupdate1810040Type[];

        /**
         * Creates a new game1810040Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1810040Type instance
         */
        public static create(properties?: Igame1810040Type): game1810040Type;

        /**
         * Encodes the specified game1810040Type message. Does not implicitly {@link game1810040Type.verify|verify} messages.
         * @param message game1810040Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1810040Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1810040Type message, length delimited. Does not implicitly {@link game1810040Type.verify|verify} messages.
         * @param message game1810040Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1810040Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1810040Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1810040Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1810040Type;

        /**
         * Decodes a game1810040Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1810040Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1810040Type;

        /**
         * Verifies a game1810040Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1810040Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1810040Type
         */
        public static fromObject(object: { [k: string]: any }): game1810040Type;

        /**
         * Creates a plain object from a game1810040Type message. Also converts values to other types if specified.
         * @param message game1810040Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1810040Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1810040Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1810040Type {

        /** Properties of a data1810040Type. */
        interface Idata1810040Type {

            /** data1810040Type goldPosList */
            goldPosList?: (number[] | null);

            /** data1810040Type extraLineReward */
            extraLineReward?: (game1810040Type.IextraLineRewardType[] | null);
        }

        /** Represents a data1810040Type. */
        class data1810040Type implements Idata1810040Type {

            /**
             * Constructs a new data1810040Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1810040Type.Idata1810040Type);

            /** data1810040Type goldPosList. */
            public goldPosList: number[];

            /** data1810040Type extraLineReward. */
            public extraLineReward: game1810040Type.IextraLineRewardType[];

            /**
             * Creates a new data1810040Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1810040Type instance
             */
            public static create(properties?: game1810040Type.Idata1810040Type): game1810040Type.data1810040Type;

            /**
             * Encodes the specified data1810040Type message. Does not implicitly {@link game1810040Type.data1810040Type.verify|verify} messages.
             * @param message data1810040Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1810040Type.Idata1810040Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1810040Type message, length delimited. Does not implicitly {@link game1810040Type.data1810040Type.verify|verify} messages.
             * @param message data1810040Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1810040Type.Idata1810040Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1810040Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1810040Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1810040Type.data1810040Type;

            /**
             * Decodes a data1810040Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1810040Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1810040Type.data1810040Type;

            /**
             * Verifies a data1810040Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1810040Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1810040Type
             */
            public static fromObject(object: { [k: string]: any }): game1810040Type.data1810040Type;

            /**
             * Creates a plain object from a data1810040Type message. Also converts values to other types if specified.
             * @param message data1810040Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1810040Type.data1810040Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1810040Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1810040Type. */
        interface Iupdate1810040Type {

            /** update1810040Type index */
            index: number;

            /** update1810040Type goldPosList */
            goldPosList?: (number[] | null);

            /** update1810040Type extraLineReward */
            extraLineReward?: (game1810040Type.IextraLineRewardType[] | null);
        }

        /** Represents an update1810040Type. */
        class update1810040Type implements Iupdate1810040Type {

            /**
             * Constructs a new update1810040Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1810040Type.Iupdate1810040Type);

            /** update1810040Type index. */
            public index: number;

            /** update1810040Type goldPosList. */
            public goldPosList: number[];

            /** update1810040Type extraLineReward. */
            public extraLineReward: game1810040Type.IextraLineRewardType[];

            /**
             * Creates a new update1810040Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1810040Type instance
             */
            public static create(properties?: game1810040Type.Iupdate1810040Type): game1810040Type.update1810040Type;

            /**
             * Encodes the specified update1810040Type message. Does not implicitly {@link game1810040Type.update1810040Type.verify|verify} messages.
             * @param message update1810040Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1810040Type.Iupdate1810040Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1810040Type message, length delimited. Does not implicitly {@link game1810040Type.update1810040Type.verify|verify} messages.
             * @param message update1810040Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1810040Type.Iupdate1810040Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1810040Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1810040Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1810040Type.update1810040Type;

            /**
             * Decodes an update1810040Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1810040Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1810040Type.update1810040Type;

            /**
             * Verifies an update1810040Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1810040Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1810040Type
             */
            public static fromObject(object: { [k: string]: any }): game1810040Type.update1810040Type;

            /**
             * Creates a plain object from an update1810040Type message. Also converts values to other types if specified.
             * @param message update1810040Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1810040Type.update1810040Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1810040Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an extraLineRewardType. */
        interface IextraLineRewardType {

            /** extraLineRewardType lineId */
            lineId: number;

            /** extraLineRewardType posRateList */
            posRateList?: (game1810040Type.IposRateTypeListType[] | null);
        }

        /** Represents an extraLineRewardType. */
        class extraLineRewardType implements IextraLineRewardType {

            /**
             * Constructs a new extraLineRewardType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1810040Type.IextraLineRewardType);

            /** extraLineRewardType lineId. */
            public lineId: number;

            /** extraLineRewardType posRateList. */
            public posRateList: game1810040Type.IposRateTypeListType[];

            /**
             * Creates a new extraLineRewardType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns extraLineRewardType instance
             */
            public static create(properties?: game1810040Type.IextraLineRewardType): game1810040Type.extraLineRewardType;

            /**
             * Encodes the specified extraLineRewardType message. Does not implicitly {@link game1810040Type.extraLineRewardType.verify|verify} messages.
             * @param message extraLineRewardType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1810040Type.IextraLineRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified extraLineRewardType message, length delimited. Does not implicitly {@link game1810040Type.extraLineRewardType.verify|verify} messages.
             * @param message extraLineRewardType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1810040Type.IextraLineRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an extraLineRewardType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns extraLineRewardType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1810040Type.extraLineRewardType;

            /**
             * Decodes an extraLineRewardType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns extraLineRewardType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1810040Type.extraLineRewardType;

            /**
             * Verifies an extraLineRewardType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an extraLineRewardType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns extraLineRewardType
             */
            public static fromObject(object: { [k: string]: any }): game1810040Type.extraLineRewardType;

            /**
             * Creates a plain object from an extraLineRewardType message. Also converts values to other types if specified.
             * @param message extraLineRewardType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1810040Type.extraLineRewardType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this extraLineRewardType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a posRateTypeListType. */
        interface IposRateTypeListType {

            /** posRateTypeListType pos */
            pos: number;

            /** posRateTypeListType rate */
            rate: number;
        }

        /** Represents a posRateTypeListType. */
        class posRateTypeListType implements IposRateTypeListType {

            /**
             * Constructs a new posRateTypeListType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1810040Type.IposRateTypeListType);

            /** posRateTypeListType pos. */
            public pos: number;

            /** posRateTypeListType rate. */
            public rate: number;

            /**
             * Creates a new posRateTypeListType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns posRateTypeListType instance
             */
            public static create(properties?: game1810040Type.IposRateTypeListType): game1810040Type.posRateTypeListType;

            /**
             * Encodes the specified posRateTypeListType message. Does not implicitly {@link game1810040Type.posRateTypeListType.verify|verify} messages.
             * @param message posRateTypeListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1810040Type.IposRateTypeListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified posRateTypeListType message, length delimited. Does not implicitly {@link game1810040Type.posRateTypeListType.verify|verify} messages.
             * @param message posRateTypeListType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1810040Type.IposRateTypeListType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a posRateTypeListType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns posRateTypeListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1810040Type.posRateTypeListType;

            /**
             * Decodes a posRateTypeListType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns posRateTypeListType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1810040Type.posRateTypeListType;

            /**
             * Verifies a posRateTypeListType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a posRateTypeListType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns posRateTypeListType
             */
            public static fromObject(object: { [k: string]: any }): game1810040Type.posRateTypeListType;

            /**
             * Creates a plain object from a posRateTypeListType message. Also converts values to other types if specified.
             * @param message posRateTypeListType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1810040Type.posRateTypeListType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this posRateTypeListType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1810068Type. */
    export class game1810068Type implements Igame1810068Type {

        /**
         * Constructs a new game1810068Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1810068Type);

        /** game1810068Type data. */
        public data?: (game1810068Type.Idata1810068Type | null);

        /** game1810068Type update. */
        public update: game1810068Type.Iupdate1810068Type[];

        /**
         * Creates a new game1810068Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1810068Type instance
         */
        public static create(properties?: Igame1810068Type): game1810068Type;

        /**
         * Encodes the specified game1810068Type message. Does not implicitly {@link game1810068Type.verify|verify} messages.
         * @param message game1810068Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1810068Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1810068Type message, length delimited. Does not implicitly {@link game1810068Type.verify|verify} messages.
         * @param message game1810068Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1810068Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1810068Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1810068Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1810068Type;

        /**
         * Decodes a game1810068Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1810068Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1810068Type;

        /**
         * Verifies a game1810068Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1810068Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1810068Type
         */
        public static fromObject(object: { [k: string]: any }): game1810068Type;

        /**
         * Creates a plain object from a game1810068Type message. Also converts values to other types if specified.
         * @param message game1810068Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1810068Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1810068Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1810068Type {

        /** Properties of a data1810068Type. */
        interface Idata1810068Type {

            /** data1810068Type curData */
            curData?: (game1810068Type.IcongoGemDataType[] | null);

            /** data1810068Type nextData */
            nextData?: (game1810068Type.IcongoGemDataType[] | null);
        }

        /** Represents a data1810068Type. */
        class data1810068Type implements Idata1810068Type {

            /**
             * Constructs a new data1810068Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1810068Type.Idata1810068Type);

            /** data1810068Type curData. */
            public curData: game1810068Type.IcongoGemDataType[];

            /** data1810068Type nextData. */
            public nextData: game1810068Type.IcongoGemDataType[];

            /**
             * Creates a new data1810068Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1810068Type instance
             */
            public static create(properties?: game1810068Type.Idata1810068Type): game1810068Type.data1810068Type;

            /**
             * Encodes the specified data1810068Type message. Does not implicitly {@link game1810068Type.data1810068Type.verify|verify} messages.
             * @param message data1810068Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1810068Type.Idata1810068Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1810068Type message, length delimited. Does not implicitly {@link game1810068Type.data1810068Type.verify|verify} messages.
             * @param message data1810068Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1810068Type.Idata1810068Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1810068Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1810068Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1810068Type.data1810068Type;

            /**
             * Decodes a data1810068Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1810068Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1810068Type.data1810068Type;

            /**
             * Verifies a data1810068Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1810068Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1810068Type
             */
            public static fromObject(object: { [k: string]: any }): game1810068Type.data1810068Type;

            /**
             * Creates a plain object from a data1810068Type message. Also converts values to other types if specified.
             * @param message data1810068Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1810068Type.data1810068Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1810068Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1810068Type. */
        interface Iupdate1810068Type {

            /** update1810068Type index */
            index: number;

            /** update1810068Type curData */
            curData?: (game1810068Type.IcongoGemDataType[] | null);

            /** update1810068Type nextData */
            nextData?: (game1810068Type.IcongoGemDataType[] | null);
        }

        /** Represents an update1810068Type. */
        class update1810068Type implements Iupdate1810068Type {

            /**
             * Constructs a new update1810068Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1810068Type.Iupdate1810068Type);

            /** update1810068Type index. */
            public index: number;

            /** update1810068Type curData. */
            public curData: game1810068Type.IcongoGemDataType[];

            /** update1810068Type nextData. */
            public nextData: game1810068Type.IcongoGemDataType[];

            /**
             * Creates a new update1810068Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1810068Type instance
             */
            public static create(properties?: game1810068Type.Iupdate1810068Type): game1810068Type.update1810068Type;

            /**
             * Encodes the specified update1810068Type message. Does not implicitly {@link game1810068Type.update1810068Type.verify|verify} messages.
             * @param message update1810068Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1810068Type.Iupdate1810068Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1810068Type message, length delimited. Does not implicitly {@link game1810068Type.update1810068Type.verify|verify} messages.
             * @param message update1810068Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1810068Type.Iupdate1810068Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1810068Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1810068Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1810068Type.update1810068Type;

            /**
             * Decodes an update1810068Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1810068Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1810068Type.update1810068Type;

            /**
             * Verifies an update1810068Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1810068Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1810068Type
             */
            public static fromObject(object: { [k: string]: any }): game1810068Type.update1810068Type;

            /**
             * Creates a plain object from an update1810068Type message. Also converts values to other types if specified.
             * @param message update1810068Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1810068Type.update1810068Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1810068Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a congoGemDataType. */
        interface IcongoGemDataType {

            /** congoGemDataType column */
            column: number;

            /** congoGemDataType elem */
            elem: number;

            /** congoGemDataType reward */
            reward: (number | Long);

            /** congoGemDataType lgList */
            lgList?: ((number | Long)[] | null);
        }

        /** Represents a congoGemDataType. */
        class congoGemDataType implements IcongoGemDataType {

            /**
             * Constructs a new congoGemDataType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1810068Type.IcongoGemDataType);

            /** congoGemDataType column. */
            public column: number;

            /** congoGemDataType elem. */
            public elem: number;

            /** congoGemDataType reward. */
            public reward: (number | Long);

            /** congoGemDataType lgList. */
            public lgList: (number | Long)[];

            /**
             * Creates a new congoGemDataType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns congoGemDataType instance
             */
            public static create(properties?: game1810068Type.IcongoGemDataType): game1810068Type.congoGemDataType;

            /**
             * Encodes the specified congoGemDataType message. Does not implicitly {@link game1810068Type.congoGemDataType.verify|verify} messages.
             * @param message congoGemDataType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1810068Type.IcongoGemDataType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified congoGemDataType message, length delimited. Does not implicitly {@link game1810068Type.congoGemDataType.verify|verify} messages.
             * @param message congoGemDataType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1810068Type.IcongoGemDataType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a congoGemDataType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns congoGemDataType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1810068Type.congoGemDataType;

            /**
             * Decodes a congoGemDataType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns congoGemDataType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1810068Type.congoGemDataType;

            /**
             * Verifies a congoGemDataType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a congoGemDataType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns congoGemDataType
             */
            public static fromObject(object: { [k: string]: any }): game1810068Type.congoGemDataType;

            /**
             * Creates a plain object from a congoGemDataType message. Also converts values to other types if specified.
             * @param message congoGemDataType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1810068Type.congoGemDataType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this congoGemDataType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game1810094Type. */
    export class game1810094Type implements Igame1810094Type {

        /**
         * Constructs a new game1810094Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame1810094Type);

        /** game1810094Type data. */
        public data?: (game1810094Type.Idata1810094Type | null);

        /** game1810094Type update. */
        public update: game1810094Type.Iupdate1810094Type[];

        /**
         * Creates a new game1810094Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game1810094Type instance
         */
        public static create(properties?: Igame1810094Type): game1810094Type;

        /**
         * Encodes the specified game1810094Type message. Does not implicitly {@link game1810094Type.verify|verify} messages.
         * @param message game1810094Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame1810094Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game1810094Type message, length delimited. Does not implicitly {@link game1810094Type.verify|verify} messages.
         * @param message game1810094Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame1810094Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game1810094Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game1810094Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1810094Type;

        /**
         * Decodes a game1810094Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game1810094Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1810094Type;

        /**
         * Verifies a game1810094Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game1810094Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game1810094Type
         */
        public static fromObject(object: { [k: string]: any }): game1810094Type;

        /**
         * Creates a plain object from a game1810094Type message. Also converts values to other types if specified.
         * @param message game1810094Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game1810094Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game1810094Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game1810094Type {

        /** Properties of a data1810094Type. */
        interface Idata1810094Type {

            /** data1810094Type curLv */
            curLv: number;

            /** data1810094Type transitionLv */
            transitionLv: number;

            /** data1810094Type nextLv */
            nextLv: number;

            /** data1810094Type isWildMove */
            isWildMove: boolean;
        }

        /** Represents a data1810094Type. */
        class data1810094Type implements Idata1810094Type {

            /**
             * Constructs a new data1810094Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1810094Type.Idata1810094Type);

            /** data1810094Type curLv. */
            public curLv: number;

            /** data1810094Type transitionLv. */
            public transitionLv: number;

            /** data1810094Type nextLv. */
            public nextLv: number;

            /** data1810094Type isWildMove. */
            public isWildMove: boolean;

            /**
             * Creates a new data1810094Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data1810094Type instance
             */
            public static create(properties?: game1810094Type.Idata1810094Type): game1810094Type.data1810094Type;

            /**
             * Encodes the specified data1810094Type message. Does not implicitly {@link game1810094Type.data1810094Type.verify|verify} messages.
             * @param message data1810094Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1810094Type.Idata1810094Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data1810094Type message, length delimited. Does not implicitly {@link game1810094Type.data1810094Type.verify|verify} messages.
             * @param message data1810094Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1810094Type.Idata1810094Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data1810094Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data1810094Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1810094Type.data1810094Type;

            /**
             * Decodes a data1810094Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data1810094Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1810094Type.data1810094Type;

            /**
             * Verifies a data1810094Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data1810094Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data1810094Type
             */
            public static fromObject(object: { [k: string]: any }): game1810094Type.data1810094Type;

            /**
             * Creates a plain object from a data1810094Type message. Also converts values to other types if specified.
             * @param message data1810094Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1810094Type.data1810094Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data1810094Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update1810094Type. */
        interface Iupdate1810094Type {

            /** update1810094Type index */
            index: number;

            /** update1810094Type curLv */
            curLv: number;

            /** update1810094Type transitionLv */
            transitionLv: number;

            /** update1810094Type nextLv */
            nextLv: number;

            /** update1810094Type isWildMove */
            isWildMove: boolean;
        }

        /** Represents an update1810094Type. */
        class update1810094Type implements Iupdate1810094Type {

            /**
             * Constructs a new update1810094Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game1810094Type.Iupdate1810094Type);

            /** update1810094Type index. */
            public index: number;

            /** update1810094Type curLv. */
            public curLv: number;

            /** update1810094Type transitionLv. */
            public transitionLv: number;

            /** update1810094Type nextLv. */
            public nextLv: number;

            /** update1810094Type isWildMove. */
            public isWildMove: boolean;

            /**
             * Creates a new update1810094Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update1810094Type instance
             */
            public static create(properties?: game1810094Type.Iupdate1810094Type): game1810094Type.update1810094Type;

            /**
             * Encodes the specified update1810094Type message. Does not implicitly {@link game1810094Type.update1810094Type.verify|verify} messages.
             * @param message update1810094Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game1810094Type.Iupdate1810094Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update1810094Type message, length delimited. Does not implicitly {@link game1810094Type.update1810094Type.verify|verify} messages.
             * @param message update1810094Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game1810094Type.Iupdate1810094Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update1810094Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update1810094Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game1810094Type.update1810094Type;

            /**
             * Decodes an update1810094Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update1810094Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game1810094Type.update1810094Type;

            /**
             * Verifies an update1810094Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update1810094Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update1810094Type
             */
            public static fromObject(object: { [k: string]: any }): game1810094Type.update1810094Type;

            /**
             * Creates a plain object from an update1810094Type message. Also converts values to other types if specified.
             * @param message update1810094Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game1810094Type.update1810094Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update1810094Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game2254Type. */
    export class game2254Type implements Igame2254Type {

        /**
         * Constructs a new game2254Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame2254Type);

        /** game2254Type data. */
        public data?: (game2254Type.Idata2254Type | null);

        /** game2254Type update. */
        public update: game2254Type.Iupdate2254Type[];

        /**
         * Creates a new game2254Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game2254Type instance
         */
        public static create(properties?: Igame2254Type): game2254Type;

        /**
         * Encodes the specified game2254Type message. Does not implicitly {@link game2254Type.verify|verify} messages.
         * @param message game2254Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame2254Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game2254Type message, length delimited. Does not implicitly {@link game2254Type.verify|verify} messages.
         * @param message game2254Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame2254Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game2254Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game2254Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2254Type;

        /**
         * Decodes a game2254Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game2254Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2254Type;

        /**
         * Verifies a game2254Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game2254Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game2254Type
         */
        public static fromObject(object: { [k: string]: any }): game2254Type;

        /**
         * Creates a plain object from a game2254Type message. Also converts values to other types if specified.
         * @param message game2254Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game2254Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game2254Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game2254Type {

        /** Properties of a data2254Type. */
        interface Idata2254Type {

            /** data2254Type wildMutiple */
            wildMutiple?: (number | null);
        }

        /** Represents a data2254Type. */
        class data2254Type implements Idata2254Type {

            /**
             * Constructs a new data2254Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game2254Type.Idata2254Type);

            /** data2254Type wildMutiple. */
            public wildMutiple: number;

            /**
             * Creates a new data2254Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data2254Type instance
             */
            public static create(properties?: game2254Type.Idata2254Type): game2254Type.data2254Type;

            /**
             * Encodes the specified data2254Type message. Does not implicitly {@link game2254Type.data2254Type.verify|verify} messages.
             * @param message data2254Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game2254Type.Idata2254Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data2254Type message, length delimited. Does not implicitly {@link game2254Type.data2254Type.verify|verify} messages.
             * @param message data2254Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game2254Type.Idata2254Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data2254Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data2254Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2254Type.data2254Type;

            /**
             * Decodes a data2254Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data2254Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2254Type.data2254Type;

            /**
             * Verifies a data2254Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data2254Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data2254Type
             */
            public static fromObject(object: { [k: string]: any }): game2254Type.data2254Type;

            /**
             * Creates a plain object from a data2254Type message. Also converts values to other types if specified.
             * @param message data2254Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game2254Type.data2254Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data2254Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update2254Type. */
        interface Iupdate2254Type {

            /** update2254Type index */
            index: number;

            /** update2254Type wildMutiple */
            wildMutiple?: (number | null);
        }

        /** Represents an update2254Type. */
        class update2254Type implements Iupdate2254Type {

            /**
             * Constructs a new update2254Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game2254Type.Iupdate2254Type);

            /** update2254Type index. */
            public index: number;

            /** update2254Type wildMutiple. */
            public wildMutiple: number;

            /**
             * Creates a new update2254Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update2254Type instance
             */
            public static create(properties?: game2254Type.Iupdate2254Type): game2254Type.update2254Type;

            /**
             * Encodes the specified update2254Type message. Does not implicitly {@link game2254Type.update2254Type.verify|verify} messages.
             * @param message update2254Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game2254Type.Iupdate2254Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update2254Type message, length delimited. Does not implicitly {@link game2254Type.update2254Type.verify|verify} messages.
             * @param message update2254Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game2254Type.Iupdate2254Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update2254Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update2254Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2254Type.update2254Type;

            /**
             * Decodes an update2254Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update2254Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2254Type.update2254Type;

            /**
             * Verifies an update2254Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update2254Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update2254Type
             */
            public static fromObject(object: { [k: string]: any }): game2254Type.update2254Type;

            /**
             * Creates a plain object from an update2254Type message. Also converts values to other types if specified.
             * @param message update2254Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game2254Type.update2254Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update2254Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game2266Type. */
    export class game2266Type implements Igame2266Type {

        /**
         * Constructs a new game2266Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame2266Type);

        /** game2266Type data. */
        public data?: (game2266Type.Idata2266Type | null);

        /** game2266Type update. */
        public update: game2266Type.Iupdate2266Type[];

        /**
         * Creates a new game2266Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game2266Type instance
         */
        public static create(properties?: Igame2266Type): game2266Type;

        /**
         * Encodes the specified game2266Type message. Does not implicitly {@link game2266Type.verify|verify} messages.
         * @param message game2266Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame2266Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game2266Type message, length delimited. Does not implicitly {@link game2266Type.verify|verify} messages.
         * @param message game2266Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame2266Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game2266Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game2266Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2266Type;

        /**
         * Decodes a game2266Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game2266Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2266Type;

        /**
         * Verifies a game2266Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game2266Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game2266Type
         */
        public static fromObject(object: { [k: string]: any }): game2266Type;

        /**
         * Creates a plain object from a game2266Type message. Also converts values to other types if specified.
         * @param message game2266Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game2266Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game2266Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game2266Type {

        /** Properties of a data2266Type. */
        interface Idata2266Type {

            /** data2266Type gameState */
            gameState: number;

            /** data2266Type battle */
            battle?: (game2266Type.IbattleType | null);

            /** data2266Type coin */
            coin?: (number | Long | null);
        }

        /** Represents a data2266Type. */
        class data2266Type implements Idata2266Type {

            /**
             * Constructs a new data2266Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game2266Type.Idata2266Type);

            /** data2266Type gameState. */
            public gameState: number;

            /** data2266Type battle. */
            public battle?: (game2266Type.IbattleType | null);

            /** data2266Type coin. */
            public coin: (number | Long);

            /**
             * Creates a new data2266Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data2266Type instance
             */
            public static create(properties?: game2266Type.Idata2266Type): game2266Type.data2266Type;

            /**
             * Encodes the specified data2266Type message. Does not implicitly {@link game2266Type.data2266Type.verify|verify} messages.
             * @param message data2266Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game2266Type.Idata2266Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data2266Type message, length delimited. Does not implicitly {@link game2266Type.data2266Type.verify|verify} messages.
             * @param message data2266Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game2266Type.Idata2266Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data2266Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data2266Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2266Type.data2266Type;

            /**
             * Decodes a data2266Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data2266Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2266Type.data2266Type;

            /**
             * Verifies a data2266Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data2266Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data2266Type
             */
            public static fromObject(object: { [k: string]: any }): game2266Type.data2266Type;

            /**
             * Creates a plain object from a data2266Type message. Also converts values to other types if specified.
             * @param message data2266Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game2266Type.data2266Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data2266Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update2266Type. */
        interface Iupdate2266Type {

            /** update2266Type index */
            index: number;

            /** update2266Type gameState */
            gameState?: (number | null);

            /** update2266Type battle */
            battle?: (game2266Type.IbattleType | null);

            /** update2266Type coin */
            coin?: (number | Long | null);
        }

        /** Represents an update2266Type. */
        class update2266Type implements Iupdate2266Type {

            /**
             * Constructs a new update2266Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game2266Type.Iupdate2266Type);

            /** update2266Type index. */
            public index: number;

            /** update2266Type gameState. */
            public gameState: number;

            /** update2266Type battle. */
            public battle?: (game2266Type.IbattleType | null);

            /** update2266Type coin. */
            public coin: (number | Long);

            /**
             * Creates a new update2266Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update2266Type instance
             */
            public static create(properties?: game2266Type.Iupdate2266Type): game2266Type.update2266Type;

            /**
             * Encodes the specified update2266Type message. Does not implicitly {@link game2266Type.update2266Type.verify|verify} messages.
             * @param message update2266Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game2266Type.Iupdate2266Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update2266Type message, length delimited. Does not implicitly {@link game2266Type.update2266Type.verify|verify} messages.
             * @param message update2266Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game2266Type.Iupdate2266Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update2266Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update2266Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2266Type.update2266Type;

            /**
             * Decodes an update2266Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update2266Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2266Type.update2266Type;

            /**
             * Verifies an update2266Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update2266Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update2266Type
             */
            public static fromObject(object: { [k: string]: any }): game2266Type.update2266Type;

            /**
             * Creates a plain object from an update2266Type message. Also converts values to other types if specified.
             * @param message update2266Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game2266Type.update2266Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update2266Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a battleType. */
        interface IbattleType {

            /** battleType my */
            my: game2266Type.battleType.IfighterType;

            /** battleType enemy */
            enemy: game2266Type.battleType.IfighterType;
        }

        /** Represents a battleType. */
        class battleType implements IbattleType {

            /**
             * Constructs a new battleType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game2266Type.IbattleType);

            /** battleType my. */
            public my: game2266Type.battleType.IfighterType;

            /** battleType enemy. */
            public enemy: game2266Type.battleType.IfighterType;

            /**
             * Creates a new battleType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns battleType instance
             */
            public static create(properties?: game2266Type.IbattleType): game2266Type.battleType;

            /**
             * Encodes the specified battleType message. Does not implicitly {@link game2266Type.battleType.verify|verify} messages.
             * @param message battleType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game2266Type.IbattleType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified battleType message, length delimited. Does not implicitly {@link game2266Type.battleType.verify|verify} messages.
             * @param message battleType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game2266Type.IbattleType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a battleType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns battleType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2266Type.battleType;

            /**
             * Decodes a battleType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns battleType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2266Type.battleType;

            /**
             * Verifies a battleType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a battleType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns battleType
             */
            public static fromObject(object: { [k: string]: any }): game2266Type.battleType;

            /**
             * Creates a plain object from a battleType message. Also converts values to other types if specified.
             * @param message battleType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game2266Type.battleType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this battleType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace battleType {

            /** Properties of a fighterType. */
            interface IfighterType {

                /** fighterType id */
                id: number;

                /** fighterType hp */
                hp: number;

                /** fighterType maxHp */
                maxHp: number;
            }

            /** Represents a fighterType. */
            class fighterType implements IfighterType {

                /**
                 * Constructs a new fighterType.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: game2266Type.battleType.IfighterType);

                /** fighterType id. */
                public id: number;

                /** fighterType hp. */
                public hp: number;

                /** fighterType maxHp. */
                public maxHp: number;

                /**
                 * Creates a new fighterType instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns fighterType instance
                 */
                public static create(properties?: game2266Type.battleType.IfighterType): game2266Type.battleType.fighterType;

                /**
                 * Encodes the specified fighterType message. Does not implicitly {@link game2266Type.battleType.fighterType.verify|verify} messages.
                 * @param message fighterType message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: game2266Type.battleType.IfighterType, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified fighterType message, length delimited. Does not implicitly {@link game2266Type.battleType.fighterType.verify|verify} messages.
                 * @param message fighterType message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: game2266Type.battleType.IfighterType, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a fighterType message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns fighterType
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2266Type.battleType.fighterType;

                /**
                 * Decodes a fighterType message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns fighterType
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2266Type.battleType.fighterType;

                /**
                 * Verifies a fighterType message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string | null);

                /**
                 * Creates a fighterType message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns fighterType
                 */
                public static fromObject(object: { [k: string]: any }): game2266Type.battleType.fighterType;

                /**
                 * Creates a plain object from a fighterType message. Also converts values to other types if specified.
                 * @param message fighterType
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: game2266Type.battleType.fighterType, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this fighterType to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Represents a game2270Type. */
    export class game2270Type implements Igame2270Type {

        /**
         * Constructs a new game2270Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame2270Type);

        /** game2270Type data. */
        public data?: (game2270Type.Idata2270Type | null);

        /** game2270Type update. */
        public update: game2270Type.Iupdate2270Type[];

        /**
         * Creates a new game2270Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game2270Type instance
         */
        public static create(properties?: Igame2270Type): game2270Type;

        /**
         * Encodes the specified game2270Type message. Does not implicitly {@link game2270Type.verify|verify} messages.
         * @param message game2270Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame2270Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game2270Type message, length delimited. Does not implicitly {@link game2270Type.verify|verify} messages.
         * @param message game2270Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame2270Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game2270Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game2270Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2270Type;

        /**
         * Decodes a game2270Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game2270Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2270Type;

        /**
         * Verifies a game2270Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game2270Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game2270Type
         */
        public static fromObject(object: { [k: string]: any }): game2270Type;

        /**
         * Creates a plain object from a game2270Type message. Also converts values to other types if specified.
         * @param message game2270Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game2270Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game2270Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game2270Type {

        /** Properties of a data2270Type. */
        interface Idata2270Type {

            /** data2270Type gameState */
            gameState: number;

            /** data2270Type battle */
            battle?: (game2270Type.IbattleType | null);

            /** data2270Type coin */
            coin?: (number | Long | null);
        }

        /** Represents a data2270Type. */
        class data2270Type implements Idata2270Type {

            /**
             * Constructs a new data2270Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game2270Type.Idata2270Type);

            /** data2270Type gameState. */
            public gameState: number;

            /** data2270Type battle. */
            public battle?: (game2270Type.IbattleType | null);

            /** data2270Type coin. */
            public coin: (number | Long);

            /**
             * Creates a new data2270Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data2270Type instance
             */
            public static create(properties?: game2270Type.Idata2270Type): game2270Type.data2270Type;

            /**
             * Encodes the specified data2270Type message. Does not implicitly {@link game2270Type.data2270Type.verify|verify} messages.
             * @param message data2270Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game2270Type.Idata2270Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data2270Type message, length delimited. Does not implicitly {@link game2270Type.data2270Type.verify|verify} messages.
             * @param message data2270Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game2270Type.Idata2270Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data2270Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data2270Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2270Type.data2270Type;

            /**
             * Decodes a data2270Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data2270Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2270Type.data2270Type;

            /**
             * Verifies a data2270Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data2270Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data2270Type
             */
            public static fromObject(object: { [k: string]: any }): game2270Type.data2270Type;

            /**
             * Creates a plain object from a data2270Type message. Also converts values to other types if specified.
             * @param message data2270Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game2270Type.data2270Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data2270Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update2270Type. */
        interface Iupdate2270Type {

            /** update2270Type index */
            index: number;

            /** update2270Type gameState */
            gameState?: (number | null);

            /** update2270Type battle */
            battle?: (game2270Type.IbattleType | null);

            /** update2270Type coin */
            coin?: (number | Long | null);
        }

        /** Represents an update2270Type. */
        class update2270Type implements Iupdate2270Type {

            /**
             * Constructs a new update2270Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game2270Type.Iupdate2270Type);

            /** update2270Type index. */
            public index: number;

            /** update2270Type gameState. */
            public gameState: number;

            /** update2270Type battle. */
            public battle?: (game2270Type.IbattleType | null);

            /** update2270Type coin. */
            public coin: (number | Long);

            /**
             * Creates a new update2270Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update2270Type instance
             */
            public static create(properties?: game2270Type.Iupdate2270Type): game2270Type.update2270Type;

            /**
             * Encodes the specified update2270Type message. Does not implicitly {@link game2270Type.update2270Type.verify|verify} messages.
             * @param message update2270Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game2270Type.Iupdate2270Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update2270Type message, length delimited. Does not implicitly {@link game2270Type.update2270Type.verify|verify} messages.
             * @param message update2270Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game2270Type.Iupdate2270Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update2270Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update2270Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2270Type.update2270Type;

            /**
             * Decodes an update2270Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update2270Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2270Type.update2270Type;

            /**
             * Verifies an update2270Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update2270Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update2270Type
             */
            public static fromObject(object: { [k: string]: any }): game2270Type.update2270Type;

            /**
             * Creates a plain object from an update2270Type message. Also converts values to other types if specified.
             * @param message update2270Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game2270Type.update2270Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update2270Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a battleType. */
        interface IbattleType {

            /** battleType my */
            my: game2270Type.battleType.IfighterType;

            /** battleType enemy */
            enemy: game2270Type.battleType.IfighterType;
        }

        /** Represents a battleType. */
        class battleType implements IbattleType {

            /**
             * Constructs a new battleType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game2270Type.IbattleType);

            /** battleType my. */
            public my: game2270Type.battleType.IfighterType;

            /** battleType enemy. */
            public enemy: game2270Type.battleType.IfighterType;

            /**
             * Creates a new battleType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns battleType instance
             */
            public static create(properties?: game2270Type.IbattleType): game2270Type.battleType;

            /**
             * Encodes the specified battleType message. Does not implicitly {@link game2270Type.battleType.verify|verify} messages.
             * @param message battleType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game2270Type.IbattleType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified battleType message, length delimited. Does not implicitly {@link game2270Type.battleType.verify|verify} messages.
             * @param message battleType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game2270Type.IbattleType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a battleType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns battleType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2270Type.battleType;

            /**
             * Decodes a battleType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns battleType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2270Type.battleType;

            /**
             * Verifies a battleType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a battleType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns battleType
             */
            public static fromObject(object: { [k: string]: any }): game2270Type.battleType;

            /**
             * Creates a plain object from a battleType message. Also converts values to other types if specified.
             * @param message battleType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game2270Type.battleType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this battleType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace battleType {

            /** Properties of a fighterType. */
            interface IfighterType {

                /** fighterType id */
                id: number;

                /** fighterType hp */
                hp: number;

                /** fighterType maxHp */
                maxHp: number;
            }

            /** Represents a fighterType. */
            class fighterType implements IfighterType {

                /**
                 * Constructs a new fighterType.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: game2270Type.battleType.IfighterType);

                /** fighterType id. */
                public id: number;

                /** fighterType hp. */
                public hp: number;

                /** fighterType maxHp. */
                public maxHp: number;

                /**
                 * Creates a new fighterType instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns fighterType instance
                 */
                public static create(properties?: game2270Type.battleType.IfighterType): game2270Type.battleType.fighterType;

                /**
                 * Encodes the specified fighterType message. Does not implicitly {@link game2270Type.battleType.fighterType.verify|verify} messages.
                 * @param message fighterType message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: game2270Type.battleType.IfighterType, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified fighterType message, length delimited. Does not implicitly {@link game2270Type.battleType.fighterType.verify|verify} messages.
                 * @param message fighterType message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: game2270Type.battleType.IfighterType, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a fighterType message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns fighterType
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2270Type.battleType.fighterType;

                /**
                 * Decodes a fighterType message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns fighterType
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2270Type.battleType.fighterType;

                /**
                 * Verifies a fighterType message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string | null);

                /**
                 * Creates a fighterType message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns fighterType
                 */
                public static fromObject(object: { [k: string]: any }): game2270Type.battleType.fighterType;

                /**
                 * Creates a plain object from a fighterType message. Also converts values to other types if specified.
                 * @param message fighterType
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: game2270Type.battleType.fighterType, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this fighterType to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Represents a game2271Type. */
    export class game2271Type implements Igame2271Type {

        /**
         * Constructs a new game2271Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame2271Type);

        /** game2271Type data. */
        public data?: (game2271Type.Idata2271Type | null);

        /** game2271Type update. */
        public update: game2271Type.Iupdate2271Type[];

        /**
         * Creates a new game2271Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game2271Type instance
         */
        public static create(properties?: Igame2271Type): game2271Type;

        /**
         * Encodes the specified game2271Type message. Does not implicitly {@link game2271Type.verify|verify} messages.
         * @param message game2271Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame2271Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game2271Type message, length delimited. Does not implicitly {@link game2271Type.verify|verify} messages.
         * @param message game2271Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame2271Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game2271Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game2271Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2271Type;

        /**
         * Decodes a game2271Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game2271Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2271Type;

        /**
         * Verifies a game2271Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game2271Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game2271Type
         */
        public static fromObject(object: { [k: string]: any }): game2271Type;

        /**
         * Creates a plain object from a game2271Type message. Also converts values to other types if specified.
         * @param message game2271Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game2271Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game2271Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game2271Type {

        /** Properties of a data2271Type. */
        interface Idata2271Type {

            /** data2271Type gameState */
            gameState: number;

            /** data2271Type battle */
            battle?: (game2271Type.IbattleType | null);

            /** data2271Type coin */
            coin?: (number | Long | null);
        }

        /** Represents a data2271Type. */
        class data2271Type implements Idata2271Type {

            /**
             * Constructs a new data2271Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game2271Type.Idata2271Type);

            /** data2271Type gameState. */
            public gameState: number;

            /** data2271Type battle. */
            public battle?: (game2271Type.IbattleType | null);

            /** data2271Type coin. */
            public coin: (number | Long);

            /**
             * Creates a new data2271Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data2271Type instance
             */
            public static create(properties?: game2271Type.Idata2271Type): game2271Type.data2271Type;

            /**
             * Encodes the specified data2271Type message. Does not implicitly {@link game2271Type.data2271Type.verify|verify} messages.
             * @param message data2271Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game2271Type.Idata2271Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data2271Type message, length delimited. Does not implicitly {@link game2271Type.data2271Type.verify|verify} messages.
             * @param message data2271Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game2271Type.Idata2271Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data2271Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data2271Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2271Type.data2271Type;

            /**
             * Decodes a data2271Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data2271Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2271Type.data2271Type;

            /**
             * Verifies a data2271Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data2271Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data2271Type
             */
            public static fromObject(object: { [k: string]: any }): game2271Type.data2271Type;

            /**
             * Creates a plain object from a data2271Type message. Also converts values to other types if specified.
             * @param message data2271Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game2271Type.data2271Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data2271Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update2271Type. */
        interface Iupdate2271Type {

            /** update2271Type index */
            index: number;

            /** update2271Type gameState */
            gameState?: (number | null);

            /** update2271Type battle */
            battle?: (game2271Type.IbattleType | null);

            /** update2271Type coin */
            coin?: (number | Long | null);
        }

        /** Represents an update2271Type. */
        class update2271Type implements Iupdate2271Type {

            /**
             * Constructs a new update2271Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game2271Type.Iupdate2271Type);

            /** update2271Type index. */
            public index: number;

            /** update2271Type gameState. */
            public gameState: number;

            /** update2271Type battle. */
            public battle?: (game2271Type.IbattleType | null);

            /** update2271Type coin. */
            public coin: (number | Long);

            /**
             * Creates a new update2271Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update2271Type instance
             */
            public static create(properties?: game2271Type.Iupdate2271Type): game2271Type.update2271Type;

            /**
             * Encodes the specified update2271Type message. Does not implicitly {@link game2271Type.update2271Type.verify|verify} messages.
             * @param message update2271Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game2271Type.Iupdate2271Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update2271Type message, length delimited. Does not implicitly {@link game2271Type.update2271Type.verify|verify} messages.
             * @param message update2271Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game2271Type.Iupdate2271Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update2271Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update2271Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2271Type.update2271Type;

            /**
             * Decodes an update2271Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update2271Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2271Type.update2271Type;

            /**
             * Verifies an update2271Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update2271Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update2271Type
             */
            public static fromObject(object: { [k: string]: any }): game2271Type.update2271Type;

            /**
             * Creates a plain object from an update2271Type message. Also converts values to other types if specified.
             * @param message update2271Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game2271Type.update2271Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update2271Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a battleType. */
        interface IbattleType {

            /** battleType my */
            my: game2271Type.battleType.IfighterType;

            /** battleType enemy */
            enemy: game2271Type.battleType.IfighterType;
        }

        /** Represents a battleType. */
        class battleType implements IbattleType {

            /**
             * Constructs a new battleType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game2271Type.IbattleType);

            /** battleType my. */
            public my: game2271Type.battleType.IfighterType;

            /** battleType enemy. */
            public enemy: game2271Type.battleType.IfighterType;

            /**
             * Creates a new battleType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns battleType instance
             */
            public static create(properties?: game2271Type.IbattleType): game2271Type.battleType;

            /**
             * Encodes the specified battleType message. Does not implicitly {@link game2271Type.battleType.verify|verify} messages.
             * @param message battleType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game2271Type.IbattleType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified battleType message, length delimited. Does not implicitly {@link game2271Type.battleType.verify|verify} messages.
             * @param message battleType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game2271Type.IbattleType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a battleType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns battleType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2271Type.battleType;

            /**
             * Decodes a battleType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns battleType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2271Type.battleType;

            /**
             * Verifies a battleType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a battleType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns battleType
             */
            public static fromObject(object: { [k: string]: any }): game2271Type.battleType;

            /**
             * Creates a plain object from a battleType message. Also converts values to other types if specified.
             * @param message battleType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game2271Type.battleType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this battleType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace battleType {

            /** Properties of a fighterType. */
            interface IfighterType {

                /** fighterType id */
                id: number;

                /** fighterType hp */
                hp: number;

                /** fighterType maxHp */
                maxHp: number;
            }

            /** Represents a fighterType. */
            class fighterType implements IfighterType {

                /**
                 * Constructs a new fighterType.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: game2271Type.battleType.IfighterType);

                /** fighterType id. */
                public id: number;

                /** fighterType hp. */
                public hp: number;

                /** fighterType maxHp. */
                public maxHp: number;

                /**
                 * Creates a new fighterType instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns fighterType instance
                 */
                public static create(properties?: game2271Type.battleType.IfighterType): game2271Type.battleType.fighterType;

                /**
                 * Encodes the specified fighterType message. Does not implicitly {@link game2271Type.battleType.fighterType.verify|verify} messages.
                 * @param message fighterType message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: game2271Type.battleType.IfighterType, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified fighterType message, length delimited. Does not implicitly {@link game2271Type.battleType.fighterType.verify|verify} messages.
                 * @param message fighterType message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: game2271Type.battleType.IfighterType, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a fighterType message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns fighterType
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2271Type.battleType.fighterType;

                /**
                 * Decodes a fighterType message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns fighterType
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2271Type.battleType.fighterType;

                /**
                 * Verifies a fighterType message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string | null);

                /**
                 * Creates a fighterType message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns fighterType
                 */
                public static fromObject(object: { [k: string]: any }): game2271Type.battleType.fighterType;

                /**
                 * Creates a plain object from a fighterType message. Also converts values to other types if specified.
                 * @param message fighterType
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: game2271Type.battleType.fighterType, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this fighterType to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Represents a game2272Type. */
    export class game2272Type implements Igame2272Type {

        /**
         * Constructs a new game2272Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame2272Type);

        /** game2272Type data. */
        public data?: (game2272Type.Idata2272Type | null);

        /** game2272Type update. */
        public update: game2272Type.Iupdate2272Type[];

        /**
         * Creates a new game2272Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game2272Type instance
         */
        public static create(properties?: Igame2272Type): game2272Type;

        /**
         * Encodes the specified game2272Type message. Does not implicitly {@link game2272Type.verify|verify} messages.
         * @param message game2272Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame2272Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game2272Type message, length delimited. Does not implicitly {@link game2272Type.verify|verify} messages.
         * @param message game2272Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame2272Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game2272Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game2272Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2272Type;

        /**
         * Decodes a game2272Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game2272Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2272Type;

        /**
         * Verifies a game2272Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game2272Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game2272Type
         */
        public static fromObject(object: { [k: string]: any }): game2272Type;

        /**
         * Creates a plain object from a game2272Type message. Also converts values to other types if specified.
         * @param message game2272Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game2272Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game2272Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game2272Type {

        /** Properties of a data2272Type. */
        interface Idata2272Type {

            /** data2272Type gameState */
            gameState: number;

            /** data2272Type battle */
            battle?: (game2272Type.IbattleType | null);

            /** data2272Type coin */
            coin?: (number | Long | null);
        }

        /** Represents a data2272Type. */
        class data2272Type implements Idata2272Type {

            /**
             * Constructs a new data2272Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game2272Type.Idata2272Type);

            /** data2272Type gameState. */
            public gameState: number;

            /** data2272Type battle. */
            public battle?: (game2272Type.IbattleType | null);

            /** data2272Type coin. */
            public coin: (number | Long);

            /**
             * Creates a new data2272Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data2272Type instance
             */
            public static create(properties?: game2272Type.Idata2272Type): game2272Type.data2272Type;

            /**
             * Encodes the specified data2272Type message. Does not implicitly {@link game2272Type.data2272Type.verify|verify} messages.
             * @param message data2272Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game2272Type.Idata2272Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data2272Type message, length delimited. Does not implicitly {@link game2272Type.data2272Type.verify|verify} messages.
             * @param message data2272Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game2272Type.Idata2272Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data2272Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data2272Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2272Type.data2272Type;

            /**
             * Decodes a data2272Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data2272Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2272Type.data2272Type;

            /**
             * Verifies a data2272Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data2272Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data2272Type
             */
            public static fromObject(object: { [k: string]: any }): game2272Type.data2272Type;

            /**
             * Creates a plain object from a data2272Type message. Also converts values to other types if specified.
             * @param message data2272Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game2272Type.data2272Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data2272Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update2272Type. */
        interface Iupdate2272Type {

            /** update2272Type index */
            index: number;

            /** update2272Type gameState */
            gameState?: (number | null);

            /** update2272Type battle */
            battle?: (game2272Type.IbattleType | null);

            /** update2272Type coin */
            coin?: (number | Long | null);
        }

        /** Represents an update2272Type. */
        class update2272Type implements Iupdate2272Type {

            /**
             * Constructs a new update2272Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game2272Type.Iupdate2272Type);

            /** update2272Type index. */
            public index: number;

            /** update2272Type gameState. */
            public gameState: number;

            /** update2272Type battle. */
            public battle?: (game2272Type.IbattleType | null);

            /** update2272Type coin. */
            public coin: (number | Long);

            /**
             * Creates a new update2272Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update2272Type instance
             */
            public static create(properties?: game2272Type.Iupdate2272Type): game2272Type.update2272Type;

            /**
             * Encodes the specified update2272Type message. Does not implicitly {@link game2272Type.update2272Type.verify|verify} messages.
             * @param message update2272Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game2272Type.Iupdate2272Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update2272Type message, length delimited. Does not implicitly {@link game2272Type.update2272Type.verify|verify} messages.
             * @param message update2272Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game2272Type.Iupdate2272Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update2272Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update2272Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2272Type.update2272Type;

            /**
             * Decodes an update2272Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update2272Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2272Type.update2272Type;

            /**
             * Verifies an update2272Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update2272Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update2272Type
             */
            public static fromObject(object: { [k: string]: any }): game2272Type.update2272Type;

            /**
             * Creates a plain object from an update2272Type message. Also converts values to other types if specified.
             * @param message update2272Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game2272Type.update2272Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update2272Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a battleType. */
        interface IbattleType {

            /** battleType my */
            my: game2272Type.battleType.IfighterType;

            /** battleType enemy */
            enemy: game2272Type.battleType.IfighterType;
        }

        /** Represents a battleType. */
        class battleType implements IbattleType {

            /**
             * Constructs a new battleType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game2272Type.IbattleType);

            /** battleType my. */
            public my: game2272Type.battleType.IfighterType;

            /** battleType enemy. */
            public enemy: game2272Type.battleType.IfighterType;

            /**
             * Creates a new battleType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns battleType instance
             */
            public static create(properties?: game2272Type.IbattleType): game2272Type.battleType;

            /**
             * Encodes the specified battleType message. Does not implicitly {@link game2272Type.battleType.verify|verify} messages.
             * @param message battleType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game2272Type.IbattleType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified battleType message, length delimited. Does not implicitly {@link game2272Type.battleType.verify|verify} messages.
             * @param message battleType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game2272Type.IbattleType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a battleType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns battleType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2272Type.battleType;

            /**
             * Decodes a battleType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns battleType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2272Type.battleType;

            /**
             * Verifies a battleType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a battleType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns battleType
             */
            public static fromObject(object: { [k: string]: any }): game2272Type.battleType;

            /**
             * Creates a plain object from a battleType message. Also converts values to other types if specified.
             * @param message battleType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game2272Type.battleType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this battleType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace battleType {

            /** Properties of a fighterType. */
            interface IfighterType {

                /** fighterType id */
                id: number;

                /** fighterType hp */
                hp: number;

                /** fighterType maxHp */
                maxHp: number;
            }

            /** Represents a fighterType. */
            class fighterType implements IfighterType {

                /**
                 * Constructs a new fighterType.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: game2272Type.battleType.IfighterType);

                /** fighterType id. */
                public id: number;

                /** fighterType hp. */
                public hp: number;

                /** fighterType maxHp. */
                public maxHp: number;

                /**
                 * Creates a new fighterType instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns fighterType instance
                 */
                public static create(properties?: game2272Type.battleType.IfighterType): game2272Type.battleType.fighterType;

                /**
                 * Encodes the specified fighterType message. Does not implicitly {@link game2272Type.battleType.fighterType.verify|verify} messages.
                 * @param message fighterType message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: game2272Type.battleType.IfighterType, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified fighterType message, length delimited. Does not implicitly {@link game2272Type.battleType.fighterType.verify|verify} messages.
                 * @param message fighterType message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: game2272Type.battleType.IfighterType, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a fighterType message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns fighterType
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2272Type.battleType.fighterType;

                /**
                 * Decodes a fighterType message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns fighterType
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2272Type.battleType.fighterType;

                /**
                 * Verifies a fighterType message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string | null);

                /**
                 * Creates a fighterType message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns fighterType
                 */
                public static fromObject(object: { [k: string]: any }): game2272Type.battleType.fighterType;

                /**
                 * Creates a plain object from a fighterType message. Also converts values to other types if specified.
                 * @param message fighterType
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: game2272Type.battleType.fighterType, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this fighterType to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Represents a game2273Type. */
    export class game2273Type implements Igame2273Type {

        /**
         * Constructs a new game2273Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame2273Type);

        /** game2273Type data. */
        public data?: (game2273Type.Idata2273Type | null);

        /** game2273Type update. */
        public update: game2273Type.Iupdate2273Type[];

        /**
         * Creates a new game2273Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game2273Type instance
         */
        public static create(properties?: Igame2273Type): game2273Type;

        /**
         * Encodes the specified game2273Type message. Does not implicitly {@link game2273Type.verify|verify} messages.
         * @param message game2273Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame2273Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game2273Type message, length delimited. Does not implicitly {@link game2273Type.verify|verify} messages.
         * @param message game2273Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame2273Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game2273Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game2273Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2273Type;

        /**
         * Decodes a game2273Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game2273Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2273Type;

        /**
         * Verifies a game2273Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game2273Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game2273Type
         */
        public static fromObject(object: { [k: string]: any }): game2273Type;

        /**
         * Creates a plain object from a game2273Type message. Also converts values to other types if specified.
         * @param message game2273Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game2273Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game2273Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game2273Type {

        /** Properties of a data2273Type. */
        interface Idata2273Type {

            /** data2273Type redCoin */
            redCoin?: (number | Long | null);

            /** data2273Type wildMutiple */
            wildMutiple?: (number | null);

            /** data2273Type turntable */
            turntable?: (game2273Type.Iturntable2273Type[] | null);
        }

        /** Represents a data2273Type. */
        class data2273Type implements Idata2273Type {

            /**
             * Constructs a new data2273Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game2273Type.Idata2273Type);

            /** data2273Type redCoin. */
            public redCoin: (number | Long);

            /** data2273Type wildMutiple. */
            public wildMutiple: number;

            /** data2273Type turntable. */
            public turntable: game2273Type.Iturntable2273Type[];

            /**
             * Creates a new data2273Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data2273Type instance
             */
            public static create(properties?: game2273Type.Idata2273Type): game2273Type.data2273Type;

            /**
             * Encodes the specified data2273Type message. Does not implicitly {@link game2273Type.data2273Type.verify|verify} messages.
             * @param message data2273Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game2273Type.Idata2273Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data2273Type message, length delimited. Does not implicitly {@link game2273Type.data2273Type.verify|verify} messages.
             * @param message data2273Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game2273Type.Idata2273Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data2273Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data2273Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2273Type.data2273Type;

            /**
             * Decodes a data2273Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data2273Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2273Type.data2273Type;

            /**
             * Verifies a data2273Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data2273Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data2273Type
             */
            public static fromObject(object: { [k: string]: any }): game2273Type.data2273Type;

            /**
             * Creates a plain object from a data2273Type message. Also converts values to other types if specified.
             * @param message data2273Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game2273Type.data2273Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data2273Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update2273Type. */
        interface Iupdate2273Type {

            /** update2273Type index */
            index: number;

            /** update2273Type redCoin */
            redCoin?: (number | Long | null);

            /** update2273Type wildMutiple */
            wildMutiple?: (number | null);

            /** update2273Type turntable */
            turntable?: (game2273Type.Iturntable2273Type[] | null);
        }

        /** Represents an update2273Type. */
        class update2273Type implements Iupdate2273Type {

            /**
             * Constructs a new update2273Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game2273Type.Iupdate2273Type);

            /** update2273Type index. */
            public index: number;

            /** update2273Type redCoin. */
            public redCoin: (number | Long);

            /** update2273Type wildMutiple. */
            public wildMutiple: number;

            /** update2273Type turntable. */
            public turntable: game2273Type.Iturntable2273Type[];

            /**
             * Creates a new update2273Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update2273Type instance
             */
            public static create(properties?: game2273Type.Iupdate2273Type): game2273Type.update2273Type;

            /**
             * Encodes the specified update2273Type message. Does not implicitly {@link game2273Type.update2273Type.verify|verify} messages.
             * @param message update2273Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game2273Type.Iupdate2273Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update2273Type message, length delimited. Does not implicitly {@link game2273Type.update2273Type.verify|verify} messages.
             * @param message update2273Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game2273Type.Iupdate2273Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update2273Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update2273Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2273Type.update2273Type;

            /**
             * Decodes an update2273Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update2273Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2273Type.update2273Type;

            /**
             * Verifies an update2273Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update2273Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update2273Type
             */
            public static fromObject(object: { [k: string]: any }): game2273Type.update2273Type;

            /**
             * Creates a plain object from an update2273Type message. Also converts values to other types if specified.
             * @param message update2273Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game2273Type.update2273Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update2273Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a turntable2273Type. */
        interface Iturntable2273Type {

            /** turntable2273Type type */
            type?: (number | null);

            /** turntable2273Type value */
            value?: (number | Long | null);
        }

        /** Represents a turntable2273Type. */
        class turntable2273Type implements Iturntable2273Type {

            /**
             * Constructs a new turntable2273Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game2273Type.Iturntable2273Type);

            /** turntable2273Type type. */
            public type: number;

            /** turntable2273Type value. */
            public value: (number | Long);

            /**
             * Creates a new turntable2273Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns turntable2273Type instance
             */
            public static create(properties?: game2273Type.Iturntable2273Type): game2273Type.turntable2273Type;

            /**
             * Encodes the specified turntable2273Type message. Does not implicitly {@link game2273Type.turntable2273Type.verify|verify} messages.
             * @param message turntable2273Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game2273Type.Iturntable2273Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified turntable2273Type message, length delimited. Does not implicitly {@link game2273Type.turntable2273Type.verify|verify} messages.
             * @param message turntable2273Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game2273Type.Iturntable2273Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a turntable2273Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns turntable2273Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2273Type.turntable2273Type;

            /**
             * Decodes a turntable2273Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns turntable2273Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2273Type.turntable2273Type;

            /**
             * Verifies a turntable2273Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a turntable2273Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns turntable2273Type
             */
            public static fromObject(object: { [k: string]: any }): game2273Type.turntable2273Type;

            /**
             * Creates a plain object from a turntable2273Type message. Also converts values to other types if specified.
             * @param message turntable2273Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game2273Type.turntable2273Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this turntable2273Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game2274Type. */
    export class game2274Type implements Igame2274Type {

        /**
         * Constructs a new game2274Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame2274Type);

        /** game2274Type data. */
        public data?: (game2274Type.Idata2274Type | null);

        /** game2274Type update. */
        public update: game2274Type.Iupdate2274Type[];

        /**
         * Creates a new game2274Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game2274Type instance
         */
        public static create(properties?: Igame2274Type): game2274Type;

        /**
         * Encodes the specified game2274Type message. Does not implicitly {@link game2274Type.verify|verify} messages.
         * @param message game2274Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame2274Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game2274Type message, length delimited. Does not implicitly {@link game2274Type.verify|verify} messages.
         * @param message game2274Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame2274Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game2274Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game2274Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2274Type;

        /**
         * Decodes a game2274Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game2274Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2274Type;

        /**
         * Verifies a game2274Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game2274Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game2274Type
         */
        public static fromObject(object: { [k: string]: any }): game2274Type;

        /**
         * Creates a plain object from a game2274Type message. Also converts values to other types if specified.
         * @param message game2274Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game2274Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game2274Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game2274Type {

        /** Properties of a data2274Type. */
        interface Idata2274Type {

            /** data2274Type turntableMultiple */
            turntableMultiple?: (number | null);

            /** data2274Type diamonds */
            diamonds: number;

            /** data2274Type rollerList */
            rollerList?: (number[] | null);

            /** data2274Type personalJackpot */
            personalJackpot?: (number | Long | null);
        }

        /** Represents a data2274Type. */
        class data2274Type implements Idata2274Type {

            /**
             * Constructs a new data2274Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game2274Type.Idata2274Type);

            /** data2274Type turntableMultiple. */
            public turntableMultiple: number;

            /** data2274Type diamonds. */
            public diamonds: number;

            /** data2274Type rollerList. */
            public rollerList: number[];

            /** data2274Type personalJackpot. */
            public personalJackpot: (number | Long);

            /**
             * Creates a new data2274Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data2274Type instance
             */
            public static create(properties?: game2274Type.Idata2274Type): game2274Type.data2274Type;

            /**
             * Encodes the specified data2274Type message. Does not implicitly {@link game2274Type.data2274Type.verify|verify} messages.
             * @param message data2274Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game2274Type.Idata2274Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data2274Type message, length delimited. Does not implicitly {@link game2274Type.data2274Type.verify|verify} messages.
             * @param message data2274Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game2274Type.Idata2274Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data2274Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data2274Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2274Type.data2274Type;

            /**
             * Decodes a data2274Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data2274Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2274Type.data2274Type;

            /**
             * Verifies a data2274Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data2274Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data2274Type
             */
            public static fromObject(object: { [k: string]: any }): game2274Type.data2274Type;

            /**
             * Creates a plain object from a data2274Type message. Also converts values to other types if specified.
             * @param message data2274Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game2274Type.data2274Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data2274Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update2274Type. */
        interface Iupdate2274Type {

            /** update2274Type index */
            index: number;

            /** update2274Type turntableMultiple */
            turntableMultiple?: (number | null);

            /** update2274Type diamonds */
            diamonds: number;

            /** update2274Type rollerList */
            rollerList?: (number[] | null);

            /** update2274Type personalJackpot */
            personalJackpot?: (number | Long | null);
        }

        /** Represents an update2274Type. */
        class update2274Type implements Iupdate2274Type {

            /**
             * Constructs a new update2274Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game2274Type.Iupdate2274Type);

            /** update2274Type index. */
            public index: number;

            /** update2274Type turntableMultiple. */
            public turntableMultiple: number;

            /** update2274Type diamonds. */
            public diamonds: number;

            /** update2274Type rollerList. */
            public rollerList: number[];

            /** update2274Type personalJackpot. */
            public personalJackpot: (number | Long);

            /**
             * Creates a new update2274Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update2274Type instance
             */
            public static create(properties?: game2274Type.Iupdate2274Type): game2274Type.update2274Type;

            /**
             * Encodes the specified update2274Type message. Does not implicitly {@link game2274Type.update2274Type.verify|verify} messages.
             * @param message update2274Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game2274Type.Iupdate2274Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update2274Type message, length delimited. Does not implicitly {@link game2274Type.update2274Type.verify|verify} messages.
             * @param message update2274Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game2274Type.Iupdate2274Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update2274Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update2274Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2274Type.update2274Type;

            /**
             * Decodes an update2274Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update2274Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2274Type.update2274Type;

            /**
             * Verifies an update2274Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update2274Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update2274Type
             */
            public static fromObject(object: { [k: string]: any }): game2274Type.update2274Type;

            /**
             * Creates a plain object from an update2274Type message. Also converts values to other types if specified.
             * @param message update2274Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game2274Type.update2274Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update2274Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game2278Type. */
    export class game2278Type implements Igame2278Type {

        /**
         * Constructs a new game2278Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame2278Type);

        /** game2278Type data. */
        public data?: (game2278Type.Idata2278Type | null);

        /** game2278Type update. */
        public update: game2278Type.Iupdate2278Type[];

        /**
         * Creates a new game2278Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game2278Type instance
         */
        public static create(properties?: Igame2278Type): game2278Type;

        /**
         * Encodes the specified game2278Type message. Does not implicitly {@link game2278Type.verify|verify} messages.
         * @param message game2278Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame2278Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game2278Type message, length delimited. Does not implicitly {@link game2278Type.verify|verify} messages.
         * @param message game2278Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame2278Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game2278Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game2278Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2278Type;

        /**
         * Decodes a game2278Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game2278Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2278Type;

        /**
         * Verifies a game2278Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game2278Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game2278Type
         */
        public static fromObject(object: { [k: string]: any }): game2278Type;

        /**
         * Creates a plain object from a game2278Type message. Also converts values to other types if specified.
         * @param message game2278Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game2278Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game2278Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game2278Type {

        /** Properties of a data2278Type. */
        interface Idata2278Type {

            /** data2278Type turntableMultiple */
            turntableMultiple?: (number | null);

            /** data2278Type football */
            football: number;

            /** data2278Type posList */
            posList?: (number[] | null);
        }

        /** Represents a data2278Type. */
        class data2278Type implements Idata2278Type {

            /**
             * Constructs a new data2278Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game2278Type.Idata2278Type);

            /** data2278Type turntableMultiple. */
            public turntableMultiple: number;

            /** data2278Type football. */
            public football: number;

            /** data2278Type posList. */
            public posList: number[];

            /**
             * Creates a new data2278Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data2278Type instance
             */
            public static create(properties?: game2278Type.Idata2278Type): game2278Type.data2278Type;

            /**
             * Encodes the specified data2278Type message. Does not implicitly {@link game2278Type.data2278Type.verify|verify} messages.
             * @param message data2278Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game2278Type.Idata2278Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data2278Type message, length delimited. Does not implicitly {@link game2278Type.data2278Type.verify|verify} messages.
             * @param message data2278Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game2278Type.Idata2278Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data2278Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data2278Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2278Type.data2278Type;

            /**
             * Decodes a data2278Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data2278Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2278Type.data2278Type;

            /**
             * Verifies a data2278Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data2278Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data2278Type
             */
            public static fromObject(object: { [k: string]: any }): game2278Type.data2278Type;

            /**
             * Creates a plain object from a data2278Type message. Also converts values to other types if specified.
             * @param message data2278Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game2278Type.data2278Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data2278Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update2278Type. */
        interface Iupdate2278Type {

            /** update2278Type index */
            index: number;

            /** update2278Type turntableMultiple */
            turntableMultiple?: (number | null);

            /** update2278Type football */
            football: number;

            /** update2278Type posList */
            posList?: (number[] | null);
        }

        /** Represents an update2278Type. */
        class update2278Type implements Iupdate2278Type {

            /**
             * Constructs a new update2278Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game2278Type.Iupdate2278Type);

            /** update2278Type index. */
            public index: number;

            /** update2278Type turntableMultiple. */
            public turntableMultiple: number;

            /** update2278Type football. */
            public football: number;

            /** update2278Type posList. */
            public posList: number[];

            /**
             * Creates a new update2278Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update2278Type instance
             */
            public static create(properties?: game2278Type.Iupdate2278Type): game2278Type.update2278Type;

            /**
             * Encodes the specified update2278Type message. Does not implicitly {@link game2278Type.update2278Type.verify|verify} messages.
             * @param message update2278Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game2278Type.Iupdate2278Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update2278Type message, length delimited. Does not implicitly {@link game2278Type.update2278Type.verify|verify} messages.
             * @param message update2278Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game2278Type.Iupdate2278Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update2278Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update2278Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2278Type.update2278Type;

            /**
             * Decodes an update2278Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update2278Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2278Type.update2278Type;

            /**
             * Verifies an update2278Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update2278Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update2278Type
             */
            public static fromObject(object: { [k: string]: any }): game2278Type.update2278Type;

            /**
             * Creates a plain object from an update2278Type message. Also converts values to other types if specified.
             * @param message update2278Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game2278Type.update2278Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update2278Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game2282Type. */
    export class game2282Type implements Igame2282Type {

        /**
         * Constructs a new game2282Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame2282Type);

        /** game2282Type data. */
        public data?: (game2282Type.Idata2282Type | null);

        /** game2282Type update. */
        public update: game2282Type.Iupdate2282Type[];

        /**
         * Creates a new game2282Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game2282Type instance
         */
        public static create(properties?: Igame2282Type): game2282Type;

        /**
         * Encodes the specified game2282Type message. Does not implicitly {@link game2282Type.verify|verify} messages.
         * @param message game2282Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame2282Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game2282Type message, length delimited. Does not implicitly {@link game2282Type.verify|verify} messages.
         * @param message game2282Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame2282Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game2282Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game2282Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2282Type;

        /**
         * Decodes a game2282Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game2282Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2282Type;

        /**
         * Verifies a game2282Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game2282Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game2282Type
         */
        public static fromObject(object: { [k: string]: any }): game2282Type;

        /**
         * Creates a plain object from a game2282Type message. Also converts values to other types if specified.
         * @param message game2282Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game2282Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game2282Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game2282Type {

        /** Properties of a data2282Type. */
        interface Idata2282Type {

            /** data2282Type resultList */
            resultList?: (game2282Type.IResultType[] | null);
        }

        /** Represents a data2282Type. */
        class data2282Type implements Idata2282Type {

            /**
             * Constructs a new data2282Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game2282Type.Idata2282Type);

            /** data2282Type resultList. */
            public resultList: game2282Type.IResultType[];

            /**
             * Creates a new data2282Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data2282Type instance
             */
            public static create(properties?: game2282Type.Idata2282Type): game2282Type.data2282Type;

            /**
             * Encodes the specified data2282Type message. Does not implicitly {@link game2282Type.data2282Type.verify|verify} messages.
             * @param message data2282Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game2282Type.Idata2282Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data2282Type message, length delimited. Does not implicitly {@link game2282Type.data2282Type.verify|verify} messages.
             * @param message data2282Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game2282Type.Idata2282Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data2282Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data2282Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2282Type.data2282Type;

            /**
             * Decodes a data2282Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data2282Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2282Type.data2282Type;

            /**
             * Verifies a data2282Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data2282Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data2282Type
             */
            public static fromObject(object: { [k: string]: any }): game2282Type.data2282Type;

            /**
             * Creates a plain object from a data2282Type message. Also converts values to other types if specified.
             * @param message data2282Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game2282Type.data2282Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data2282Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update2282Type. */
        interface Iupdate2282Type {

            /** update2282Type index */
            index: number;

            /** update2282Type resultList */
            resultList?: (game2282Type.IResultType[] | null);
        }

        /** Represents an update2282Type. */
        class update2282Type implements Iupdate2282Type {

            /**
             * Constructs a new update2282Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game2282Type.Iupdate2282Type);

            /** update2282Type index. */
            public index: number;

            /** update2282Type resultList. */
            public resultList: game2282Type.IResultType[];

            /**
             * Creates a new update2282Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update2282Type instance
             */
            public static create(properties?: game2282Type.Iupdate2282Type): game2282Type.update2282Type;

            /**
             * Encodes the specified update2282Type message. Does not implicitly {@link game2282Type.update2282Type.verify|verify} messages.
             * @param message update2282Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game2282Type.Iupdate2282Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update2282Type message, length delimited. Does not implicitly {@link game2282Type.update2282Type.verify|verify} messages.
             * @param message update2282Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game2282Type.Iupdate2282Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update2282Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update2282Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2282Type.update2282Type;

            /**
             * Decodes an update2282Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update2282Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2282Type.update2282Type;

            /**
             * Verifies an update2282Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update2282Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update2282Type
             */
            public static fromObject(object: { [k: string]: any }): game2282Type.update2282Type;

            /**
             * Creates a plain object from an update2282Type message. Also converts values to other types if specified.
             * @param message update2282Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game2282Type.update2282Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update2282Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ResultType. */
        interface IResultType {

            /** ResultType spinResult */
            spinResult: IspinResultType;

            /** ResultType removePos */
            removePos?: (number[] | null);
        }

        /** Represents a ResultType. */
        class ResultType implements IResultType {

            /**
             * Constructs a new ResultType.
             * @param [properties] Properties to set
             */
            constructor(properties?: game2282Type.IResultType);

            /** ResultType spinResult. */
            public spinResult: IspinResultType;

            /** ResultType removePos. */
            public removePos: number[];

            /**
             * Creates a new ResultType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ResultType instance
             */
            public static create(properties?: game2282Type.IResultType): game2282Type.ResultType;

            /**
             * Encodes the specified ResultType message. Does not implicitly {@link game2282Type.ResultType.verify|verify} messages.
             * @param message ResultType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game2282Type.IResultType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ResultType message, length delimited. Does not implicitly {@link game2282Type.ResultType.verify|verify} messages.
             * @param message ResultType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game2282Type.IResultType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResultType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ResultType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2282Type.ResultType;

            /**
             * Decodes a ResultType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ResultType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2282Type.ResultType;

            /**
             * Verifies a ResultType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a ResultType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ResultType
             */
            public static fromObject(object: { [k: string]: any }): game2282Type.ResultType;

            /**
             * Creates a plain object from a ResultType message. Also converts values to other types if specified.
             * @param message ResultType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game2282Type.ResultType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ResultType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game2283Type. */
    export class game2283Type implements Igame2283Type {

        /**
         * Constructs a new game2283Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame2283Type);

        /** game2283Type data. */
        public data?: (game2283Type.Idata2283Type | null);

        /** game2283Type update. */
        public update: game2283Type.Iupdate2283Type[];

        /**
         * Creates a new game2283Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game2283Type instance
         */
        public static create(properties?: Igame2283Type): game2283Type;

        /**
         * Encodes the specified game2283Type message. Does not implicitly {@link game2283Type.verify|verify} messages.
         * @param message game2283Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame2283Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game2283Type message, length delimited. Does not implicitly {@link game2283Type.verify|verify} messages.
         * @param message game2283Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame2283Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game2283Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game2283Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2283Type;

        /**
         * Decodes a game2283Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game2283Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2283Type;

        /**
         * Verifies a game2283Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game2283Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game2283Type
         */
        public static fromObject(object: { [k: string]: any }): game2283Type;

        /**
         * Creates a plain object from a game2283Type message. Also converts values to other types if specified.
         * @param message game2283Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game2283Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game2283Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game2283Type {

        /** Properties of a data2283Type. */
        interface Idata2283Type {

            /** data2283Type multipleList */
            multipleList?: (game2283Type.Imultiple2283Type[] | null);

            /** data2283Type multipleBeforeCoin */
            multipleBeforeCoin?: (number | Long | null);

            /** data2283Type multipleAfterCoin */
            multipleAfterCoin?: (number | Long | null);
        }

        /** Represents a data2283Type. */
        class data2283Type implements Idata2283Type {

            /**
             * Constructs a new data2283Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game2283Type.Idata2283Type);

            /** data2283Type multipleList. */
            public multipleList: game2283Type.Imultiple2283Type[];

            /** data2283Type multipleBeforeCoin. */
            public multipleBeforeCoin: (number | Long);

            /** data2283Type multipleAfterCoin. */
            public multipleAfterCoin: (number | Long);

            /**
             * Creates a new data2283Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data2283Type instance
             */
            public static create(properties?: game2283Type.Idata2283Type): game2283Type.data2283Type;

            /**
             * Encodes the specified data2283Type message. Does not implicitly {@link game2283Type.data2283Type.verify|verify} messages.
             * @param message data2283Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game2283Type.Idata2283Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data2283Type message, length delimited. Does not implicitly {@link game2283Type.data2283Type.verify|verify} messages.
             * @param message data2283Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game2283Type.Idata2283Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data2283Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data2283Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2283Type.data2283Type;

            /**
             * Decodes a data2283Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data2283Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2283Type.data2283Type;

            /**
             * Verifies a data2283Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data2283Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data2283Type
             */
            public static fromObject(object: { [k: string]: any }): game2283Type.data2283Type;

            /**
             * Creates a plain object from a data2283Type message. Also converts values to other types if specified.
             * @param message data2283Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game2283Type.data2283Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data2283Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update2283Type. */
        interface Iupdate2283Type {

            /** update2283Type index */
            index: number;

            /** update2283Type multipleList */
            multipleList?: (game2283Type.Imultiple2283Type[] | null);

            /** update2283Type multipleBeforeCoin */
            multipleBeforeCoin?: (number | Long | null);

            /** update2283Type multipleAfterCoin */
            multipleAfterCoin?: (number | Long | null);
        }

        /** Represents an update2283Type. */
        class update2283Type implements Iupdate2283Type {

            /**
             * Constructs a new update2283Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game2283Type.Iupdate2283Type);

            /** update2283Type index. */
            public index: number;

            /** update2283Type multipleList. */
            public multipleList: game2283Type.Imultiple2283Type[];

            /** update2283Type multipleBeforeCoin. */
            public multipleBeforeCoin: (number | Long);

            /** update2283Type multipleAfterCoin. */
            public multipleAfterCoin: (number | Long);

            /**
             * Creates a new update2283Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update2283Type instance
             */
            public static create(properties?: game2283Type.Iupdate2283Type): game2283Type.update2283Type;

            /**
             * Encodes the specified update2283Type message. Does not implicitly {@link game2283Type.update2283Type.verify|verify} messages.
             * @param message update2283Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game2283Type.Iupdate2283Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update2283Type message, length delimited. Does not implicitly {@link game2283Type.update2283Type.verify|verify} messages.
             * @param message update2283Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game2283Type.Iupdate2283Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update2283Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update2283Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2283Type.update2283Type;

            /**
             * Decodes an update2283Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update2283Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2283Type.update2283Type;

            /**
             * Verifies an update2283Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update2283Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update2283Type
             */
            public static fromObject(object: { [k: string]: any }): game2283Type.update2283Type;

            /**
             * Creates a plain object from an update2283Type message. Also converts values to other types if specified.
             * @param message update2283Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game2283Type.update2283Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update2283Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a multiple2283Type. */
        interface Imultiple2283Type {

            /** multiple2283Type pos */
            pos?: (number | null);

            /** multiple2283Type multiple */
            multiple?: (number | null);
        }

        /** Represents a multiple2283Type. */
        class multiple2283Type implements Imultiple2283Type {

            /**
             * Constructs a new multiple2283Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game2283Type.Imultiple2283Type);

            /** multiple2283Type pos. */
            public pos: number;

            /** multiple2283Type multiple. */
            public multiple: number;

            /**
             * Creates a new multiple2283Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns multiple2283Type instance
             */
            public static create(properties?: game2283Type.Imultiple2283Type): game2283Type.multiple2283Type;

            /**
             * Encodes the specified multiple2283Type message. Does not implicitly {@link game2283Type.multiple2283Type.verify|verify} messages.
             * @param message multiple2283Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game2283Type.Imultiple2283Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified multiple2283Type message, length delimited. Does not implicitly {@link game2283Type.multiple2283Type.verify|verify} messages.
             * @param message multiple2283Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game2283Type.Imultiple2283Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a multiple2283Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns multiple2283Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2283Type.multiple2283Type;

            /**
             * Decodes a multiple2283Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns multiple2283Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2283Type.multiple2283Type;

            /**
             * Verifies a multiple2283Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a multiple2283Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns multiple2283Type
             */
            public static fromObject(object: { [k: string]: any }): game2283Type.multiple2283Type;

            /**
             * Creates a plain object from a multiple2283Type message. Also converts values to other types if specified.
             * @param message multiple2283Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game2283Type.multiple2283Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this multiple2283Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game2523Type. */
    export class game2523Type implements Igame2523Type {

        /**
         * Constructs a new game2523Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame2523Type);

        /** game2523Type data. */
        public data?: (game2523Type.Idata2523Type | null);

        /** game2523Type update. */
        public update: game2523Type.Iupdate2523Type[];

        /**
         * Creates a new game2523Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game2523Type instance
         */
        public static create(properties?: Igame2523Type): game2523Type;

        /**
         * Encodes the specified game2523Type message. Does not implicitly {@link game2523Type.verify|verify} messages.
         * @param message game2523Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame2523Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game2523Type message, length delimited. Does not implicitly {@link game2523Type.verify|verify} messages.
         * @param message game2523Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame2523Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game2523Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game2523Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2523Type;

        /**
         * Decodes a game2523Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game2523Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2523Type;

        /**
         * Verifies a game2523Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game2523Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game2523Type
         */
        public static fromObject(object: { [k: string]: any }): game2523Type;

        /**
         * Creates a plain object from a game2523Type message. Also converts values to other types if specified.
         * @param message game2523Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game2523Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game2523Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game2523Type {

        /** Properties of a data2523Type. */
        interface Idata2523Type {

            /** data2523Type wildMutiple */
            wildMutiple?: (number | null);
        }

        /** Represents a data2523Type. */
        class data2523Type implements Idata2523Type {

            /**
             * Constructs a new data2523Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game2523Type.Idata2523Type);

            /** data2523Type wildMutiple. */
            public wildMutiple: number;

            /**
             * Creates a new data2523Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data2523Type instance
             */
            public static create(properties?: game2523Type.Idata2523Type): game2523Type.data2523Type;

            /**
             * Encodes the specified data2523Type message. Does not implicitly {@link game2523Type.data2523Type.verify|verify} messages.
             * @param message data2523Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game2523Type.Idata2523Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data2523Type message, length delimited. Does not implicitly {@link game2523Type.data2523Type.verify|verify} messages.
             * @param message data2523Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game2523Type.Idata2523Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data2523Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data2523Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2523Type.data2523Type;

            /**
             * Decodes a data2523Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data2523Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2523Type.data2523Type;

            /**
             * Verifies a data2523Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data2523Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data2523Type
             */
            public static fromObject(object: { [k: string]: any }): game2523Type.data2523Type;

            /**
             * Creates a plain object from a data2523Type message. Also converts values to other types if specified.
             * @param message data2523Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game2523Type.data2523Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data2523Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update2523Type. */
        interface Iupdate2523Type {

            /** update2523Type index */
            index: number;

            /** update2523Type wildMutiple */
            wildMutiple?: (number | null);
        }

        /** Represents an update2523Type. */
        class update2523Type implements Iupdate2523Type {

            /**
             * Constructs a new update2523Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game2523Type.Iupdate2523Type);

            /** update2523Type index. */
            public index: number;

            /** update2523Type wildMutiple. */
            public wildMutiple: number;

            /**
             * Creates a new update2523Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update2523Type instance
             */
            public static create(properties?: game2523Type.Iupdate2523Type): game2523Type.update2523Type;

            /**
             * Encodes the specified update2523Type message. Does not implicitly {@link game2523Type.update2523Type.verify|verify} messages.
             * @param message update2523Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game2523Type.Iupdate2523Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update2523Type message, length delimited. Does not implicitly {@link game2523Type.update2523Type.verify|verify} messages.
             * @param message update2523Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game2523Type.Iupdate2523Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update2523Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update2523Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2523Type.update2523Type;

            /**
             * Decodes an update2523Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update2523Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2523Type.update2523Type;

            /**
             * Verifies an update2523Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update2523Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update2523Type
             */
            public static fromObject(object: { [k: string]: any }): game2523Type.update2523Type;

            /**
             * Creates a plain object from an update2523Type message. Also converts values to other types if specified.
             * @param message update2523Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game2523Type.update2523Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update2523Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game2525Type. */
    export class game2525Type implements Igame2525Type {

        /**
         * Constructs a new game2525Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame2525Type);

        /** game2525Type data. */
        public data?: (game2525Type.Idata2525Type | null);

        /** game2525Type update. */
        public update: game2525Type.Iupdate2525Type[];

        /**
         * Creates a new game2525Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game2525Type instance
         */
        public static create(properties?: Igame2525Type): game2525Type;

        /**
         * Encodes the specified game2525Type message. Does not implicitly {@link game2525Type.verify|verify} messages.
         * @param message game2525Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame2525Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game2525Type message, length delimited. Does not implicitly {@link game2525Type.verify|verify} messages.
         * @param message game2525Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame2525Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game2525Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game2525Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2525Type;

        /**
         * Decodes a game2525Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game2525Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2525Type;

        /**
         * Verifies a game2525Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game2525Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game2525Type
         */
        public static fromObject(object: { [k: string]: any }): game2525Type;

        /**
         * Creates a plain object from a game2525Type message. Also converts values to other types if specified.
         * @param message game2525Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game2525Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game2525Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game2525Type {

        /** Properties of a data2525Type. */
        interface Idata2525Type {

            /** data2525Type changeRollerList */
            changeRollerList?: (game2525Type.IchangeRoller2525Type[] | null);
        }

        /** Represents a data2525Type. */
        class data2525Type implements Idata2525Type {

            /**
             * Constructs a new data2525Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game2525Type.Idata2525Type);

            /** data2525Type changeRollerList. */
            public changeRollerList: game2525Type.IchangeRoller2525Type[];

            /**
             * Creates a new data2525Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data2525Type instance
             */
            public static create(properties?: game2525Type.Idata2525Type): game2525Type.data2525Type;

            /**
             * Encodes the specified data2525Type message. Does not implicitly {@link game2525Type.data2525Type.verify|verify} messages.
             * @param message data2525Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game2525Type.Idata2525Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data2525Type message, length delimited. Does not implicitly {@link game2525Type.data2525Type.verify|verify} messages.
             * @param message data2525Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game2525Type.Idata2525Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data2525Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data2525Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2525Type.data2525Type;

            /**
             * Decodes a data2525Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data2525Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2525Type.data2525Type;

            /**
             * Verifies a data2525Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data2525Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data2525Type
             */
            public static fromObject(object: { [k: string]: any }): game2525Type.data2525Type;

            /**
             * Creates a plain object from a data2525Type message. Also converts values to other types if specified.
             * @param message data2525Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game2525Type.data2525Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data2525Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update2525Type. */
        interface Iupdate2525Type {

            /** update2525Type index */
            index: number;

            /** update2525Type changeRollerList */
            changeRollerList?: (game2525Type.IchangeRoller2525Type[] | null);
        }

        /** Represents an update2525Type. */
        class update2525Type implements Iupdate2525Type {

            /**
             * Constructs a new update2525Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game2525Type.Iupdate2525Type);

            /** update2525Type index. */
            public index: number;

            /** update2525Type changeRollerList. */
            public changeRollerList: game2525Type.IchangeRoller2525Type[];

            /**
             * Creates a new update2525Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update2525Type instance
             */
            public static create(properties?: game2525Type.Iupdate2525Type): game2525Type.update2525Type;

            /**
             * Encodes the specified update2525Type message. Does not implicitly {@link game2525Type.update2525Type.verify|verify} messages.
             * @param message update2525Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game2525Type.Iupdate2525Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update2525Type message, length delimited. Does not implicitly {@link game2525Type.update2525Type.verify|verify} messages.
             * @param message update2525Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game2525Type.Iupdate2525Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update2525Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update2525Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2525Type.update2525Type;

            /**
             * Decodes an update2525Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update2525Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2525Type.update2525Type;

            /**
             * Verifies an update2525Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update2525Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update2525Type
             */
            public static fromObject(object: { [k: string]: any }): game2525Type.update2525Type;

            /**
             * Creates a plain object from an update2525Type message. Also converts values to other types if specified.
             * @param message update2525Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game2525Type.update2525Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update2525Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a changeRoller2525Type. */
        interface IchangeRoller2525Type {

            /** changeRoller2525Type rollerId */
            rollerId?: (number | null);

            /** changeRoller2525Type elementId */
            elementId?: (number | null);

            /** changeRoller2525Type triggerRollerId */
            triggerRollerId?: (number | null);
        }

        /** Represents a changeRoller2525Type. */
        class changeRoller2525Type implements IchangeRoller2525Type {

            /**
             * Constructs a new changeRoller2525Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game2525Type.IchangeRoller2525Type);

            /** changeRoller2525Type rollerId. */
            public rollerId: number;

            /** changeRoller2525Type elementId. */
            public elementId: number;

            /** changeRoller2525Type triggerRollerId. */
            public triggerRollerId: number;

            /**
             * Creates a new changeRoller2525Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns changeRoller2525Type instance
             */
            public static create(properties?: game2525Type.IchangeRoller2525Type): game2525Type.changeRoller2525Type;

            /**
             * Encodes the specified changeRoller2525Type message. Does not implicitly {@link game2525Type.changeRoller2525Type.verify|verify} messages.
             * @param message changeRoller2525Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game2525Type.IchangeRoller2525Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified changeRoller2525Type message, length delimited. Does not implicitly {@link game2525Type.changeRoller2525Type.verify|verify} messages.
             * @param message changeRoller2525Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game2525Type.IchangeRoller2525Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a changeRoller2525Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns changeRoller2525Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2525Type.changeRoller2525Type;

            /**
             * Decodes a changeRoller2525Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns changeRoller2525Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2525Type.changeRoller2525Type;

            /**
             * Verifies a changeRoller2525Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a changeRoller2525Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns changeRoller2525Type
             */
            public static fromObject(object: { [k: string]: any }): game2525Type.changeRoller2525Type;

            /**
             * Creates a plain object from a changeRoller2525Type message. Also converts values to other types if specified.
             * @param message changeRoller2525Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game2525Type.changeRoller2525Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this changeRoller2525Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game2529Type. */
    export class game2529Type implements Igame2529Type {

        /**
         * Constructs a new game2529Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame2529Type);

        /** game2529Type data. */
        public data?: (game2529Type.Idata2529Type | null);

        /** game2529Type update. */
        public update: game2529Type.Iupdate2529Type[];

        /**
         * Creates a new game2529Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game2529Type instance
         */
        public static create(properties?: Igame2529Type): game2529Type;

        /**
         * Encodes the specified game2529Type message. Does not implicitly {@link game2529Type.verify|verify} messages.
         * @param message game2529Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame2529Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game2529Type message, length delimited. Does not implicitly {@link game2529Type.verify|verify} messages.
         * @param message game2529Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame2529Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game2529Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game2529Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2529Type;

        /**
         * Decodes a game2529Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game2529Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2529Type;

        /**
         * Verifies a game2529Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game2529Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game2529Type
         */
        public static fromObject(object: { [k: string]: any }): game2529Type;

        /**
         * Creates a plain object from a game2529Type message. Also converts values to other types if specified.
         * @param message game2529Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game2529Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game2529Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game2529Type {

        /** Properties of a data2529Type. */
        interface Idata2529Type {

            /** data2529Type eventId */
            eventId?: (number | null);

            /** data2529Type wildMultiple */
            wildMultiple?: (number | null);
        }

        /** Represents a data2529Type. */
        class data2529Type implements Idata2529Type {

            /**
             * Constructs a new data2529Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game2529Type.Idata2529Type);

            /** data2529Type eventId. */
            public eventId: number;

            /** data2529Type wildMultiple. */
            public wildMultiple: number;

            /**
             * Creates a new data2529Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data2529Type instance
             */
            public static create(properties?: game2529Type.Idata2529Type): game2529Type.data2529Type;

            /**
             * Encodes the specified data2529Type message. Does not implicitly {@link game2529Type.data2529Type.verify|verify} messages.
             * @param message data2529Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game2529Type.Idata2529Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data2529Type message, length delimited. Does not implicitly {@link game2529Type.data2529Type.verify|verify} messages.
             * @param message data2529Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game2529Type.Idata2529Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data2529Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data2529Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2529Type.data2529Type;

            /**
             * Decodes a data2529Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data2529Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2529Type.data2529Type;

            /**
             * Verifies a data2529Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data2529Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data2529Type
             */
            public static fromObject(object: { [k: string]: any }): game2529Type.data2529Type;

            /**
             * Creates a plain object from a data2529Type message. Also converts values to other types if specified.
             * @param message data2529Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game2529Type.data2529Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data2529Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update2529Type. */
        interface Iupdate2529Type {

            /** update2529Type index */
            index: number;

            /** update2529Type eventId */
            eventId?: (number | null);

            /** update2529Type wildMultiple */
            wildMultiple?: (number | null);
        }

        /** Represents an update2529Type. */
        class update2529Type implements Iupdate2529Type {

            /**
             * Constructs a new update2529Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game2529Type.Iupdate2529Type);

            /** update2529Type index. */
            public index: number;

            /** update2529Type eventId. */
            public eventId: number;

            /** update2529Type wildMultiple. */
            public wildMultiple: number;

            /**
             * Creates a new update2529Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update2529Type instance
             */
            public static create(properties?: game2529Type.Iupdate2529Type): game2529Type.update2529Type;

            /**
             * Encodes the specified update2529Type message. Does not implicitly {@link game2529Type.update2529Type.verify|verify} messages.
             * @param message update2529Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game2529Type.Iupdate2529Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update2529Type message, length delimited. Does not implicitly {@link game2529Type.update2529Type.verify|verify} messages.
             * @param message update2529Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game2529Type.Iupdate2529Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update2529Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update2529Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game2529Type.update2529Type;

            /**
             * Decodes an update2529Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update2529Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game2529Type.update2529Type;

            /**
             * Verifies an update2529Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update2529Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update2529Type
             */
            public static fromObject(object: { [k: string]: any }): game2529Type.update2529Type;

            /**
             * Creates a plain object from an update2529Type message. Also converts values to other types if specified.
             * @param message update2529Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game2529Type.update2529Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update2529Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a game3306Type. */
    export class game3306Type implements Igame3306Type {

        /**
         * Constructs a new game3306Type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Igame3306Type);

        /** game3306Type data. */
        public data?: (game3306Type.Idata3306Type | null);

        /** game3306Type update. */
        public update: game3306Type.Iupdate3306Type[];

        /**
         * Creates a new game3306Type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns game3306Type instance
         */
        public static create(properties?: Igame3306Type): game3306Type;

        /**
         * Encodes the specified game3306Type message. Does not implicitly {@link game3306Type.verify|verify} messages.
         * @param message game3306Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Igame3306Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified game3306Type message, length delimited. Does not implicitly {@link game3306Type.verify|verify} messages.
         * @param message game3306Type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Igame3306Type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a game3306Type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns game3306Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game3306Type;

        /**
         * Decodes a game3306Type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns game3306Type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game3306Type;

        /**
         * Verifies a game3306Type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a game3306Type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns game3306Type
         */
        public static fromObject(object: { [k: string]: any }): game3306Type;

        /**
         * Creates a plain object from a game3306Type message. Also converts values to other types if specified.
         * @param message game3306Type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: game3306Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this game3306Type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace game3306Type {

        /** Properties of a data3306Type. */
        interface Idata3306Type {

            /** data3306Type rollerList */
            rollerList?: (number[] | null);
        }

        /** Represents a data3306Type. */
        class data3306Type implements Idata3306Type {

            /**
             * Constructs a new data3306Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game3306Type.Idata3306Type);

            /** data3306Type rollerList. */
            public rollerList: number[];

            /**
             * Creates a new data3306Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns data3306Type instance
             */
            public static create(properties?: game3306Type.Idata3306Type): game3306Type.data3306Type;

            /**
             * Encodes the specified data3306Type message. Does not implicitly {@link game3306Type.data3306Type.verify|verify} messages.
             * @param message data3306Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game3306Type.Idata3306Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified data3306Type message, length delimited. Does not implicitly {@link game3306Type.data3306Type.verify|verify} messages.
             * @param message data3306Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game3306Type.Idata3306Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a data3306Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns data3306Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game3306Type.data3306Type;

            /**
             * Decodes a data3306Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns data3306Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game3306Type.data3306Type;

            /**
             * Verifies a data3306Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a data3306Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns data3306Type
             */
            public static fromObject(object: { [k: string]: any }): game3306Type.data3306Type;

            /**
             * Creates a plain object from a data3306Type message. Also converts values to other types if specified.
             * @param message data3306Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game3306Type.data3306Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this data3306Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an update3306Type. */
        interface Iupdate3306Type {

            /** update3306Type index */
            index: number;

            /** update3306Type rollerList */
            rollerList?: (number[] | null);
        }

        /** Represents an update3306Type. */
        class update3306Type implements Iupdate3306Type {

            /**
             * Constructs a new update3306Type.
             * @param [properties] Properties to set
             */
            constructor(properties?: game3306Type.Iupdate3306Type);

            /** update3306Type index. */
            public index: number;

            /** update3306Type rollerList. */
            public rollerList: number[];

            /**
             * Creates a new update3306Type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns update3306Type instance
             */
            public static create(properties?: game3306Type.Iupdate3306Type): game3306Type.update3306Type;

            /**
             * Encodes the specified update3306Type message. Does not implicitly {@link game3306Type.update3306Type.verify|verify} messages.
             * @param message update3306Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: game3306Type.Iupdate3306Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified update3306Type message, length delimited. Does not implicitly {@link game3306Type.update3306Type.verify|verify} messages.
             * @param message update3306Type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: game3306Type.Iupdate3306Type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an update3306Type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns update3306Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): game3306Type.update3306Type;

            /**
             * Decodes an update3306Type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns update3306Type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): game3306Type.update3306Type;

            /**
             * Verifies an update3306Type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an update3306Type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns update3306Type
             */
            public static fromObject(object: { [k: string]: any }): game3306Type.update3306Type;

            /**
             * Creates a plain object from an update3306Type message. Also converts values to other types if specified.
             * @param message update3306Type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: game3306Type.update3306Type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this update3306Type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a gameBingoType. */
    export class gameBingoType implements IgameBingoType {

        /**
         * Constructs a new gameBingoType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IgameBingoType);

        /** gameBingoType data. */
        public data?: (gameBingoType.IdataBingoType | null);

        /** gameBingoType updateData. */
        public updateData: gameBingoType.IupdateBingoType[];

        /**
         * Creates a new gameBingoType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns gameBingoType instance
         */
        public static create(properties?: IgameBingoType): gameBingoType;

        /**
         * Encodes the specified gameBingoType message. Does not implicitly {@link gameBingoType.verify|verify} messages.
         * @param message gameBingoType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IgameBingoType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified gameBingoType message, length delimited. Does not implicitly {@link gameBingoType.verify|verify} messages.
         * @param message gameBingoType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IgameBingoType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a gameBingoType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns gameBingoType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameBingoType;

        /**
         * Decodes a gameBingoType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns gameBingoType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameBingoType;

        /**
         * Verifies a gameBingoType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a gameBingoType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns gameBingoType
         */
        public static fromObject(object: { [k: string]: any }): gameBingoType;

        /**
         * Creates a plain object from a gameBingoType message. Also converts values to other types if specified.
         * @param message gameBingoType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gameBingoType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this gameBingoType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace gameBingoType {

        /** Properties of a dataBingoType. */
        interface IdataBingoType {

            /** dataBingoType defaultCardNum */
            defaultCardNum: number;

            /** dataBingoType maxCardNum */
            maxCardNum: number;

            /** dataBingoType minCardNum */
            minCardNum: number;

            /** dataBingoType maxBuyBallNum */
            maxBuyBallNum: number;

            /** dataBingoType betList */
            betList?: ((number | Long)[] | null);

            /** dataBingoType patternInfo */
            patternInfo?: (gameBingoType.dataBingoType.Ipattern_type[] | null);

            /** dataBingoType fallBallList */
            fallBallList?: (Iball_type[] | null);

            /** dataBingoType boughtBallList */
            boughtBallList?: (Iball_type[] | null);

            /** dataBingoType giveUpBallList */
            giveUpBallList?: (Iball_type[] | null);

            /** dataBingoType curBall */
            curBall?: (Iball_type | null);

            /** dataBingoType nextBall */
            nextBall?: (Iball_type | null);

            /** dataBingoType cardList */
            cardList?: (Icard_type[] | null);

            /** dataBingoType almostWinBallList */
            almostWinBallList?: (Iball_type[] | null);

            /** dataBingoType collectTaskList */
            collectTaskList?: (Icollect_task_type[] | null);

            /** dataBingoType cardBetScores */
            cardBetScores?: (number | Long | null);
        }

        /** Represents a dataBingoType. */
        class dataBingoType implements IdataBingoType {

            /**
             * Constructs a new dataBingoType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameBingoType.IdataBingoType);

            /** dataBingoType defaultCardNum. */
            public defaultCardNum: number;

            /** dataBingoType maxCardNum. */
            public maxCardNum: number;

            /** dataBingoType minCardNum. */
            public minCardNum: number;

            /** dataBingoType maxBuyBallNum. */
            public maxBuyBallNum: number;

            /** dataBingoType betList. */
            public betList: (number | Long)[];

            /** dataBingoType patternInfo. */
            public patternInfo: gameBingoType.dataBingoType.Ipattern_type[];

            /** dataBingoType fallBallList. */
            public fallBallList: Iball_type[];

            /** dataBingoType boughtBallList. */
            public boughtBallList: Iball_type[];

            /** dataBingoType giveUpBallList. */
            public giveUpBallList: Iball_type[];

            /** dataBingoType curBall. */
            public curBall?: (Iball_type | null);

            /** dataBingoType nextBall. */
            public nextBall?: (Iball_type | null);

            /** dataBingoType cardList. */
            public cardList: Icard_type[];

            /** dataBingoType almostWinBallList. */
            public almostWinBallList: Iball_type[];

            /** dataBingoType collectTaskList. */
            public collectTaskList: Icollect_task_type[];

            /** dataBingoType cardBetScores. */
            public cardBetScores: (number | Long);

            /**
             * Creates a new dataBingoType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns dataBingoType instance
             */
            public static create(properties?: gameBingoType.IdataBingoType): gameBingoType.dataBingoType;

            /**
             * Encodes the specified dataBingoType message. Does not implicitly {@link gameBingoType.dataBingoType.verify|verify} messages.
             * @param message dataBingoType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameBingoType.IdataBingoType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified dataBingoType message, length delimited. Does not implicitly {@link gameBingoType.dataBingoType.verify|verify} messages.
             * @param message dataBingoType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameBingoType.IdataBingoType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a dataBingoType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns dataBingoType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameBingoType.dataBingoType;

            /**
             * Decodes a dataBingoType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns dataBingoType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameBingoType.dataBingoType;

            /**
             * Verifies a dataBingoType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a dataBingoType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns dataBingoType
             */
            public static fromObject(object: { [k: string]: any }): gameBingoType.dataBingoType;

            /**
             * Creates a plain object from a dataBingoType message. Also converts values to other types if specified.
             * @param message dataBingoType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameBingoType.dataBingoType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this dataBingoType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace dataBingoType {

            /** Properties of a pattern_type. */
            interface Ipattern_type {

                /** pattern_type patternId */
                patternId: number;

                /** pattern_type rewardRate */
                rewardRate: number;

                /** pattern_type lines */
                lines?: (gameBingoType.dataBingoType.Ipattern_line_type[] | null);
            }

            /** Represents a pattern_type. */
            class pattern_type implements Ipattern_type {

                /**
                 * Constructs a new pattern_type.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: gameBingoType.dataBingoType.Ipattern_type);

                /** pattern_type patternId. */
                public patternId: number;

                /** pattern_type rewardRate. */
                public rewardRate: number;

                /** pattern_type lines. */
                public lines: gameBingoType.dataBingoType.Ipattern_line_type[];

                /**
                 * Creates a new pattern_type instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns pattern_type instance
                 */
                public static create(properties?: gameBingoType.dataBingoType.Ipattern_type): gameBingoType.dataBingoType.pattern_type;

                /**
                 * Encodes the specified pattern_type message. Does not implicitly {@link gameBingoType.dataBingoType.pattern_type.verify|verify} messages.
                 * @param message pattern_type message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: gameBingoType.dataBingoType.Ipattern_type, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified pattern_type message, length delimited. Does not implicitly {@link gameBingoType.dataBingoType.pattern_type.verify|verify} messages.
                 * @param message pattern_type message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: gameBingoType.dataBingoType.Ipattern_type, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a pattern_type message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns pattern_type
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameBingoType.dataBingoType.pattern_type;

                /**
                 * Decodes a pattern_type message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns pattern_type
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameBingoType.dataBingoType.pattern_type;

                /**
                 * Verifies a pattern_type message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string | null);

                /**
                 * Creates a pattern_type message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns pattern_type
                 */
                public static fromObject(object: { [k: string]: any }): gameBingoType.dataBingoType.pattern_type;

                /**
                 * Creates a plain object from a pattern_type message. Also converts values to other types if specified.
                 * @param message pattern_type
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: gameBingoType.dataBingoType.pattern_type, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this pattern_type to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a pattern_line_type. */
            interface Ipattern_line_type {

                /** pattern_line_type lineId */
                lineId: number;

                /** pattern_line_type linePos */
                linePos?: (number[] | null);
            }

            /** Represents a pattern_line_type. */
            class pattern_line_type implements Ipattern_line_type {

                /**
                 * Constructs a new pattern_line_type.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: gameBingoType.dataBingoType.Ipattern_line_type);

                /** pattern_line_type lineId. */
                public lineId: number;

                /** pattern_line_type linePos. */
                public linePos: number[];

                /**
                 * Creates a new pattern_line_type instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns pattern_line_type instance
                 */
                public static create(properties?: gameBingoType.dataBingoType.Ipattern_line_type): gameBingoType.dataBingoType.pattern_line_type;

                /**
                 * Encodes the specified pattern_line_type message. Does not implicitly {@link gameBingoType.dataBingoType.pattern_line_type.verify|verify} messages.
                 * @param message pattern_line_type message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: gameBingoType.dataBingoType.Ipattern_line_type, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified pattern_line_type message, length delimited. Does not implicitly {@link gameBingoType.dataBingoType.pattern_line_type.verify|verify} messages.
                 * @param message pattern_line_type message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: gameBingoType.dataBingoType.Ipattern_line_type, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a pattern_line_type message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns pattern_line_type
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameBingoType.dataBingoType.pattern_line_type;

                /**
                 * Decodes a pattern_line_type message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns pattern_line_type
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameBingoType.dataBingoType.pattern_line_type;

                /**
                 * Verifies a pattern_line_type message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string | null);

                /**
                 * Creates a pattern_line_type message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns pattern_line_type
                 */
                public static fromObject(object: { [k: string]: any }): gameBingoType.dataBingoType.pattern_line_type;

                /**
                 * Creates a plain object from a pattern_line_type message. Also converts values to other types if specified.
                 * @param message pattern_line_type
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: gameBingoType.dataBingoType.pattern_line_type, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this pattern_line_type to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of an updateBingoType. */
        interface IupdateBingoType {

            /** updateBingoType index */
            index: number;

            /** updateBingoType curBall */
            curBall?: (Iball_type | null);

            /** updateBingoType nextBall */
            nextBall?: (Iball_type | null);

            /** updateBingoType giveUpBallList */
            giveUpBallList?: (Iball_type[] | null);

            /** updateBingoType almostWinBallList */
            almostWinBallList?: (Iball_type[] | null);

            /** updateBingoType cardList */
            cardList?: (Icard_type[] | null);

            /** updateBingoType collectTaskList */
            collectTaskList?: (Icollect_task_type[] | null);

            /** updateBingoType fallBallList */
            fallBallList?: (Iball_type[] | null);
        }

        /** Represents an updateBingoType. */
        class updateBingoType implements IupdateBingoType {

            /**
             * Constructs a new updateBingoType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameBingoType.IupdateBingoType);

            /** updateBingoType index. */
            public index: number;

            /** updateBingoType curBall. */
            public curBall?: (Iball_type | null);

            /** updateBingoType nextBall. */
            public nextBall?: (Iball_type | null);

            /** updateBingoType giveUpBallList. */
            public giveUpBallList: Iball_type[];

            /** updateBingoType almostWinBallList. */
            public almostWinBallList: Iball_type[];

            /** updateBingoType cardList. */
            public cardList: Icard_type[];

            /** updateBingoType collectTaskList. */
            public collectTaskList: Icollect_task_type[];

            /** updateBingoType fallBallList. */
            public fallBallList: Iball_type[];

            /**
             * Creates a new updateBingoType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns updateBingoType instance
             */
            public static create(properties?: gameBingoType.IupdateBingoType): gameBingoType.updateBingoType;

            /**
             * Encodes the specified updateBingoType message. Does not implicitly {@link gameBingoType.updateBingoType.verify|verify} messages.
             * @param message updateBingoType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameBingoType.IupdateBingoType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified updateBingoType message, length delimited. Does not implicitly {@link gameBingoType.updateBingoType.verify|verify} messages.
             * @param message updateBingoType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameBingoType.IupdateBingoType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an updateBingoType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns updateBingoType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameBingoType.updateBingoType;

            /**
             * Decodes an updateBingoType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns updateBingoType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameBingoType.updateBingoType;

            /**
             * Verifies an updateBingoType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an updateBingoType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns updateBingoType
             */
            public static fromObject(object: { [k: string]: any }): gameBingoType.updateBingoType;

            /**
             * Creates a plain object from an updateBingoType message. Also converts values to other types if specified.
             * @param message updateBingoType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameBingoType.updateBingoType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this updateBingoType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a ball_type. */
    export class ball_type implements Iball_type {

        /**
         * Constructs a new ball_type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Iball_type);

        /** ball_type index. */
        public index: number;

        /** ball_type type. */
        public type: number;

        /** ball_type element. */
        public element: number;

        /** ball_type extraNum. */
        public extraNum: number;

        /** ball_type betScores. */
        public betScores: (number | Long);

        /** ball_type reward. */
        public reward: (number | Long);

        /** ball_type cardIndexList. */
        public cardIndexList: number[];

        /** ball_type isBought. */
        public isBought: boolean;

        /**
         * Creates a new ball_type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ball_type instance
         */
        public static create(properties?: Iball_type): ball_type;

        /**
         * Encodes the specified ball_type message. Does not implicitly {@link ball_type.verify|verify} messages.
         * @param message ball_type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Iball_type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ball_type message, length delimited. Does not implicitly {@link ball_type.verify|verify} messages.
         * @param message ball_type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Iball_type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ball_type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ball_type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): ball_type;

        /**
         * Decodes a ball_type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ball_type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): ball_type;

        /**
         * Verifies a ball_type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a ball_type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ball_type
         */
        public static fromObject(object: { [k: string]: any }): ball_type;

        /**
         * Creates a plain object from a ball_type message. Also converts values to other types if specified.
         * @param message ball_type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ball_type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ball_type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a card_type. */
    export class card_type implements Icard_type {

        /**
         * Constructs a new card_type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Icard_type);

        /** card_type index. */
        public index: number;

        /** card_type isValid. */
        public isValid: boolean;

        /** card_type grids. */
        public grids: card_type.IbingoGridType[];

        /** card_type winLines. */
        public winLines: IspinResultType[];

        /** card_type almostWinLines. */
        public almostWinLines: card_type.IalmostWinLineType[];

        /**
         * Creates a new card_type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns card_type instance
         */
        public static create(properties?: Icard_type): card_type;

        /**
         * Encodes the specified card_type message. Does not implicitly {@link card_type.verify|verify} messages.
         * @param message card_type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Icard_type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified card_type message, length delimited. Does not implicitly {@link card_type.verify|verify} messages.
         * @param message card_type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Icard_type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a card_type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns card_type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): card_type;

        /**
         * Decodes a card_type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns card_type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): card_type;

        /**
         * Verifies a card_type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a card_type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns card_type
         */
        public static fromObject(object: { [k: string]: any }): card_type;

        /**
         * Creates a plain object from a card_type message. Also converts values to other types if specified.
         * @param message card_type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: card_type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this card_type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace card_type {

        /** Properties of a bingoGridType. */
        interface IbingoGridType {

            /** bingoGridType index */
            index: number;

            /** bingoGridType element */
            element: number;

            /** bingoGridType isSpotted */
            isSpotted?: (boolean | null);

            /** bingoGridType isLightning */
            isLightning: boolean;
        }

        /** Represents a bingoGridType. */
        class bingoGridType implements IbingoGridType {

            /**
             * Constructs a new bingoGridType.
             * @param [properties] Properties to set
             */
            constructor(properties?: card_type.IbingoGridType);

            /** bingoGridType index. */
            public index: number;

            /** bingoGridType element. */
            public element: number;

            /** bingoGridType isSpotted. */
            public isSpotted: boolean;

            /** bingoGridType isLightning. */
            public isLightning: boolean;

            /**
             * Creates a new bingoGridType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns bingoGridType instance
             */
            public static create(properties?: card_type.IbingoGridType): card_type.bingoGridType;

            /**
             * Encodes the specified bingoGridType message. Does not implicitly {@link card_type.bingoGridType.verify|verify} messages.
             * @param message bingoGridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: card_type.IbingoGridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified bingoGridType message, length delimited. Does not implicitly {@link card_type.bingoGridType.verify|verify} messages.
             * @param message bingoGridType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: card_type.IbingoGridType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a bingoGridType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns bingoGridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): card_type.bingoGridType;

            /**
             * Decodes a bingoGridType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns bingoGridType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): card_type.bingoGridType;

            /**
             * Verifies a bingoGridType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a bingoGridType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns bingoGridType
             */
            public static fromObject(object: { [k: string]: any }): card_type.bingoGridType;

            /**
             * Creates a plain object from a bingoGridType message. Also converts values to other types if specified.
             * @param message bingoGridType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: card_type.bingoGridType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this bingoGridType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an almostWinLineType. */
        interface IalmostWinLineType {

            /** almostWinLineType linesId */
            linesId: number;

            /** almostWinLineType lackPos */
            lackPos: number;

            /** almostWinLineType expectWinScores */
            expectWinScores?: (number | Long | null);
        }

        /** Represents an almostWinLineType. */
        class almostWinLineType implements IalmostWinLineType {

            /**
             * Constructs a new almostWinLineType.
             * @param [properties] Properties to set
             */
            constructor(properties?: card_type.IalmostWinLineType);

            /** almostWinLineType linesId. */
            public linesId: number;

            /** almostWinLineType lackPos. */
            public lackPos: number;

            /** almostWinLineType expectWinScores. */
            public expectWinScores: (number | Long);

            /**
             * Creates a new almostWinLineType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns almostWinLineType instance
             */
            public static create(properties?: card_type.IalmostWinLineType): card_type.almostWinLineType;

            /**
             * Encodes the specified almostWinLineType message. Does not implicitly {@link card_type.almostWinLineType.verify|verify} messages.
             * @param message almostWinLineType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: card_type.IalmostWinLineType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified almostWinLineType message, length delimited. Does not implicitly {@link card_type.almostWinLineType.verify|verify} messages.
             * @param message almostWinLineType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: card_type.IalmostWinLineType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an almostWinLineType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns almostWinLineType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): card_type.almostWinLineType;

            /**
             * Decodes an almostWinLineType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns almostWinLineType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): card_type.almostWinLineType;

            /**
             * Verifies an almostWinLineType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an almostWinLineType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns almostWinLineType
             */
            public static fromObject(object: { [k: string]: any }): card_type.almostWinLineType;

            /**
             * Creates a plain object from an almostWinLineType message. Also converts values to other types if specified.
             * @param message almostWinLineType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: card_type.almostWinLineType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this almostWinLineType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a collect_task_type. */
    export class collect_task_type implements Icollect_task_type {

        /**
         * Constructs a new collect_task_type.
         * @param [properties] Properties to set
         */
        constructor(properties?: Icollect_task_type);

        /** collect_task_type taskId. */
        public taskId: number;

        /** collect_task_type collectElem. */
        public collectElem: number;

        /** collect_task_type num. */
        public num: number;

        /** collect_task_type targetNum. */
        public targetNum: number;

        /** collect_task_type isComplete. */
        public isComplete: boolean;

        /** collect_task_type rewardLittleGame. */
        public rewardLittleGame: (number | Long);

        /**
         * Creates a new collect_task_type instance using the specified properties.
         * @param [properties] Properties to set
         * @returns collect_task_type instance
         */
        public static create(properties?: Icollect_task_type): collect_task_type;

        /**
         * Encodes the specified collect_task_type message. Does not implicitly {@link collect_task_type.verify|verify} messages.
         * @param message collect_task_type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Icollect_task_type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified collect_task_type message, length delimited. Does not implicitly {@link collect_task_type.verify|verify} messages.
         * @param message collect_task_type message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Icollect_task_type, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a collect_task_type message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns collect_task_type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): collect_task_type;

        /**
         * Decodes a collect_task_type message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns collect_task_type
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): collect_task_type;

        /**
         * Verifies a collect_task_type message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a collect_task_type message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns collect_task_type
         */
        public static fromObject(object: { [k: string]: any }): collect_task_type;

        /**
         * Creates a plain object from a collect_task_type message. Also converts values to other types if specified.
         * @param message collect_task_type
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: collect_task_type, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this collect_task_type to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a gameChooseLockColumnType. */
    export class gameChooseLockColumnType implements IgameChooseLockColumnType {

        /**
         * Constructs a new gameChooseLockColumnType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IgameChooseLockColumnType);

        /** gameChooseLockColumnType data. */
        public data?: (gameChooseLockColumnType.IdataChooseLockColumnType | null);

        /** gameChooseLockColumnType update. */
        public update: gameChooseLockColumnType.IupdateChooseLockColumnType[];

        /**
         * Creates a new gameChooseLockColumnType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns gameChooseLockColumnType instance
         */
        public static create(properties?: IgameChooseLockColumnType): gameChooseLockColumnType;

        /**
         * Encodes the specified gameChooseLockColumnType message. Does not implicitly {@link gameChooseLockColumnType.verify|verify} messages.
         * @param message gameChooseLockColumnType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IgameChooseLockColumnType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified gameChooseLockColumnType message, length delimited. Does not implicitly {@link gameChooseLockColumnType.verify|verify} messages.
         * @param message gameChooseLockColumnType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IgameChooseLockColumnType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a gameChooseLockColumnType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns gameChooseLockColumnType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameChooseLockColumnType;

        /**
         * Decodes a gameChooseLockColumnType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns gameChooseLockColumnType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameChooseLockColumnType;

        /**
         * Verifies a gameChooseLockColumnType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a gameChooseLockColumnType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns gameChooseLockColumnType
         */
        public static fromObject(object: { [k: string]: any }): gameChooseLockColumnType;

        /**
         * Creates a plain object from a gameChooseLockColumnType message. Also converts values to other types if specified.
         * @param message gameChooseLockColumnType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gameChooseLockColumnType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this gameChooseLockColumnType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace gameChooseLockColumnType {

        /** Properties of a dataChooseLockColumnType. */
        interface IdataChooseLockColumnType {

            /** dataChooseLockColumnType chooseColumn */
            chooseColumn?: (number[] | null);

            /** dataChooseLockColumnType canChooseColumn */
            canChooseColumn?: (number[] | null);

            /** dataChooseLockColumnType chooseNum */
            chooseNum: number;
        }

        /** Represents a dataChooseLockColumnType. */
        class dataChooseLockColumnType implements IdataChooseLockColumnType {

            /**
             * Constructs a new dataChooseLockColumnType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameChooseLockColumnType.IdataChooseLockColumnType);

            /** dataChooseLockColumnType chooseColumn. */
            public chooseColumn: number[];

            /** dataChooseLockColumnType canChooseColumn. */
            public canChooseColumn: number[];

            /** dataChooseLockColumnType chooseNum. */
            public chooseNum: number;

            /**
             * Creates a new dataChooseLockColumnType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns dataChooseLockColumnType instance
             */
            public static create(properties?: gameChooseLockColumnType.IdataChooseLockColumnType): gameChooseLockColumnType.dataChooseLockColumnType;

            /**
             * Encodes the specified dataChooseLockColumnType message. Does not implicitly {@link gameChooseLockColumnType.dataChooseLockColumnType.verify|verify} messages.
             * @param message dataChooseLockColumnType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameChooseLockColumnType.IdataChooseLockColumnType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified dataChooseLockColumnType message, length delimited. Does not implicitly {@link gameChooseLockColumnType.dataChooseLockColumnType.verify|verify} messages.
             * @param message dataChooseLockColumnType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameChooseLockColumnType.IdataChooseLockColumnType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a dataChooseLockColumnType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns dataChooseLockColumnType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameChooseLockColumnType.dataChooseLockColumnType;

            /**
             * Decodes a dataChooseLockColumnType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns dataChooseLockColumnType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameChooseLockColumnType.dataChooseLockColumnType;

            /**
             * Verifies a dataChooseLockColumnType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a dataChooseLockColumnType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns dataChooseLockColumnType
             */
            public static fromObject(object: { [k: string]: any }): gameChooseLockColumnType.dataChooseLockColumnType;

            /**
             * Creates a plain object from a dataChooseLockColumnType message. Also converts values to other types if specified.
             * @param message dataChooseLockColumnType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameChooseLockColumnType.dataChooseLockColumnType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this dataChooseLockColumnType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an updateChooseLockColumnType. */
        interface IupdateChooseLockColumnType {

            /** updateChooseLockColumnType index */
            index: number;

            /** updateChooseLockColumnType chooseColumn */
            chooseColumn?: (number[] | null);

            /** updateChooseLockColumnType canChooseColumn */
            canChooseColumn?: (number[] | null);

            /** updateChooseLockColumnType chooseNum */
            chooseNum: number;
        }

        /** Represents an updateChooseLockColumnType. */
        class updateChooseLockColumnType implements IupdateChooseLockColumnType {

            /**
             * Constructs a new updateChooseLockColumnType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameChooseLockColumnType.IupdateChooseLockColumnType);

            /** updateChooseLockColumnType index. */
            public index: number;

            /** updateChooseLockColumnType chooseColumn. */
            public chooseColumn: number[];

            /** updateChooseLockColumnType canChooseColumn. */
            public canChooseColumn: number[];

            /** updateChooseLockColumnType chooseNum. */
            public chooseNum: number;

            /**
             * Creates a new updateChooseLockColumnType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns updateChooseLockColumnType instance
             */
            public static create(properties?: gameChooseLockColumnType.IupdateChooseLockColumnType): gameChooseLockColumnType.updateChooseLockColumnType;

            /**
             * Encodes the specified updateChooseLockColumnType message. Does not implicitly {@link gameChooseLockColumnType.updateChooseLockColumnType.verify|verify} messages.
             * @param message updateChooseLockColumnType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameChooseLockColumnType.IupdateChooseLockColumnType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified updateChooseLockColumnType message, length delimited. Does not implicitly {@link gameChooseLockColumnType.updateChooseLockColumnType.verify|verify} messages.
             * @param message updateChooseLockColumnType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameChooseLockColumnType.IupdateChooseLockColumnType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an updateChooseLockColumnType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns updateChooseLockColumnType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameChooseLockColumnType.updateChooseLockColumnType;

            /**
             * Decodes an updateChooseLockColumnType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns updateChooseLockColumnType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameChooseLockColumnType.updateChooseLockColumnType;

            /**
             * Verifies an updateChooseLockColumnType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an updateChooseLockColumnType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns updateChooseLockColumnType
             */
            public static fromObject(object: { [k: string]: any }): gameChooseLockColumnType.updateChooseLockColumnType;

            /**
             * Creates a plain object from an updateChooseLockColumnType message. Also converts values to other types if specified.
             * @param message updateChooseLockColumnType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameChooseLockColumnType.updateChooseLockColumnType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this updateChooseLockColumnType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a gameCollectChooseType. */
    export class gameCollectChooseType implements IgameCollectChooseType {

        /**
         * Constructs a new gameCollectChooseType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IgameCollectChooseType);

        /** gameCollectChooseType data. */
        public data?: (gameCollectChooseType.IdataCollectChooseType | null);

        /** gameCollectChooseType update. */
        public update: gameCollectChooseType.IupdateCollectChooseType[];

        /**
         * Creates a new gameCollectChooseType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns gameCollectChooseType instance
         */
        public static create(properties?: IgameCollectChooseType): gameCollectChooseType;

        /**
         * Encodes the specified gameCollectChooseType message. Does not implicitly {@link gameCollectChooseType.verify|verify} messages.
         * @param message gameCollectChooseType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IgameCollectChooseType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified gameCollectChooseType message, length delimited. Does not implicitly {@link gameCollectChooseType.verify|verify} messages.
         * @param message gameCollectChooseType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IgameCollectChooseType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a gameCollectChooseType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns gameCollectChooseType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameCollectChooseType;

        /**
         * Decodes a gameCollectChooseType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns gameCollectChooseType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameCollectChooseType;

        /**
         * Verifies a gameCollectChooseType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a gameCollectChooseType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns gameCollectChooseType
         */
        public static fromObject(object: { [k: string]: any }): gameCollectChooseType;

        /**
         * Creates a plain object from a gameCollectChooseType message. Also converts values to other types if specified.
         * @param message gameCollectChooseType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gameCollectChooseType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this gameCollectChooseType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace gameCollectChooseType {

        /** Properties of a dataCollectChooseType. */
        interface IdataCollectChooseType {

            /** dataCollectChooseType task */
            task?: (ItaskType[] | null);

            /** dataCollectChooseType collectGrid */
            collectGrid?: (IgridType[] | null);
        }

        /** Represents a dataCollectChooseType. */
        class dataCollectChooseType implements IdataCollectChooseType {

            /**
             * Constructs a new dataCollectChooseType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameCollectChooseType.IdataCollectChooseType);

            /** dataCollectChooseType task. */
            public task: ItaskType[];

            /** dataCollectChooseType collectGrid. */
            public collectGrid: IgridType[];

            /**
             * Creates a new dataCollectChooseType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns dataCollectChooseType instance
             */
            public static create(properties?: gameCollectChooseType.IdataCollectChooseType): gameCollectChooseType.dataCollectChooseType;

            /**
             * Encodes the specified dataCollectChooseType message. Does not implicitly {@link gameCollectChooseType.dataCollectChooseType.verify|verify} messages.
             * @param message dataCollectChooseType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameCollectChooseType.IdataCollectChooseType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified dataCollectChooseType message, length delimited. Does not implicitly {@link gameCollectChooseType.dataCollectChooseType.verify|verify} messages.
             * @param message dataCollectChooseType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameCollectChooseType.IdataCollectChooseType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a dataCollectChooseType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns dataCollectChooseType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameCollectChooseType.dataCollectChooseType;

            /**
             * Decodes a dataCollectChooseType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns dataCollectChooseType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameCollectChooseType.dataCollectChooseType;

            /**
             * Verifies a dataCollectChooseType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a dataCollectChooseType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns dataCollectChooseType
             */
            public static fromObject(object: { [k: string]: any }): gameCollectChooseType.dataCollectChooseType;

            /**
             * Creates a plain object from a dataCollectChooseType message. Also converts values to other types if specified.
             * @param message dataCollectChooseType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameCollectChooseType.dataCollectChooseType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this dataCollectChooseType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an updateCollectChooseType. */
        interface IupdateCollectChooseType {

            /** updateCollectChooseType index */
            index: number;

            /** updateCollectChooseType task */
            task?: (ItaskType[] | null);

            /** updateCollectChooseType collectGrid */
            collectGrid?: (IgridType[] | null);
        }

        /** Represents an updateCollectChooseType. */
        class updateCollectChooseType implements IupdateCollectChooseType {

            /**
             * Constructs a new updateCollectChooseType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameCollectChooseType.IupdateCollectChooseType);

            /** updateCollectChooseType index. */
            public index: number;

            /** updateCollectChooseType task. */
            public task: ItaskType[];

            /** updateCollectChooseType collectGrid. */
            public collectGrid: IgridType[];

            /**
             * Creates a new updateCollectChooseType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns updateCollectChooseType instance
             */
            public static create(properties?: gameCollectChooseType.IupdateCollectChooseType): gameCollectChooseType.updateCollectChooseType;

            /**
             * Encodes the specified updateCollectChooseType message. Does not implicitly {@link gameCollectChooseType.updateCollectChooseType.verify|verify} messages.
             * @param message updateCollectChooseType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameCollectChooseType.IupdateCollectChooseType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified updateCollectChooseType message, length delimited. Does not implicitly {@link gameCollectChooseType.updateCollectChooseType.verify|verify} messages.
             * @param message updateCollectChooseType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameCollectChooseType.IupdateCollectChooseType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an updateCollectChooseType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns updateCollectChooseType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameCollectChooseType.updateCollectChooseType;

            /**
             * Decodes an updateCollectChooseType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns updateCollectChooseType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameCollectChooseType.updateCollectChooseType;

            /**
             * Verifies an updateCollectChooseType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an updateCollectChooseType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns updateCollectChooseType
             */
            public static fromObject(object: { [k: string]: any }): gameCollectChooseType.updateCollectChooseType;

            /**
             * Creates a plain object from an updateCollectChooseType message. Also converts values to other types if specified.
             * @param message updateCollectChooseType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameCollectChooseType.updateCollectChooseType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this updateCollectChooseType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a taskType. */
    export class taskType implements ItaskType {

        /**
         * Constructs a new taskType.
         * @param [properties] Properties to set
         */
        constructor(properties?: ItaskType);

        /** taskType id. */
        public id: number;

        /** taskType collectElem. */
        public collectElem: number[];

        /** taskType num. */
        public num: number;

        /** taskType target. */
        public target: taskType.ItargetType[];

        /**
         * Creates a new taskType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns taskType instance
         */
        public static create(properties?: ItaskType): taskType;

        /**
         * Encodes the specified taskType message. Does not implicitly {@link taskType.verify|verify} messages.
         * @param message taskType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ItaskType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified taskType message, length delimited. Does not implicitly {@link taskType.verify|verify} messages.
         * @param message taskType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ItaskType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a taskType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns taskType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): taskType;

        /**
         * Decodes a taskType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns taskType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): taskType;

        /**
         * Verifies a taskType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a taskType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns taskType
         */
        public static fromObject(object: { [k: string]: any }): taskType;

        /**
         * Creates a plain object from a taskType message. Also converts values to other types if specified.
         * @param message taskType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: taskType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this taskType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace taskType {

        /** Properties of a targetType. */
        interface ItargetType {

            /** targetType targetNum */
            targetNum: number;

            /** targetType status */
            status: number;
        }

        /** Represents a targetType. */
        class targetType implements ItargetType {

            /**
             * Constructs a new targetType.
             * @param [properties] Properties to set
             */
            constructor(properties?: taskType.ItargetType);

            /** targetType targetNum. */
            public targetNum: number;

            /** targetType status. */
            public status: number;

            /**
             * Creates a new targetType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns targetType instance
             */
            public static create(properties?: taskType.ItargetType): taskType.targetType;

            /**
             * Encodes the specified targetType message. Does not implicitly {@link taskType.targetType.verify|verify} messages.
             * @param message targetType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: taskType.ItargetType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified targetType message, length delimited. Does not implicitly {@link taskType.targetType.verify|verify} messages.
             * @param message targetType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: taskType.ItargetType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a targetType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns targetType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): taskType.targetType;

            /**
             * Decodes a targetType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns targetType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): taskType.targetType;

            /**
             * Verifies a targetType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a targetType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns targetType
             */
            public static fromObject(object: { [k: string]: any }): taskType.targetType;

            /**
             * Creates a plain object from a targetType message. Also converts values to other types if specified.
             * @param message targetType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: taskType.targetType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this targetType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a gameContinuousLoginType. */
    export class gameContinuousLoginType implements IgameContinuousLoginType {

        /**
         * Constructs a new gameContinuousLoginType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IgameContinuousLoginType);

        /** gameContinuousLoginType data. */
        public data?: (gameContinuousLoginType.IdataContinuousLoginType | null);

        /** gameContinuousLoginType update. */
        public update: gameContinuousLoginType.IupdateContinuousLoginType[];

        /**
         * Creates a new gameContinuousLoginType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns gameContinuousLoginType instance
         */
        public static create(properties?: IgameContinuousLoginType): gameContinuousLoginType;

        /**
         * Encodes the specified gameContinuousLoginType message. Does not implicitly {@link gameContinuousLoginType.verify|verify} messages.
         * @param message gameContinuousLoginType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IgameContinuousLoginType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified gameContinuousLoginType message, length delimited. Does not implicitly {@link gameContinuousLoginType.verify|verify} messages.
         * @param message gameContinuousLoginType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IgameContinuousLoginType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a gameContinuousLoginType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns gameContinuousLoginType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameContinuousLoginType;

        /**
         * Decodes a gameContinuousLoginType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns gameContinuousLoginType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameContinuousLoginType;

        /**
         * Verifies a gameContinuousLoginType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a gameContinuousLoginType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns gameContinuousLoginType
         */
        public static fromObject(object: { [k: string]: any }): gameContinuousLoginType;

        /**
         * Creates a plain object from a gameContinuousLoginType message. Also converts values to other types if specified.
         * @param message gameContinuousLoginType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gameContinuousLoginType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this gameContinuousLoginType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace gameContinuousLoginType {

        /** Properties of a dataContinuousLoginType. */
        interface IdataContinuousLoginType {

            /** dataContinuousLoginType continuousLoginDays */
            continuousLoginDays: number;

            /** dataContinuousLoginType endTimes */
            endTimes: (number | Long);
        }

        /** Represents a dataContinuousLoginType. */
        class dataContinuousLoginType implements IdataContinuousLoginType {

            /**
             * Constructs a new dataContinuousLoginType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameContinuousLoginType.IdataContinuousLoginType);

            /** dataContinuousLoginType continuousLoginDays. */
            public continuousLoginDays: number;

            /** dataContinuousLoginType endTimes. */
            public endTimes: (number | Long);

            /**
             * Creates a new dataContinuousLoginType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns dataContinuousLoginType instance
             */
            public static create(properties?: gameContinuousLoginType.IdataContinuousLoginType): gameContinuousLoginType.dataContinuousLoginType;

            /**
             * Encodes the specified dataContinuousLoginType message. Does not implicitly {@link gameContinuousLoginType.dataContinuousLoginType.verify|verify} messages.
             * @param message dataContinuousLoginType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameContinuousLoginType.IdataContinuousLoginType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified dataContinuousLoginType message, length delimited. Does not implicitly {@link gameContinuousLoginType.dataContinuousLoginType.verify|verify} messages.
             * @param message dataContinuousLoginType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameContinuousLoginType.IdataContinuousLoginType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a dataContinuousLoginType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns dataContinuousLoginType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameContinuousLoginType.dataContinuousLoginType;

            /**
             * Decodes a dataContinuousLoginType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns dataContinuousLoginType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameContinuousLoginType.dataContinuousLoginType;

            /**
             * Verifies a dataContinuousLoginType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a dataContinuousLoginType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns dataContinuousLoginType
             */
            public static fromObject(object: { [k: string]: any }): gameContinuousLoginType.dataContinuousLoginType;

            /**
             * Creates a plain object from a dataContinuousLoginType message. Also converts values to other types if specified.
             * @param message dataContinuousLoginType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameContinuousLoginType.dataContinuousLoginType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this dataContinuousLoginType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an updateContinuousLoginType. */
        interface IupdateContinuousLoginType {

            /** updateContinuousLoginType index */
            index: number;

            /** updateContinuousLoginType continuousLoginDays */
            continuousLoginDays: number;

            /** updateContinuousLoginType endTimes */
            endTimes: (number | Long);
        }

        /** Represents an updateContinuousLoginType. */
        class updateContinuousLoginType implements IupdateContinuousLoginType {

            /**
             * Constructs a new updateContinuousLoginType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameContinuousLoginType.IupdateContinuousLoginType);

            /** updateContinuousLoginType index. */
            public index: number;

            /** updateContinuousLoginType continuousLoginDays. */
            public continuousLoginDays: number;

            /** updateContinuousLoginType endTimes. */
            public endTimes: (number | Long);

            /**
             * Creates a new updateContinuousLoginType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns updateContinuousLoginType instance
             */
            public static create(properties?: gameContinuousLoginType.IupdateContinuousLoginType): gameContinuousLoginType.updateContinuousLoginType;

            /**
             * Encodes the specified updateContinuousLoginType message. Does not implicitly {@link gameContinuousLoginType.updateContinuousLoginType.verify|verify} messages.
             * @param message updateContinuousLoginType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameContinuousLoginType.IupdateContinuousLoginType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified updateContinuousLoginType message, length delimited. Does not implicitly {@link gameContinuousLoginType.updateContinuousLoginType.verify|verify} messages.
             * @param message updateContinuousLoginType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameContinuousLoginType.IupdateContinuousLoginType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an updateContinuousLoginType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns updateContinuousLoginType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameContinuousLoginType.updateContinuousLoginType;

            /**
             * Decodes an updateContinuousLoginType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns updateContinuousLoginType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameContinuousLoginType.updateContinuousLoginType;

            /**
             * Verifies an updateContinuousLoginType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an updateContinuousLoginType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns updateContinuousLoginType
             */
            public static fromObject(object: { [k: string]: any }): gameContinuousLoginType.updateContinuousLoginType;

            /**
             * Creates a plain object from an updateContinuousLoginType message. Also converts values to other types if specified.
             * @param message updateContinuousLoginType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameContinuousLoginType.updateContinuousLoginType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this updateContinuousLoginType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a gameElemCombineChangeType. */
    export class gameElemCombineChangeType implements IgameElemCombineChangeType {

        /**
         * Constructs a new gameElemCombineChangeType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IgameElemCombineChangeType);

        /** gameElemCombineChangeType data. */
        public data?: (gameElemCombineChangeType.IdataElemCombineChangeType | null);

        /** gameElemCombineChangeType update. */
        public update: gameElemCombineChangeType.IupdateElemCombineChangeType[];

        /**
         * Creates a new gameElemCombineChangeType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns gameElemCombineChangeType instance
         */
        public static create(properties?: IgameElemCombineChangeType): gameElemCombineChangeType;

        /**
         * Encodes the specified gameElemCombineChangeType message. Does not implicitly {@link gameElemCombineChangeType.verify|verify} messages.
         * @param message gameElemCombineChangeType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IgameElemCombineChangeType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified gameElemCombineChangeType message, length delimited. Does not implicitly {@link gameElemCombineChangeType.verify|verify} messages.
         * @param message gameElemCombineChangeType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IgameElemCombineChangeType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a gameElemCombineChangeType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns gameElemCombineChangeType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameElemCombineChangeType;

        /**
         * Decodes a gameElemCombineChangeType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns gameElemCombineChangeType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameElemCombineChangeType;

        /**
         * Verifies a gameElemCombineChangeType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a gameElemCombineChangeType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns gameElemCombineChangeType
         */
        public static fromObject(object: { [k: string]: any }): gameElemCombineChangeType;

        /**
         * Creates a plain object from a gameElemCombineChangeType message. Also converts values to other types if specified.
         * @param message gameElemCombineChangeType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gameElemCombineChangeType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this gameElemCombineChangeType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace gameElemCombineChangeType {

        /** Properties of a dataElemCombineChangeType. */
        interface IdataElemCombineChangeType {

            /** dataElemCombineChangeType changePos */
            changePos?: (number[] | null);

            /** dataElemCombineChangeType fixElemList */
            fixElemList?: (IgridType[] | null);
        }

        /** Represents a dataElemCombineChangeType. */
        class dataElemCombineChangeType implements IdataElemCombineChangeType {

            /**
             * Constructs a new dataElemCombineChangeType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameElemCombineChangeType.IdataElemCombineChangeType);

            /** dataElemCombineChangeType changePos. */
            public changePos: number[];

            /** dataElemCombineChangeType fixElemList. */
            public fixElemList: IgridType[];

            /**
             * Creates a new dataElemCombineChangeType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns dataElemCombineChangeType instance
             */
            public static create(properties?: gameElemCombineChangeType.IdataElemCombineChangeType): gameElemCombineChangeType.dataElemCombineChangeType;

            /**
             * Encodes the specified dataElemCombineChangeType message. Does not implicitly {@link gameElemCombineChangeType.dataElemCombineChangeType.verify|verify} messages.
             * @param message dataElemCombineChangeType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameElemCombineChangeType.IdataElemCombineChangeType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified dataElemCombineChangeType message, length delimited. Does not implicitly {@link gameElemCombineChangeType.dataElemCombineChangeType.verify|verify} messages.
             * @param message dataElemCombineChangeType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameElemCombineChangeType.IdataElemCombineChangeType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a dataElemCombineChangeType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns dataElemCombineChangeType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameElemCombineChangeType.dataElemCombineChangeType;

            /**
             * Decodes a dataElemCombineChangeType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns dataElemCombineChangeType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameElemCombineChangeType.dataElemCombineChangeType;

            /**
             * Verifies a dataElemCombineChangeType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a dataElemCombineChangeType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns dataElemCombineChangeType
             */
            public static fromObject(object: { [k: string]: any }): gameElemCombineChangeType.dataElemCombineChangeType;

            /**
             * Creates a plain object from a dataElemCombineChangeType message. Also converts values to other types if specified.
             * @param message dataElemCombineChangeType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameElemCombineChangeType.dataElemCombineChangeType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this dataElemCombineChangeType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an updateElemCombineChangeType. */
        interface IupdateElemCombineChangeType {

            /** updateElemCombineChangeType index */
            index: number;

            /** updateElemCombineChangeType changePos */
            changePos?: (number[] | null);

            /** updateElemCombineChangeType fixElemList */
            fixElemList?: (IgridType[] | null);
        }

        /** Represents an updateElemCombineChangeType. */
        class updateElemCombineChangeType implements IupdateElemCombineChangeType {

            /**
             * Constructs a new updateElemCombineChangeType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameElemCombineChangeType.IupdateElemCombineChangeType);

            /** updateElemCombineChangeType index. */
            public index: number;

            /** updateElemCombineChangeType changePos. */
            public changePos: number[];

            /** updateElemCombineChangeType fixElemList. */
            public fixElemList: IgridType[];

            /**
             * Creates a new updateElemCombineChangeType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns updateElemCombineChangeType instance
             */
            public static create(properties?: gameElemCombineChangeType.IupdateElemCombineChangeType): gameElemCombineChangeType.updateElemCombineChangeType;

            /**
             * Encodes the specified updateElemCombineChangeType message. Does not implicitly {@link gameElemCombineChangeType.updateElemCombineChangeType.verify|verify} messages.
             * @param message updateElemCombineChangeType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameElemCombineChangeType.IupdateElemCombineChangeType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified updateElemCombineChangeType message, length delimited. Does not implicitly {@link gameElemCombineChangeType.updateElemCombineChangeType.verify|verify} messages.
             * @param message updateElemCombineChangeType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameElemCombineChangeType.IupdateElemCombineChangeType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an updateElemCombineChangeType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns updateElemCombineChangeType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameElemCombineChangeType.updateElemCombineChangeType;

            /**
             * Decodes an updateElemCombineChangeType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns updateElemCombineChangeType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameElemCombineChangeType.updateElemCombineChangeType;

            /**
             * Verifies an updateElemCombineChangeType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an updateElemCombineChangeType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns updateElemCombineChangeType
             */
            public static fromObject(object: { [k: string]: any }): gameElemCombineChangeType.updateElemCombineChangeType;

            /**
             * Creates a plain object from an updateElemCombineChangeType message. Also converts values to other types if specified.
             * @param message updateElemCombineChangeType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameElemCombineChangeType.updateElemCombineChangeType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this updateElemCombineChangeType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a gameElemEffectType. */
    export class gameElemEffectType implements IgameElemEffectType {

        /**
         * Constructs a new gameElemEffectType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IgameElemEffectType);

        /** gameElemEffectType data. */
        public data?: (gameElemEffectType.IdataElemEffectType | null);

        /** gameElemEffectType update. */
        public update: gameElemEffectType.IupdateElemEffectType[];

        /**
         * Creates a new gameElemEffectType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns gameElemEffectType instance
         */
        public static create(properties?: IgameElemEffectType): gameElemEffectType;

        /**
         * Encodes the specified gameElemEffectType message. Does not implicitly {@link gameElemEffectType.verify|verify} messages.
         * @param message gameElemEffectType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IgameElemEffectType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified gameElemEffectType message, length delimited. Does not implicitly {@link gameElemEffectType.verify|verify} messages.
         * @param message gameElemEffectType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IgameElemEffectType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a gameElemEffectType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns gameElemEffectType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameElemEffectType;

        /**
         * Decodes a gameElemEffectType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns gameElemEffectType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameElemEffectType;

        /**
         * Verifies a gameElemEffectType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a gameElemEffectType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns gameElemEffectType
         */
        public static fromObject(object: { [k: string]: any }): gameElemEffectType;

        /**
         * Creates a plain object from a gameElemEffectType message. Also converts values to other types if specified.
         * @param message gameElemEffectType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gameElemEffectType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this gameElemEffectType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace gameElemEffectType {

        /** Properties of a dataElemEffectType. */
        interface IdataElemEffectType {

            /** dataElemEffectType posEffect */
            posEffect?: (IposEffectType[] | null);

            /** dataElemEffectType triggerTimes */
            triggerTimes?: (gameElemEffectType.ItriggerTimesType[] | null);
        }

        /** Represents a dataElemEffectType. */
        class dataElemEffectType implements IdataElemEffectType {

            /**
             * Constructs a new dataElemEffectType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameElemEffectType.IdataElemEffectType);

            /** dataElemEffectType posEffect. */
            public posEffect: IposEffectType[];

            /** dataElemEffectType triggerTimes. */
            public triggerTimes: gameElemEffectType.ItriggerTimesType[];

            /**
             * Creates a new dataElemEffectType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns dataElemEffectType instance
             */
            public static create(properties?: gameElemEffectType.IdataElemEffectType): gameElemEffectType.dataElemEffectType;

            /**
             * Encodes the specified dataElemEffectType message. Does not implicitly {@link gameElemEffectType.dataElemEffectType.verify|verify} messages.
             * @param message dataElemEffectType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameElemEffectType.IdataElemEffectType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified dataElemEffectType message, length delimited. Does not implicitly {@link gameElemEffectType.dataElemEffectType.verify|verify} messages.
             * @param message dataElemEffectType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameElemEffectType.IdataElemEffectType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a dataElemEffectType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns dataElemEffectType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameElemEffectType.dataElemEffectType;

            /**
             * Decodes a dataElemEffectType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns dataElemEffectType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameElemEffectType.dataElemEffectType;

            /**
             * Verifies a dataElemEffectType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a dataElemEffectType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns dataElemEffectType
             */
            public static fromObject(object: { [k: string]: any }): gameElemEffectType.dataElemEffectType;

            /**
             * Creates a plain object from a dataElemEffectType message. Also converts values to other types if specified.
             * @param message dataElemEffectType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameElemEffectType.dataElemEffectType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this dataElemEffectType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an updateElemEffectType. */
        interface IupdateElemEffectType {

            /** updateElemEffectType index */
            index: number;

            /** updateElemEffectType posEffect */
            posEffect?: (IposEffectType[] | null);

            /** updateElemEffectType triggerTimes */
            triggerTimes?: (gameElemEffectType.ItriggerTimesType[] | null);
        }

        /** Represents an updateElemEffectType. */
        class updateElemEffectType implements IupdateElemEffectType {

            /**
             * Constructs a new updateElemEffectType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameElemEffectType.IupdateElemEffectType);

            /** updateElemEffectType index. */
            public index: number;

            /** updateElemEffectType posEffect. */
            public posEffect: IposEffectType[];

            /** updateElemEffectType triggerTimes. */
            public triggerTimes: gameElemEffectType.ItriggerTimesType[];

            /**
             * Creates a new updateElemEffectType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns updateElemEffectType instance
             */
            public static create(properties?: gameElemEffectType.IupdateElemEffectType): gameElemEffectType.updateElemEffectType;

            /**
             * Encodes the specified updateElemEffectType message. Does not implicitly {@link gameElemEffectType.updateElemEffectType.verify|verify} messages.
             * @param message updateElemEffectType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameElemEffectType.IupdateElemEffectType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified updateElemEffectType message, length delimited. Does not implicitly {@link gameElemEffectType.updateElemEffectType.verify|verify} messages.
             * @param message updateElemEffectType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameElemEffectType.IupdateElemEffectType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an updateElemEffectType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns updateElemEffectType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameElemEffectType.updateElemEffectType;

            /**
             * Decodes an updateElemEffectType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns updateElemEffectType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameElemEffectType.updateElemEffectType;

            /**
             * Verifies an updateElemEffectType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an updateElemEffectType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns updateElemEffectType
             */
            public static fromObject(object: { [k: string]: any }): gameElemEffectType.updateElemEffectType;

            /**
             * Creates a plain object from an updateElemEffectType message. Also converts values to other types if specified.
             * @param message updateElemEffectType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameElemEffectType.updateElemEffectType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this updateElemEffectType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a triggerTimesType. */
        interface ItriggerTimesType {

            /** triggerTimesType effectId */
            effectId: number;

            /** triggerTimesType times */
            times: number;
        }

        /** Represents a triggerTimesType. */
        class triggerTimesType implements ItriggerTimesType {

            /**
             * Constructs a new triggerTimesType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameElemEffectType.ItriggerTimesType);

            /** triggerTimesType effectId. */
            public effectId: number;

            /** triggerTimesType times. */
            public times: number;

            /**
             * Creates a new triggerTimesType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns triggerTimesType instance
             */
            public static create(properties?: gameElemEffectType.ItriggerTimesType): gameElemEffectType.triggerTimesType;

            /**
             * Encodes the specified triggerTimesType message. Does not implicitly {@link gameElemEffectType.triggerTimesType.verify|verify} messages.
             * @param message triggerTimesType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameElemEffectType.ItriggerTimesType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified triggerTimesType message, length delimited. Does not implicitly {@link gameElemEffectType.triggerTimesType.verify|verify} messages.
             * @param message triggerTimesType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameElemEffectType.ItriggerTimesType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a triggerTimesType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns triggerTimesType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameElemEffectType.triggerTimesType;

            /**
             * Decodes a triggerTimesType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns triggerTimesType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameElemEffectType.triggerTimesType;

            /**
             * Verifies a triggerTimesType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a triggerTimesType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns triggerTimesType
             */
            public static fromObject(object: { [k: string]: any }): gameElemEffectType.triggerTimesType;

            /**
             * Creates a plain object from a triggerTimesType message. Also converts values to other types if specified.
             * @param message triggerTimesType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameElemEffectType.triggerTimesType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this triggerTimesType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a posEffectType. */
    export class posEffectType implements IposEffectType {

        /**
         * Constructs a new posEffectType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IposEffectType);

        /** posEffectType pos. */
        public pos: number;

        /** posEffectType effectId. */
        public effectId: number;

        /**
         * Creates a new posEffectType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns posEffectType instance
         */
        public static create(properties?: IposEffectType): posEffectType;

        /**
         * Encodes the specified posEffectType message. Does not implicitly {@link posEffectType.verify|verify} messages.
         * @param message posEffectType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IposEffectType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified posEffectType message, length delimited. Does not implicitly {@link posEffectType.verify|verify} messages.
         * @param message posEffectType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IposEffectType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a posEffectType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns posEffectType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): posEffectType;

        /**
         * Decodes a posEffectType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns posEffectType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): posEffectType;

        /**
         * Verifies a posEffectType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a posEffectType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns posEffectType
         */
        public static fromObject(object: { [k: string]: any }): posEffectType;

        /**
         * Creates a plain object from a posEffectType message. Also converts values to other types if specified.
         * @param message posEffectType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: posEffectType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this posEffectType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a gameElemLockType. */
    export class gameElemLockType implements IgameElemLockType {

        /**
         * Constructs a new gameElemLockType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IgameElemLockType);

        /** gameElemLockType data. */
        public data?: (gameElemLockType.IdataElemLockType | null);

        /** gameElemLockType update. */
        public update: gameElemLockType.IupdateElemLockType[];

        /**
         * Creates a new gameElemLockType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns gameElemLockType instance
         */
        public static create(properties?: IgameElemLockType): gameElemLockType;

        /**
         * Encodes the specified gameElemLockType message. Does not implicitly {@link gameElemLockType.verify|verify} messages.
         * @param message gameElemLockType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IgameElemLockType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified gameElemLockType message, length delimited. Does not implicitly {@link gameElemLockType.verify|verify} messages.
         * @param message gameElemLockType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IgameElemLockType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a gameElemLockType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns gameElemLockType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameElemLockType;

        /**
         * Decodes a gameElemLockType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns gameElemLockType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameElemLockType;

        /**
         * Verifies a gameElemLockType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a gameElemLockType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns gameElemLockType
         */
        public static fromObject(object: { [k: string]: any }): gameElemLockType;

        /**
         * Creates a plain object from a gameElemLockType message. Also converts values to other types if specified.
         * @param message gameElemLockType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gameElemLockType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this gameElemLockType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace gameElemLockType {

        /** Properties of a dataElemLockType. */
        interface IdataElemLockType {

            /** dataElemLockType elemLock */
            elemLock?: (gameElemLockType.IelemLockType[] | null);
        }

        /** Represents a dataElemLockType. */
        class dataElemLockType implements IdataElemLockType {

            /**
             * Constructs a new dataElemLockType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameElemLockType.IdataElemLockType);

            /** dataElemLockType elemLock. */
            public elemLock: gameElemLockType.IelemLockType[];

            /**
             * Creates a new dataElemLockType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns dataElemLockType instance
             */
            public static create(properties?: gameElemLockType.IdataElemLockType): gameElemLockType.dataElemLockType;

            /**
             * Encodes the specified dataElemLockType message. Does not implicitly {@link gameElemLockType.dataElemLockType.verify|verify} messages.
             * @param message dataElemLockType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameElemLockType.IdataElemLockType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified dataElemLockType message, length delimited. Does not implicitly {@link gameElemLockType.dataElemLockType.verify|verify} messages.
             * @param message dataElemLockType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameElemLockType.IdataElemLockType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a dataElemLockType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns dataElemLockType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameElemLockType.dataElemLockType;

            /**
             * Decodes a dataElemLockType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns dataElemLockType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameElemLockType.dataElemLockType;

            /**
             * Verifies a dataElemLockType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a dataElemLockType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns dataElemLockType
             */
            public static fromObject(object: { [k: string]: any }): gameElemLockType.dataElemLockType;

            /**
             * Creates a plain object from a dataElemLockType message. Also converts values to other types if specified.
             * @param message dataElemLockType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameElemLockType.dataElemLockType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this dataElemLockType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an updateElemLockType. */
        interface IupdateElemLockType {

            /** updateElemLockType index */
            index: number;

            /** updateElemLockType elemLock */
            elemLock?: (gameElemLockType.IelemLockType[] | null);
        }

        /** Represents an updateElemLockType. */
        class updateElemLockType implements IupdateElemLockType {

            /**
             * Constructs a new updateElemLockType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameElemLockType.IupdateElemLockType);

            /** updateElemLockType index. */
            public index: number;

            /** updateElemLockType elemLock. */
            public elemLock: gameElemLockType.IelemLockType[];

            /**
             * Creates a new updateElemLockType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns updateElemLockType instance
             */
            public static create(properties?: gameElemLockType.IupdateElemLockType): gameElemLockType.updateElemLockType;

            /**
             * Encodes the specified updateElemLockType message. Does not implicitly {@link gameElemLockType.updateElemLockType.verify|verify} messages.
             * @param message updateElemLockType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameElemLockType.IupdateElemLockType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified updateElemLockType message, length delimited. Does not implicitly {@link gameElemLockType.updateElemLockType.verify|verify} messages.
             * @param message updateElemLockType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameElemLockType.IupdateElemLockType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an updateElemLockType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns updateElemLockType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameElemLockType.updateElemLockType;

            /**
             * Decodes an updateElemLockType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns updateElemLockType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameElemLockType.updateElemLockType;

            /**
             * Verifies an updateElemLockType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an updateElemLockType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns updateElemLockType
             */
            public static fromObject(object: { [k: string]: any }): gameElemLockType.updateElemLockType;

            /**
             * Creates a plain object from an updateElemLockType message. Also converts values to other types if specified.
             * @param message updateElemLockType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameElemLockType.updateElemLockType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this updateElemLockType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an elemLockType. */
        interface IelemLockType {

            /** elemLockType pos */
            pos: number;

            /** elemLockType elem */
            elem: number;

            /** elemLockType lastRound */
            lastRound: number;
        }

        /** Represents an elemLockType. */
        class elemLockType implements IelemLockType {

            /**
             * Constructs a new elemLockType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameElemLockType.IelemLockType);

            /** elemLockType pos. */
            public pos: number;

            /** elemLockType elem. */
            public elem: number;

            /** elemLockType lastRound. */
            public lastRound: number;

            /**
             * Creates a new elemLockType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns elemLockType instance
             */
            public static create(properties?: gameElemLockType.IelemLockType): gameElemLockType.elemLockType;

            /**
             * Encodes the specified elemLockType message. Does not implicitly {@link gameElemLockType.elemLockType.verify|verify} messages.
             * @param message elemLockType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameElemLockType.IelemLockType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified elemLockType message, length delimited. Does not implicitly {@link gameElemLockType.elemLockType.verify|verify} messages.
             * @param message elemLockType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameElemLockType.IelemLockType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an elemLockType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns elemLockType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameElemLockType.elemLockType;

            /**
             * Decodes an elemLockType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns elemLockType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameElemLockType.elemLockType;

            /**
             * Verifies an elemLockType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an elemLockType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns elemLockType
             */
            public static fromObject(object: { [k: string]: any }): gameElemLockType.elemLockType;

            /**
             * Creates a plain object from an elemLockType message. Also converts values to other types if specified.
             * @param message elemLockType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameElemLockType.elemLockType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this elemLockType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a gameElemRandomPosNewActiveType. */
    export class gameElemRandomPosNewActiveType implements IgameElemRandomPosNewActiveType {

        /**
         * Constructs a new gameElemRandomPosNewActiveType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IgameElemRandomPosNewActiveType);

        /** gameElemRandomPosNewActiveType data. */
        public data?: (gameElemRandomPosNewActiveType.IdataElemRandomPosNewActiveType | null);

        /** gameElemRandomPosNewActiveType update. */
        public update: gameElemRandomPosNewActiveType.IupdateElemRandomPosNewActiveType[];

        /**
         * Creates a new gameElemRandomPosNewActiveType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns gameElemRandomPosNewActiveType instance
         */
        public static create(properties?: IgameElemRandomPosNewActiveType): gameElemRandomPosNewActiveType;

        /**
         * Encodes the specified gameElemRandomPosNewActiveType message. Does not implicitly {@link gameElemRandomPosNewActiveType.verify|verify} messages.
         * @param message gameElemRandomPosNewActiveType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IgameElemRandomPosNewActiveType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified gameElemRandomPosNewActiveType message, length delimited. Does not implicitly {@link gameElemRandomPosNewActiveType.verify|verify} messages.
         * @param message gameElemRandomPosNewActiveType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IgameElemRandomPosNewActiveType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a gameElemRandomPosNewActiveType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns gameElemRandomPosNewActiveType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameElemRandomPosNewActiveType;

        /**
         * Decodes a gameElemRandomPosNewActiveType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns gameElemRandomPosNewActiveType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameElemRandomPosNewActiveType;

        /**
         * Verifies a gameElemRandomPosNewActiveType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a gameElemRandomPosNewActiveType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns gameElemRandomPosNewActiveType
         */
        public static fromObject(object: { [k: string]: any }): gameElemRandomPosNewActiveType;

        /**
         * Creates a plain object from a gameElemRandomPosNewActiveType message. Also converts values to other types if specified.
         * @param message gameElemRandomPosNewActiveType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gameElemRandomPosNewActiveType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this gameElemRandomPosNewActiveType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace gameElemRandomPosNewActiveType {

        /** Properties of a dataElemRandomPosNewActiveType. */
        interface IdataElemRandomPosNewActiveType {

            /** dataElemRandomPosNewActiveType randomGrid */
            randomGrid?: (IgridType[] | null);
        }

        /** Represents a dataElemRandomPosNewActiveType. */
        class dataElemRandomPosNewActiveType implements IdataElemRandomPosNewActiveType {

            /**
             * Constructs a new dataElemRandomPosNewActiveType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameElemRandomPosNewActiveType.IdataElemRandomPosNewActiveType);

            /** dataElemRandomPosNewActiveType randomGrid. */
            public randomGrid: IgridType[];

            /**
             * Creates a new dataElemRandomPosNewActiveType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns dataElemRandomPosNewActiveType instance
             */
            public static create(properties?: gameElemRandomPosNewActiveType.IdataElemRandomPosNewActiveType): gameElemRandomPosNewActiveType.dataElemRandomPosNewActiveType;

            /**
             * Encodes the specified dataElemRandomPosNewActiveType message. Does not implicitly {@link gameElemRandomPosNewActiveType.dataElemRandomPosNewActiveType.verify|verify} messages.
             * @param message dataElemRandomPosNewActiveType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameElemRandomPosNewActiveType.IdataElemRandomPosNewActiveType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified dataElemRandomPosNewActiveType message, length delimited. Does not implicitly {@link gameElemRandomPosNewActiveType.dataElemRandomPosNewActiveType.verify|verify} messages.
             * @param message dataElemRandomPosNewActiveType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameElemRandomPosNewActiveType.IdataElemRandomPosNewActiveType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a dataElemRandomPosNewActiveType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns dataElemRandomPosNewActiveType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameElemRandomPosNewActiveType.dataElemRandomPosNewActiveType;

            /**
             * Decodes a dataElemRandomPosNewActiveType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns dataElemRandomPosNewActiveType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameElemRandomPosNewActiveType.dataElemRandomPosNewActiveType;

            /**
             * Verifies a dataElemRandomPosNewActiveType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a dataElemRandomPosNewActiveType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns dataElemRandomPosNewActiveType
             */
            public static fromObject(object: { [k: string]: any }): gameElemRandomPosNewActiveType.dataElemRandomPosNewActiveType;

            /**
             * Creates a plain object from a dataElemRandomPosNewActiveType message. Also converts values to other types if specified.
             * @param message dataElemRandomPosNewActiveType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameElemRandomPosNewActiveType.dataElemRandomPosNewActiveType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this dataElemRandomPosNewActiveType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an updateElemRandomPosNewActiveType. */
        interface IupdateElemRandomPosNewActiveType {

            /** updateElemRandomPosNewActiveType index */
            index: number;

            /** updateElemRandomPosNewActiveType randomGrid */
            randomGrid?: (IgridType[] | null);
        }

        /** Represents an updateElemRandomPosNewActiveType. */
        class updateElemRandomPosNewActiveType implements IupdateElemRandomPosNewActiveType {

            /**
             * Constructs a new updateElemRandomPosNewActiveType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameElemRandomPosNewActiveType.IupdateElemRandomPosNewActiveType);

            /** updateElemRandomPosNewActiveType index. */
            public index: number;

            /** updateElemRandomPosNewActiveType randomGrid. */
            public randomGrid: IgridType[];

            /**
             * Creates a new updateElemRandomPosNewActiveType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns updateElemRandomPosNewActiveType instance
             */
            public static create(properties?: gameElemRandomPosNewActiveType.IupdateElemRandomPosNewActiveType): gameElemRandomPosNewActiveType.updateElemRandomPosNewActiveType;

            /**
             * Encodes the specified updateElemRandomPosNewActiveType message. Does not implicitly {@link gameElemRandomPosNewActiveType.updateElemRandomPosNewActiveType.verify|verify} messages.
             * @param message updateElemRandomPosNewActiveType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameElemRandomPosNewActiveType.IupdateElemRandomPosNewActiveType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified updateElemRandomPosNewActiveType message, length delimited. Does not implicitly {@link gameElemRandomPosNewActiveType.updateElemRandomPosNewActiveType.verify|verify} messages.
             * @param message updateElemRandomPosNewActiveType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameElemRandomPosNewActiveType.IupdateElemRandomPosNewActiveType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an updateElemRandomPosNewActiveType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns updateElemRandomPosNewActiveType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameElemRandomPosNewActiveType.updateElemRandomPosNewActiveType;

            /**
             * Decodes an updateElemRandomPosNewActiveType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns updateElemRandomPosNewActiveType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameElemRandomPosNewActiveType.updateElemRandomPosNewActiveType;

            /**
             * Verifies an updateElemRandomPosNewActiveType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an updateElemRandomPosNewActiveType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns updateElemRandomPosNewActiveType
             */
            public static fromObject(object: { [k: string]: any }): gameElemRandomPosNewActiveType.updateElemRandomPosNewActiveType;

            /**
             * Creates a plain object from an updateElemRandomPosNewActiveType message. Also converts values to other types if specified.
             * @param message updateElemRandomPosNewActiveType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameElemRandomPosNewActiveType.updateElemRandomPosNewActiveType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this updateElemRandomPosNewActiveType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a gameElemRandomResultRateType. */
    export class gameElemRandomResultRateType implements IgameElemRandomResultRateType {

        /**
         * Constructs a new gameElemRandomResultRateType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IgameElemRandomResultRateType);

        /** gameElemRandomResultRateType data. */
        public data?: (gameElemRandomResultRateType.IdataElemRandomResultRateType | null);

        /** gameElemRandomResultRateType update. */
        public update: gameElemRandomResultRateType.IupdateElemRandomResultRateType[];

        /**
         * Creates a new gameElemRandomResultRateType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns gameElemRandomResultRateType instance
         */
        public static create(properties?: IgameElemRandomResultRateType): gameElemRandomResultRateType;

        /**
         * Encodes the specified gameElemRandomResultRateType message. Does not implicitly {@link gameElemRandomResultRateType.verify|verify} messages.
         * @param message gameElemRandomResultRateType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IgameElemRandomResultRateType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified gameElemRandomResultRateType message, length delimited. Does not implicitly {@link gameElemRandomResultRateType.verify|verify} messages.
         * @param message gameElemRandomResultRateType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IgameElemRandomResultRateType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a gameElemRandomResultRateType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns gameElemRandomResultRateType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameElemRandomResultRateType;

        /**
         * Decodes a gameElemRandomResultRateType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns gameElemRandomResultRateType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameElemRandomResultRateType;

        /**
         * Verifies a gameElemRandomResultRateType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a gameElemRandomResultRateType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns gameElemRandomResultRateType
         */
        public static fromObject(object: { [k: string]: any }): gameElemRandomResultRateType;

        /**
         * Creates a plain object from a gameElemRandomResultRateType message. Also converts values to other types if specified.
         * @param message gameElemRandomResultRateType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gameElemRandomResultRateType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this gameElemRandomResultRateType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace gameElemRandomResultRateType {

        /** Properties of a dataElemRandomResultRateType. */
        interface IdataElemRandomResultRateType {

            /** dataElemRandomResultRateType posRate */
            posRate?: (gameElemRandomResultRateType.IposRateType[] | null);

            /** dataElemRandomResultRateType totalRate */
            totalRate: number;
        }

        /** Represents a dataElemRandomResultRateType. */
        class dataElemRandomResultRateType implements IdataElemRandomResultRateType {

            /**
             * Constructs a new dataElemRandomResultRateType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameElemRandomResultRateType.IdataElemRandomResultRateType);

            /** dataElemRandomResultRateType posRate. */
            public posRate: gameElemRandomResultRateType.IposRateType[];

            /** dataElemRandomResultRateType totalRate. */
            public totalRate: number;

            /**
             * Creates a new dataElemRandomResultRateType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns dataElemRandomResultRateType instance
             */
            public static create(properties?: gameElemRandomResultRateType.IdataElemRandomResultRateType): gameElemRandomResultRateType.dataElemRandomResultRateType;

            /**
             * Encodes the specified dataElemRandomResultRateType message. Does not implicitly {@link gameElemRandomResultRateType.dataElemRandomResultRateType.verify|verify} messages.
             * @param message dataElemRandomResultRateType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameElemRandomResultRateType.IdataElemRandomResultRateType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified dataElemRandomResultRateType message, length delimited. Does not implicitly {@link gameElemRandomResultRateType.dataElemRandomResultRateType.verify|verify} messages.
             * @param message dataElemRandomResultRateType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameElemRandomResultRateType.IdataElemRandomResultRateType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a dataElemRandomResultRateType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns dataElemRandomResultRateType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameElemRandomResultRateType.dataElemRandomResultRateType;

            /**
             * Decodes a dataElemRandomResultRateType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns dataElemRandomResultRateType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameElemRandomResultRateType.dataElemRandomResultRateType;

            /**
             * Verifies a dataElemRandomResultRateType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a dataElemRandomResultRateType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns dataElemRandomResultRateType
             */
            public static fromObject(object: { [k: string]: any }): gameElemRandomResultRateType.dataElemRandomResultRateType;

            /**
             * Creates a plain object from a dataElemRandomResultRateType message. Also converts values to other types if specified.
             * @param message dataElemRandomResultRateType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameElemRandomResultRateType.dataElemRandomResultRateType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this dataElemRandomResultRateType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an updateElemRandomResultRateType. */
        interface IupdateElemRandomResultRateType {

            /** updateElemRandomResultRateType index */
            index: number;

            /** updateElemRandomResultRateType posRate */
            posRate?: (gameElemRandomResultRateType.IposRateType[] | null);

            /** updateElemRandomResultRateType totalRate */
            totalRate: number;
        }

        /** Represents an updateElemRandomResultRateType. */
        class updateElemRandomResultRateType implements IupdateElemRandomResultRateType {

            /**
             * Constructs a new updateElemRandomResultRateType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameElemRandomResultRateType.IupdateElemRandomResultRateType);

            /** updateElemRandomResultRateType index. */
            public index: number;

            /** updateElemRandomResultRateType posRate. */
            public posRate: gameElemRandomResultRateType.IposRateType[];

            /** updateElemRandomResultRateType totalRate. */
            public totalRate: number;

            /**
             * Creates a new updateElemRandomResultRateType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns updateElemRandomResultRateType instance
             */
            public static create(properties?: gameElemRandomResultRateType.IupdateElemRandomResultRateType): gameElemRandomResultRateType.updateElemRandomResultRateType;

            /**
             * Encodes the specified updateElemRandomResultRateType message. Does not implicitly {@link gameElemRandomResultRateType.updateElemRandomResultRateType.verify|verify} messages.
             * @param message updateElemRandomResultRateType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameElemRandomResultRateType.IupdateElemRandomResultRateType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified updateElemRandomResultRateType message, length delimited. Does not implicitly {@link gameElemRandomResultRateType.updateElemRandomResultRateType.verify|verify} messages.
             * @param message updateElemRandomResultRateType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameElemRandomResultRateType.IupdateElemRandomResultRateType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an updateElemRandomResultRateType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns updateElemRandomResultRateType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameElemRandomResultRateType.updateElemRandomResultRateType;

            /**
             * Decodes an updateElemRandomResultRateType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns updateElemRandomResultRateType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameElemRandomResultRateType.updateElemRandomResultRateType;

            /**
             * Verifies an updateElemRandomResultRateType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an updateElemRandomResultRateType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns updateElemRandomResultRateType
             */
            public static fromObject(object: { [k: string]: any }): gameElemRandomResultRateType.updateElemRandomResultRateType;

            /**
             * Creates a plain object from an updateElemRandomResultRateType message. Also converts values to other types if specified.
             * @param message updateElemRandomResultRateType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameElemRandomResultRateType.updateElemRandomResultRateType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this updateElemRandomResultRateType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a posRateType. */
        interface IposRateType {

            /** posRateType pos */
            pos: number;

            /** posRateType rate */
            rate: number;
        }

        /** Represents a posRateType. */
        class posRateType implements IposRateType {

            /**
             * Constructs a new posRateType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameElemRandomResultRateType.IposRateType);

            /** posRateType pos. */
            public pos: number;

            /** posRateType rate. */
            public rate: number;

            /**
             * Creates a new posRateType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns posRateType instance
             */
            public static create(properties?: gameElemRandomResultRateType.IposRateType): gameElemRandomResultRateType.posRateType;

            /**
             * Encodes the specified posRateType message. Does not implicitly {@link gameElemRandomResultRateType.posRateType.verify|verify} messages.
             * @param message posRateType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameElemRandomResultRateType.IposRateType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified posRateType message, length delimited. Does not implicitly {@link gameElemRandomResultRateType.posRateType.verify|verify} messages.
             * @param message posRateType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameElemRandomResultRateType.IposRateType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a posRateType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns posRateType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameElemRandomResultRateType.posRateType;

            /**
             * Decodes a posRateType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns posRateType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameElemRandomResultRateType.posRateType;

            /**
             * Verifies a posRateType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a posRateType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns posRateType
             */
            public static fromObject(object: { [k: string]: any }): gameElemRandomResultRateType.posRateType;

            /**
             * Creates a plain object from a posRateType message. Also converts values to other types if specified.
             * @param message posRateType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameElemRandomResultRateType.posRateType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this posRateType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a gameFreeChooseCountType. */
    export class gameFreeChooseCountType implements IgameFreeChooseCountType {

        /**
         * Constructs a new gameFreeChooseCountType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IgameFreeChooseCountType);

        /** gameFreeChooseCountType data. */
        public data?: (gameFreeChooseCountType.IdataFreeChooseCountType | null);

        /** gameFreeChooseCountType update. */
        public update: gameFreeChooseCountType.IupdateFreeChooseCountType[];

        /**
         * Creates a new gameFreeChooseCountType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns gameFreeChooseCountType instance
         */
        public static create(properties?: IgameFreeChooseCountType): gameFreeChooseCountType;

        /**
         * Encodes the specified gameFreeChooseCountType message. Does not implicitly {@link gameFreeChooseCountType.verify|verify} messages.
         * @param message gameFreeChooseCountType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IgameFreeChooseCountType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified gameFreeChooseCountType message, length delimited. Does not implicitly {@link gameFreeChooseCountType.verify|verify} messages.
         * @param message gameFreeChooseCountType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IgameFreeChooseCountType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a gameFreeChooseCountType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns gameFreeChooseCountType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameFreeChooseCountType;

        /**
         * Decodes a gameFreeChooseCountType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns gameFreeChooseCountType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameFreeChooseCountType;

        /**
         * Verifies a gameFreeChooseCountType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a gameFreeChooseCountType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns gameFreeChooseCountType
         */
        public static fromObject(object: { [k: string]: any }): gameFreeChooseCountType;

        /**
         * Creates a plain object from a gameFreeChooseCountType message. Also converts values to other types if specified.
         * @param message gameFreeChooseCountType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gameFreeChooseCountType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this gameFreeChooseCountType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace gameFreeChooseCountType {

        /** Properties of a dataFreeChooseCountType. */
        interface IdataFreeChooseCountType {

            /** dataFreeChooseCountType freeChooseCount */
            freeChooseCount: number;
        }

        /** Represents a dataFreeChooseCountType. */
        class dataFreeChooseCountType implements IdataFreeChooseCountType {

            /**
             * Constructs a new dataFreeChooseCountType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameFreeChooseCountType.IdataFreeChooseCountType);

            /** dataFreeChooseCountType freeChooseCount. */
            public freeChooseCount: number;

            /**
             * Creates a new dataFreeChooseCountType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns dataFreeChooseCountType instance
             */
            public static create(properties?: gameFreeChooseCountType.IdataFreeChooseCountType): gameFreeChooseCountType.dataFreeChooseCountType;

            /**
             * Encodes the specified dataFreeChooseCountType message. Does not implicitly {@link gameFreeChooseCountType.dataFreeChooseCountType.verify|verify} messages.
             * @param message dataFreeChooseCountType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameFreeChooseCountType.IdataFreeChooseCountType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified dataFreeChooseCountType message, length delimited. Does not implicitly {@link gameFreeChooseCountType.dataFreeChooseCountType.verify|verify} messages.
             * @param message dataFreeChooseCountType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameFreeChooseCountType.IdataFreeChooseCountType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a dataFreeChooseCountType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns dataFreeChooseCountType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameFreeChooseCountType.dataFreeChooseCountType;

            /**
             * Decodes a dataFreeChooseCountType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns dataFreeChooseCountType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameFreeChooseCountType.dataFreeChooseCountType;

            /**
             * Verifies a dataFreeChooseCountType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a dataFreeChooseCountType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns dataFreeChooseCountType
             */
            public static fromObject(object: { [k: string]: any }): gameFreeChooseCountType.dataFreeChooseCountType;

            /**
             * Creates a plain object from a dataFreeChooseCountType message. Also converts values to other types if specified.
             * @param message dataFreeChooseCountType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameFreeChooseCountType.dataFreeChooseCountType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this dataFreeChooseCountType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an updateFreeChooseCountType. */
        interface IupdateFreeChooseCountType {

            /** updateFreeChooseCountType index */
            index: number;

            /** updateFreeChooseCountType freeChooseCount */
            freeChooseCount: number;
        }

        /** Represents an updateFreeChooseCountType. */
        class updateFreeChooseCountType implements IupdateFreeChooseCountType {

            /**
             * Constructs a new updateFreeChooseCountType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameFreeChooseCountType.IupdateFreeChooseCountType);

            /** updateFreeChooseCountType index. */
            public index: number;

            /** updateFreeChooseCountType freeChooseCount. */
            public freeChooseCount: number;

            /**
             * Creates a new updateFreeChooseCountType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns updateFreeChooseCountType instance
             */
            public static create(properties?: gameFreeChooseCountType.IupdateFreeChooseCountType): gameFreeChooseCountType.updateFreeChooseCountType;

            /**
             * Encodes the specified updateFreeChooseCountType message. Does not implicitly {@link gameFreeChooseCountType.updateFreeChooseCountType.verify|verify} messages.
             * @param message updateFreeChooseCountType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameFreeChooseCountType.IupdateFreeChooseCountType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified updateFreeChooseCountType message, length delimited. Does not implicitly {@link gameFreeChooseCountType.updateFreeChooseCountType.verify|verify} messages.
             * @param message updateFreeChooseCountType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameFreeChooseCountType.IupdateFreeChooseCountType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an updateFreeChooseCountType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns updateFreeChooseCountType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameFreeChooseCountType.updateFreeChooseCountType;

            /**
             * Decodes an updateFreeChooseCountType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns updateFreeChooseCountType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameFreeChooseCountType.updateFreeChooseCountType;

            /**
             * Verifies an updateFreeChooseCountType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an updateFreeChooseCountType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns updateFreeChooseCountType
             */
            public static fromObject(object: { [k: string]: any }): gameFreeChooseCountType.updateFreeChooseCountType;

            /**
             * Creates a plain object from an updateFreeChooseCountType message. Also converts values to other types if specified.
             * @param message updateFreeChooseCountType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameFreeChooseCountType.updateFreeChooseCountType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this updateFreeChooseCountType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a gameGoldRewardRandomRewardType. */
    export class gameGoldRewardRandomRewardType implements IgameGoldRewardRandomRewardType {

        /**
         * Constructs a new gameGoldRewardRandomRewardType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IgameGoldRewardRandomRewardType);

        /** gameGoldRewardRandomRewardType data. */
        public data?: (gameGoldRewardRandomRewardType.IdataGoldRewardRandomRewardType | null);

        /** gameGoldRewardRandomRewardType update. */
        public update: gameGoldRewardRandomRewardType.IupdateGoldRewardRandomRewardType[];

        /**
         * Creates a new gameGoldRewardRandomRewardType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns gameGoldRewardRandomRewardType instance
         */
        public static create(properties?: IgameGoldRewardRandomRewardType): gameGoldRewardRandomRewardType;

        /**
         * Encodes the specified gameGoldRewardRandomRewardType message. Does not implicitly {@link gameGoldRewardRandomRewardType.verify|verify} messages.
         * @param message gameGoldRewardRandomRewardType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IgameGoldRewardRandomRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified gameGoldRewardRandomRewardType message, length delimited. Does not implicitly {@link gameGoldRewardRandomRewardType.verify|verify} messages.
         * @param message gameGoldRewardRandomRewardType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IgameGoldRewardRandomRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a gameGoldRewardRandomRewardType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns gameGoldRewardRandomRewardType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameGoldRewardRandomRewardType;

        /**
         * Decodes a gameGoldRewardRandomRewardType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns gameGoldRewardRandomRewardType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameGoldRewardRandomRewardType;

        /**
         * Verifies a gameGoldRewardRandomRewardType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a gameGoldRewardRandomRewardType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns gameGoldRewardRandomRewardType
         */
        public static fromObject(object: { [k: string]: any }): gameGoldRewardRandomRewardType;

        /**
         * Creates a plain object from a gameGoldRewardRandomRewardType message. Also converts values to other types if specified.
         * @param message gameGoldRewardRandomRewardType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gameGoldRewardRandomRewardType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this gameGoldRewardRandomRewardType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace gameGoldRewardRandomRewardType {

        /** Properties of a dataGoldRewardRandomRewardType. */
        interface IdataGoldRewardRandomRewardType {

            /** dataGoldRewardRandomRewardType goldReward */
            goldReward: (number | Long);

            /** dataGoldRewardRandomRewardType posReward */
            posReward?: (gameGoldRewardRandomRewardType.IposRewardType[] | null);
        }

        /** Represents a dataGoldRewardRandomRewardType. */
        class dataGoldRewardRandomRewardType implements IdataGoldRewardRandomRewardType {

            /**
             * Constructs a new dataGoldRewardRandomRewardType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameGoldRewardRandomRewardType.IdataGoldRewardRandomRewardType);

            /** dataGoldRewardRandomRewardType goldReward. */
            public goldReward: (number | Long);

            /** dataGoldRewardRandomRewardType posReward. */
            public posReward: gameGoldRewardRandomRewardType.IposRewardType[];

            /**
             * Creates a new dataGoldRewardRandomRewardType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns dataGoldRewardRandomRewardType instance
             */
            public static create(properties?: gameGoldRewardRandomRewardType.IdataGoldRewardRandomRewardType): gameGoldRewardRandomRewardType.dataGoldRewardRandomRewardType;

            /**
             * Encodes the specified dataGoldRewardRandomRewardType message. Does not implicitly {@link gameGoldRewardRandomRewardType.dataGoldRewardRandomRewardType.verify|verify} messages.
             * @param message dataGoldRewardRandomRewardType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameGoldRewardRandomRewardType.IdataGoldRewardRandomRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified dataGoldRewardRandomRewardType message, length delimited. Does not implicitly {@link gameGoldRewardRandomRewardType.dataGoldRewardRandomRewardType.verify|verify} messages.
             * @param message dataGoldRewardRandomRewardType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameGoldRewardRandomRewardType.IdataGoldRewardRandomRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a dataGoldRewardRandomRewardType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns dataGoldRewardRandomRewardType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameGoldRewardRandomRewardType.dataGoldRewardRandomRewardType;

            /**
             * Decodes a dataGoldRewardRandomRewardType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns dataGoldRewardRandomRewardType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameGoldRewardRandomRewardType.dataGoldRewardRandomRewardType;

            /**
             * Verifies a dataGoldRewardRandomRewardType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a dataGoldRewardRandomRewardType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns dataGoldRewardRandomRewardType
             */
            public static fromObject(object: { [k: string]: any }): gameGoldRewardRandomRewardType.dataGoldRewardRandomRewardType;

            /**
             * Creates a plain object from a dataGoldRewardRandomRewardType message. Also converts values to other types if specified.
             * @param message dataGoldRewardRandomRewardType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameGoldRewardRandomRewardType.dataGoldRewardRandomRewardType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this dataGoldRewardRandomRewardType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an updateGoldRewardRandomRewardType. */
        interface IupdateGoldRewardRandomRewardType {

            /** updateGoldRewardRandomRewardType index */
            index: number;

            /** updateGoldRewardRandomRewardType goldReward */
            goldReward: (number | Long);

            /** updateGoldRewardRandomRewardType posReward */
            posReward?: (gameGoldRewardRandomRewardType.IposRewardType[] | null);
        }

        /** Represents an updateGoldRewardRandomRewardType. */
        class updateGoldRewardRandomRewardType implements IupdateGoldRewardRandomRewardType {

            /**
             * Constructs a new updateGoldRewardRandomRewardType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameGoldRewardRandomRewardType.IupdateGoldRewardRandomRewardType);

            /** updateGoldRewardRandomRewardType index. */
            public index: number;

            /** updateGoldRewardRandomRewardType goldReward. */
            public goldReward: (number | Long);

            /** updateGoldRewardRandomRewardType posReward. */
            public posReward: gameGoldRewardRandomRewardType.IposRewardType[];

            /**
             * Creates a new updateGoldRewardRandomRewardType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns updateGoldRewardRandomRewardType instance
             */
            public static create(properties?: gameGoldRewardRandomRewardType.IupdateGoldRewardRandomRewardType): gameGoldRewardRandomRewardType.updateGoldRewardRandomRewardType;

            /**
             * Encodes the specified updateGoldRewardRandomRewardType message. Does not implicitly {@link gameGoldRewardRandomRewardType.updateGoldRewardRandomRewardType.verify|verify} messages.
             * @param message updateGoldRewardRandomRewardType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameGoldRewardRandomRewardType.IupdateGoldRewardRandomRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified updateGoldRewardRandomRewardType message, length delimited. Does not implicitly {@link gameGoldRewardRandomRewardType.updateGoldRewardRandomRewardType.verify|verify} messages.
             * @param message updateGoldRewardRandomRewardType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameGoldRewardRandomRewardType.IupdateGoldRewardRandomRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an updateGoldRewardRandomRewardType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns updateGoldRewardRandomRewardType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameGoldRewardRandomRewardType.updateGoldRewardRandomRewardType;

            /**
             * Decodes an updateGoldRewardRandomRewardType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns updateGoldRewardRandomRewardType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameGoldRewardRandomRewardType.updateGoldRewardRandomRewardType;

            /**
             * Verifies an updateGoldRewardRandomRewardType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an updateGoldRewardRandomRewardType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns updateGoldRewardRandomRewardType
             */
            public static fromObject(object: { [k: string]: any }): gameGoldRewardRandomRewardType.updateGoldRewardRandomRewardType;

            /**
             * Creates a plain object from an updateGoldRewardRandomRewardType message. Also converts values to other types if specified.
             * @param message updateGoldRewardRandomRewardType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameGoldRewardRandomRewardType.updateGoldRewardRandomRewardType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this updateGoldRewardRandomRewardType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a posRewardType. */
        interface IposRewardType {

            /** posRewardType pos */
            pos: number;

            /** posRewardType rewardType */
            rewardType: number;

            /** posRewardType rewardData */
            rewardData: (number | Long);

            /** posRewardType totalReward */
            totalReward: (number | Long);
        }

        /** Represents a posRewardType. */
        class posRewardType implements IposRewardType {

            /**
             * Constructs a new posRewardType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameGoldRewardRandomRewardType.IposRewardType);

            /** posRewardType pos. */
            public pos: number;

            /** posRewardType rewardType. */
            public rewardType: number;

            /** posRewardType rewardData. */
            public rewardData: (number | Long);

            /** posRewardType totalReward. */
            public totalReward: (number | Long);

            /**
             * Creates a new posRewardType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns posRewardType instance
             */
            public static create(properties?: gameGoldRewardRandomRewardType.IposRewardType): gameGoldRewardRandomRewardType.posRewardType;

            /**
             * Encodes the specified posRewardType message. Does not implicitly {@link gameGoldRewardRandomRewardType.posRewardType.verify|verify} messages.
             * @param message posRewardType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameGoldRewardRandomRewardType.IposRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified posRewardType message, length delimited. Does not implicitly {@link gameGoldRewardRandomRewardType.posRewardType.verify|verify} messages.
             * @param message posRewardType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameGoldRewardRandomRewardType.IposRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a posRewardType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns posRewardType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameGoldRewardRandomRewardType.posRewardType;

            /**
             * Decodes a posRewardType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns posRewardType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameGoldRewardRandomRewardType.posRewardType;

            /**
             * Verifies a posRewardType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a posRewardType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns posRewardType
             */
            public static fromObject(object: { [k: string]: any }): gameGoldRewardRandomRewardType.posRewardType;

            /**
             * Creates a plain object from a posRewardType message. Also converts values to other types if specified.
             * @param message posRewardType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameGoldRewardRandomRewardType.posRewardType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this posRewardType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a gameGridChangeGetResultAgainType. */
    export class gameGridChangeGetResultAgainType implements IgameGridChangeGetResultAgainType {

        /**
         * Constructs a new gameGridChangeGetResultAgainType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IgameGridChangeGetResultAgainType);

        /** gameGridChangeGetResultAgainType data. */
        public data?: (gameGridChangeGetResultAgainType.IdataGridChangeGetResultAgainType | null);

        /** gameGridChangeGetResultAgainType update. */
        public update: gameGridChangeGetResultAgainType.IupdateGridChangeGetResultAgainType[];

        /**
         * Creates a new gameGridChangeGetResultAgainType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns gameGridChangeGetResultAgainType instance
         */
        public static create(properties?: IgameGridChangeGetResultAgainType): gameGridChangeGetResultAgainType;

        /**
         * Encodes the specified gameGridChangeGetResultAgainType message. Does not implicitly {@link gameGridChangeGetResultAgainType.verify|verify} messages.
         * @param message gameGridChangeGetResultAgainType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IgameGridChangeGetResultAgainType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified gameGridChangeGetResultAgainType message, length delimited. Does not implicitly {@link gameGridChangeGetResultAgainType.verify|verify} messages.
         * @param message gameGridChangeGetResultAgainType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IgameGridChangeGetResultAgainType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a gameGridChangeGetResultAgainType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns gameGridChangeGetResultAgainType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameGridChangeGetResultAgainType;

        /**
         * Decodes a gameGridChangeGetResultAgainType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns gameGridChangeGetResultAgainType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameGridChangeGetResultAgainType;

        /**
         * Verifies a gameGridChangeGetResultAgainType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a gameGridChangeGetResultAgainType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns gameGridChangeGetResultAgainType
         */
        public static fromObject(object: { [k: string]: any }): gameGridChangeGetResultAgainType;

        /**
         * Creates a plain object from a gameGridChangeGetResultAgainType message. Also converts values to other types if specified.
         * @param message gameGridChangeGetResultAgainType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gameGridChangeGetResultAgainType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this gameGridChangeGetResultAgainType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace gameGridChangeGetResultAgainType {

        /** Properties of a dataGridChangeGetResultAgainType. */
        interface IdataGridChangeGetResultAgainType {

            /** dataGridChangeGetResultAgainType resultList */
            resultList?: (IspinResultType[] | null);
        }

        /** Represents a dataGridChangeGetResultAgainType. */
        class dataGridChangeGetResultAgainType implements IdataGridChangeGetResultAgainType {

            /**
             * Constructs a new dataGridChangeGetResultAgainType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameGridChangeGetResultAgainType.IdataGridChangeGetResultAgainType);

            /** dataGridChangeGetResultAgainType resultList. */
            public resultList: IspinResultType[];

            /**
             * Creates a new dataGridChangeGetResultAgainType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns dataGridChangeGetResultAgainType instance
             */
            public static create(properties?: gameGridChangeGetResultAgainType.IdataGridChangeGetResultAgainType): gameGridChangeGetResultAgainType.dataGridChangeGetResultAgainType;

            /**
             * Encodes the specified dataGridChangeGetResultAgainType message. Does not implicitly {@link gameGridChangeGetResultAgainType.dataGridChangeGetResultAgainType.verify|verify} messages.
             * @param message dataGridChangeGetResultAgainType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameGridChangeGetResultAgainType.IdataGridChangeGetResultAgainType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified dataGridChangeGetResultAgainType message, length delimited. Does not implicitly {@link gameGridChangeGetResultAgainType.dataGridChangeGetResultAgainType.verify|verify} messages.
             * @param message dataGridChangeGetResultAgainType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameGridChangeGetResultAgainType.IdataGridChangeGetResultAgainType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a dataGridChangeGetResultAgainType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns dataGridChangeGetResultAgainType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameGridChangeGetResultAgainType.dataGridChangeGetResultAgainType;

            /**
             * Decodes a dataGridChangeGetResultAgainType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns dataGridChangeGetResultAgainType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameGridChangeGetResultAgainType.dataGridChangeGetResultAgainType;

            /**
             * Verifies a dataGridChangeGetResultAgainType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a dataGridChangeGetResultAgainType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns dataGridChangeGetResultAgainType
             */
            public static fromObject(object: { [k: string]: any }): gameGridChangeGetResultAgainType.dataGridChangeGetResultAgainType;

            /**
             * Creates a plain object from a dataGridChangeGetResultAgainType message. Also converts values to other types if specified.
             * @param message dataGridChangeGetResultAgainType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameGridChangeGetResultAgainType.dataGridChangeGetResultAgainType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this dataGridChangeGetResultAgainType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an updateGridChangeGetResultAgainType. */
        interface IupdateGridChangeGetResultAgainType {

            /** updateGridChangeGetResultAgainType index */
            index: number;

            /** updateGridChangeGetResultAgainType resultList */
            resultList?: (IspinResultType[] | null);
        }

        /** Represents an updateGridChangeGetResultAgainType. */
        class updateGridChangeGetResultAgainType implements IupdateGridChangeGetResultAgainType {

            /**
             * Constructs a new updateGridChangeGetResultAgainType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameGridChangeGetResultAgainType.IupdateGridChangeGetResultAgainType);

            /** updateGridChangeGetResultAgainType index. */
            public index: number;

            /** updateGridChangeGetResultAgainType resultList. */
            public resultList: IspinResultType[];

            /**
             * Creates a new updateGridChangeGetResultAgainType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns updateGridChangeGetResultAgainType instance
             */
            public static create(properties?: gameGridChangeGetResultAgainType.IupdateGridChangeGetResultAgainType): gameGridChangeGetResultAgainType.updateGridChangeGetResultAgainType;

            /**
             * Encodes the specified updateGridChangeGetResultAgainType message. Does not implicitly {@link gameGridChangeGetResultAgainType.updateGridChangeGetResultAgainType.verify|verify} messages.
             * @param message updateGridChangeGetResultAgainType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameGridChangeGetResultAgainType.IupdateGridChangeGetResultAgainType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified updateGridChangeGetResultAgainType message, length delimited. Does not implicitly {@link gameGridChangeGetResultAgainType.updateGridChangeGetResultAgainType.verify|verify} messages.
             * @param message updateGridChangeGetResultAgainType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameGridChangeGetResultAgainType.IupdateGridChangeGetResultAgainType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an updateGridChangeGetResultAgainType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns updateGridChangeGetResultAgainType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameGridChangeGetResultAgainType.updateGridChangeGetResultAgainType;

            /**
             * Decodes an updateGridChangeGetResultAgainType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns updateGridChangeGetResultAgainType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameGridChangeGetResultAgainType.updateGridChangeGetResultAgainType;

            /**
             * Verifies an updateGridChangeGetResultAgainType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an updateGridChangeGetResultAgainType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns updateGridChangeGetResultAgainType
             */
            public static fromObject(object: { [k: string]: any }): gameGridChangeGetResultAgainType.updateGridChangeGetResultAgainType;

            /**
             * Creates a plain object from an updateGridChangeGetResultAgainType message. Also converts values to other types if specified.
             * @param message updateGridChangeGetResultAgainType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameGridChangeGetResultAgainType.updateGridChangeGetResultAgainType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this updateGridChangeGetResultAgainType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a gameNotWinReturnSpinType. */
    export class gameNotWinReturnSpinType implements IgameNotWinReturnSpinType {

        /**
         * Constructs a new gameNotWinReturnSpinType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IgameNotWinReturnSpinType);

        /** gameNotWinReturnSpinType data. */
        public data?: (gameNotWinReturnSpinType.IdataNotWinReturnSpinType | null);

        /** gameNotWinReturnSpinType update. */
        public update: gameNotWinReturnSpinType.IupdateNotWinReturnSpinType[];

        /**
         * Creates a new gameNotWinReturnSpinType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns gameNotWinReturnSpinType instance
         */
        public static create(properties?: IgameNotWinReturnSpinType): gameNotWinReturnSpinType;

        /**
         * Encodes the specified gameNotWinReturnSpinType message. Does not implicitly {@link gameNotWinReturnSpinType.verify|verify} messages.
         * @param message gameNotWinReturnSpinType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IgameNotWinReturnSpinType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified gameNotWinReturnSpinType message, length delimited. Does not implicitly {@link gameNotWinReturnSpinType.verify|verify} messages.
         * @param message gameNotWinReturnSpinType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IgameNotWinReturnSpinType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a gameNotWinReturnSpinType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns gameNotWinReturnSpinType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameNotWinReturnSpinType;

        /**
         * Decodes a gameNotWinReturnSpinType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns gameNotWinReturnSpinType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameNotWinReturnSpinType;

        /**
         * Verifies a gameNotWinReturnSpinType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a gameNotWinReturnSpinType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns gameNotWinReturnSpinType
         */
        public static fromObject(object: { [k: string]: any }): gameNotWinReturnSpinType;

        /**
         * Creates a plain object from a gameNotWinReturnSpinType message. Also converts values to other types if specified.
         * @param message gameNotWinReturnSpinType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gameNotWinReturnSpinType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this gameNotWinReturnSpinType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace gameNotWinReturnSpinType {

        /** Properties of a dataNotWinReturnSpinType. */
        interface IdataNotWinReturnSpinType {

            /** dataNotWinReturnSpinType isTrigger */
            isTrigger: boolean;
        }

        /** Represents a dataNotWinReturnSpinType. */
        class dataNotWinReturnSpinType implements IdataNotWinReturnSpinType {

            /**
             * Constructs a new dataNotWinReturnSpinType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameNotWinReturnSpinType.IdataNotWinReturnSpinType);

            /** dataNotWinReturnSpinType isTrigger. */
            public isTrigger: boolean;

            /**
             * Creates a new dataNotWinReturnSpinType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns dataNotWinReturnSpinType instance
             */
            public static create(properties?: gameNotWinReturnSpinType.IdataNotWinReturnSpinType): gameNotWinReturnSpinType.dataNotWinReturnSpinType;

            /**
             * Encodes the specified dataNotWinReturnSpinType message. Does not implicitly {@link gameNotWinReturnSpinType.dataNotWinReturnSpinType.verify|verify} messages.
             * @param message dataNotWinReturnSpinType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameNotWinReturnSpinType.IdataNotWinReturnSpinType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified dataNotWinReturnSpinType message, length delimited. Does not implicitly {@link gameNotWinReturnSpinType.dataNotWinReturnSpinType.verify|verify} messages.
             * @param message dataNotWinReturnSpinType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameNotWinReturnSpinType.IdataNotWinReturnSpinType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a dataNotWinReturnSpinType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns dataNotWinReturnSpinType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameNotWinReturnSpinType.dataNotWinReturnSpinType;

            /**
             * Decodes a dataNotWinReturnSpinType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns dataNotWinReturnSpinType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameNotWinReturnSpinType.dataNotWinReturnSpinType;

            /**
             * Verifies a dataNotWinReturnSpinType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a dataNotWinReturnSpinType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns dataNotWinReturnSpinType
             */
            public static fromObject(object: { [k: string]: any }): gameNotWinReturnSpinType.dataNotWinReturnSpinType;

            /**
             * Creates a plain object from a dataNotWinReturnSpinType message. Also converts values to other types if specified.
             * @param message dataNotWinReturnSpinType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameNotWinReturnSpinType.dataNotWinReturnSpinType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this dataNotWinReturnSpinType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an updateNotWinReturnSpinType. */
        interface IupdateNotWinReturnSpinType {

            /** updateNotWinReturnSpinType index */
            index: number;

            /** updateNotWinReturnSpinType isTrigger */
            isTrigger: boolean;
        }

        /** Represents an updateNotWinReturnSpinType. */
        class updateNotWinReturnSpinType implements IupdateNotWinReturnSpinType {

            /**
             * Constructs a new updateNotWinReturnSpinType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameNotWinReturnSpinType.IupdateNotWinReturnSpinType);

            /** updateNotWinReturnSpinType index. */
            public index: number;

            /** updateNotWinReturnSpinType isTrigger. */
            public isTrigger: boolean;

            /**
             * Creates a new updateNotWinReturnSpinType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns updateNotWinReturnSpinType instance
             */
            public static create(properties?: gameNotWinReturnSpinType.IupdateNotWinReturnSpinType): gameNotWinReturnSpinType.updateNotWinReturnSpinType;

            /**
             * Encodes the specified updateNotWinReturnSpinType message. Does not implicitly {@link gameNotWinReturnSpinType.updateNotWinReturnSpinType.verify|verify} messages.
             * @param message updateNotWinReturnSpinType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameNotWinReturnSpinType.IupdateNotWinReturnSpinType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified updateNotWinReturnSpinType message, length delimited. Does not implicitly {@link gameNotWinReturnSpinType.updateNotWinReturnSpinType.verify|verify} messages.
             * @param message updateNotWinReturnSpinType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameNotWinReturnSpinType.IupdateNotWinReturnSpinType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an updateNotWinReturnSpinType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns updateNotWinReturnSpinType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameNotWinReturnSpinType.updateNotWinReturnSpinType;

            /**
             * Decodes an updateNotWinReturnSpinType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns updateNotWinReturnSpinType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameNotWinReturnSpinType.updateNotWinReturnSpinType;

            /**
             * Verifies an updateNotWinReturnSpinType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an updateNotWinReturnSpinType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns updateNotWinReturnSpinType
             */
            public static fromObject(object: { [k: string]: any }): gameNotWinReturnSpinType.updateNotWinReturnSpinType;

            /**
             * Creates a plain object from an updateNotWinReturnSpinType message. Also converts values to other types if specified.
             * @param message updateNotWinReturnSpinType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameNotWinReturnSpinType.updateNotWinReturnSpinType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this updateNotWinReturnSpinType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a gamePosMultiType. */
    export class gamePosMultiType implements IgamePosMultiType {

        /**
         * Constructs a new gamePosMultiType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IgamePosMultiType);

        /** gamePosMultiType data. */
        public data?: (gamePosMultiType.IdataPosMultiType | null);

        /** gamePosMultiType update. */
        public update: gamePosMultiType.IupdatePosMultiType[];

        /**
         * Creates a new gamePosMultiType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns gamePosMultiType instance
         */
        public static create(properties?: IgamePosMultiType): gamePosMultiType;

        /**
         * Encodes the specified gamePosMultiType message. Does not implicitly {@link gamePosMultiType.verify|verify} messages.
         * @param message gamePosMultiType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IgamePosMultiType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified gamePosMultiType message, length delimited. Does not implicitly {@link gamePosMultiType.verify|verify} messages.
         * @param message gamePosMultiType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IgamePosMultiType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a gamePosMultiType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns gamePosMultiType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gamePosMultiType;

        /**
         * Decodes a gamePosMultiType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns gamePosMultiType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gamePosMultiType;

        /**
         * Verifies a gamePosMultiType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a gamePosMultiType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns gamePosMultiType
         */
        public static fromObject(object: { [k: string]: any }): gamePosMultiType;

        /**
         * Creates a plain object from a gamePosMultiType message. Also converts values to other types if specified.
         * @param message gamePosMultiType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamePosMultiType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this gamePosMultiType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace gamePosMultiType {

        /** Properties of a dataPosMultiType. */
        interface IdataPosMultiType {

            /** dataPosMultiType multiRing */
            multiRing?: (gamePosMultiType.ImultiRingType[] | null);
        }

        /** Represents a dataPosMultiType. */
        class dataPosMultiType implements IdataPosMultiType {

            /**
             * Constructs a new dataPosMultiType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gamePosMultiType.IdataPosMultiType);

            /** dataPosMultiType multiRing. */
            public multiRing: gamePosMultiType.ImultiRingType[];

            /**
             * Creates a new dataPosMultiType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns dataPosMultiType instance
             */
            public static create(properties?: gamePosMultiType.IdataPosMultiType): gamePosMultiType.dataPosMultiType;

            /**
             * Encodes the specified dataPosMultiType message. Does not implicitly {@link gamePosMultiType.dataPosMultiType.verify|verify} messages.
             * @param message dataPosMultiType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gamePosMultiType.IdataPosMultiType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified dataPosMultiType message, length delimited. Does not implicitly {@link gamePosMultiType.dataPosMultiType.verify|verify} messages.
             * @param message dataPosMultiType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gamePosMultiType.IdataPosMultiType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a dataPosMultiType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns dataPosMultiType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gamePosMultiType.dataPosMultiType;

            /**
             * Decodes a dataPosMultiType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns dataPosMultiType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gamePosMultiType.dataPosMultiType;

            /**
             * Verifies a dataPosMultiType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a dataPosMultiType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns dataPosMultiType
             */
            public static fromObject(object: { [k: string]: any }): gamePosMultiType.dataPosMultiType;

            /**
             * Creates a plain object from a dataPosMultiType message. Also converts values to other types if specified.
             * @param message dataPosMultiType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gamePosMultiType.dataPosMultiType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this dataPosMultiType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an updatePosMultiType. */
        interface IupdatePosMultiType {

            /** updatePosMultiType index */
            index: number;

            /** updatePosMultiType multiRing */
            multiRing?: (gamePosMultiType.ImultiRingType[] | null);
        }

        /** Represents an updatePosMultiType. */
        class updatePosMultiType implements IupdatePosMultiType {

            /**
             * Constructs a new updatePosMultiType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gamePosMultiType.IupdatePosMultiType);

            /** updatePosMultiType index. */
            public index: number;

            /** updatePosMultiType multiRing. */
            public multiRing: gamePosMultiType.ImultiRingType[];

            /**
             * Creates a new updatePosMultiType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns updatePosMultiType instance
             */
            public static create(properties?: gamePosMultiType.IupdatePosMultiType): gamePosMultiType.updatePosMultiType;

            /**
             * Encodes the specified updatePosMultiType message. Does not implicitly {@link gamePosMultiType.updatePosMultiType.verify|verify} messages.
             * @param message updatePosMultiType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gamePosMultiType.IupdatePosMultiType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified updatePosMultiType message, length delimited. Does not implicitly {@link gamePosMultiType.updatePosMultiType.verify|verify} messages.
             * @param message updatePosMultiType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gamePosMultiType.IupdatePosMultiType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an updatePosMultiType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns updatePosMultiType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gamePosMultiType.updatePosMultiType;

            /**
             * Decodes an updatePosMultiType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns updatePosMultiType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gamePosMultiType.updatePosMultiType;

            /**
             * Verifies an updatePosMultiType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an updatePosMultiType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns updatePosMultiType
             */
            public static fromObject(object: { [k: string]: any }): gamePosMultiType.updatePosMultiType;

            /**
             * Creates a plain object from an updatePosMultiType message. Also converts values to other types if specified.
             * @param message updatePosMultiType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gamePosMultiType.updatePosMultiType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this updatePosMultiType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a multiRingType. */
        interface ImultiRingType {

            /** multiRingType pos */
            pos: number;

            /** multiRingType multi */
            multi: number;

            /** multiRingType lastRound */
            lastRound: number;
        }

        /** Represents a multiRingType. */
        class multiRingType implements ImultiRingType {

            /**
             * Constructs a new multiRingType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gamePosMultiType.ImultiRingType);

            /** multiRingType pos. */
            public pos: number;

            /** multiRingType multi. */
            public multi: number;

            /** multiRingType lastRound. */
            public lastRound: number;

            /**
             * Creates a new multiRingType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns multiRingType instance
             */
            public static create(properties?: gamePosMultiType.ImultiRingType): gamePosMultiType.multiRingType;

            /**
             * Encodes the specified multiRingType message. Does not implicitly {@link gamePosMultiType.multiRingType.verify|verify} messages.
             * @param message multiRingType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gamePosMultiType.ImultiRingType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified multiRingType message, length delimited. Does not implicitly {@link gamePosMultiType.multiRingType.verify|verify} messages.
             * @param message multiRingType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gamePosMultiType.ImultiRingType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a multiRingType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns multiRingType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gamePosMultiType.multiRingType;

            /**
             * Decodes a multiRingType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns multiRingType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gamePosMultiType.multiRingType;

            /**
             * Verifies a multiRingType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a multiRingType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns multiRingType
             */
            public static fromObject(object: { [k: string]: any }): gamePosMultiType.multiRingType;

            /**
             * Creates a plain object from a multiRingType message. Also converts values to other types if specified.
             * @param message multiRingType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gamePosMultiType.multiRingType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this multiRingType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a gameRandomMultiFixRespinType. */
    export class gameRandomMultiFixRespinType implements IgameRandomMultiFixRespinType {

        /**
         * Constructs a new gameRandomMultiFixRespinType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IgameRandomMultiFixRespinType);

        /** gameRandomMultiFixRespinType data. */
        public data?: (gameRandomMultiFixRespinType.IdataRandomMultiFixRespinType | null);

        /** gameRandomMultiFixRespinType update. */
        public update: gameRandomMultiFixRespinType.IupdateRandomMultiFixRespinType[];

        /**
         * Creates a new gameRandomMultiFixRespinType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns gameRandomMultiFixRespinType instance
         */
        public static create(properties?: IgameRandomMultiFixRespinType): gameRandomMultiFixRespinType;

        /**
         * Encodes the specified gameRandomMultiFixRespinType message. Does not implicitly {@link gameRandomMultiFixRespinType.verify|verify} messages.
         * @param message gameRandomMultiFixRespinType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IgameRandomMultiFixRespinType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified gameRandomMultiFixRespinType message, length delimited. Does not implicitly {@link gameRandomMultiFixRespinType.verify|verify} messages.
         * @param message gameRandomMultiFixRespinType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IgameRandomMultiFixRespinType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a gameRandomMultiFixRespinType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns gameRandomMultiFixRespinType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameRandomMultiFixRespinType;

        /**
         * Decodes a gameRandomMultiFixRespinType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns gameRandomMultiFixRespinType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameRandomMultiFixRespinType;

        /**
         * Verifies a gameRandomMultiFixRespinType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a gameRandomMultiFixRespinType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns gameRandomMultiFixRespinType
         */
        public static fromObject(object: { [k: string]: any }): gameRandomMultiFixRespinType;

        /**
         * Creates a plain object from a gameRandomMultiFixRespinType message. Also converts values to other types if specified.
         * @param message gameRandomMultiFixRespinType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gameRandomMultiFixRespinType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this gameRandomMultiFixRespinType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace gameRandomMultiFixRespinType {

        /** Properties of a dataRandomMultiFixRespinType. */
        interface IdataRandomMultiFixRespinType {

            /** dataRandomMultiFixRespinType gridReward */
            gridReward?: (gameRandomMultiFixRespinType.IgridRewardType[] | null);

            /** dataRandomMultiFixRespinType addTimesPos */
            addTimesPos?: (gameRandomMultiFixRespinType.IaddTimesPosType[] | null);
        }

        /** Represents a dataRandomMultiFixRespinType. */
        class dataRandomMultiFixRespinType implements IdataRandomMultiFixRespinType {

            /**
             * Constructs a new dataRandomMultiFixRespinType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameRandomMultiFixRespinType.IdataRandomMultiFixRespinType);

            /** dataRandomMultiFixRespinType gridReward. */
            public gridReward: gameRandomMultiFixRespinType.IgridRewardType[];

            /** dataRandomMultiFixRespinType addTimesPos. */
            public addTimesPos: gameRandomMultiFixRespinType.IaddTimesPosType[];

            /**
             * Creates a new dataRandomMultiFixRespinType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns dataRandomMultiFixRespinType instance
             */
            public static create(properties?: gameRandomMultiFixRespinType.IdataRandomMultiFixRespinType): gameRandomMultiFixRespinType.dataRandomMultiFixRespinType;

            /**
             * Encodes the specified dataRandomMultiFixRespinType message. Does not implicitly {@link gameRandomMultiFixRespinType.dataRandomMultiFixRespinType.verify|verify} messages.
             * @param message dataRandomMultiFixRespinType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameRandomMultiFixRespinType.IdataRandomMultiFixRespinType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified dataRandomMultiFixRespinType message, length delimited. Does not implicitly {@link gameRandomMultiFixRespinType.dataRandomMultiFixRespinType.verify|verify} messages.
             * @param message dataRandomMultiFixRespinType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameRandomMultiFixRespinType.IdataRandomMultiFixRespinType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a dataRandomMultiFixRespinType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns dataRandomMultiFixRespinType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameRandomMultiFixRespinType.dataRandomMultiFixRespinType;

            /**
             * Decodes a dataRandomMultiFixRespinType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns dataRandomMultiFixRespinType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameRandomMultiFixRespinType.dataRandomMultiFixRespinType;

            /**
             * Verifies a dataRandomMultiFixRespinType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a dataRandomMultiFixRespinType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns dataRandomMultiFixRespinType
             */
            public static fromObject(object: { [k: string]: any }): gameRandomMultiFixRespinType.dataRandomMultiFixRespinType;

            /**
             * Creates a plain object from a dataRandomMultiFixRespinType message. Also converts values to other types if specified.
             * @param message dataRandomMultiFixRespinType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameRandomMultiFixRespinType.dataRandomMultiFixRespinType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this dataRandomMultiFixRespinType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an updateRandomMultiFixRespinType. */
        interface IupdateRandomMultiFixRespinType {

            /** updateRandomMultiFixRespinType index */
            index: number;

            /** updateRandomMultiFixRespinType gridReward */
            gridReward?: (gameRandomMultiFixRespinType.IgridRewardType[] | null);

            /** updateRandomMultiFixRespinType addTimesPos */
            addTimesPos?: (gameRandomMultiFixRespinType.IaddTimesPosType[] | null);
        }

        /** Represents an updateRandomMultiFixRespinType. */
        class updateRandomMultiFixRespinType implements IupdateRandomMultiFixRespinType {

            /**
             * Constructs a new updateRandomMultiFixRespinType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameRandomMultiFixRespinType.IupdateRandomMultiFixRespinType);

            /** updateRandomMultiFixRespinType index. */
            public index: number;

            /** updateRandomMultiFixRespinType gridReward. */
            public gridReward: gameRandomMultiFixRespinType.IgridRewardType[];

            /** updateRandomMultiFixRespinType addTimesPos. */
            public addTimesPos: gameRandomMultiFixRespinType.IaddTimesPosType[];

            /**
             * Creates a new updateRandomMultiFixRespinType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns updateRandomMultiFixRespinType instance
             */
            public static create(properties?: gameRandomMultiFixRespinType.IupdateRandomMultiFixRespinType): gameRandomMultiFixRespinType.updateRandomMultiFixRespinType;

            /**
             * Encodes the specified updateRandomMultiFixRespinType message. Does not implicitly {@link gameRandomMultiFixRespinType.updateRandomMultiFixRespinType.verify|verify} messages.
             * @param message updateRandomMultiFixRespinType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameRandomMultiFixRespinType.IupdateRandomMultiFixRespinType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified updateRandomMultiFixRespinType message, length delimited. Does not implicitly {@link gameRandomMultiFixRespinType.updateRandomMultiFixRespinType.verify|verify} messages.
             * @param message updateRandomMultiFixRespinType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameRandomMultiFixRespinType.IupdateRandomMultiFixRespinType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an updateRandomMultiFixRespinType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns updateRandomMultiFixRespinType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameRandomMultiFixRespinType.updateRandomMultiFixRespinType;

            /**
             * Decodes an updateRandomMultiFixRespinType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns updateRandomMultiFixRespinType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameRandomMultiFixRespinType.updateRandomMultiFixRespinType;

            /**
             * Verifies an updateRandomMultiFixRespinType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an updateRandomMultiFixRespinType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns updateRandomMultiFixRespinType
             */
            public static fromObject(object: { [k: string]: any }): gameRandomMultiFixRespinType.updateRandomMultiFixRespinType;

            /**
             * Creates a plain object from an updateRandomMultiFixRespinType message. Also converts values to other types if specified.
             * @param message updateRandomMultiFixRespinType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameRandomMultiFixRespinType.updateRandomMultiFixRespinType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this updateRandomMultiFixRespinType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a gridRewardType. */
        interface IgridRewardType {

            /** gridRewardType pos */
            pos: number;

            /** gridRewardType elem */
            elem: number;

            /** gridRewardType reward */
            reward: (number | Long);

            /** gridRewardType funKey */
            funKey: number;

            /** gridRewardType funArg */
            funArg: (number | Long);

            /** gridRewardType funGold */
            funGold: (number | Long);
        }

        /** Represents a gridRewardType. */
        class gridRewardType implements IgridRewardType {

            /**
             * Constructs a new gridRewardType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameRandomMultiFixRespinType.IgridRewardType);

            /** gridRewardType pos. */
            public pos: number;

            /** gridRewardType elem. */
            public elem: number;

            /** gridRewardType reward. */
            public reward: (number | Long);

            /** gridRewardType funKey. */
            public funKey: number;

            /** gridRewardType funArg. */
            public funArg: (number | Long);

            /** gridRewardType funGold. */
            public funGold: (number | Long);

            /**
             * Creates a new gridRewardType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns gridRewardType instance
             */
            public static create(properties?: gameRandomMultiFixRespinType.IgridRewardType): gameRandomMultiFixRespinType.gridRewardType;

            /**
             * Encodes the specified gridRewardType message. Does not implicitly {@link gameRandomMultiFixRespinType.gridRewardType.verify|verify} messages.
             * @param message gridRewardType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameRandomMultiFixRespinType.IgridRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified gridRewardType message, length delimited. Does not implicitly {@link gameRandomMultiFixRespinType.gridRewardType.verify|verify} messages.
             * @param message gridRewardType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameRandomMultiFixRespinType.IgridRewardType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a gridRewardType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns gridRewardType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameRandomMultiFixRespinType.gridRewardType;

            /**
             * Decodes a gridRewardType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns gridRewardType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameRandomMultiFixRespinType.gridRewardType;

            /**
             * Verifies a gridRewardType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a gridRewardType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns gridRewardType
             */
            public static fromObject(object: { [k: string]: any }): gameRandomMultiFixRespinType.gridRewardType;

            /**
             * Creates a plain object from a gridRewardType message. Also converts values to other types if specified.
             * @param message gridRewardType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameRandomMultiFixRespinType.gridRewardType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this gridRewardType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an addTimesPosType. */
        interface IaddTimesPosType {

            /** addTimesPosType pos */
            pos: number;

            /** addTimesPosType times */
            times: number;
        }

        /** Represents an addTimesPosType. */
        class addTimesPosType implements IaddTimesPosType {

            /**
             * Constructs a new addTimesPosType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameRandomMultiFixRespinType.IaddTimesPosType);

            /** addTimesPosType pos. */
            public pos: number;

            /** addTimesPosType times. */
            public times: number;

            /**
             * Creates a new addTimesPosType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns addTimesPosType instance
             */
            public static create(properties?: gameRandomMultiFixRespinType.IaddTimesPosType): gameRandomMultiFixRespinType.addTimesPosType;

            /**
             * Encodes the specified addTimesPosType message. Does not implicitly {@link gameRandomMultiFixRespinType.addTimesPosType.verify|verify} messages.
             * @param message addTimesPosType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameRandomMultiFixRespinType.IaddTimesPosType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified addTimesPosType message, length delimited. Does not implicitly {@link gameRandomMultiFixRespinType.addTimesPosType.verify|verify} messages.
             * @param message addTimesPosType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameRandomMultiFixRespinType.IaddTimesPosType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an addTimesPosType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns addTimesPosType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameRandomMultiFixRespinType.addTimesPosType;

            /**
             * Decodes an addTimesPosType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns addTimesPosType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameRandomMultiFixRespinType.addTimesPosType;

            /**
             * Verifies an addTimesPosType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an addTimesPosType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns addTimesPosType
             */
            public static fromObject(object: { [k: string]: any }): gameRandomMultiFixRespinType.addTimesPosType;

            /**
             * Creates a plain object from an addTimesPosType message. Also converts values to other types if specified.
             * @param message addTimesPosType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameRandomMultiFixRespinType.addTimesPosType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this addTimesPosType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a gameRollerExpandType. */
    export class gameRollerExpandType implements IgameRollerExpandType {

        /**
         * Constructs a new gameRollerExpandType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IgameRollerExpandType);

        /** gameRollerExpandType data. */
        public data?: (gameRollerExpandType.IdataRollerExpandType | null);

        /** gameRollerExpandType update. */
        public update: gameRollerExpandType.IupdateRollerExpandType[];

        /**
         * Creates a new gameRollerExpandType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns gameRollerExpandType instance
         */
        public static create(properties?: IgameRollerExpandType): gameRollerExpandType;

        /**
         * Encodes the specified gameRollerExpandType message. Does not implicitly {@link gameRollerExpandType.verify|verify} messages.
         * @param message gameRollerExpandType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IgameRollerExpandType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified gameRollerExpandType message, length delimited. Does not implicitly {@link gameRollerExpandType.verify|verify} messages.
         * @param message gameRollerExpandType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IgameRollerExpandType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a gameRollerExpandType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns gameRollerExpandType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameRollerExpandType;

        /**
         * Decodes a gameRollerExpandType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns gameRollerExpandType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameRollerExpandType;

        /**
         * Verifies a gameRollerExpandType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a gameRollerExpandType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns gameRollerExpandType
         */
        public static fromObject(object: { [k: string]: any }): gameRollerExpandType;

        /**
         * Creates a plain object from a gameRollerExpandType message. Also converts values to other types if specified.
         * @param message gameRollerExpandType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gameRollerExpandType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this gameRollerExpandType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace gameRollerExpandType {

        /** Properties of a dataRollerExpandType. */
        interface IdataRollerExpandType {

            /** dataRollerExpandType rate */
            rate: number;

            /** dataRollerExpandType expandAddRate */
            expandAddRate: number;

            /** dataRollerExpandType resultList */
            resultList?: (gameRollerExpandType.IResultType[] | null);
        }

        /** Represents a dataRollerExpandType. */
        class dataRollerExpandType implements IdataRollerExpandType {

            /**
             * Constructs a new dataRollerExpandType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameRollerExpandType.IdataRollerExpandType);

            /** dataRollerExpandType rate. */
            public rate: number;

            /** dataRollerExpandType expandAddRate. */
            public expandAddRate: number;

            /** dataRollerExpandType resultList. */
            public resultList: gameRollerExpandType.IResultType[];

            /**
             * Creates a new dataRollerExpandType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns dataRollerExpandType instance
             */
            public static create(properties?: gameRollerExpandType.IdataRollerExpandType): gameRollerExpandType.dataRollerExpandType;

            /**
             * Encodes the specified dataRollerExpandType message. Does not implicitly {@link gameRollerExpandType.dataRollerExpandType.verify|verify} messages.
             * @param message dataRollerExpandType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameRollerExpandType.IdataRollerExpandType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified dataRollerExpandType message, length delimited. Does not implicitly {@link gameRollerExpandType.dataRollerExpandType.verify|verify} messages.
             * @param message dataRollerExpandType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameRollerExpandType.IdataRollerExpandType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a dataRollerExpandType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns dataRollerExpandType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameRollerExpandType.dataRollerExpandType;

            /**
             * Decodes a dataRollerExpandType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns dataRollerExpandType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameRollerExpandType.dataRollerExpandType;

            /**
             * Verifies a dataRollerExpandType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a dataRollerExpandType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns dataRollerExpandType
             */
            public static fromObject(object: { [k: string]: any }): gameRollerExpandType.dataRollerExpandType;

            /**
             * Creates a plain object from a dataRollerExpandType message. Also converts values to other types if specified.
             * @param message dataRollerExpandType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameRollerExpandType.dataRollerExpandType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this dataRollerExpandType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an updateRollerExpandType. */
        interface IupdateRollerExpandType {

            /** updateRollerExpandType index */
            index: number;

            /** updateRollerExpandType rate */
            rate: number;

            /** updateRollerExpandType expandAddRate */
            expandAddRate: number;

            /** updateRollerExpandType resultList */
            resultList?: (gameRollerExpandType.IResultType[] | null);
        }

        /** Represents an updateRollerExpandType. */
        class updateRollerExpandType implements IupdateRollerExpandType {

            /**
             * Constructs a new updateRollerExpandType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameRollerExpandType.IupdateRollerExpandType);

            /** updateRollerExpandType index. */
            public index: number;

            /** updateRollerExpandType rate. */
            public rate: number;

            /** updateRollerExpandType expandAddRate. */
            public expandAddRate: number;

            /** updateRollerExpandType resultList. */
            public resultList: gameRollerExpandType.IResultType[];

            /**
             * Creates a new updateRollerExpandType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns updateRollerExpandType instance
             */
            public static create(properties?: gameRollerExpandType.IupdateRollerExpandType): gameRollerExpandType.updateRollerExpandType;

            /**
             * Encodes the specified updateRollerExpandType message. Does not implicitly {@link gameRollerExpandType.updateRollerExpandType.verify|verify} messages.
             * @param message updateRollerExpandType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameRollerExpandType.IupdateRollerExpandType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified updateRollerExpandType message, length delimited. Does not implicitly {@link gameRollerExpandType.updateRollerExpandType.verify|verify} messages.
             * @param message updateRollerExpandType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameRollerExpandType.IupdateRollerExpandType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an updateRollerExpandType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns updateRollerExpandType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameRollerExpandType.updateRollerExpandType;

            /**
             * Decodes an updateRollerExpandType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns updateRollerExpandType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameRollerExpandType.updateRollerExpandType;

            /**
             * Verifies an updateRollerExpandType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an updateRollerExpandType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns updateRollerExpandType
             */
            public static fromObject(object: { [k: string]: any }): gameRollerExpandType.updateRollerExpandType;

            /**
             * Creates a plain object from an updateRollerExpandType message. Also converts values to other types if specified.
             * @param message updateRollerExpandType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameRollerExpandType.updateRollerExpandType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this updateRollerExpandType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ResultType. */
        interface IResultType {

            /** ResultType spinResult */
            spinResult: IspinResultType;

            /** ResultType splitGridData */
            splitGridData?: (gameRollerExpandType.IsplitGridDataType[] | null);
        }

        /** Represents a ResultType. */
        class ResultType implements IResultType {

            /**
             * Constructs a new ResultType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameRollerExpandType.IResultType);

            /** ResultType spinResult. */
            public spinResult: IspinResultType;

            /** ResultType splitGridData. */
            public splitGridData: gameRollerExpandType.IsplitGridDataType[];

            /**
             * Creates a new ResultType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ResultType instance
             */
            public static create(properties?: gameRollerExpandType.IResultType): gameRollerExpandType.ResultType;

            /**
             * Encodes the specified ResultType message. Does not implicitly {@link gameRollerExpandType.ResultType.verify|verify} messages.
             * @param message ResultType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameRollerExpandType.IResultType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ResultType message, length delimited. Does not implicitly {@link gameRollerExpandType.ResultType.verify|verify} messages.
             * @param message ResultType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameRollerExpandType.IResultType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResultType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ResultType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameRollerExpandType.ResultType;

            /**
             * Decodes a ResultType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ResultType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameRollerExpandType.ResultType;

            /**
             * Verifies a ResultType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a ResultType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ResultType
             */
            public static fromObject(object: { [k: string]: any }): gameRollerExpandType.ResultType;

            /**
             * Creates a plain object from a ResultType message. Also converts values to other types if specified.
             * @param message ResultType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameRollerExpandType.ResultType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ResultType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a splitGridDataType. */
        interface IsplitGridDataType {

            /** splitGridDataType pos */
            pos: number;

            /** splitGridDataType splitGridData2 */
            splitGridData2?: (gameRollerExpandType.splitGridDataType.IsplitGridDataType2[] | null);
        }

        /** Represents a splitGridDataType. */
        class splitGridDataType implements IsplitGridDataType {

            /**
             * Constructs a new splitGridDataType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameRollerExpandType.IsplitGridDataType);

            /** splitGridDataType pos. */
            public pos: number;

            /** splitGridDataType splitGridData2. */
            public splitGridData2: gameRollerExpandType.splitGridDataType.IsplitGridDataType2[];

            /**
             * Creates a new splitGridDataType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns splitGridDataType instance
             */
            public static create(properties?: gameRollerExpandType.IsplitGridDataType): gameRollerExpandType.splitGridDataType;

            /**
             * Encodes the specified splitGridDataType message. Does not implicitly {@link gameRollerExpandType.splitGridDataType.verify|verify} messages.
             * @param message splitGridDataType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameRollerExpandType.IsplitGridDataType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified splitGridDataType message, length delimited. Does not implicitly {@link gameRollerExpandType.splitGridDataType.verify|verify} messages.
             * @param message splitGridDataType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameRollerExpandType.IsplitGridDataType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a splitGridDataType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns splitGridDataType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameRollerExpandType.splitGridDataType;

            /**
             * Decodes a splitGridDataType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns splitGridDataType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameRollerExpandType.splitGridDataType;

            /**
             * Verifies a splitGridDataType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a splitGridDataType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns splitGridDataType
             */
            public static fromObject(object: { [k: string]: any }): gameRollerExpandType.splitGridDataType;

            /**
             * Creates a plain object from a splitGridDataType message. Also converts values to other types if specified.
             * @param message splitGridDataType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameRollerExpandType.splitGridDataType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this splitGridDataType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace splitGridDataType {

            /** Properties of a splitGridDataType2. */
            interface IsplitGridDataType2 {

                /** splitGridDataType2 pos */
                pos: number;

                /** splitGridDataType2 elem */
                elem: number;

                /** splitGridDataType2 len */
                len: number;
            }

            /** Represents a splitGridDataType2. */
            class splitGridDataType2 implements IsplitGridDataType2 {

                /**
                 * Constructs a new splitGridDataType2.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: gameRollerExpandType.splitGridDataType.IsplitGridDataType2);

                /** splitGridDataType2 pos. */
                public pos: number;

                /** splitGridDataType2 elem. */
                public elem: number;

                /** splitGridDataType2 len. */
                public len: number;

                /**
                 * Creates a new splitGridDataType2 instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns splitGridDataType2 instance
                 */
                public static create(properties?: gameRollerExpandType.splitGridDataType.IsplitGridDataType2): gameRollerExpandType.splitGridDataType.splitGridDataType2;

                /**
                 * Encodes the specified splitGridDataType2 message. Does not implicitly {@link gameRollerExpandType.splitGridDataType.splitGridDataType2.verify|verify} messages.
                 * @param message splitGridDataType2 message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: gameRollerExpandType.splitGridDataType.IsplitGridDataType2, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified splitGridDataType2 message, length delimited. Does not implicitly {@link gameRollerExpandType.splitGridDataType.splitGridDataType2.verify|verify} messages.
                 * @param message splitGridDataType2 message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: gameRollerExpandType.splitGridDataType.IsplitGridDataType2, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a splitGridDataType2 message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns splitGridDataType2
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameRollerExpandType.splitGridDataType.splitGridDataType2;

                /**
                 * Decodes a splitGridDataType2 message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns splitGridDataType2
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameRollerExpandType.splitGridDataType.splitGridDataType2;

                /**
                 * Verifies a splitGridDataType2 message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string | null);

                /**
                 * Creates a splitGridDataType2 message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns splitGridDataType2
                 */
                public static fromObject(object: { [k: string]: any }): gameRollerExpandType.splitGridDataType.splitGridDataType2;

                /**
                 * Creates a plain object from a splitGridDataType2 message. Also converts values to other types if specified.
                 * @param message splitGridDataType2
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: gameRollerExpandType.splitGridDataType.splitGridDataType2, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this splitGridDataType2 to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Represents a gameWildChaseType. */
    export class gameWildChaseType implements IgameWildChaseType {

        /**
         * Constructs a new gameWildChaseType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IgameWildChaseType);

        /** gameWildChaseType data. */
        public data?: (gameWildChaseType.IdataWildChaseType | null);

        /** gameWildChaseType update. */
        public update: gameWildChaseType.IupdateWildChaseType[];

        /**
         * Creates a new gameWildChaseType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns gameWildChaseType instance
         */
        public static create(properties?: IgameWildChaseType): gameWildChaseType;

        /**
         * Encodes the specified gameWildChaseType message. Does not implicitly {@link gameWildChaseType.verify|verify} messages.
         * @param message gameWildChaseType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IgameWildChaseType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified gameWildChaseType message, length delimited. Does not implicitly {@link gameWildChaseType.verify|verify} messages.
         * @param message gameWildChaseType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IgameWildChaseType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a gameWildChaseType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns gameWildChaseType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameWildChaseType;

        /**
         * Decodes a gameWildChaseType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns gameWildChaseType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameWildChaseType;

        /**
         * Verifies a gameWildChaseType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a gameWildChaseType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns gameWildChaseType
         */
        public static fromObject(object: { [k: string]: any }): gameWildChaseType;

        /**
         * Creates a plain object from a gameWildChaseType message. Also converts values to other types if specified.
         * @param message gameWildChaseType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gameWildChaseType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this gameWildChaseType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace gameWildChaseType {

        /** Properties of a dataWildChaseType. */
        interface IdataWildChaseType {

            /** dataWildChaseType markPosList */
            markPosList?: (number[] | null);

            /** dataWildChaseType wildMulti */
            wildMulti: number;
        }

        /** Represents a dataWildChaseType. */
        class dataWildChaseType implements IdataWildChaseType {

            /**
             * Constructs a new dataWildChaseType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameWildChaseType.IdataWildChaseType);

            /** dataWildChaseType markPosList. */
            public markPosList: number[];

            /** dataWildChaseType wildMulti. */
            public wildMulti: number;

            /**
             * Creates a new dataWildChaseType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns dataWildChaseType instance
             */
            public static create(properties?: gameWildChaseType.IdataWildChaseType): gameWildChaseType.dataWildChaseType;

            /**
             * Encodes the specified dataWildChaseType message. Does not implicitly {@link gameWildChaseType.dataWildChaseType.verify|verify} messages.
             * @param message dataWildChaseType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameWildChaseType.IdataWildChaseType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified dataWildChaseType message, length delimited. Does not implicitly {@link gameWildChaseType.dataWildChaseType.verify|verify} messages.
             * @param message dataWildChaseType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameWildChaseType.IdataWildChaseType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a dataWildChaseType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns dataWildChaseType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameWildChaseType.dataWildChaseType;

            /**
             * Decodes a dataWildChaseType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns dataWildChaseType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameWildChaseType.dataWildChaseType;

            /**
             * Verifies a dataWildChaseType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a dataWildChaseType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns dataWildChaseType
             */
            public static fromObject(object: { [k: string]: any }): gameWildChaseType.dataWildChaseType;

            /**
             * Creates a plain object from a dataWildChaseType message. Also converts values to other types if specified.
             * @param message dataWildChaseType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameWildChaseType.dataWildChaseType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this dataWildChaseType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an updateWildChaseType. */
        interface IupdateWildChaseType {

            /** updateWildChaseType index */
            index: number;

            /** updateWildChaseType markPosList */
            markPosList?: (number[] | null);

            /** updateWildChaseType wildMulti */
            wildMulti: number;
        }

        /** Represents an updateWildChaseType. */
        class updateWildChaseType implements IupdateWildChaseType {

            /**
             * Constructs a new updateWildChaseType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameWildChaseType.IupdateWildChaseType);

            /** updateWildChaseType index. */
            public index: number;

            /** updateWildChaseType markPosList. */
            public markPosList: number[];

            /** updateWildChaseType wildMulti. */
            public wildMulti: number;

            /**
             * Creates a new updateWildChaseType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns updateWildChaseType instance
             */
            public static create(properties?: gameWildChaseType.IupdateWildChaseType): gameWildChaseType.updateWildChaseType;

            /**
             * Encodes the specified updateWildChaseType message. Does not implicitly {@link gameWildChaseType.updateWildChaseType.verify|verify} messages.
             * @param message updateWildChaseType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameWildChaseType.IupdateWildChaseType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified updateWildChaseType message, length delimited. Does not implicitly {@link gameWildChaseType.updateWildChaseType.verify|verify} messages.
             * @param message updateWildChaseType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameWildChaseType.IupdateWildChaseType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an updateWildChaseType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns updateWildChaseType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameWildChaseType.updateWildChaseType;

            /**
             * Decodes an updateWildChaseType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns updateWildChaseType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameWildChaseType.updateWildChaseType;

            /**
             * Verifies an updateWildChaseType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an updateWildChaseType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns updateWildChaseType
             */
            public static fromObject(object: { [k: string]: any }): gameWildChaseType.updateWildChaseType;

            /**
             * Creates a plain object from an updateWildChaseType message. Also converts values to other types if specified.
             * @param message updateWildChaseType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameWildChaseType.updateWildChaseType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this updateWildChaseType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Represents a gameWinningStreakType. */
    export class gameWinningStreakType implements IgameWinningStreakType {

        /**
         * Constructs a new gameWinningStreakType.
         * @param [properties] Properties to set
         */
        constructor(properties?: IgameWinningStreakType);

        /** gameWinningStreakType data. */
        public data?: (gameWinningStreakType.IdataWinningStreakType | null);

        /** gameWinningStreakType update. */
        public update: gameWinningStreakType.IupdateWinningStreakType[];

        /**
         * Creates a new gameWinningStreakType instance using the specified properties.
         * @param [properties] Properties to set
         * @returns gameWinningStreakType instance
         */
        public static create(properties?: IgameWinningStreakType): gameWinningStreakType;

        /**
         * Encodes the specified gameWinningStreakType message. Does not implicitly {@link gameWinningStreakType.verify|verify} messages.
         * @param message gameWinningStreakType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: IgameWinningStreakType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified gameWinningStreakType message, length delimited. Does not implicitly {@link gameWinningStreakType.verify|verify} messages.
         * @param message gameWinningStreakType message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: IgameWinningStreakType, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a gameWinningStreakType message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns gameWinningStreakType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameWinningStreakType;

        /**
         * Decodes a gameWinningStreakType message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns gameWinningStreakType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameWinningStreakType;

        /**
         * Verifies a gameWinningStreakType message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string | null);

        /**
         * Creates a gameWinningStreakType message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns gameWinningStreakType
         */
        public static fromObject(object: { [k: string]: any }): gameWinningStreakType;

        /**
         * Creates a plain object from a gameWinningStreakType message. Also converts values to other types if specified.
         * @param message gameWinningStreakType
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gameWinningStreakType, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this gameWinningStreakType to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    export namespace gameWinningStreakType {

        /** Properties of a dataWinningStreakType. */
        interface IdataWinningStreakType {

            /** dataWinningStreakType times */
            times: number;
        }

        /** Represents a dataWinningStreakType. */
        class dataWinningStreakType implements IdataWinningStreakType {

            /**
             * Constructs a new dataWinningStreakType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameWinningStreakType.IdataWinningStreakType);

            /** dataWinningStreakType times. */
            public times: number;

            /**
             * Creates a new dataWinningStreakType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns dataWinningStreakType instance
             */
            public static create(properties?: gameWinningStreakType.IdataWinningStreakType): gameWinningStreakType.dataWinningStreakType;

            /**
             * Encodes the specified dataWinningStreakType message. Does not implicitly {@link gameWinningStreakType.dataWinningStreakType.verify|verify} messages.
             * @param message dataWinningStreakType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameWinningStreakType.IdataWinningStreakType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified dataWinningStreakType message, length delimited. Does not implicitly {@link gameWinningStreakType.dataWinningStreakType.verify|verify} messages.
             * @param message dataWinningStreakType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameWinningStreakType.IdataWinningStreakType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a dataWinningStreakType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns dataWinningStreakType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameWinningStreakType.dataWinningStreakType;

            /**
             * Decodes a dataWinningStreakType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns dataWinningStreakType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameWinningStreakType.dataWinningStreakType;

            /**
             * Verifies a dataWinningStreakType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates a dataWinningStreakType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns dataWinningStreakType
             */
            public static fromObject(object: { [k: string]: any }): gameWinningStreakType.dataWinningStreakType;

            /**
             * Creates a plain object from a dataWinningStreakType message. Also converts values to other types if specified.
             * @param message dataWinningStreakType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameWinningStreakType.dataWinningStreakType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this dataWinningStreakType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an updateWinningStreakType. */
        interface IupdateWinningStreakType {

            /** updateWinningStreakType index */
            index: number;

            /** updateWinningStreakType times */
            times?: (number[] | null);
        }

        /** Represents an updateWinningStreakType. */
        class updateWinningStreakType implements IupdateWinningStreakType {

            /**
             * Constructs a new updateWinningStreakType.
             * @param [properties] Properties to set
             */
            constructor(properties?: gameWinningStreakType.IupdateWinningStreakType);

            /** updateWinningStreakType index. */
            public index: number;

            /** updateWinningStreakType times. */
            public times: number[];

            /**
             * Creates a new updateWinningStreakType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns updateWinningStreakType instance
             */
            public static create(properties?: gameWinningStreakType.IupdateWinningStreakType): gameWinningStreakType.updateWinningStreakType;

            /**
             * Encodes the specified updateWinningStreakType message. Does not implicitly {@link gameWinningStreakType.updateWinningStreakType.verify|verify} messages.
             * @param message updateWinningStreakType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: gameWinningStreakType.IupdateWinningStreakType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified updateWinningStreakType message, length delimited. Does not implicitly {@link gameWinningStreakType.updateWinningStreakType.verify|verify} messages.
             * @param message updateWinningStreakType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: gameWinningStreakType.IupdateWinningStreakType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an updateWinningStreakType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns updateWinningStreakType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader | Uint8Array), length?: number): gameWinningStreakType.updateWinningStreakType;

            /**
             * Decodes an updateWinningStreakType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns updateWinningStreakType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader | Uint8Array)): gameWinningStreakType.updateWinningStreakType;

            /**
             * Verifies an updateWinningStreakType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string | null);

            /**
             * Creates an updateWinningStreakType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns updateWinningStreakType
             */
            public static fromObject(object: { [k: string]: any }): gameWinningStreakType.updateWinningStreakType;

            /**
             * Creates a plain object from an updateWinningStreakType message. Also converts values to other types if specified.
             * @param message updateWinningStreakType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: gameWinningStreakType.updateWinningStreakType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this updateWinningStreakType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

}